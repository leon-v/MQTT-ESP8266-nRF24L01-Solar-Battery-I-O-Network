

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 11 13:04:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	_NVMEM_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16LF1503 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  020C                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  0498                     	;# 
   148  0498                     	;# 
   149  0499                     	;# 
   150  049A                     	;# 
   151  049B                     	;# 
   152  049B                     	;# 
   153  049C                     	;# 
   154  049D                     	;# 
   155  049E                     	;# 
   156  049F                     	;# 
   157  0611                     	;# 
   158  0612                     	;# 
   159  0613                     	;# 
   160  0613                     	;# 
   161  0614                     	;# 
   162  0615                     	;# 
   163  0616                     	;# 
   164  0616                     	;# 
   165  0617                     	;# 
   166  0618                     	;# 
   167  0619                     	;# 
   168  0619                     	;# 
   169  061A                     	;# 
   170  061B                     	;# 
   171  061C                     	;# 
   172  061C                     	;# 
   173  0691                     	;# 
   174  0692                     	;# 
   175  0693                     	;# 
   176  0694                     	;# 
   177  0695                     	;# 
   178  0F0F                     	;# 
   179  0F10                     	;# 
   180  0F11                     	;# 
   181  0F12                     	;# 
   182  0F13                     	;# 
   183  0F14                     	;# 
   184  0F15                     	;# 
   185  0F16                     	;# 
   186  0F17                     	;# 
   187  0F18                     	;# 
   188  0F19                     	;# 
   189  0F1A                     	;# 
   190  0F1B                     	;# 
   191  0F1C                     	;# 
   192  0F1D                     	;# 
   193  0F1E                     	;# 
   194  0F1F                     	;# 
   195  0FE3                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  008C                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010E                     	;# 
   251  0111                     	;# 
   252  0112                     	;# 
   253  0113                     	;# 
   254  0114                     	;# 
   255  0115                     	;# 
   256  0116                     	;# 
   257  0117                     	;# 
   258  0118                     	;# 
   259  0119                     	;# 
   260  011D                     	;# 
   261  018C                     	;# 
   262  018E                     	;# 
   263  0191                     	;# 
   264  0191                     	;# 
   265  0192                     	;# 
   266  0193                     	;# 
   267  0193                     	;# 
   268  0194                     	;# 
   269  0195                     	;# 
   270  0196                     	;# 
   271  020C                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0216                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0217                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0498                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049B                     	;# 
   296  049C                     	;# 
   297  049D                     	;# 
   298  049E                     	;# 
   299  049F                     	;# 
   300  0611                     	;# 
   301  0612                     	;# 
   302  0613                     	;# 
   303  0613                     	;# 
   304  0614                     	;# 
   305  0615                     	;# 
   306  0616                     	;# 
   307  0616                     	;# 
   308  0617                     	;# 
   309  0618                     	;# 
   310  0619                     	;# 
   311  0619                     	;# 
   312  061A                     	;# 
   313  061B                     	;# 
   314  061C                     	;# 
   315  061C                     	;# 
   316  0691                     	;# 
   317  0692                     	;# 
   318  0693                     	;# 
   319  0694                     	;# 
   320  0695                     	;# 
   321  0F0F                     	;# 
   322  0F10                     	;# 
   323  0F11                     	;# 
   324  0F12                     	;# 
   325  0F13                     	;# 
   326  0F14                     	;# 
   327  0F15                     	;# 
   328  0F16                     	;# 
   329  0F17                     	;# 
   330  0F18                     	;# 
   331  0F19                     	;# 
   332  0F1A                     	;# 
   333  0F1B                     	;# 
   334  0F1C                     	;# 
   335  0F1D                     	;# 
   336  0F1E                     	;# 
   337  0F1F                     	;# 
   338  0FE3                     	;# 
   339  0FE4                     	;# 
   340  0FE5                     	;# 
   341  0FE6                     	;# 
   342  0FE7                     	;# 
   343  0FE8                     	;# 
   344  0FE9                     	;# 
   345  0FEA                     	;# 
   346  0FEB                     	;# 
   347  0FED                     	;# 
   348  0FEE                     	;# 
   349  0FEF                     	;# 
   350  0000                     	;# 
   351  0001                     	;# 
   352  0002                     	;# 
   353  0003                     	;# 
   354  0004                     	;# 
   355  0005                     	;# 
   356  0006                     	;# 
   357  0007                     	;# 
   358  0008                     	;# 
   359  0009                     	;# 
   360  000A                     	;# 
   361  000B                     	;# 
   362  000C                     	;# 
   363  000E                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001C                     	;# 
   376  008C                     	;# 
   377  008E                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  010C                     	;# 
   393  010E                     	;# 
   394  0111                     	;# 
   395  0112                     	;# 
   396  0113                     	;# 
   397  0114                     	;# 
   398  0115                     	;# 
   399  0116                     	;# 
   400  0117                     	;# 
   401  0118                     	;# 
   402  0119                     	;# 
   403  011D                     	;# 
   404  018C                     	;# 
   405  018E                     	;# 
   406  0191                     	;# 
   407  0191                     	;# 
   408  0192                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0194                     	;# 
   412  0195                     	;# 
   413  0196                     	;# 
   414  020C                     	;# 
   415  0211                     	;# 
   416  0211                     	;# 
   417  0212                     	;# 
   418  0212                     	;# 
   419  0213                     	;# 
   420  0213                     	;# 
   421  0214                     	;# 
   422  0214                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0216                     	;# 
   427  0216                     	;# 
   428  0217                     	;# 
   429  0217                     	;# 
   430  0391                     	;# 
   431  0392                     	;# 
   432  0393                     	;# 
   433  0498                     	;# 
   434  0498                     	;# 
   435  0499                     	;# 
   436  049A                     	;# 
   437  049B                     	;# 
   438  049B                     	;# 
   439  049C                     	;# 
   440  049D                     	;# 
   441  049E                     	;# 
   442  049F                     	;# 
   443  0611                     	;# 
   444  0612                     	;# 
   445  0613                     	;# 
   446  0613                     	;# 
   447  0614                     	;# 
   448  0615                     	;# 
   449  0616                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  0619                     	;# 
   455  061A                     	;# 
   456  061B                     	;# 
   457  061C                     	;# 
   458  061C                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  0695                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0FE3                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0008                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000E                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010E                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011D                     	;# 
   547  018C                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  020C                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0216                     	;# 
   570  0216                     	;# 
   571  0217                     	;# 
   572  0217                     	;# 
   573  0391                     	;# 
   574  0392                     	;# 
   575  0393                     	;# 
   576  0498                     	;# 
   577  0498                     	;# 
   578  0499                     	;# 
   579  049A                     	;# 
   580  049B                     	;# 
   581  049B                     	;# 
   582  049C                     	;# 
   583  049D                     	;# 
   584  049E                     	;# 
   585  049F                     	;# 
   586  0611                     	;# 
   587  0612                     	;# 
   588  0613                     	;# 
   589  0613                     	;# 
   590  0614                     	;# 
   591  0615                     	;# 
   592  0616                     	;# 
   593  0616                     	;# 
   594  0617                     	;# 
   595  0618                     	;# 
   596  0619                     	;# 
   597  0619                     	;# 
   598  061A                     	;# 
   599  061B                     	;# 
   600  061C                     	;# 
   601  061C                     	;# 
   602  0691                     	;# 
   603  0692                     	;# 
   604  0693                     	;# 
   605  0694                     	;# 
   606  0695                     	;# 
   607  0F0F                     	;# 
   608  0F10                     	;# 
   609  0F11                     	;# 
   610  0F12                     	;# 
   611  0F13                     	;# 
   612  0F14                     	;# 
   613  0F15                     	;# 
   614  0F16                     	;# 
   615  0F17                     	;# 
   616  0F18                     	;# 
   617  0F19                     	;# 
   618  0F1A                     	;# 
   619  0F1B                     	;# 
   620  0F1C                     	;# 
   621  0F1D                     	;# 
   622  0F1E                     	;# 
   623  0F1F                     	;# 
   624  0FE3                     	;# 
   625  0FE4                     	;# 
   626  0FE5                     	;# 
   627  0FE6                     	;# 
   628  0FE7                     	;# 
   629  0FE8                     	;# 
   630  0FE9                     	;# 
   631  0FEA                     	;# 
   632  0FEB                     	;# 
   633  0FED                     	;# 
   634  0FEE                     	;# 
   635  0FEF                     	;# 
   636                           
   637                           	psect	idataCOMMON
   638  01C0                     __pidataCOMMON:	
   639                           
   640                           ;initializer for _mode
   641  01C0  3401               	retlw	1
   642  07E0                     _NVMEM_absaddr	set	2016
   643                           
   644                           	psect	stringtext1
   645  01B4                     __pstringtext1:	
   646  01B4                     _n_ADDRESS_P0:	
   647  01B4  34AD               	retlw	173
   648  01B5  3487               	retlw	135
   649  01B6  3466               	retlw	102
   650  01B7  34BC               	retlw	188
   651  01B8  34BB               	retlw	187
   652  01B9                     __end_of_n_ADDRESS_P0:	
   653                           
   654                           	psect	stringtext2
   655  01C1                     __pstringtext2:	
   656  01C1                     _n_ADDRESS_MUL:	
   657  01C1  3421               	retlw	33
   658  01C2                     __end_of_n_ADDRESS_MUL:	
   659  07E0                     _NVMEM_absaddr	set	2016
   660                           
   661                           	psect	_NVMEM_text
   662  07E0                     __p_NVMEM_text:	
   663  07E0                     _NVMEM:	
   664  07E0  3455               	retlw	85
   665  07E1  346E               	retlw	110
   666  07E2  3463               	retlw	99
   667  07E3  346F               	retlw	111
   668  07E4  346E               	retlw	110
   669  07E5  3466               	retlw	102
   670  07E6  3469               	retlw	105
   671  07E7  3467               	retlw	103
   672  07E8  3475               	retlw	117
   673  07E9  3472               	retlw	114
   674  07EA  3465               	retlw	101
   675  07EB  3464               	retlw	100
   676  07EC  3400               	retlw	0
   677  07ED  3400               	retlw	0
   678  07EE  3400               	retlw	0
   679  07EF  3400               	retlw	0
   680  07F0  3400               	retlw	0
   681  07F1  3400               	retlw	0
   682  07F2  3400               	retlw	0
   683  07F3  3400               	retlw	0
   684  07F4  3400               	retlw	0
   685  07F5  3400               	retlw	0
   686  07F6  3400               	retlw	0
   687  07F7  3400               	retlw	0
   688  07F8  3400               	retlw	0
   689  07F9  3400               	retlw	0
   690  07FA  3400               	retlw	0
   691  07FB  3400               	retlw	0
   692  07FC  3400               	retlw	0
   693  07FD  3400               	retlw	0
   694  07FE  3400               	retlw	0
   695  07FF  3400               	retlw	0
   696  0800                     __end_of_NVMEM:	
   697  000C                     _PORTAbits	set	12
   698  000B                     _INTCONbits	set	11
   699  008E                     _TRISCbits	set	142
   700  008C                     _TRISAbits	set	140
   701  0099                     _OSCCONbits	set	153
   702  0194                     _PMDATH	set	404
   703  0193                     _PMDATL	set	403
   704  0196                     _PMCON2	set	406
   705  0195                     _PMCON1bits	set	405
   706  0192                     _PMADRH	set	402
   707  0191                     _PMADRL	set	401
   708  0195                     _PMCON1	set	405
   709  0215                     _SSPCON1bits	set	533
   710  0214                     _SSP1STATbits	set	532
   711  0211                     _SSP1BUF	set	529
   712                           
   713                           ; #config settings
   714  0000                     
   715                           	psect	cinit
   716  0010                     start_initialization:	
   717  0010                     __initialization:	
   718                           
   719                           ; Initialize objects allocated to COMMON
   720  0010  21C0               	fcall	__pidataCOMMON	;fetch initializer
   721  0011  00FC               	movwf	__pdataCOMMON& (0+127)
   722                           
   723                           ; Clear objects allocated to COMMON
   724  0012  01FB               	clrf	__pbssCOMMON& (0+127)
   725  0013                     end_of_initialization:	
   726                           ;End of C runtime variable initialization code
   727                           
   728  0013                     __end_of__initialization:	
   729  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   730  0014  0020               	movlb	0
   731  0015  2996               	ljmp	_main	;jump to C main() function
   732                           
   733                           	psect	bssCOMMON
   734  007B                     __pbssCOMMON:	
   735  007B                     _status:	
   736  007B                     	ds	1
   737                           
   738                           	psect	dataCOMMON
   739  007C                     __pdataCOMMON:	
   740  007C                     _mode:	
   741  007C                     	ds	1
   742                           
   743                           	psect	cstackCOMMON
   744  0070                     __pcstackCOMMON:	
   745  0070                     ?_nrf24l01ISR:	
   746  0070                     ??_nrf24l01ISR:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_nrf24l01SendStart:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_nrf24l01SendByte:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_nrf24l01SendEnd:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_nrf24l01Init:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_ISR:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_ISR:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_loop:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_main:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_nrf24l01SPIStart:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_nrf24l01SPISend:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_nrf24l01SPIEnd:	
   780                           ; 1 bytes @ 0x0
   781                           
   782                           
   783                           ; 1 bytes @ 0x0
   784  0070                     	ds	1
   785  0071                     ??_nrf24l01SendEnd:	
   786  0071                     ??_nrf24l01SPIStart:	
   787                           ; 1 bytes @ 0x1
   788                           
   789  0071                     ??_nrf24l01SPISend:	
   790                           ; 1 bytes @ 0x1
   791                           
   792  0071                     ??_nrf24l01SPIEnd:	
   793                           ; 1 bytes @ 0x1
   794                           
   795  0071                     ?___bmul:	
   796                           ; 1 bytes @ 0x1
   797                           
   798  0071                     ?_read_flashmem:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0071                     ?___lwmod:	
   802                           ; 2 bytes @ 0x1
   803                           
   804  0071                     ___bmul@multiplicand:	
   805                           ; 2 bytes @ 0x1
   806                           
   807  0071                     read_flashmem@offset:	
   808                           ; 1 bytes @ 0x1
   809                           
   810  0071                     ___lwmod@divisor:	
   811                           ; 2 bytes @ 0x1
   812                           
   813                           
   814                           ; 2 bytes @ 0x1
   815  0071                     	ds	1
   816  0072                     ??___bmul:	
   817  0072                     nrf24l01SPISend@data:	
   818                           ; 1 bytes @ 0x2
   819                           
   820                           
   821                           ; 1 bytes @ 0x2
   822  0072                     	ds	1
   823  0073                     ??_nrf24l01SendByte:	
   824  0073                     ??_read_flashmem:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0073                     ?_nrf24l01Send:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0073                     nrf24l01Send@data:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     nrf24l01SendByte@payloadByte:	
   834                           ; 1 bytes @ 0x3
   835                           
   836  0073                     ___bmul@product:	
   837                           ; 1 bytes @ 0x3
   838                           
   839  0073                     ___lwmod@dividend:	
   840                           ; 1 bytes @ 0x3
   841                           
   842                           
   843                           ; 2 bytes @ 0x3
   844  0073                     	ds	1
   845  0074                     ??_nrf24l01Send:	
   846  0074                     ___bmul@multiplier:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 1 bytes @ 0x4
   851  0074                     	ds	1
   852  0075                     ??___lwmod:	
   853  0075                     nrf24l01Send@command:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0075                     read_flashmem@result:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0075                     	ds	1
   862  0076                     ??_nrf24l01SendStart:	
   863  0076                     ___lwmod@counter:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 1 bytes @ 0x6
   868  0076                     	ds	1
   869  0077                     ??_nrf24l01Init:	
   870  0077                     nrf24l01SendStart@config:	
   871                           ; 1 bytes @ 0x7
   872                           
   873                           
   874                           ; 1 bytes @ 0x7
   875  0077                     	ds	1
   876  0078                     ??_loop:	
   877                           
   878                           ; 1 bytes @ 0x8
   879  0078                     	ds	2
   880  007A                     loop@payloadByte:	
   881                           
   882                           ; 1 bytes @ 0xA
   883  007A                     	ds	1
   884  007B                     ??_main:	
   885                           
   886                           	psect	cstackBANK0
   887  0020                     __pcstackBANK0:	
   888                           ; 1 bytes @ 0xB
   889                           
   890  0020                     nrf24l01Init@channel:	
   891                           
   892                           ; 1 bytes @ 0x0
   893  0020                     	ds	1
   894  0021                     nrf24l01Init@config:	
   895                           
   896                           ; 1 bytes @ 0x1
   897  0021                     	ds	1
   898  0022                     nrf24l01Init@feature:	
   899                           
   900                           ; 1 bytes @ 0x2
   901  0022                     	ds	1
   902  0023                     nrf24l01Init@byte:	
   903                           
   904                           ; 1 bytes @ 0x3
   905  0023                     	ds	1
   906  0024                     nrf24l01Init@i:	
   907                           
   908                           ; 1 bytes @ 0x4
   909  0024                     	ds	1
   910  0025                     nrf24l01Init@pipe:	
   911                           
   912                           ; 1 bytes @ 0x5
   913  0025                     	ds	1
   914                           
   915                           	psect	maintext
   916  0196                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 33 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B1F/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1
   936 ;;      Params:         0       0       0
   937 ;;      Locals:         0       0       0
   938 ;;      Temps:          0       0       0
   939 ;;      Totals:         0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels required when called:    6
   942 ;; This function calls:
   943 ;;		_loop
   944 ;;		_nrf24l01Init
   945 ;; This function is called by:
   946 ;;		Startup code after reset
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _main
   952  0196                     _main:	
   953                           
   954                           ;main.c: 35: INTCONbits.GIE = 0;
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958  0196  138B               	bcf	11,7	;volatile
   959                           
   960                           ;main.c: 36: INTCONbits.PEIE = 1;
   961  0197  170B               	bsf	11,6	;volatile
   962                           
   963                           ;main.c: 38: OSCCONbits.IRCF = 0b1111;
   964  0198  3078               	movlw	120
   965  0199  0021               	movlb	1	; select bank1
   966  019A  0499               	iorwf	25,f	;volatile
   967                           
   968                           ;main.c: 39: OSCCONbits.SCS = 0b10;
   969  019B  0819               	movf	25,w	;volatile
   970  019C  39FC               	andlw	-4
   971  019D  3802               	iorlw	2
   972  019E  0099               	movwf	25	;volatile
   973                           
   974                           ;main.c: 41: nrf24l01Init();
   975  019F  2016               	fcall	_nrf24l01Init
   976                           
   977                           ;main.c: 43: INTCONbits.GIE = 1;
   978  01A0  178B               	bsf	11,7	;volatile
   979  01A1                     l932:	
   980                           ;main.c: 45: while(1){
   981                           
   982                           
   983                           ;main.c: 46: loop();
   984  01A1  2116               	fcall	_loop
   985  01A2  29A1               	goto	l932
   986  01A3                     __end_of_main:	
   987                           ;main.c: 47: }
   988                           ;main.c: 49: return;
   989                           
   990                           
   991                           	psect	text1
   992  0016                     __ptext1:	
   993 ;; *************** function _nrf24l01Init *****************
   994 ;; Defined at:
   995 ;;		line 68 in file "nrf24l01.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  pipe            1    5[BANK0 ] unsigned char 
  1000 ;;  i               1    4[BANK0 ] unsigned char 
  1001 ;;  byte            1    3[BANK0 ] unsigned char 
  1002 ;;  feature         1    2[BANK0 ] struct .
  1003 ;;  config          1    1[BANK0 ] struct .
  1004 ;;  channel         1    0[BANK0 ] struct .
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1
  1014 ;;      Params:         0       0       0
  1015 ;;      Locals:         0       6       0
  1016 ;;      Temps:          3       0       0
  1017 ;;      Totals:         3       6       0
  1018 ;;Total ram usage:        9 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    4
  1021 ;; This function calls:
  1022 ;;		___bmul
  1023 ;;		___lwmod
  1024 ;;		_nrf24l01SPIEnd
  1025 ;;		_nrf24l01SPISend
  1026 ;;		_nrf24l01SPIStart
  1027 ;;		_nrf24l01Send
  1028 ;;		_read_flashmem
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _nrf24l01Init
  1036  0016                     _nrf24l01Init:	
  1037                           
  1038                           ;nrf24l01.c: 74: TRISAbits.TRISA0 = 0;
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in _nrf24l01Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1042  0016  0021               	movlb	1	; select bank1
  1043  0017  100C               	bcf	12,0	;volatile
  1044                           
  1045                           ;nrf24l01.c: 75: PORTAbits.RA0 = 0;
  1046  0018  0020               	movlb	0	; select bank0
  1047  0019  100C               	bcf	12,0	;volatile
  1048                           
  1049                           ;nrf24l01.c: 78: TRISAbits.TRISA1 = 0;
  1050  001A  0021               	movlb	1	; select bank1
  1051  001B  108C               	bcf	12,1	;volatile
  1052                           
  1053                           ;nrf24l01.c: 79: PORTAbits.RA1 = 1;
  1054  001C  0020               	movlb	0	; select bank0
  1055  001D  148C               	bsf	12,1	;volatile
  1056                           
  1057                           ;nrf24l01.c: 81: TRISAbits.TRISA1 = 0;
  1058  001E  0021               	movlb	1	; select bank1
  1059  001F  108C               	bcf	12,1	;volatile
  1060                           
  1061                           ;nrf24l01.c: 82: PORTAbits.RA1 = 1;
  1062  0020  0020               	movlb	0	; select bank0
  1063  0021  148C               	bsf	12,1	;volatile
  1064                           
  1065                           ;nrf24l01.c: 84: TRISCbits.TRISC1 = 1;
  1066  0022  0021               	movlb	1	; select bank1
  1067  0023  148E               	bsf	14,1	;volatile
  1068                           
  1069                           ;nrf24l01.c: 85: TRISCbits.TRISC2 = 0;
  1070  0024  110E               	bcf	14,2	;volatile
  1071                           
  1072                           ;nrf24l01.c: 87: TRISCbits.TRISC0 = 0;
  1073  0025  100E               	bcf	14,0	;volatile
  1074                           
  1075                           ;nrf24l01.c: 89: SSPCON1bits.SSPEN = 0;
  1076  0026  0024               	movlb	4	; select bank4
  1077  0027  1295               	bcf	21,5	;volatile
  1078                           
  1079                           ;nrf24l01.c: 90: SSPCON1bits.CKP = 0;
  1080  0028  1215               	bcf	21,4	;volatile
  1081                           
  1082                           ;nrf24l01.c: 91: SSP1STATbits.CKE = 1;
  1083  0029  1714               	bsf	20,6	;volatile
  1084                           
  1085                           ;nrf24l01.c: 93: SSPCON1bits.SSPM = 0b0000;
  1086  002A  30F0               	movlw	-16
  1087  002B  0595               	andwf	21,f	;volatile
  1088                           
  1089                           ;nrf24l01.c: 95: SSPCON1bits.SSPEN = 1;
  1090  002C  1695               	bsf	21,5	;volatile
  1091                           
  1092                           ;nrf24l01.c: 98: n_CONFIG_t config;
  1093                           ;nrf24l01.c: 99: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  1094  002D  01F3               	clrf	nrf24l01Send@data
  1095  002E  3000               	movlw	0
  1096  002F  2178               	fcall	_nrf24l01Send
  1097  0030  00F7               	movwf	??_nrf24l01Init
  1098  0031  0877               	movf	??_nrf24l01Init,w
  1099  0032  0020               	movlb	0	; select bank0
  1100  0033  00A1               	movwf	nrf24l01Init@config
  1101                           
  1102                           ;nrf24l01.c: 100: config.PWR_UP = 1;
  1103  0034  14A1               	bsf	nrf24l01Init@config,1
  1104                           
  1105                           ;nrf24l01.c: 101: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1106  0035  0821               	movf	nrf24l01Init@config,w
  1107  0036  00F7               	movwf	??_nrf24l01Init
  1108  0037  0877               	movf	??_nrf24l01Init,w
  1109  0038  00F3               	movwf	nrf24l01Send@data
  1110  0039  3020               	movlw	32
  1111  003A  2178               	fcall	_nrf24l01Send
  1112                           
  1113                           ;nrf24l01.c: 104: n_RF_CH_t channel;
  1114                           ;nrf24l01.c: 105: channel.RF_CH = 83;
  1115  003B  0020               	movlb	0	; select bank0
  1116  003C  0820               	movf	nrf24l01Init@channel,w
  1117  003D  3980               	andlw	-128
  1118  003E  3853               	iorlw	83
  1119  003F  00A0               	movwf	nrf24l01Init@channel
  1120                           
  1121                           ;nrf24l01.c: 106: nrf24l01Send(0b00100000 | 0x05, channel.byte);
  1122  0040  0820               	movf	nrf24l01Init@channel,w
  1123  0041  00F7               	movwf	??_nrf24l01Init
  1124  0042  0877               	movf	??_nrf24l01Init,w
  1125  0043  00F3               	movwf	nrf24l01Send@data
  1126  0044  3025               	movlw	37
  1127  0045  2178               	fcall	_nrf24l01Send
  1128                           
  1129                           ;nrf24l01.c: 109: unsigned char pipe = 0;
  1130  0046  0020               	movlb	0	; select bank0
  1131  0047  01A5               	clrf	nrf24l01Init@pipe
  1132                           
  1133                           ;nrf24l01.c: 110: unsigned char i = 0;
  1134  0048  01A4               	clrf	nrf24l01Init@i
  1135  0049                     l892:	
  1136                           ;nrf24l01.c: 111: unsigned char byte;
  1137                           ;nrf24l01.c: 113: while (i < 16){
  1138                           
  1139  0049  3010               	movlw	16
  1140  004A  0224               	subwf	nrf24l01Init@i,w
  1141  004B  1803               	btfsc	3,0
  1142  004C  2866               	goto	l894
  1143                           
  1144                           ;nrf24l01.c: 114: byte = read_flashmem((unsigned) 0 + i);
  1145  004D  0824               	movf	nrf24l01Init@i,w
  1146  004E  00F7               	movwf	??_nrf24l01Init
  1147  004F  01F8               	clrf	??_nrf24l01Init+1
  1148  0050  0877               	movf	??_nrf24l01Init,w
  1149  0051  00F1               	movwf	read_flashmem@offset
  1150  0052  0878               	movf	??_nrf24l01Init+1,w
  1151  0053  00F2               	movwf	read_flashmem@offset+1
  1152  0054  213A               	fcall	_read_flashmem
  1153  0055  0871               	movf	?_read_flashmem,w
  1154  0056  00F9               	movwf	??_nrf24l01Init+2
  1155  0057  0879               	movf	??_nrf24l01Init+2,w
  1156  0058  0020               	movlb	0	; select bank0
  1157  0059  00A3               	movwf	nrf24l01Init@byte
  1158                           
  1159                           ;nrf24l01.c: 116: if (byte == 0){
  1160  005A  0823               	movf	nrf24l01Init@byte,w
  1161  005B  1903               	btfsc	3,2
  1162  005C  2866               	goto	l894
  1163                           
  1164                           ;nrf24l01.c: 118: }
  1165                           ;nrf24l01.c: 120: pipe+= byte;
  1166                           
  1167                           ;nrf24l01.c: 117: break;
  1168  005D  0823               	movf	nrf24l01Init@byte,w
  1169  005E  00F7               	movwf	??_nrf24l01Init
  1170  005F  0877               	movf	??_nrf24l01Init,w
  1171  0060  07A5               	addwf	nrf24l01Init@pipe,f
  1172                           
  1173                           ;nrf24l01.c: 122: i++;
  1174  0061  3001               	movlw	1
  1175  0062  00F7               	movwf	??_nrf24l01Init
  1176  0063  0877               	movf	??_nrf24l01Init,w
  1177  0064  07A4               	addwf	nrf24l01Init@i,f
  1178  0065  2849               	goto	l892
  1179  0066                     l894:	
  1180                           
  1181                           ;nrf24l01.c: 123: }
  1182                           ;nrf24l01.c: 125: pipe = (unsigned) pipe % 5;
  1183  0066  3005               	movlw	5
  1184  0067  00F1               	movwf	___lwmod@divisor
  1185  0068  3000               	movlw	0
  1186  0069  00F2               	movwf	___lwmod@divisor+1
  1187  006A  0825               	movf	nrf24l01Init@pipe,w
  1188  006B  00F7               	movwf	??_nrf24l01Init
  1189  006C  01F8               	clrf	??_nrf24l01Init+1
  1190  006D  0877               	movf	??_nrf24l01Init,w
  1191  006E  00F3               	movwf	___lwmod@dividend
  1192  006F  0878               	movf	??_nrf24l01Init+1,w
  1193  0070  00F4               	movwf	___lwmod@dividend+1
  1194  0071  20EA               	fcall	___lwmod
  1195  0072  0871               	movf	?___lwmod,w
  1196  0073  00F9               	movwf	??_nrf24l01Init+2
  1197  0074  0879               	movf	??_nrf24l01Init+2,w
  1198  0075  0020               	movlb	0	; select bank0
  1199  0076  00A5               	movwf	nrf24l01Init@pipe
  1200                           
  1201                           ;nrf24l01.c: 128: nrf24l01SPIStart();
  1202  0077  21BD               	fcall	_nrf24l01SPIStart
  1203                           
  1204                           ;nrf24l01.c: 129: status.byte = nrf24l01SPISend(0b00100000 | 0x10);
  1205  0078  3030               	movlw	48
  1206  0079  2187               	fcall	_nrf24l01SPISend
  1207  007A  00F7               	movwf	??_nrf24l01Init
  1208  007B  0877               	movf	??_nrf24l01Init,w
  1209  007C  00FB               	movwf	_status
  1210                           
  1211                           ;nrf24l01.c: 130: nrf24l01SPISend(n_ADDRESS_P0[0]);
  1212  007D  30B4               	movlw	low (_n_ADDRESS_P0| (0+32768))
  1213  007E  0084               	movwf	4
  1214  007F  3081               	movlw	high (_n_ADDRESS_P0| (0+32768))
  1215  0080  0085               	movwf	5
  1216  0081  0800               	movf	0,w	;code access
  1217  0082  2187               	fcall	_nrf24l01SPISend
  1218                           
  1219                           ;nrf24l01.c: 131: nrf24l01SPISend(n_ADDRESS_P0[1]);
  1220  0083  30B5               	movlw	low ((_n_ADDRESS_P0+1)| (0+32768))
  1221  0084  0084               	movwf	4
  1222  0085  3081               	movlw	high ((_n_ADDRESS_P0+1)| (0+32768))
  1223  0086  0085               	movwf	5
  1224  0087  0800               	movf	0,w	;code access
  1225  0088  2187               	fcall	_nrf24l01SPISend
  1226                           
  1227                           ;nrf24l01.c: 132: nrf24l01SPISend(n_ADDRESS_P0[2]);
  1228  0089  30B6               	movlw	low ((_n_ADDRESS_P0+2)| (0+32768))
  1229  008A  0084               	movwf	4
  1230  008B  3081               	movlw	high ((_n_ADDRESS_P0+2)| (0+32768))
  1231  008C  0085               	movwf	5
  1232  008D  0800               	movf	0,w	;code access
  1233  008E  2187               	fcall	_nrf24l01SPISend
  1234                           
  1235                           ;nrf24l01.c: 133: nrf24l01SPISend(n_ADDRESS_P0[3]);
  1236  008F  30B7               	movlw	low ((_n_ADDRESS_P0+3)| (0+32768))
  1237  0090  0084               	movwf	4
  1238  0091  3081               	movlw	high ((_n_ADDRESS_P0+3)| (0+32768))
  1239  0092  0085               	movwf	5
  1240  0093  0800               	movf	0,w	;code access
  1241  0094  2187               	fcall	_nrf24l01SPISend
  1242                           
  1243                           ;nrf24l01.c: 134: nrf24l01SPISend(n_ADDRESS_P0[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1244  0095  30B8               	movlw	low ((_n_ADDRESS_P0+4)| (0+32768))
  1245  0096  0084               	movwf	4
  1246  0097  3081               	movlw	high ((_n_ADDRESS_P0+4)| (0+32768))
  1247  0098  0085               	movwf	5
  1248  0099  0800               	movf	0,w	;code access
  1249  009A  00F7               	movwf	??_nrf24l01Init
  1250  009B  30C1               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1251  009C  0084               	movwf	4
  1252  009D  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1253  009E  0085               	movwf	5
  1254  009F  0800               	movf	0,w	;code access
  1255  00A0  00F8               	movwf	??_nrf24l01Init+1
  1256  00A1  0878               	movf	??_nrf24l01Init+1,w
  1257  00A2  00F1               	movwf	___bmul@multiplicand
  1258  00A3  0020               	movlb	0	; select bank0
  1259  00A4  0825               	movf	nrf24l01Init@pipe,w
  1260  00A5  2156               	fcall	___bmul
  1261  00A6  0777               	addwf	??_nrf24l01Init,w
  1262  00A7  2187               	fcall	_nrf24l01SPISend
  1263                           
  1264                           ;nrf24l01.c: 135: nrf24l01SPIEnd();
  1265  00A8  21AD               	fcall	_nrf24l01SPIEnd
  1266                           
  1267                           ;nrf24l01.c: 138: nrf24l01SPIStart();
  1268  00A9  21BD               	fcall	_nrf24l01SPIStart
  1269                           
  1270                           ;nrf24l01.c: 139: status.byte = nrf24l01SPISend(0b00100000 | 0x0A);
  1271  00AA  302A               	movlw	42
  1272  00AB  2187               	fcall	_nrf24l01SPISend
  1273  00AC  00F7               	movwf	??_nrf24l01Init
  1274  00AD  0877               	movf	??_nrf24l01Init,w
  1275  00AE  00FB               	movwf	_status
  1276                           
  1277                           ;nrf24l01.c: 140: nrf24l01SPISend(n_ADDRESS_P0[0]);
  1278  00AF  30B4               	movlw	low (_n_ADDRESS_P0| (0+32768))
  1279  00B0  0084               	movwf	4
  1280  00B1  3081               	movlw	high (_n_ADDRESS_P0| (0+32768))
  1281  00B2  0085               	movwf	5
  1282  00B3  0800               	movf	0,w	;code access
  1283  00B4  2187               	fcall	_nrf24l01SPISend
  1284                           
  1285                           ;nrf24l01.c: 141: nrf24l01SPISend(n_ADDRESS_P0[1]);
  1286  00B5  30B5               	movlw	low ((_n_ADDRESS_P0+1)| (0+32768))
  1287  00B6  0084               	movwf	4
  1288  00B7  3081               	movlw	high ((_n_ADDRESS_P0+1)| (0+32768))
  1289  00B8  0085               	movwf	5
  1290  00B9  0800               	movf	0,w	;code access
  1291  00BA  2187               	fcall	_nrf24l01SPISend
  1292                           
  1293                           ;nrf24l01.c: 142: nrf24l01SPISend(n_ADDRESS_P0[2]);
  1294  00BB  30B6               	movlw	low ((_n_ADDRESS_P0+2)| (0+32768))
  1295  00BC  0084               	movwf	4
  1296  00BD  3081               	movlw	high ((_n_ADDRESS_P0+2)| (0+32768))
  1297  00BE  0085               	movwf	5
  1298  00BF  0800               	movf	0,w	;code access
  1299  00C0  2187               	fcall	_nrf24l01SPISend
  1300                           
  1301                           ;nrf24l01.c: 143: nrf24l01SPISend(n_ADDRESS_P0[3]);
  1302  00C1  30B7               	movlw	low ((_n_ADDRESS_P0+3)| (0+32768))
  1303  00C2  0084               	movwf	4
  1304  00C3  3081               	movlw	high ((_n_ADDRESS_P0+3)| (0+32768))
  1305  00C4  0085               	movwf	5
  1306  00C5  0800               	movf	0,w	;code access
  1307  00C6  2187               	fcall	_nrf24l01SPISend
  1308                           
  1309                           ;nrf24l01.c: 144: nrf24l01SPISend(n_ADDRESS_P0[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1310  00C7  30B8               	movlw	low ((_n_ADDRESS_P0+4)| (0+32768))
  1311  00C8  0084               	movwf	4
  1312  00C9  3081               	movlw	high ((_n_ADDRESS_P0+4)| (0+32768))
  1313  00CA  0085               	movwf	5
  1314  00CB  0800               	movf	0,w	;code access
  1315  00CC  00F7               	movwf	??_nrf24l01Init
  1316  00CD  30C1               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1317  00CE  0084               	movwf	4
  1318  00CF  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1319  00D0  0085               	movwf	5
  1320  00D1  0800               	movf	0,w	;code access
  1321  00D2  00F8               	movwf	??_nrf24l01Init+1
  1322  00D3  0878               	movf	??_nrf24l01Init+1,w
  1323  00D4  00F1               	movwf	___bmul@multiplicand
  1324  00D5  0020               	movlb	0	; select bank0
  1325  00D6  0825               	movf	nrf24l01Init@pipe,w
  1326  00D7  2156               	fcall	___bmul
  1327  00D8  0777               	addwf	??_nrf24l01Init,w
  1328  00D9  2187               	fcall	_nrf24l01SPISend
  1329                           
  1330                           ;nrf24l01.c: 145: nrf24l01SPIEnd();
  1331  00DA  21AD               	fcall	_nrf24l01SPIEnd
  1332                           
  1333                           ;nrf24l01.c: 159: n_FEATURE_t feature;
  1334                           ;nrf24l01.c: 160: feature.byte = nrf24l01Send(0b00000000 | 0x1D, 0);
  1335  00DB  01F3               	clrf	nrf24l01Send@data
  1336  00DC  301D               	movlw	29
  1337  00DD  2178               	fcall	_nrf24l01Send
  1338  00DE  00F7               	movwf	??_nrf24l01Init
  1339  00DF  0877               	movf	??_nrf24l01Init,w
  1340  00E0  0020               	movlb	0	; select bank0
  1341  00E1  00A2               	movwf	nrf24l01Init@feature
  1342                           
  1343                           ;nrf24l01.c: 161: feature.EN_DPL = 1;
  1344  00E2  1522               	bsf	nrf24l01Init@feature,2
  1345                           
  1346                           ;nrf24l01.c: 162: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  1347  00E3  0822               	movf	nrf24l01Init@feature,w
  1348  00E4  00F7               	movwf	??_nrf24l01Init
  1349  00E5  0877               	movf	??_nrf24l01Init,w
  1350  00E6  00F3               	movwf	nrf24l01Send@data
  1351  00E7  303D               	movlw	61
  1352  00E8  2178               	fcall	_nrf24l01Send
  1353  00E9  0008               	return
  1354  00EA                     __end_of_nrf24l01Init:	
  1355                           
  1356                           	psect	text2
  1357  013A                     __ptext2:	
  1358 ;; *************** function _read_flashmem *****************
  1359 ;; Defined at:
  1360 ;;		line 58 in file "flash.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  offset          2    1[COMMON] unsigned int 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  result          2    5[COMMON] unsigned int 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    1[COMMON] unsigned int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1
  1374 ;;      Params:         2       0       0
  1375 ;;      Locals:         2       0       0
  1376 ;;      Temps:          2       0       0
  1377 ;;      Totals:         6       0       0
  1378 ;;Total ram usage:        6 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    2
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_nrf24l01Init
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _read_flashmem
  1390  013A                     _read_flashmem:	
  1391                           
  1392                           ;flash.c: 60: INTCONbits.GIE = 0;
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in _read_flashmem: [wreg+status,2+status,0]
  1396  013A  138B               	bcf	11,7	;volatile
  1397                           
  1398                           ;flash.c: 62: PMCON1 = 0x00;
  1399  013B  0023               	movlb	3	; select bank3
  1400  013C  0195               	clrf	21	;volatile
  1401                           
  1402                           ;flash.c: 64: PMADRL = (char) (((0x800U-32) + offset) >> 0);
  1403  013D  0871               	movf	read_flashmem@offset,w
  1404  013E  3EE0               	addlw	224
  1405  013F  0091               	movwf	17	;volatile
  1406                           
  1407                           ;flash.c: 65: PMADRH = (char) (((0x800U-32) + offset) >> 8);
  1408  0140  0871               	movf	read_flashmem@offset,w
  1409  0141  3EE0               	addlw	224
  1410  0142  00F3               	movwf	??_read_flashmem
  1411  0143  3007               	movlw	7
  1412  0144  3D72               	addwfc	read_flashmem@offset+1,w
  1413  0145  00F4               	movwf	??_read_flashmem+1
  1414  0146  0874               	movf	??_read_flashmem+1,w
  1415  0147  0092               	movwf	18	;volatile
  1416                           
  1417                           ;flash.c: 67: PMCON1bits.RD = 1;
  1418  0148  1415               	bsf	21,0	;volatile
  1419                           
  1420                           ;flash.c: 69: __nop();
  1421  0149  0000               	nop
  1422                           
  1423                           ;flash.c: 70: __nop();
  1424  014A  0000               	nop
  1425                           
  1426                           ;flash.c: 72: unsigned int result = (unsigned) ((PMDATH) << 8) | (PMDATL);
  1427  014B  0023               	movlb	3	; select bank3
  1428  014C  0814               	movf	20,w	;volatile
  1429  014D  00F6               	movwf	read_flashmem@result+1
  1430  014E  0813               	movf	19,w	;volatile
  1431  014F  00F5               	movwf	read_flashmem@result
  1432                           
  1433                           ;flash.c: 74: INTCONbits.GIE = 1;
  1434  0150  178B               	bsf	11,7	;volatile
  1435                           
  1436                           ;flash.c: 76: return result;
  1437  0151  0876               	movf	read_flashmem@result+1,w
  1438  0152  00F2               	movwf	?_read_flashmem+1
  1439  0153  0875               	movf	read_flashmem@result,w
  1440  0154  00F1               	movwf	?_read_flashmem
  1441  0155  0008               	return
  1442  0156                     __end_of_read_flashmem:	
  1443                           
  1444                           	psect	text3
  1445  00EA                     __ptext3:	
  1446 ;; *************** function ___lwmod *****************
  1447 ;; Defined at:
  1448 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  divisor         2    1[COMMON] unsigned int 
  1451 ;;  dividend        2    3[COMMON] unsigned int 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  counter         1    6[COMMON] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2    1[COMMON] unsigned int 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1
  1463 ;;      Params:         4       0       0
  1464 ;;      Locals:         1       0       0
  1465 ;;      Temps:          1       0       0
  1466 ;;      Totals:         6       0       0
  1467 ;;Total ram usage:        6 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_nrf24l01Init
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function ___lwmod
  1479  00EA                     ___lwmod:	
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1483  00EA  0871               	movf	___lwmod@divisor,w
  1484  00EB  0472               	iorwf	___lwmod@divisor+1,w
  1485  00EC  1903               	btfsc	3,2
  1486  00ED  2911               	goto	l842
  1487  00EE  01F6               	clrf	___lwmod@counter
  1488  00EF  0AF6               	incf	___lwmod@counter,f
  1489  00F0                     l832:	
  1490  00F0  1BF2               	btfsc	___lwmod@divisor+1,7
  1491  00F1  28FC               	goto	l834
  1492  00F2  3001               	movlw	1
  1493  00F3                     u175:	
  1494  00F3  35F1               	lslf	___lwmod@divisor,f
  1495  00F4  0DF2               	rlf	___lwmod@divisor+1,f
  1496  00F5  0B89               	decfsz	9,f
  1497  00F6  28F3               	goto	u175
  1498  00F7  3001               	movlw	1
  1499  00F8  00F5               	movwf	??___lwmod
  1500  00F9  0875               	movf	??___lwmod,w
  1501  00FA  07F6               	addwf	___lwmod@counter,f
  1502  00FB  28F0               	goto	l832
  1503  00FC                     l834:	
  1504  00FC  0872               	movf	___lwmod@divisor+1,w
  1505  00FD  0274               	subwf	___lwmod@dividend+1,w
  1506  00FE  1D03               	skipz
  1507  00FF  2902               	goto	u195
  1508  0100  0871               	movf	___lwmod@divisor,w
  1509  0101  0273               	subwf	___lwmod@dividend,w
  1510  0102                     u195:	
  1511  0102  1C03               	skipc
  1512  0103  2908               	goto	l838
  1513  0104  0871               	movf	___lwmod@divisor,w
  1514  0105  02F3               	subwf	___lwmod@dividend,f
  1515  0106  0872               	movf	___lwmod@divisor+1,w
  1516  0107  3BF4               	subwfb	___lwmod@dividend+1,f
  1517  0108                     l838:	
  1518  0108  3001               	movlw	1
  1519  0109                     u205:	
  1520  0109  36F2               	lsrf	___lwmod@divisor+1,f
  1521  010A  0CF1               	rrf	___lwmod@divisor,f
  1522  010B  0B89               	decfsz	9,f
  1523  010C  2909               	goto	u205
  1524  010D  3001               	movlw	1
  1525  010E  02F6               	subwf	___lwmod@counter,f
  1526  010F  1D03               	btfss	3,2
  1527  0110  28FC               	goto	l834
  1528  0111                     l842:	
  1529  0111  0874               	movf	___lwmod@dividend+1,w
  1530  0112  00F2               	movwf	?___lwmod+1
  1531  0113  0873               	movf	___lwmod@dividend,w
  1532  0114  00F1               	movwf	?___lwmod
  1533  0115  0008               	return
  1534  0116                     __end_of___lwmod:	
  1535                           
  1536                           	psect	text4
  1537  0156                     __ptext4:	
  1538 ;; *************** function ___bmul *****************
  1539 ;; Defined at:
  1540 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  multiplier      1    wreg     unsigned char 
  1543 ;;  multiplicand    1    1[COMMON] unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  multiplier      1    4[COMMON] unsigned char 
  1546 ;;  product         1    3[COMMON] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      unsigned char 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1
  1556 ;;      Params:         1       0       0
  1557 ;;      Locals:         2       0       0
  1558 ;;      Temps:          1       0       0
  1559 ;;      Totals:         4       0       0
  1560 ;;Total ram usage:        4 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    2
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_nrf24l01Init
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function ___bmul
  1572  0156                     ___bmul:	
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1576                           ;___bmul@multiplier stored from wreg
  1577  0156  00F4               	movwf	___bmul@multiplier
  1578  0157  01F3               	clrf	___bmul@product
  1579  0158                     l812:	
  1580  0158  1C74               	btfss	___bmul@multiplier,0
  1581  0159  295E               	goto	l816
  1582  015A  0871               	movf	___bmul@multiplicand,w
  1583  015B  00F2               	movwf	??___bmul
  1584  015C  0872               	movf	??___bmul,w
  1585  015D  07F3               	addwf	___bmul@product,f
  1586  015E                     l816:	
  1587  015E  1003               	clrc
  1588  015F  0DF1               	rlf	___bmul@multiplicand,f
  1589  0160  1003               	clrc
  1590  0161  0CF4               	rrf	___bmul@multiplier,f
  1591  0162  0874               	movf	___bmul@multiplier,w
  1592  0163  1D03               	btfss	3,2
  1593  0164  2958               	goto	l812
  1594  0165  0873               	movf	___bmul@product,w
  1595  0166  0008               	return
  1596  0167                     __end_of___bmul:	
  1597                           
  1598                           	psect	text5
  1599  0116                     __ptext5:	
  1600 ;; *************** function _loop *****************
  1601 ;; Defined at:
  1602 ;;		line 14 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  payloadByte     1   10[COMMON] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1
  1616 ;;      Params:         0       0       0
  1617 ;;      Locals:         1       0       0
  1618 ;;      Temps:          2       0       0
  1619 ;;      Totals:         3       0       0
  1620 ;;Total ram usage:        3 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		_nrf24l01SendByte
  1625 ;;		_nrf24l01SendEnd
  1626 ;;		_nrf24l01SendStart
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _loop
  1634  0116                     _loop:	
  1635                           
  1636                           ;main.c: 16: switch (mode){
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1640  0116  2929               	goto	l862
  1641  0117                     l848:	
  1642                           ;main.c: 17: case 1:
  1643                           
  1644                           
  1645                           ;main.c: 19: nrf24l01SendStart();
  1646  0117  2167               	fcall	_nrf24l01SendStart
  1647                           
  1648                           ;main.c: 20: unsigned char payloadByte = 'A';
  1649  0118  3041               	movlw	65
  1650  0119  00F8               	movwf	??_loop
  1651  011A  0878               	movf	??_loop,w
  1652  011B  00FA               	movwf	loop@payloadByte
  1653  011C                     l856:	
  1654                           ;main.c: 21: while (payloadByte < ('A' + 8) ){
  1655                           
  1656  011C  3049               	movlw	73
  1657  011D  027A               	subwf	loop@payloadByte,w
  1658  011E  1803               	btfsc	3,0
  1659  011F  2927               	goto	l858
  1660                           
  1661                           ;main.c: 22: nrf24l01SendByte(payloadByte);
  1662  0120  087A               	movf	loop@payloadByte,w
  1663  0121  21B9               	fcall	_nrf24l01SendByte
  1664                           
  1665                           ;main.c: 23: payloadByte++;
  1666  0122  3001               	movlw	1
  1667  0123  00F8               	movwf	??_loop
  1668  0124  0878               	movf	??_loop,w
  1669  0125  07FA               	addwf	loop@payloadByte,f
  1670  0126  291C               	goto	l856
  1671  0127                     l858:	
  1672                           
  1673                           ;main.c: 24: }
  1674                           ;main.c: 25: nrf24l01SendEnd();
  1675  0127  21A3               	fcall	_nrf24l01SendEnd
  1676                           
  1677                           ;main.c: 27: }
  1678                           
  1679                           ;main.c: 26: break;
  1680  0128  292E               	goto	l864
  1681  0129                     l862:	
  1682  0129  087C               	movf	_mode,w
  1683                           
  1684                           ; Switch size 1, requested type "space"
  1685                           ; Number of cases is 1, Range of values is 1 to 1
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte            4     3 (average)
  1689                           ; direct_byte           11     9 (fixed)
  1690                           ; jumptable            263     9 (fixed)
  1691                           ;	Chosen strategy is simple_byte
  1692  012A  3A01               	xorlw	1	; case 1
  1693  012B  1903               	skipnz
  1694  012C  2917               	goto	l848
  1695  012D  292E               	goto	l864
  1696  012E                     l864:	
  1697                           
  1698                           ;main.c: 29: _delay((unsigned long)((500)*(16000000/4000.0)));
  1699  012E  300B               	movlw	11
  1700  012F  00F9               	movwf	??_loop+1
  1701  0130  3026               	movlw	38
  1702  0131  00F8               	movwf	??_loop
  1703  0132  305E               	movlw	94
  1704  0133                     u257:	
  1705  0133  0B89               	decfsz	9,f
  1706  0134  2933               	goto	u257
  1707  0135  0BF8               	decfsz	??_loop,f
  1708  0136  2933               	goto	u257
  1709  0137  0BF9               	decfsz	??_loop+1,f
  1710  0138  2933               	goto	u257
  1711  0139  0008               	return
  1712  013A                     __end_of_loop:	
  1713                           
  1714                           	psect	text6
  1715  0167                     __ptext6:	
  1716 ;; *************** function _nrf24l01SendStart *****************
  1717 ;; Defined at:
  1718 ;;		line 43 in file "nrf24l01.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  config          1    7[COMMON] struct .
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1
  1732 ;;      Params:         0       0       0
  1733 ;;      Locals:         1       0       0
  1734 ;;      Temps:          1       0       0
  1735 ;;      Totals:         2       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    4
  1739 ;; This function calls:
  1740 ;;		_nrf24l01SPISend
  1741 ;;		_nrf24l01SPIStart
  1742 ;;		_nrf24l01Send
  1743 ;; This function is called by:
  1744 ;;		_loop
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _nrf24l01SendStart
  1750  0167                     _nrf24l01SendStart:	
  1751                           
  1752                           ;nrf24l01.c: 46: n_CONFIG_t config;
  1753                           ;nrf24l01.c: 47: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _nrf24l01SendStart: [wreg+status,2+status,0+pclath+cstack]
  1757  0167  01F3               	clrf	nrf24l01Send@data
  1758  0168  3000               	movlw	0
  1759  0169  2178               	fcall	_nrf24l01Send
  1760  016A  00F6               	movwf	??_nrf24l01SendStart
  1761  016B  0876               	movf	??_nrf24l01SendStart,w
  1762  016C  00F7               	movwf	nrf24l01SendStart@config
  1763                           
  1764                           ;nrf24l01.c: 48: config.PRIM_RX = 0;
  1765  016D  1077               	bcf	nrf24l01SendStart@config,0
  1766                           
  1767                           ;nrf24l01.c: 49: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1768  016E  0877               	movf	nrf24l01SendStart@config,w
  1769  016F  00F6               	movwf	??_nrf24l01SendStart
  1770  0170  0876               	movf	??_nrf24l01SendStart,w
  1771  0171  00F3               	movwf	nrf24l01Send@data
  1772  0172  3020               	movlw	32
  1773  0173  2178               	fcall	_nrf24l01Send
  1774                           
  1775                           ;nrf24l01.c: 51: nrf24l01SPIStart();
  1776  0174  21BD               	fcall	_nrf24l01SPIStart
  1777                           
  1778                           ;nrf24l01.c: 53: nrf24l01SPISend(0b10100000);
  1779  0175  30A0               	movlw	160
  1780  0176  2187               	fcall	_nrf24l01SPISend
  1781  0177  0008               	return
  1782  0178                     __end_of_nrf24l01SendStart:	
  1783                           
  1784                           	psect	text7
  1785  0178                     __ptext7:	
  1786 ;; *************** function _nrf24l01Send *****************
  1787 ;; Defined at:
  1788 ;;		line 30 in file "nrf24l01.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  command         1    wreg     unsigned char 
  1791 ;;  data            1    3[COMMON] unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  command         1    5[COMMON] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      unsigned char 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1
  1803 ;;      Params:         1       0       0
  1804 ;;      Locals:         1       0       0
  1805 ;;      Temps:          1       0       0
  1806 ;;      Totals:         3       0       0
  1807 ;;Total ram usage:        3 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    3
  1810 ;; This function calls:
  1811 ;;		_nrf24l01SPIEnd
  1812 ;;		_nrf24l01SPISend
  1813 ;;		_nrf24l01SPIStart
  1814 ;; This function is called by:
  1815 ;;		_nrf24l01SendStart
  1816 ;;		_nrf24l01Init
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _nrf24l01Send
  1822  0178                     _nrf24l01Send:	
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  1826                           ;nrf24l01Send@command stored from wreg
  1827  0178  00F5               	movwf	nrf24l01Send@command
  1828                           
  1829                           ;nrf24l01.c: 32: nrf24l01SPIStart();
  1830  0179  21BD               	fcall	_nrf24l01SPIStart
  1831                           
  1832                           ;nrf24l01.c: 34: status.byte = nrf24l01SPISend(command);
  1833  017A  0875               	movf	nrf24l01Send@command,w
  1834  017B  2187               	fcall	_nrf24l01SPISend
  1835  017C  00F4               	movwf	??_nrf24l01Send
  1836  017D  0874               	movf	??_nrf24l01Send,w
  1837  017E  00FB               	movwf	_status
  1838                           
  1839                           ;nrf24l01.c: 35: data = nrf24l01SPISend(data);
  1840  017F  0873               	movf	nrf24l01Send@data,w
  1841  0180  2187               	fcall	_nrf24l01SPISend
  1842  0181  00F4               	movwf	??_nrf24l01Send
  1843  0182  0874               	movf	??_nrf24l01Send,w
  1844  0183  00F3               	movwf	nrf24l01Send@data
  1845                           
  1846                           ;nrf24l01.c: 37: nrf24l01SPIEnd();
  1847  0184  21AD               	fcall	_nrf24l01SPIEnd
  1848                           
  1849                           ;nrf24l01.c: 39: return data;
  1850  0185  0873               	movf	nrf24l01Send@data,w
  1851  0186  0008               	return
  1852  0187                     __end_of_nrf24l01Send:	
  1853                           
  1854                           	psect	text8
  1855  01BD                     __ptext8:	
  1856 ;; *************** function _nrf24l01SPIStart *****************
  1857 ;; Defined at:
  1858 ;;		line 14 in file "nrf24l01.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		None
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1
  1872 ;;      Params:         0       0       0
  1873 ;;      Locals:         0       0       0
  1874 ;;      Temps:          0       0       0
  1875 ;;      Totals:         0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_nrf24l01Send
  1883 ;;		_nrf24l01SendStart
  1884 ;;		_nrf24l01Init
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _nrf24l01SPIStart
  1890  01BD                     _nrf24l01SPIStart:	
  1891                           
  1892                           ;nrf24l01.c: 15: PORTAbits.RA1 = 0;
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _nrf24l01SPIStart: []
  1896  01BD  0020               	movlb	0	; select bank0
  1897  01BE  108C               	bcf	12,1	;volatile
  1898  01BF  0008               	return
  1899  01C0                     __end_of_nrf24l01SPIStart:	
  1900                           
  1901                           	psect	text9
  1902  01A3                     __ptext9:	
  1903 ;; *************** function _nrf24l01SendEnd *****************
  1904 ;; Defined at:
  1905 ;;		line 59 in file "nrf24l01.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1
  1919 ;;      Params:         0       0       0
  1920 ;;      Locals:         0       0       0
  1921 ;;      Temps:          0       0       0
  1922 ;;      Totals:         0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		_nrf24l01SPIEnd
  1928 ;; This function is called by:
  1929 ;;		_loop
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _nrf24l01SendEnd
  1935  01A3                     _nrf24l01SendEnd:	
  1936                           
  1937                           ;nrf24l01.c: 61: nrf24l01SPIEnd();
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _nrf24l01SendEnd: [wreg+status,2+status,0+pclath+cstack]
  1941  01A3  21AD               	fcall	_nrf24l01SPIEnd
  1942                           
  1943                           ;nrf24l01.c: 63: PORTAbits.RA0 = 1;
  1944  01A4  0020               	movlb	0	; select bank0
  1945  01A5  140C               	bsf	12,0	;volatile
  1946                           
  1947                           ;nrf24l01.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1948  01A6  300D               	movlw	13
  1949  01A7                     u267:	
  1950  01A7  0B89               	decfsz	9,f
  1951  01A8  29A7               	goto	u267
  1952  01A9  0000               	nop
  1953                           
  1954                           ;nrf24l01.c: 65: PORTAbits.RA0 = 0;
  1955  01AA  0020               	movlb	0	; select bank0
  1956  01AB  100C               	bcf	12,0	;volatile
  1957  01AC  0008               	return
  1958  01AD                     __end_of_nrf24l01SendEnd:	
  1959                           
  1960                           	psect	text10
  1961  01AD                     __ptext10:	
  1962 ;; *************** function _nrf24l01SPIEnd *****************
  1963 ;; Defined at:
  1964 ;;		line 25 in file "nrf24l01.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1
  1978 ;;      Params:         0       0       0
  1979 ;;      Locals:         0       0       0
  1980 ;;      Temps:          0       0       0
  1981 ;;      Totals:         0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_nrf24l01Send
  1989 ;;		_nrf24l01SendEnd
  1990 ;;		_nrf24l01Init
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _nrf24l01SPIEnd
  1996  01AD                     _nrf24l01SPIEnd:	
  1997                           
  1998                           ;nrf24l01.c: 26: PORTAbits.RA1 = 1;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _nrf24l01SPIEnd: [wreg]
  2002  01AD  0020               	movlb	0	; select bank0
  2003  01AE  148C               	bsf	12,1	;volatile
  2004                           
  2005                           ;nrf24l01.c: 27: _delay((unsigned long)((5)*(16000000/4000000.0)));
  2006  01AF  3006               	movlw	6
  2007  01B0                     u277:	
  2008  01B0  0B89               	decfsz	9,f
  2009  01B1  29B0               	goto	u277
  2010  01B2  3200               	nop2
  2011  01B3  0008               	return
  2012  01B4                     __end_of_nrf24l01SPIEnd:	
  2013                           
  2014                           	psect	text11
  2015  01B9                     __ptext11:	
  2016 ;; *************** function _nrf24l01SendByte *****************
  2017 ;; Defined at:
  2018 ;;		line 55 in file "nrf24l01.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  payloadByte     1    wreg     unsigned char 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  payloadByte     1    3[COMMON] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1
  2032 ;;      Params:         0       0       0
  2033 ;;      Locals:         1       0       0
  2034 ;;      Temps:          0       0       0
  2035 ;;      Totals:         1       0       0
  2036 ;;Total ram usage:        1 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    3
  2039 ;; This function calls:
  2040 ;;		_nrf24l01SPISend
  2041 ;; This function is called by:
  2042 ;;		_loop
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _nrf24l01SendByte
  2048  01B9                     _nrf24l01SendByte:	
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _nrf24l01SendByte: [wreg+status,2+status,0+pclath+cstack]
  2052                           ;nrf24l01SendByte@payloadByte stored from wreg
  2053  01B9  00F3               	movwf	nrf24l01SendByte@payloadByte
  2054                           
  2055                           ;nrf24l01.c: 56: nrf24l01SPISend(payloadByte);
  2056  01BA  0873               	movf	nrf24l01SendByte@payloadByte,w
  2057  01BB  2187               	fcall	_nrf24l01SPISend
  2058  01BC  0008               	return
  2059  01BD                     __end_of_nrf24l01SendByte:	
  2060                           
  2061                           	psect	text12
  2062  0187                     __ptext12:	
  2063 ;; *************** function _nrf24l01SPISend *****************
  2064 ;; Defined at:
  2065 ;;		line 18 in file "nrf24l01.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  data            1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  data            1    2[COMMON] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1
  2079 ;;      Params:         0       0       0
  2080 ;;      Locals:         1       0       0
  2081 ;;      Temps:          1       0       0
  2082 ;;      Totals:         2       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    2
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_nrf24l01Send
  2090 ;;		_nrf24l01SendStart
  2091 ;;		_nrf24l01SendByte
  2092 ;;		_nrf24l01Init
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _nrf24l01SPISend
  2098  0187                     _nrf24l01SPISend:	
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _nrf24l01SPISend: [wreg]
  2102                           ;nrf24l01SPISend@data stored from wreg
  2103  0187  00F2               	movwf	nrf24l01SPISend@data
  2104                           
  2105                           ;nrf24l01.c: 19: SSP1BUF = data;
  2106  0188  0872               	movf	nrf24l01SPISend@data,w
  2107  0189  0024               	movlb	4	; select bank4
  2108  018A  0091               	movwf	17	;volatile
  2109  018B                     l81:	
  2110                           ;nrf24l01.c: 20: while (!SSP1STATbits.BF){ __nop(); }
  2111                           
  2112  018B  0024               	movlb	4	; select bank4
  2113  018C  1814               	btfsc	20,0	;volatile
  2114  018D  2990               	goto	l752
  2115  018E  0000               	nop
  2116  018F  298B               	goto	l81
  2117  0190                     l752:	
  2118                           
  2119                           ;nrf24l01.c: 21: data = SSP1BUF;
  2120  0190  0811               	movf	17,w	;volatile
  2121  0191  00F1               	movwf	??_nrf24l01SPISend
  2122  0192  0871               	movf	??_nrf24l01SPISend,w
  2123  0193  00F2               	movwf	nrf24l01SPISend@data
  2124                           
  2125                           ;nrf24l01.c: 22: return data;
  2126  0194  0872               	movf	nrf24l01SPISend@data,w
  2127  0195  0008               	return
  2128  0196                     __end_of_nrf24l01SPISend:	
  2129                           
  2130                           	psect	intentry
  2131  0004                     __pintentry:	
  2132 ;; *************** function _ISR *****************
  2133 ;; Defined at:
  2134 ;;		line 7 in file "main.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		status,2, status,0, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1
  2148 ;;      Params:         0       0       0
  2149 ;;      Locals:         0       0       0
  2150 ;;      Temps:          1       0       0
  2151 ;;      Totals:         1       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    1
  2155 ;; This function calls:
  2156 ;;		_nrf24l01ISR
  2157 ;; This function is called by:
  2158 ;;		Interrupt level 1
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162  0004                     _ISR:	
  2163                           
  2164                           ;incstack = 0
  2165  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2166                           
  2167                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
  2168  0005  3180               	pagesel	$
  2169  0006  0020               	movlb	0	; select bank0
  2170  0007  087F               	movf	127,w
  2171  0008  00F0               	movwf	??_ISR
  2172                           
  2173                           ;main.c: 8: nrf24l01ISR();
  2174  0009  21C2               	fcall	_nrf24l01ISR
  2175  000A  0870               	movf	??_ISR,w
  2176  000B  0020               	movlb	0	; select bank0
  2177  000C  00FF               	movwf	127
  2178  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2179  000E  0009               	retfie
  2180  000F                     __end_of_ISR:	
  2181                           
  2182                           	psect	text14
  2183  01C2                     __ptext14:	
  2184 ;; *************** function _nrf24l01ISR *****************
  2185 ;; Defined at:
  2186 ;;		line 8 in file "nrf24l01.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		None
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1
  2200 ;;      Params:         0       0       0
  2201 ;;      Locals:         0       0       0
  2202 ;;      Temps:          0       0       0
  2203 ;;      Totals:         0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_ISR
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _nrf24l01ISR
  2215  01C2                     _nrf24l01ISR:	
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _nrf24l01ISR: []
  2219  01C2  0008               	return
  2220  01C3                     __end_of_nrf24l01ISR:	
  2221  007E                     btemp	set	126	;btemp
  2222  007E                     int$flags	set	126
  2223  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      6       6
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_loop
    _nrf24l01Init->___lwmod
    _nrf24l01Init->_read_flashmem
    _loop->_nrf24l01SendStart
    _nrf24l01SendStart->_nrf24l01Send
    _nrf24l01Send->_nrf24l01SPISend
    _nrf24l01SendByte->_nrf24l01SPISend

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_nrf24l01Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1817
                               _loop
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         9     9      0    1222
                                              7 COMMON     3     3      0
                                              0 BANK0      6     6      0
                             ___bmul
                            ___lwmod
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                       _nrf24l01Send
                      _read_flashmem
 ---------------------------------------------------------------------------------
 (2) _read_flashmem                                        6     4      2     110
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     245
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     178
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _loop                                                 3     3      0     595
                                              8 COMMON     3     3      0
                   _nrf24l01SendByte
                    _nrf24l01SendEnd
                  _nrf24l01SendStart
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendStart                                    2     2      0     482
                                              6 COMMON     2     2      0
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (2) _nrf24l01Send                                         3     2      1     413
                                              3 COMMON     3     2      1
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendEnd                                      0     0      0       0
                     _nrf24l01SPIEnd
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIEnd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendByte                                     1     1      0      67
                                              3 COMMON     1     1      0
                    _nrf24l01SPISend
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPISend                                      2     2      0      45
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (6) _nrf24l01ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _nrf24l01SendByte
       _nrf24l01SPISend
     _nrf24l01SendEnd
       _nrf24l01SPIEnd
     _nrf24l01SendStart
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01Send
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart
   _nrf24l01Init
     ___bmul
     ___lwmod
     _nrf24l01SPIEnd
     _nrf24l01SPISend
     _nrf24l01SPIStart
     _nrf24l01Send
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart
     _read_flashmem

 _ISR (ROOT)
   _nrf24l01ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      13       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 11 13:04:33 2018

             ___bmul@product 0073                  __CFG_CP$OFF 0000                           l81 018B  
        nrf24l01Send@command 0075                  __CFG_LVP$ON 0000                          l812 0158  
                        l752 0190                          l816 015E                          l832 00F0  
                        l834 00FC                          l842 0111                          l932 01A1  
                        l862 0129                          l838 0108                          l864 012E  
                        l856 011C                          l848 0117                          l858 0127  
                        l892 0049                          l894 0066                          u205 0109  
                        u175 00F3                          u257 0133                          u267 01A7  
                        u195 0102                          _ISR 0004                          u277 01B0  
            loop@payloadByte 007A                 __CFG_BORV$LO 0000                          wreg 0009  
                       ?_ISR 0070               ??_nrf24l01Init 0077               ??_nrf24l01Send 0074  
               __CFG_WRT$OFF 0000                __p_NVMEM_text 07E0                         _main 0196  
                       _mode 007C                         _loop 0116                         fsr0h 0005  
                       indf0 0000                         fsr0l 0004                         btemp 007E  
                       start 000F                nrf24l01Init@i 0024            ___bmul@multiplier 0074  
    nrf24l01SendStart@config 0077                        ??_ISR 0070                        ?_main 0070  
                      ?_loop 0070                __CFG_WDTE$OFF 0000              __end_of___lwmod 0116  
                      _NVMEM 07E0                __CFG_PWRTE$ON 0000               __CFG_BOREN$OFF 0000  
                      status 0003                        wtemp0 007E             _nrf24l01SPIStart 01BD  
             __CFG_MCLRE$OFF 0000              __initialization 0010                 __end_of_main 01A3  
               __end_of_loop 013A               __CFG_LPBOR$OFF 0000                       ??_main 007B  
                     ??_loop 0078             ??_nrf24l01SPIEnd 0071     __size_of_nrf24l01SPISend 000F  
           _nrf24l01SendByte 01B9                       _PMADRH 0192                       _PMADRL 0191  
                     _PMDATH 0194                       _PMDATL 0193                       _PMCON1 0195  
                     _PMCON2 0196     __size_of_nrf24l01SendEnd 000A         __size_of_nrf24l01ISR 0001  
                     ___bmul 0156               __CFG_STVREN$ON 0000                    ??___lwmod 0075  
       __end_of_nrf24l01Init 00EA         __end_of_nrf24l01Send 0187                       _status 007B  
               __pdataCOMMON 007C       __size_of_read_flashmem 001C      __end_of__initialization 0013  
              __end_of_NVMEM 0800          ___bmul@multiplicand 0071               __pcstackCOMMON 0070  
          ??_nrf24l01SPISend 0071                _read_flashmem 013A                   __pmaintext 0196  
                    ?___bmul 0071            ??_nrf24l01SendEnd 0071                   __pintentry 0004  
        nrf24l01SPISend@data 0072            _nrf24l01SendStart 0167           ?_nrf24l01SendStart 0070  
      __end_of_n_ADDRESS_MUL 01C2     __end_of_nrf24l01SPIStart 01C0                      _SSP1BUF 0211  
        ??_nrf24l01SendStart 0076               ?_read_flashmem 0071        __size_of_nrf24l01Init 00D4  
      __size_of_nrf24l01Send 000F              __size_of___bmul 0011    __end_of_nrf24l01SendStart 0178  
   __end_of_nrf24l01SendByte 01BD                      ___lwmod 00EA                      __ptext1 0016  
                    __ptext2 013A                      __ptext3 00EA                      __ptext4 0156  
                    __ptext5 0116                      __ptext6 0167                      __ptext7 0178  
                    __ptext8 01BD                      __ptext9 01A3                 __size_of_ISR 000B  
       end_of_initialization 0013                 _nrf24l01Init 0016                 _nrf24l01Send 0178  
           nrf24l01Init@byte 0023             nrf24l01Init@pipe 0025                    _PORTAbits 000C  
           __CFG_FOSC$INTOSC 0000                    _TRISAbits 008C                    _TRISCbits 008E  
           nrf24l01Send@data 0073                ??_nrf24l01ISR 0070              ??_read_flashmem 0073  
 __size_of_nrf24l01SendStart 0011               __end_of___bmul 0167                __pidataCOMMON 01C0  
        start_initialization 0010              _nrf24l01SPISend 0187                  __end_of_ISR 000F  
nrf24l01SendByte@payloadByte 0073      __size_of_nrf24l01SPIEnd 0007              _nrf24l01SendEnd 01A3  
                   ??___bmul 0072          __end_of_nrf24l01ISR 01C3                  __pbssCOMMON 007B  
                  ___latbits 0000                __pcstackBANK0 0020            ?_nrf24l01SPIStart 0070  
         ??_nrf24l01SPIStart 0071            ?_nrf24l01SendByte 0070                     ?___lwmod 0071  
       __end_of_n_ADDRESS_P0 01B9      __end_of_nrf24l01SPISend 0196                _NVMEM_absaddr 07E0  
         ??_nrf24l01SendByte 0073      __end_of_nrf24l01SendEnd 01AD                  _nrf24l01ISR 01C2  
             _nrf24l01SPIEnd 01AD             __size_of___lwmod 002C             ?_nrf24l01SPISend 0070  
              _n_ADDRESS_MUL 01C1                     __ptext10 01AD                     __ptext11 01B9  
                   __ptext12 0187                     __ptext14 01C2             ?_nrf24l01SendEnd 0070  
     __end_of_nrf24l01SPIEnd 01B4          nrf24l01Init@channel 0020          nrf24l01Init@feature 0022  
              __size_of_main 000D                __size_of_loop 0024        __end_of_read_flashmem 0156  
                   int$flags 007E                 _SSP1STATbits 0214                   _INTCONbits 000B  
            ?_nrf24l01SPIEnd 0070                     intlevel1 0000          read_flashmem@offset 0071  
               _n_ADDRESS_P0 01B4          read_flashmem@result 0075                   _PMCON1bits 0195  
           ___lwmod@dividend 0073            __CFG_CLKOUTEN$OFF 0000           nrf24l01Init@config 0021  
                 _OSCCONbits 0099    __size_of_nrf24l01SPIStart 0003                __pstringtext1 01B4  
              __pstringtext2 01C1              ___lwmod@divisor 0071              ___lwmod@counter 0076  
                _SSPCON1bits 0215    __size_of_nrf24l01SendByte 0004                ?_nrf24l01Init 0070  
              ?_nrf24l01Send 0073                 ?_nrf24l01ISR 0070  
