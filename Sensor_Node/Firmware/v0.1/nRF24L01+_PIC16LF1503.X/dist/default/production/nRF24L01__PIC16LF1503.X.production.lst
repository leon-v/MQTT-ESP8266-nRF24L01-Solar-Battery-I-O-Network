

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 03 13:20:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_NVMEM_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16LF1503 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  008C                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010E                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  020C                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0391                     	;# 
   138  0392                     	;# 
   139  0393                     	;# 
   140  0498                     	;# 
   141  0498                     	;# 
   142  0499                     	;# 
   143  049A                     	;# 
   144  049B                     	;# 
   145  049B                     	;# 
   146  049C                     	;# 
   147  049D                     	;# 
   148  049E                     	;# 
   149  049F                     	;# 
   150  0611                     	;# 
   151  0612                     	;# 
   152  0613                     	;# 
   153  0613                     	;# 
   154  0614                     	;# 
   155  0615                     	;# 
   156  0616                     	;# 
   157  0616                     	;# 
   158  0617                     	;# 
   159  0618                     	;# 
   160  0619                     	;# 
   161  0619                     	;# 
   162  061A                     	;# 
   163  061B                     	;# 
   164  061C                     	;# 
   165  061C                     	;# 
   166  0691                     	;# 
   167  0692                     	;# 
   168  0693                     	;# 
   169  0694                     	;# 
   170  0695                     	;# 
   171  0F0F                     	;# 
   172  0F10                     	;# 
   173  0F11                     	;# 
   174  0F12                     	;# 
   175  0F13                     	;# 
   176  0F14                     	;# 
   177  0F15                     	;# 
   178  0F16                     	;# 
   179  0F17                     	;# 
   180  0F18                     	;# 
   181  0F19                     	;# 
   182  0F1A                     	;# 
   183  0F1B                     	;# 
   184  0F1C                     	;# 
   185  0F1D                     	;# 
   186  0F1E                     	;# 
   187  0F1F                     	;# 
   188  0FE3                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000E                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009B                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  010C                     	;# 
   243  010E                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011D                     	;# 
   254  018C                     	;# 
   255  018E                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  020C                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  0498                     	;# 
   284  0498                     	;# 
   285  0499                     	;# 
   286  049A                     	;# 
   287  049B                     	;# 
   288  049B                     	;# 
   289  049C                     	;# 
   290  049D                     	;# 
   291  049E                     	;# 
   292  049F                     	;# 
   293  0611                     	;# 
   294  0612                     	;# 
   295  0613                     	;# 
   296  0613                     	;# 
   297  0614                     	;# 
   298  0615                     	;# 
   299  0616                     	;# 
   300  0616                     	;# 
   301  0617                     	;# 
   302  0618                     	;# 
   303  0619                     	;# 
   304  0619                     	;# 
   305  061A                     	;# 
   306  061B                     	;# 
   307  061C                     	;# 
   308  061C                     	;# 
   309  0691                     	;# 
   310  0692                     	;# 
   311  0693                     	;# 
   312  0694                     	;# 
   313  0695                     	;# 
   314  0F0F                     	;# 
   315  0F10                     	;# 
   316  0F11                     	;# 
   317  0F12                     	;# 
   318  0F13                     	;# 
   319  0F14                     	;# 
   320  0F15                     	;# 
   321  0F16                     	;# 
   322  0F17                     	;# 
   323  0F18                     	;# 
   324  0F19                     	;# 
   325  0F1A                     	;# 
   326  0F1B                     	;# 
   327  0F1C                     	;# 
   328  0F1D                     	;# 
   329  0F1E                     	;# 
   330  0F1F                     	;# 
   331  0FE3                     	;# 
   332  0FE4                     	;# 
   333  0FE5                     	;# 
   334  0FE6                     	;# 
   335  0FE7                     	;# 
   336  0FE8                     	;# 
   337  0FE9                     	;# 
   338  0FEA                     	;# 
   339  0FEB                     	;# 
   340  0FED                     	;# 
   341  0FEE                     	;# 
   342  0FEF                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000E                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  008C                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  010C                     	;# 
   386  010E                     	;# 
   387  0111                     	;# 
   388  0112                     	;# 
   389  0113                     	;# 
   390  0114                     	;# 
   391  0115                     	;# 
   392  0116                     	;# 
   393  0117                     	;# 
   394  0118                     	;# 
   395  0119                     	;# 
   396  011D                     	;# 
   397  018C                     	;# 
   398  018E                     	;# 
   399  0191                     	;# 
   400  0191                     	;# 
   401  0192                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0194                     	;# 
   405  0195                     	;# 
   406  0196                     	;# 
   407  020C                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0391                     	;# 
   424  0392                     	;# 
   425  0393                     	;# 
   426  0498                     	;# 
   427  0498                     	;# 
   428  0499                     	;# 
   429  049A                     	;# 
   430  049B                     	;# 
   431  049B                     	;# 
   432  049C                     	;# 
   433  049D                     	;# 
   434  049E                     	;# 
   435  049F                     	;# 
   436  0611                     	;# 
   437  0612                     	;# 
   438  0613                     	;# 
   439  0613                     	;# 
   440  0614                     	;# 
   441  0615                     	;# 
   442  0616                     	;# 
   443  0616                     	;# 
   444  0617                     	;# 
   445  0618                     	;# 
   446  0619                     	;# 
   447  0619                     	;# 
   448  061A                     	;# 
   449  061B                     	;# 
   450  061C                     	;# 
   451  061C                     	;# 
   452  0691                     	;# 
   453  0692                     	;# 
   454  0693                     	;# 
   455  0694                     	;# 
   456  0695                     	;# 
   457  0F0F                     	;# 
   458  0F10                     	;# 
   459  0F11                     	;# 
   460  0F12                     	;# 
   461  0F13                     	;# 
   462  0F14                     	;# 
   463  0F15                     	;# 
   464  0F16                     	;# 
   465  0F17                     	;# 
   466  0F18                     	;# 
   467  0F19                     	;# 
   468  0F1A                     	;# 
   469  0F1B                     	;# 
   470  0F1C                     	;# 
   471  0F1D                     	;# 
   472  0F1E                     	;# 
   473  0F1F                     	;# 
   474  0FE3                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000E                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  008C                     	;# 
   513  008E                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009B                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010E                     	;# 
   530  0111                     	;# 
   531  0112                     	;# 
   532  0113                     	;# 
   533  0114                     	;# 
   534  0115                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  0118                     	;# 
   538  0119                     	;# 
   539  011D                     	;# 
   540  018C                     	;# 
   541  018E                     	;# 
   542  0191                     	;# 
   543  0191                     	;# 
   544  0192                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  020C                     	;# 
   551  0211                     	;# 
   552  0211                     	;# 
   553  0212                     	;# 
   554  0212                     	;# 
   555  0213                     	;# 
   556  0213                     	;# 
   557  0214                     	;# 
   558  0214                     	;# 
   559  0215                     	;# 
   560  0215                     	;# 
   561  0215                     	;# 
   562  0216                     	;# 
   563  0216                     	;# 
   564  0217                     	;# 
   565  0217                     	;# 
   566  0391                     	;# 
   567  0392                     	;# 
   568  0393                     	;# 
   569  0498                     	;# 
   570  0498                     	;# 
   571  0499                     	;# 
   572  049A                     	;# 
   573  049B                     	;# 
   574  049B                     	;# 
   575  049C                     	;# 
   576  049D                     	;# 
   577  049E                     	;# 
   578  049F                     	;# 
   579  0611                     	;# 
   580  0612                     	;# 
   581  0613                     	;# 
   582  0613                     	;# 
   583  0614                     	;# 
   584  0615                     	;# 
   585  0616                     	;# 
   586  0616                     	;# 
   587  0617                     	;# 
   588  0618                     	;# 
   589  0619                     	;# 
   590  0619                     	;# 
   591  061A                     	;# 
   592  061B                     	;# 
   593  061C                     	;# 
   594  061C                     	;# 
   595  0691                     	;# 
   596  0692                     	;# 
   597  0693                     	;# 
   598  0694                     	;# 
   599  0695                     	;# 
   600  0F0F                     	;# 
   601  0F10                     	;# 
   602  0F11                     	;# 
   603  0F12                     	;# 
   604  0F13                     	;# 
   605  0F14                     	;# 
   606  0F15                     	;# 
   607  0F16                     	;# 
   608  0F17                     	;# 
   609  0F18                     	;# 
   610  0F19                     	;# 
   611  0F1A                     	;# 
   612  0F1B                     	;# 
   613  0F1C                     	;# 
   614  0F1D                     	;# 
   615  0F1E                     	;# 
   616  0F1F                     	;# 
   617  0FE3                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  07E0                     _NVMEM_absaddr	set	2016
   630                           
   631                           	psect	stringtext1
   632  00FD                     __pstringtext1:	
   633  00FD                     _n_ADDRESS_P1:	
   634  00FD  349D               	retlw	157
   635  00FE  34BF               	retlw	191
   636  00FF  3497               	retlw	151
   637  0100  344D               	retlw	77
   638  0101  34FB               	retlw	251
   639  0102                     __end_of_n_ADDRESS_P1:	
   640                           
   641                           	psect	stringtext2
   642  0102                     __pstringtext2:	
   643  0102                     _n_ADDRESS_P0:	
   644  0102  34AD               	retlw	173
   645  0103  3487               	retlw	135
   646  0104  3466               	retlw	102
   647  0105  34BC               	retlw	188
   648  0106  34BB               	retlw	187
   649  0107                     __end_of_n_ADDRESS_P0:	
   650                           
   651                           	psect	stringtext3
   652  010F                     __pstringtext3:	
   653  010F                     _n_ADDRESS_MUL:	
   654  010F  3403               	retlw	3
   655  0110                     __end_of_n_ADDRESS_MUL:	
   656  07E0                     _NVMEM_absaddr	set	2016
   657                           
   658                           	psect	_NVMEM_text
   659  07E0                     __p_NVMEM_text:	
   660  07E0                     _NVMEM:	
   661  07E0  34FE               	retlw	254
   662  07E1  34FF               	retlw	255
   663  07E2  3400               	retlw	0
   664  07E3  3400               	retlw	0
   665  07E4  34FF               	retlw	255
   666  07E5  34FF               	retlw	255
   667  07E6  34FF               	retlw	255
   668  07E7  34FF               	retlw	255
   669  07E8  34FF               	retlw	255
   670  07E9  34FF               	retlw	255
   671  07EA  34FF               	retlw	255
   672  07EB  34FF               	retlw	255
   673  07EC  34FF               	retlw	255
   674  07ED  34FF               	retlw	255
   675  07EE  34FF               	retlw	255
   676  07EF  34FF               	retlw	255
   677  07F0  34FF               	retlw	255
   678  07F1  34FF               	retlw	255
   679  07F2  34FF               	retlw	255
   680  07F3  34FF               	retlw	255
   681  07F4  34FF               	retlw	255
   682  07F5  34FF               	retlw	255
   683  07F6  34FF               	retlw	255
   684  07F7  34FF               	retlw	255
   685  07F8  34FF               	retlw	255
   686  07F9  34FF               	retlw	255
   687  07FA  34FF               	retlw	255
   688  07FB  34FF               	retlw	255
   689  07FC  34FF               	retlw	255
   690  07FD  34FF               	retlw	255
   691  07FE  34FF               	retlw	255
   692  07FF  34FF               	retlw	255
   693  0800                     __end_of_NVMEM:	
   694  000C                     _PORTAbits	set	12
   695  000B                     _INTCONbits	set	11
   696  008E                     _TRISCbits	set	142
   697  008C                     _TRISAbits	set	140
   698  0099                     _OSCCONbits	set	153
   699  0194                     _PMDATH	set	404
   700  0193                     _PMDATL	set	403
   701  0196                     _PMCON2	set	406
   702  0195                     _PMCON1bits	set	405
   703  0192                     _PMADRH	set	402
   704  0191                     _PMADRL	set	401
   705  0195                     _PMCON1	set	405
   706  0215                     _SSPCON1bits	set	533
   707  0214                     _SSP1STATbits	set	532
   708  0211                     _SSP1BUF	set	529
   709                           
   710                           ; #config settings
   711  0000                     
   712                           	psect	cinit
   713  0010                     start_initialization:	
   714  0010                     __initialization:	
   715                           
   716                           ; Clear objects allocated to COMMON
   717  0010  01FA               	clrf	__pbssCOMMON& (0+127)
   718  0011  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   719  0012                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  0012                     __end_of__initialization:	
   723  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   724  0013  0020               	movlb	0
   725  0014  28F0               	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMMON
   728  007A                     __pbssCOMMON:	
   729  007A                     _pipe:	
   730  007A                     	ds	1
   731  007B                     _status:	
   732  007B                     	ds	1
   733                           
   734                           	psect	cstackCOMMON
   735  0070                     __pcstackCOMMON:	
   736  0070                     ?_nrf24l01ISR:	
   737  0070                     ??_nrf24l01ISR:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_nrf24l01Init:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_ISR:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ??_ISR:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_loop:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_main:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_nrf24l01SPIStart:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_nrf24l01SPISend:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_nrf24l01SPIEnd:	
   762                           ; 1 bytes @ 0x0
   763                           
   764                           
   765                           ; 1 bytes @ 0x0
   766  0070                     	ds	1
   767  0071                     ??_nrf24l01SPIStart:	
   768  0071                     ??_nrf24l01SPISend:	
   769                           ; 1 bytes @ 0x1
   770                           
   771  0071                     ??_nrf24l01SPIEnd:	
   772                           ; 1 bytes @ 0x1
   773                           
   774  0071                     ?___bmul:	
   775                           ; 1 bytes @ 0x1
   776                           
   777  0071                     ___bmul@multiplicand:	
   778                           ; 1 bytes @ 0x1
   779                           
   780                           
   781                           ; 1 bytes @ 0x1
   782  0071                     	ds	1
   783  0072                     ??___bmul:	
   784  0072                     nrf24l01SPISend@data:	
   785                           ; 1 bytes @ 0x2
   786                           
   787                           
   788                           ; 1 bytes @ 0x2
   789  0072                     	ds	1
   790  0073                     ?_nrf24l01Send:	
   791  0073                     nrf24l01Send@data:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0073                     ___bmul@product:	
   795                           ; 1 bytes @ 0x3
   796                           
   797                           
   798                           ; 1 bytes @ 0x3
   799  0073                     	ds	1
   800  0074                     ??_nrf24l01Send:	
   801  0074                     ___bmul@multiplier:	
   802                           ; 1 bytes @ 0x4
   803                           
   804                           
   805                           ; 1 bytes @ 0x4
   806  0074                     	ds	1
   807  0075                     nrf24l01Send@command:	
   808                           
   809                           ; 1 bytes @ 0x5
   810  0075                     	ds	1
   811  0076                     ??_nrf24l01Init:	
   812                           
   813                           ; 1 bytes @ 0x6
   814  0076                     	ds	2
   815  0078                     nrf24l01Init@config:	
   816                           
   817                           ; 1 bytes @ 0x8
   818  0078                     	ds	1
   819  0079                     nrf24l01Init@payloadByte:	
   820                           
   821                           ; 1 bytes @ 0x9
   822  0079                     	ds	1
   823  007A                     ??_loop:	
   824  007A                     ??_main:	
   825                           ; 1 bytes @ 0xA
   826                           
   827                           
   828                           	psect	maintext
   829  00F0                     __pmaintext:	
   830                           ; 1 bytes @ 0xA
   831 ;;
   832 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   833 ;;
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 15 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : B1F/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1
   850 ;;      Params:         0       0       0
   851 ;;      Locals:         0       0       0
   852 ;;      Temps:          0       0       0
   853 ;;      Totals:         0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels required when called:    6
   856 ;; This function calls:
   857 ;;		_loop
   858 ;;		_nrf24l01Init
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _main
   866  00F0                     _main:	
   867                           
   868                           ;main.c: 17: INTCONbits.GIE = 0;
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   872  00F0  138B               	bcf	11,7	;volatile
   873                           
   874                           ;main.c: 18: INTCONbits.PEIE = 1;
   875  00F1  170B               	bsf	11,6	;volatile
   876                           
   877                           ;main.c: 20: OSCCONbits.IRCF = 0b1111;
   878  00F2  3078               	movlw	120
   879  00F3  0021               	movlb	1	; select bank1
   880  00F4  0499               	iorwf	25,f	;volatile
   881                           
   882                           ;main.c: 21: OSCCONbits.SCS = 0b10;
   883  00F5  0819               	movf	25,w	;volatile
   884  00F6  39FC               	andlw	-4
   885  00F7  3802               	iorlw	2
   886  00F8  0099               	movwf	25	;volatile
   887                           
   888                           ;main.c: 23: nrf24l01Init();
   889  00F9  2015               	fcall	_nrf24l01Init
   890                           
   891                           ;main.c: 25: INTCONbits.GIE = 1;
   892  00FA  178B               	bsf	11,7	;volatile
   893  00FB                     l770:	
   894                           ;main.c: 27: while(1){
   895                           
   896                           
   897                           ;main.c: 28: loop();
   898  00FB  210D               	fcall	_loop
   899  00FC  28FB               	goto	l770
   900  00FD                     __end_of_main:	
   901                           ;main.c: 29: }
   902                           ;main.c: 31: return;
   903                           
   904                           
   905                           	psect	text1
   906  010D                     __ptext1:	
   907 ;; *************** function _loop *****************
   908 ;; Defined at:
   909 ;;		line 9 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1
   923 ;;      Params:         0       0       0
   924 ;;      Locals:         0       0       0
   925 ;;      Temps:          0       0       0
   926 ;;      Totals:         0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    5
   930 ;; This function calls:
   931 ;;		_nrf24l01Init
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _loop
   939  010D                     _loop:	
   940                           
   941                           ;main.c: 11: nrf24l01Init();
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   945  010D  2015               	fcall	_nrf24l01Init
   946  010E  0008               	return
   947  010F                     __end_of_loop:	
   948                           
   949                           	psect	text2
   950  0015                     __ptext2:	
   951 ;; *************** function _nrf24l01Init *****************
   952 ;; Defined at:
   953 ;;		line 68 in file "nrf24l01.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  payloadByte     1    9[COMMON] unsigned char 
   958 ;;  config          1    8[COMMON] struct .
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1
   968 ;;      Params:         0       0       0
   969 ;;      Locals:         2       0       0
   970 ;;      Temps:          2       0       0
   971 ;;      Totals:         4       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    4
   975 ;; This function calls:
   976 ;;		___bmul
   977 ;;		_nrf24l01SPIEnd
   978 ;;		_nrf24l01SPISend
   979 ;;		_nrf24l01SPIStart
   980 ;;		_nrf24l01Send
   981 ;; This function is called by:
   982 ;;		_loop
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _nrf24l01Init
   989  0015                     _nrf24l01Init:	
   990                           
   991                           ;nrf24l01.c: 74: TRISAbits.TRISA0 = 0;
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _nrf24l01Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   995  0015  0021               	movlb	1	; select bank1
   996  0016  100C               	bcf	12,0	;volatile
   997                           
   998                           ;nrf24l01.c: 75: PORTAbits.RA0 = 0;
   999  0017  0020               	movlb	0	; select bank0
  1000  0018  100C               	bcf	12,0	;volatile
  1001                           
  1002                           ;nrf24l01.c: 78: TRISAbits.TRISA1 = 0;
  1003  0019  0021               	movlb	1	; select bank1
  1004  001A  108C               	bcf	12,1	;volatile
  1005                           
  1006                           ;nrf24l01.c: 79: PORTAbits.RA1 = 1;
  1007  001B  0020               	movlb	0	; select bank0
  1008  001C  148C               	bsf	12,1	;volatile
  1009                           
  1010                           ;nrf24l01.c: 81: TRISAbits.TRISA1 = 0;
  1011  001D  0021               	movlb	1	; select bank1
  1012  001E  108C               	bcf	12,1	;volatile
  1013                           
  1014                           ;nrf24l01.c: 82: PORTAbits.RA1 = 1;
  1015  001F  0020               	movlb	0	; select bank0
  1016  0020  148C               	bsf	12,1	;volatile
  1017                           
  1018                           ;nrf24l01.c: 84: TRISCbits.TRISC1 = 1;
  1019  0021  0021               	movlb	1	; select bank1
  1020  0022  148E               	bsf	14,1	;volatile
  1021                           
  1022                           ;nrf24l01.c: 85: TRISCbits.TRISC2 = 0;
  1023  0023  110E               	bcf	14,2	;volatile
  1024                           
  1025                           ;nrf24l01.c: 87: TRISCbits.TRISC0 = 0;
  1026  0024  100E               	bcf	14,0	;volatile
  1027                           
  1028                           ;nrf24l01.c: 89: SSPCON1bits.SSPEN = 0;
  1029  0025  0024               	movlb	4	; select bank4
  1030  0026  1295               	bcf	21,5	;volatile
  1031                           
  1032                           ;nrf24l01.c: 90: SSPCON1bits.CKP = 0;
  1033  0027  1215               	bcf	21,4	;volatile
  1034                           
  1035                           ;nrf24l01.c: 91: SSP1STATbits.CKE = 1;
  1036  0028  1714               	bsf	20,6	;volatile
  1037                           
  1038                           ;nrf24l01.c: 93: SSPCON1bits.SSPM = 0b0000;
  1039  0029  30F0               	movlw	-16
  1040  002A  0595               	andwf	21,f	;volatile
  1041                           
  1042                           ;nrf24l01.c: 95: SSPCON1bits.SSPEN = 1;
  1043  002B  1695               	bsf	21,5	;volatile
  1044                           
  1045                           ;nrf24l01.c: 98: n_CONFIG_t config;
  1046                           ;nrf24l01.c: 99: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  1047  002C  01F3               	clrf	nrf24l01Send@data
  1048  002D  3000               	movlw	0
  1049  002E  20D2               	fcall	_nrf24l01Send
  1050  002F  00F6               	movwf	??_nrf24l01Init
  1051  0030  0876               	movf	??_nrf24l01Init,w
  1052  0031  00F8               	movwf	nrf24l01Init@config
  1053                           
  1054                           ;nrf24l01.c: 100: config.PRIM_RX = 0;
  1055  0032  1078               	bcf	nrf24l01Init@config,0
  1056                           
  1057                           ;nrf24l01.c: 101: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1058  0033  0878               	movf	nrf24l01Init@config,w
  1059  0034  00F6               	movwf	??_nrf24l01Init
  1060  0035  0876               	movf	??_nrf24l01Init,w
  1061  0036  00F3               	movwf	nrf24l01Send@data
  1062  0037  3020               	movlw	32
  1063  0038  20D2               	fcall	_nrf24l01Send
  1064                           
  1065                           ;nrf24l01.c: 105: nrf24l01SPIStart();
  1066  0039  2107               	fcall	_nrf24l01SPIStart
  1067                           
  1068                           ;nrf24l01.c: 107: status.byte = nrf24l01SPISend(0b00100000 | 0x10);
  1069  003A  3030               	movlw	48
  1070  003B  20E1               	fcall	_nrf24l01SPISend
  1071  003C  00F6               	movwf	??_nrf24l01Init
  1072  003D  0876               	movf	??_nrf24l01Init,w
  1073  003E  00FB               	movwf	_status
  1074                           
  1075                           ;nrf24l01.c: 108: nrf24l01SPISend(n_ADDRESS_P0[0]);
  1076  003F  3002               	movlw	low (_n_ADDRESS_P0| (0+32768))
  1077  0040  0084               	movwf	4
  1078  0041  3081               	movlw	high (_n_ADDRESS_P0| (0+32768))
  1079  0042  0085               	movwf	5
  1080  0043  0800               	movf	0,w	;code access
  1081  0044  20E1               	fcall	_nrf24l01SPISend
  1082                           
  1083                           ;nrf24l01.c: 109: nrf24l01SPISend(n_ADDRESS_P0[1]);
  1084  0045  3003               	movlw	low ((_n_ADDRESS_P0+1)| (0+32768))
  1085  0046  0084               	movwf	4
  1086  0047  3081               	movlw	high ((_n_ADDRESS_P0+1)| (0+32768))
  1087  0048  0085               	movwf	5
  1088  0049  0800               	movf	0,w	;code access
  1089  004A  20E1               	fcall	_nrf24l01SPISend
  1090                           
  1091                           ;nrf24l01.c: 110: nrf24l01SPISend(n_ADDRESS_P0[2]);
  1092  004B  3004               	movlw	low ((_n_ADDRESS_P0+2)| (0+32768))
  1093  004C  0084               	movwf	4
  1094  004D  3081               	movlw	high ((_n_ADDRESS_P0+2)| (0+32768))
  1095  004E  0085               	movwf	5
  1096  004F  0800               	movf	0,w	;code access
  1097  0050  20E1               	fcall	_nrf24l01SPISend
  1098                           
  1099                           ;nrf24l01.c: 111: nrf24l01SPISend(n_ADDRESS_P0[3]);
  1100  0051  3005               	movlw	low ((_n_ADDRESS_P0+3)| (0+32768))
  1101  0052  0084               	movwf	4
  1102  0053  3081               	movlw	high ((_n_ADDRESS_P0+3)| (0+32768))
  1103  0054  0085               	movwf	5
  1104  0055  0800               	movf	0,w	;code access
  1105  0056  20E1               	fcall	_nrf24l01SPISend
  1106                           
  1107                           ;nrf24l01.c: 112: nrf24l01SPISend(n_ADDRESS_P0[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1108  0057  3006               	movlw	low ((_n_ADDRESS_P0+4)| (0+32768))
  1109  0058  0084               	movwf	4
  1110  0059  3081               	movlw	high ((_n_ADDRESS_P0+4)| (0+32768))
  1111  005A  0085               	movwf	5
  1112  005B  0800               	movf	0,w	;code access
  1113  005C  00F6               	movwf	??_nrf24l01Init
  1114  005D  300F               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1115  005E  0084               	movwf	4
  1116  005F  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1117  0060  0085               	movwf	5
  1118  0061  0800               	movf	0,w	;code access
  1119  0062  00F7               	movwf	??_nrf24l01Init+1
  1120  0063  0877               	movf	??_nrf24l01Init+1,w
  1121  0064  00F1               	movwf	___bmul@multiplicand
  1122  0065  087A               	movf	_pipe,w
  1123  0066  20C1               	fcall	___bmul
  1124  0067  0776               	addwf	??_nrf24l01Init,w
  1125  0068  20E1               	fcall	_nrf24l01SPISend
  1126                           
  1127                           ;nrf24l01.c: 113: nrf24l01SPIEnd();
  1128  0069  210A               	fcall	_nrf24l01SPIEnd
  1129                           
  1130                           ;nrf24l01.c: 115: status.byte = nrf24l01SPISend(0b00100000 | 0x0A);
  1131  006A  302A               	movlw	42
  1132  006B  20E1               	fcall	_nrf24l01SPISend
  1133  006C  00F6               	movwf	??_nrf24l01Init
  1134  006D  0876               	movf	??_nrf24l01Init,w
  1135  006E  00FB               	movwf	_status
  1136                           
  1137                           ;nrf24l01.c: 116: nrf24l01SPISend(n_ADDRESS_P1[0]);
  1138  006F  30FD               	movlw	low (_n_ADDRESS_P1| (0+32768))
  1139  0070  0084               	movwf	4
  1140  0071  3080               	movlw	high (_n_ADDRESS_P1| (0+32768))
  1141  0072  0085               	movwf	5
  1142  0073  0800               	movf	0,w	;code access
  1143  0074  20E1               	fcall	_nrf24l01SPISend
  1144                           
  1145                           ;nrf24l01.c: 117: nrf24l01SPISend(n_ADDRESS_P1[1]);
  1146  0075  30FE               	movlw	low ((_n_ADDRESS_P1+1)| (0+32768))
  1147  0076  0084               	movwf	4
  1148  0077  3080               	movlw	high ((_n_ADDRESS_P1+1)| (0+32768))
  1149  0078  0085               	movwf	5
  1150  0079  0800               	movf	0,w	;code access
  1151  007A  20E1               	fcall	_nrf24l01SPISend
  1152                           
  1153                           ;nrf24l01.c: 118: nrf24l01SPISend(n_ADDRESS_P1[2]);
  1154  007B  30FF               	movlw	low ((_n_ADDRESS_P1+2)| (0+32768))
  1155  007C  0084               	movwf	4
  1156  007D  3080               	movlw	high ((_n_ADDRESS_P1+2)| (0+32768))
  1157  007E  0085               	movwf	5
  1158  007F  0800               	movf	0,w	;code access
  1159  0080  20E1               	fcall	_nrf24l01SPISend
  1160                           
  1161                           ;nrf24l01.c: 119: nrf24l01SPISend(n_ADDRESS_P1[3]);
  1162  0081  3000               	movlw	low ((_n_ADDRESS_P1+3)| (0+32768))
  1163  0082  0084               	movwf	4
  1164  0083  3081               	movlw	high ((_n_ADDRESS_P1+3)| (0+32768))
  1165  0084  0085               	movwf	5
  1166  0085  0800               	movf	0,w	;code access
  1167  0086  20E1               	fcall	_nrf24l01SPISend
  1168                           
  1169                           ;nrf24l01.c: 120: nrf24l01SPISend(n_ADDRESS_P1[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1170  0087  3001               	movlw	low ((_n_ADDRESS_P1+4)| (0+32768))
  1171  0088  0084               	movwf	4
  1172  0089  3081               	movlw	high ((_n_ADDRESS_P1+4)| (0+32768))
  1173  008A  0085               	movwf	5
  1174  008B  0800               	movf	0,w	;code access
  1175  008C  00F6               	movwf	??_nrf24l01Init
  1176  008D  300F               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1177  008E  0084               	movwf	4
  1178  008F  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1179  0090  0085               	movwf	5
  1180  0091  0800               	movf	0,w	;code access
  1181  0092  00F7               	movwf	??_nrf24l01Init+1
  1182  0093  0877               	movf	??_nrf24l01Init+1,w
  1183  0094  00F1               	movwf	___bmul@multiplicand
  1184  0095  087A               	movf	_pipe,w
  1185  0096  20C1               	fcall	___bmul
  1186  0097  0776               	addwf	??_nrf24l01Init,w
  1187  0098  20E1               	fcall	_nrf24l01SPISend
  1188                           
  1189                           ;nrf24l01.c: 122: nrf24l01SPIEnd();
  1190  0099  210A               	fcall	_nrf24l01SPIEnd
  1191                           
  1192                           ;nrf24l01.c: 125: nrf24l01SPIStart();
  1193  009A  2107               	fcall	_nrf24l01SPIStart
  1194                           
  1195                           ;nrf24l01.c: 126: nrf24l01SPISend(0b10100000);
  1196  009B  30A0               	movlw	160
  1197  009C  20E1               	fcall	_nrf24l01SPISend
  1198                           
  1199                           ;nrf24l01.c: 128: unsigned char payloadByte = 'A';
  1200  009D  3041               	movlw	65
  1201  009E  00F6               	movwf	??_nrf24l01Init
  1202  009F  0876               	movf	??_nrf24l01Init,w
  1203  00A0  00F9               	movwf	nrf24l01Init@payloadByte
  1204  00A1                     l748:	
  1205                           ;nrf24l01.c: 129: while (payloadByte < ('A' + 8) ){
  1206                           
  1207  00A1  3049               	movlw	73
  1208  00A2  0279               	subwf	nrf24l01Init@payloadByte,w
  1209  00A3  1803               	btfsc	3,0
  1210  00A4  28AC               	goto	l750
  1211                           
  1212                           ;nrf24l01.c: 130: nrf24l01SPISend(payloadByte);
  1213  00A5  0879               	movf	nrf24l01Init@payloadByte,w
  1214  00A6  20E1               	fcall	_nrf24l01SPISend
  1215                           
  1216                           ;nrf24l01.c: 131: payloadByte++;
  1217  00A7  3001               	movlw	1
  1218  00A8  00F6               	movwf	??_nrf24l01Init
  1219  00A9  0876               	movf	??_nrf24l01Init,w
  1220  00AA  07F9               	addwf	nrf24l01Init@payloadByte,f
  1221  00AB  28A1               	goto	l748
  1222  00AC                     l750:	
  1223                           
  1224                           ;nrf24l01.c: 132: }
  1225                           ;nrf24l01.c: 134: nrf24l01SPIEnd();
  1226  00AC  210A               	fcall	_nrf24l01SPIEnd
  1227                           
  1228                           ;nrf24l01.c: 137: PORTAbits.RA0 = 1;
  1229  00AD  0020               	movlb	0	; select bank0
  1230  00AE  140C               	bsf	12,0	;volatile
  1231                           
  1232                           ;nrf24l01.c: 138: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1233  00AF  300D               	movlw	13
  1234  00B0                     u117:	
  1235  00B0  0B89               	decfsz	9,f
  1236  00B1  28B0               	goto	u117
  1237  00B2  0000               	nop
  1238                           
  1239                           ;nrf24l01.c: 139: PORTAbits.RA0 = 0;
  1240  00B3  0020               	movlb	0	; select bank0
  1241  00B4  100C               	bcf	12,0	;volatile
  1242                           
  1243                           ;nrf24l01.c: 141: _delay((unsigned long)((500)*(16000000/4000.0)));
  1244  00B5  300B               	movlw	11
  1245  00B6  00F7               	movwf	??_nrf24l01Init+1
  1246  00B7  3026               	movlw	38
  1247  00B8  00F6               	movwf	??_nrf24l01Init
  1248  00B9  305E               	movlw	94
  1249  00BA                     u127:	
  1250  00BA  0B89               	decfsz	9,f
  1251  00BB  28BA               	goto	u127
  1252  00BC  0BF6               	decfsz	??_nrf24l01Init,f
  1253  00BD  28BA               	goto	u127
  1254  00BE  0BF7               	decfsz	??_nrf24l01Init+1,f
  1255  00BF  28BA               	goto	u127
  1256  00C0  0008               	return
  1257  00C1                     __end_of_nrf24l01Init:	
  1258                           
  1259                           	psect	text3
  1260  00D2                     __ptext3:	
  1261 ;; *************** function _nrf24l01Send *****************
  1262 ;; Defined at:
  1263 ;;		line 29 in file "nrf24l01.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  command         1    wreg     unsigned char 
  1266 ;;  data            1    3[COMMON] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  command         1    5[COMMON] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      unsigned char 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1
  1278 ;;      Params:         1       0       0
  1279 ;;      Locals:         1       0       0
  1280 ;;      Temps:          1       0       0
  1281 ;;      Totals:         3       0       0
  1282 ;;Total ram usage:        3 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    3
  1285 ;; This function calls:
  1286 ;;		_nrf24l01SPIEnd
  1287 ;;		_nrf24l01SPISend
  1288 ;;		_nrf24l01SPIStart
  1289 ;; This function is called by:
  1290 ;;		_nrf24l01Init
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _nrf24l01Send
  1296  00D2                     _nrf24l01Send:	
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  1300                           ;nrf24l01Send@command stored from wreg
  1301  00D2  00F5               	movwf	nrf24l01Send@command
  1302                           
  1303                           ;nrf24l01.c: 31: nrf24l01SPIStart();
  1304  00D3  2107               	fcall	_nrf24l01SPIStart
  1305                           
  1306                           ;nrf24l01.c: 33: status.byte = nrf24l01SPISend(command);
  1307  00D4  0875               	movf	nrf24l01Send@command,w
  1308  00D5  20E1               	fcall	_nrf24l01SPISend
  1309  00D6  00F4               	movwf	??_nrf24l01Send
  1310  00D7  0874               	movf	??_nrf24l01Send,w
  1311  00D8  00FB               	movwf	_status
  1312                           
  1313                           ;nrf24l01.c: 34: data = nrf24l01SPISend(data);
  1314  00D9  0873               	movf	nrf24l01Send@data,w
  1315  00DA  20E1               	fcall	_nrf24l01SPISend
  1316  00DB  00F4               	movwf	??_nrf24l01Send
  1317  00DC  0874               	movf	??_nrf24l01Send,w
  1318  00DD  00F3               	movwf	nrf24l01Send@data
  1319                           
  1320                           ;nrf24l01.c: 36: nrf24l01SPIEnd();
  1321  00DE  210A               	fcall	_nrf24l01SPIEnd
  1322                           
  1323                           ;nrf24l01.c: 38: return data;
  1324  00DF  0873               	movf	nrf24l01Send@data,w
  1325  00E0  0008               	return
  1326  00E1                     __end_of_nrf24l01Send:	
  1327                           
  1328                           	psect	text4
  1329  0107                     __ptext4:	
  1330 ;; *************** function _nrf24l01SPIStart *****************
  1331 ;; Defined at:
  1332 ;;		line 14 in file "nrf24l01.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		None
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1
  1346 ;;      Params:         0       0       0
  1347 ;;      Locals:         0       0       0
  1348 ;;      Temps:          0       0       0
  1349 ;;      Totals:         0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_nrf24l01Send
  1357 ;;		_nrf24l01Init
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _nrf24l01SPIStart
  1363  0107                     _nrf24l01SPIStart:	
  1364                           
  1365                           ;nrf24l01.c: 15: PORTAbits.RA1 = 0;
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _nrf24l01SPIStart: []
  1369  0107  0020               	movlb	0	; select bank0
  1370  0108  108C               	bcf	12,1	;volatile
  1371  0109  0008               	return
  1372  010A                     __end_of_nrf24l01SPIStart:	
  1373                           
  1374                           	psect	text5
  1375  00E1                     __ptext5:	
  1376 ;; *************** function _nrf24l01SPISend *****************
  1377 ;; Defined at:
  1378 ;;		line 18 in file "nrf24l01.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  data            1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  data            1    2[COMMON] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      unsigned char 
  1385 ;; Registers used:
  1386 ;;		wreg
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1
  1392 ;;      Params:         0       0       0
  1393 ;;      Locals:         1       0       0
  1394 ;;      Temps:          1       0       0
  1395 ;;      Totals:         2       0       0
  1396 ;;Total ram usage:        2 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    2
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_nrf24l01Send
  1403 ;;		_nrf24l01Init
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _nrf24l01SPISend
  1409  00E1                     _nrf24l01SPISend:	
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _nrf24l01SPISend: [wreg]
  1413                           ;nrf24l01SPISend@data stored from wreg
  1414  00E1  00F2               	movwf	nrf24l01SPISend@data
  1415                           
  1416                           ;nrf24l01.c: 19: SSP1BUF = data;
  1417  00E2  0872               	movf	nrf24l01SPISend@data,w
  1418  00E3  0024               	movlb	4	; select bank4
  1419  00E4  0091               	movwf	17	;volatile
  1420  00E5                     l65:	
  1421                           ;nrf24l01.c: 20: while (!SSP1STATbits.BF){ __nop(); }
  1422                           
  1423  00E5  0024               	movlb	4	; select bank4
  1424  00E6  1814               	btfsc	20,0	;volatile
  1425  00E7  28EA               	goto	l498
  1426  00E8  0000               	nop
  1427  00E9  28E5               	goto	l65
  1428  00EA                     l498:	
  1429                           
  1430                           ;nrf24l01.c: 21: data = SSP1BUF;
  1431  00EA  0811               	movf	17,w	;volatile
  1432  00EB  00F1               	movwf	??_nrf24l01SPISend
  1433  00EC  0871               	movf	??_nrf24l01SPISend,w
  1434  00ED  00F2               	movwf	nrf24l01SPISend@data
  1435                           
  1436                           ;nrf24l01.c: 22: return data;
  1437  00EE  0872               	movf	nrf24l01SPISend@data,w
  1438  00EF  0008               	return
  1439  00F0                     __end_of_nrf24l01SPISend:	
  1440                           
  1441                           	psect	text6
  1442  010A                     __ptext6:	
  1443 ;; *************** function _nrf24l01SPIEnd *****************
  1444 ;; Defined at:
  1445 ;;		line 25 in file "nrf24l01.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1
  1459 ;;      Params:         0       0       0
  1460 ;;      Locals:         0       0       0
  1461 ;;      Temps:          0       0       0
  1462 ;;      Totals:         0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_nrf24l01Send
  1470 ;;		_nrf24l01Init
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _nrf24l01SPIEnd
  1476  010A                     _nrf24l01SPIEnd:	
  1477                           
  1478                           ;nrf24l01.c: 26: PORTAbits.RA1 = 1;
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _nrf24l01SPIEnd: []
  1482  010A  0020               	movlb	0	; select bank0
  1483  010B  148C               	bsf	12,1	;volatile
  1484  010C  0008               	return
  1485  010D                     __end_of_nrf24l01SPIEnd:	
  1486                           
  1487                           	psect	text7
  1488  00C1                     __ptext7:	
  1489 ;; *************** function ___bmul *****************
  1490 ;; Defined at:
  1491 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  multiplier      1    wreg     unsigned char 
  1494 ;;  multiplicand    1    1[COMMON] unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  multiplier      1    4[COMMON] unsigned char 
  1497 ;;  product         1    3[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1
  1507 ;;      Params:         1       0       0
  1508 ;;      Locals:         2       0       0
  1509 ;;      Temps:          1       0       0
  1510 ;;      Totals:         4       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_nrf24l01Init
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function ___bmul
  1523  00C1                     ___bmul:	
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1527                           ;___bmul@multiplier stored from wreg
  1528  00C1  00F4               	movwf	___bmul@multiplier
  1529  00C2  01F3               	clrf	___bmul@product
  1530  00C3                     l692:	
  1531  00C3  1C74               	btfss	___bmul@multiplier,0
  1532  00C4  28C9               	goto	l696
  1533  00C5  0871               	movf	___bmul@multiplicand,w
  1534  00C6  00F2               	movwf	??___bmul
  1535  00C7  0872               	movf	??___bmul,w
  1536  00C8  07F3               	addwf	___bmul@product,f
  1537  00C9                     l696:	
  1538  00C9  1003               	clrc
  1539  00CA  0DF1               	rlf	___bmul@multiplicand,f
  1540  00CB  1003               	clrc
  1541  00CC  0CF4               	rrf	___bmul@multiplier,f
  1542  00CD  0874               	movf	___bmul@multiplier,w
  1543  00CE  1D03               	btfss	3,2
  1544  00CF  28C3               	goto	l692
  1545  00D0  0873               	movf	___bmul@product,w
  1546  00D1  0008               	return
  1547  00D2                     __end_of___bmul:	
  1548                           
  1549                           	psect	intentry
  1550  0004                     __pintentry:	
  1551 ;; *************** function _ISR *****************
  1552 ;; Defined at:
  1553 ;;		line 5 in file "main.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1
  1567 ;;      Params:         0       0       0
  1568 ;;      Locals:         0       0       0
  1569 ;;      Temps:          1       0       0
  1570 ;;      Totals:         1       0       0
  1571 ;;Total ram usage:        1 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    1
  1574 ;; This function calls:
  1575 ;;		_nrf24l01ISR
  1576 ;; This function is called by:
  1577 ;;		Interrupt level 1
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581  0004                     _ISR:	
  1582                           
  1583                           ;incstack = 0
  1584  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1585                           
  1586                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
  1587  0005  3180               	pagesel	$
  1588  0006  0020               	movlb	0	; select bank0
  1589  0007  087F               	movf	127,w
  1590  0008  00F0               	movwf	??_ISR
  1591                           
  1592                           ;main.c: 6: nrf24l01ISR();
  1593  0009  2110               	fcall	_nrf24l01ISR
  1594  000A  0870               	movf	??_ISR,w
  1595  000B  0020               	movlb	0	; select bank0
  1596  000C  00FF               	movwf	127
  1597  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1598  000E  0009               	retfie
  1599  000F                     __end_of_ISR:	
  1600                           
  1601                           	psect	text9
  1602  0110                     __ptext9:	
  1603 ;; *************** function _nrf24l01ISR *****************
  1604 ;; Defined at:
  1605 ;;		line 8 in file "nrf24l01.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		None
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1
  1619 ;;      Params:         0       0       0
  1620 ;;      Locals:         0       0       0
  1621 ;;      Temps:          0       0       0
  1622 ;;      Totals:         0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_ISR
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _nrf24l01ISR
  1634  0110                     _nrf24l01ISR:	
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _nrf24l01ISR: []
  1638  0110  0008               	return
  1639  0111                     __end_of_nrf24l01ISR:	
  1640  007E                     btemp	set	126	;btemp
  1641  007E                     int$flags	set	126
  1642  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_nrf24l01Init
    _loop->_nrf24l01Init
    _nrf24l01Init->_nrf24l01Send
    _nrf24l01Send->_nrf24l01SPISend

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     922
                               _loop
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     461
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         4     4      0     461
                                              6 COMMON     4     4      0
                             ___bmul
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (2) _nrf24l01Send                                         3     2      1     183
                                              3 COMMON     3     2      1
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPISend                                      2     2      0      30
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIEnd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     178
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (6) _nrf24l01ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _nrf24l01Init
       ___bmul
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01Send
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart
   _nrf24l01Init
     ___bmul
     _nrf24l01SPIEnd
     _nrf24l01SPISend
     _nrf24l01SPIStart
     _nrf24l01Send
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart

 _ISR (ROOT)
   _nrf24l01ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 03 13:20:12 2018

           ___bmul@product 0073                __CFG_CP$OFF 0000                         l65 00E5  
      nrf24l01Send@command 0075                __CFG_LVP$ON 0000                        l750 00AC  
                      l498 00EA                        l770 00FB                        l692 00C3  
                      l748 00A1                        l696 00C9                        u117 00B0  
                      u127 00BA                        _ISR 0004               __CFG_BORV$LO 0000  
                      wreg 0009                       ?_ISR 0070             ??_nrf24l01Init 0076  
           ??_nrf24l01Send 0074               __CFG_WRT$OFF 0000              __p_NVMEM_text 07E0  
                     _main 00F0                       _pipe 007A                       _loop 010D  
                     fsr0h 0005                       indf0 0000                       fsr0l 0004  
                     btemp 007E                       start 000F          ___bmul@multiplier 0074  
                    ??_ISR 0070                      ?_main 0070                      ?_loop 0070  
            __CFG_WDTE$OFF 0000                      _NVMEM 07E0              __CFG_PWRTE$ON 0000  
           __CFG_BOREN$OFF 0000                      status 0003                      wtemp0 007E  
         _nrf24l01SPIStart 0107             __CFG_MCLRE$OFF 0000            __initialization 0010  
             __end_of_main 00FD               __end_of_loop 010F             __CFG_LPBOR$OFF 0000  
                   ??_main 007A                     ??_loop 007A           ??_nrf24l01SPIEnd 0071  
 __size_of_nrf24l01SPISend 000F                     _PMADRH 0192                     _PMADRL 0191  
                   _PMDATH 0194                     _PMDATL 0193                     _PMCON1 0195  
                   _PMCON2 0196       __size_of_nrf24l01ISR 0001                     ___bmul 00C1  
           __CFG_STVREN$ON 0000       __end_of_nrf24l01Init 00C1       __end_of_nrf24l01Send 00E1  
                   _status 007B    __end_of__initialization 0012              __end_of_NVMEM 0800  
      ___bmul@multiplicand 0071             __pcstackCOMMON 0070          ??_nrf24l01SPISend 0071  
               __pmaintext 00F0                    ?___bmul 0071                 __pintentry 0004  
      nrf24l01SPISend@data 0072      __end_of_n_ADDRESS_MUL 0110   __end_of_nrf24l01SPIStart 010A  
                  _SSP1BUF 0211      __size_of_nrf24l01Init 00AC      __size_of_nrf24l01Send 000F  
          __size_of___bmul 0011                    __ptext1 010D                    __ptext2 0015  
                  __ptext3 00D2                    __ptext4 0107                    __ptext5 00E1  
                  __ptext6 010A                    __ptext7 00C1                    __ptext9 0110  
             __size_of_ISR 000B       end_of_initialization 0012               _nrf24l01Init 0015  
             _nrf24l01Send 00D2                  _PORTAbits 000C           __CFG_FOSC$INTOSC 0000  
                _TRISAbits 008C                  _TRISCbits 008E           nrf24l01Send@data 0073  
            ??_nrf24l01ISR 0070             __end_of___bmul 00D2        start_initialization 0010  
          _nrf24l01SPISend 00E1                __end_of_ISR 000F    __size_of_nrf24l01SPIEnd 0003  
                 ??___bmul 0072        __end_of_nrf24l01ISR 0111                __pbssCOMMON 007A  
                ___latbits 0000          ?_nrf24l01SPIStart 0070         ??_nrf24l01SPIStart 0071  
     __end_of_n_ADDRESS_P0 0107       __end_of_n_ADDRESS_P1 0102    __end_of_nrf24l01SPISend 00F0  
            _NVMEM_absaddr 07E0                _nrf24l01ISR 0110             _nrf24l01SPIEnd 010A  
         ?_nrf24l01SPISend 0070              _n_ADDRESS_MUL 010F    nrf24l01Init@payloadByte 0079  
   __end_of_nrf24l01SPIEnd 010D              __size_of_main 000D              __size_of_loop 0002  
                 int$flags 007E               _SSP1STATbits 0214                 _INTCONbits 000B  
          ?_nrf24l01SPIEnd 0070                   intlevel1 0000               _n_ADDRESS_P0 0102  
             _n_ADDRESS_P1 00FD                 _PMCON1bits 0195          __CFG_CLKOUTEN$OFF 0000  
       nrf24l01Init@config 0078                 _OSCCONbits 0099  __size_of_nrf24l01SPIStart 0003  
            __pstringtext1 00FD              __pstringtext2 0102              __pstringtext3 010F  
              _SSPCON1bits 0215              ?_nrf24l01Init 0070              ?_nrf24l01Send 0073  
             ?_nrf24l01ISR 0070  
