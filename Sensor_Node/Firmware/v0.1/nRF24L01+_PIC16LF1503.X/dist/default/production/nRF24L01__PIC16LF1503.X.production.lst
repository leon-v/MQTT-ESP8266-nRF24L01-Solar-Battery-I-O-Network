

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 18 13:20:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	_NVMEM_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16LF1503 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018E                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  020C                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0498                     	;# 
   147  0498                     	;# 
   148  0499                     	;# 
   149  049A                     	;# 
   150  049B                     	;# 
   151  049B                     	;# 
   152  049C                     	;# 
   153  049D                     	;# 
   154  049E                     	;# 
   155  049F                     	;# 
   156  0611                     	;# 
   157  0612                     	;# 
   158  0613                     	;# 
   159  0613                     	;# 
   160  0614                     	;# 
   161  0615                     	;# 
   162  0616                     	;# 
   163  0616                     	;# 
   164  0617                     	;# 
   165  0618                     	;# 
   166  0619                     	;# 
   167  0619                     	;# 
   168  061A                     	;# 
   169  061B                     	;# 
   170  061C                     	;# 
   171  061C                     	;# 
   172  0691                     	;# 
   173  0692                     	;# 
   174  0693                     	;# 
   175  0694                     	;# 
   176  0695                     	;# 
   177  0F0F                     	;# 
   178  0F10                     	;# 
   179  0F11                     	;# 
   180  0F12                     	;# 
   181  0F13                     	;# 
   182  0F14                     	;# 
   183  0F15                     	;# 
   184  0F16                     	;# 
   185  0F17                     	;# 
   186  0F18                     	;# 
   187  0F19                     	;# 
   188  0F1A                     	;# 
   189  0F1B                     	;# 
   190  0F1C                     	;# 
   191  0F1D                     	;# 
   192  0F1E                     	;# 
   193  0F1F                     	;# 
   194  0FE3                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE9                     	;# 
   201  0FEA                     	;# 
   202  0FEB                     	;# 
   203  0FED                     	;# 
   204  0FEE                     	;# 
   205  0FEF                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000E                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  008C                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010E                     	;# 
   250  0111                     	;# 
   251  0112                     	;# 
   252  0113                     	;# 
   253  0114                     	;# 
   254  0115                     	;# 
   255  0116                     	;# 
   256  0117                     	;# 
   257  0118                     	;# 
   258  0119                     	;# 
   259  011D                     	;# 
   260  018C                     	;# 
   261  018E                     	;# 
   262  0191                     	;# 
   263  0191                     	;# 
   264  0192                     	;# 
   265  0193                     	;# 
   266  0193                     	;# 
   267  0194                     	;# 
   268  0195                     	;# 
   269  0196                     	;# 
   270  020C                     	;# 
   271  0211                     	;# 
   272  0211                     	;# 
   273  0212                     	;# 
   274  0212                     	;# 
   275  0213                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0498                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  049E                     	;# 
   298  049F                     	;# 
   299  0611                     	;# 
   300  0612                     	;# 
   301  0613                     	;# 
   302  0613                     	;# 
   303  0614                     	;# 
   304  0615                     	;# 
   305  0616                     	;# 
   306  0616                     	;# 
   307  0617                     	;# 
   308  0618                     	;# 
   309  0619                     	;# 
   310  0619                     	;# 
   311  061A                     	;# 
   312  061B                     	;# 
   313  061C                     	;# 
   314  061C                     	;# 
   315  0691                     	;# 
   316  0692                     	;# 
   317  0693                     	;# 
   318  0694                     	;# 
   319  0695                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0FE3                     	;# 
   338  0FE4                     	;# 
   339  0FE5                     	;# 
   340  0FE6                     	;# 
   341  0FE7                     	;# 
   342  0FE8                     	;# 
   343  0FE9                     	;# 
   344  0FEA                     	;# 
   345  0FEB                     	;# 
   346  0FED                     	;# 
   347  0FEE                     	;# 
   348  0FEF                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000E                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  008C                     	;# 
   376  008E                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010E                     	;# 
   393  0111                     	;# 
   394  0112                     	;# 
   395  0113                     	;# 
   396  0114                     	;# 
   397  0115                     	;# 
   398  0116                     	;# 
   399  0117                     	;# 
   400  0118                     	;# 
   401  0119                     	;# 
   402  011D                     	;# 
   403  018C                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0194                     	;# 
   411  0195                     	;# 
   412  0196                     	;# 
   413  020C                     	;# 
   414  0211                     	;# 
   415  0211                     	;# 
   416  0212                     	;# 
   417  0212                     	;# 
   418  0213                     	;# 
   419  0213                     	;# 
   420  0214                     	;# 
   421  0214                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  0391                     	;# 
   430  0392                     	;# 
   431  0393                     	;# 
   432  0498                     	;# 
   433  0498                     	;# 
   434  0499                     	;# 
   435  049A                     	;# 
   436  049B                     	;# 
   437  049B                     	;# 
   438  049C                     	;# 
   439  049D                     	;# 
   440  049E                     	;# 
   441  049F                     	;# 
   442  0611                     	;# 
   443  0612                     	;# 
   444  0613                     	;# 
   445  0613                     	;# 
   446  0614                     	;# 
   447  0615                     	;# 
   448  0616                     	;# 
   449  0616                     	;# 
   450  0617                     	;# 
   451  0618                     	;# 
   452  0619                     	;# 
   453  0619                     	;# 
   454  061A                     	;# 
   455  061B                     	;# 
   456  061C                     	;# 
   457  061C                     	;# 
   458  0691                     	;# 
   459  0692                     	;# 
   460  0693                     	;# 
   461  0694                     	;# 
   462  0695                     	;# 
   463  0F0F                     	;# 
   464  0F10                     	;# 
   465  0F11                     	;# 
   466  0F12                     	;# 
   467  0F13                     	;# 
   468  0F14                     	;# 
   469  0F15                     	;# 
   470  0F16                     	;# 
   471  0F17                     	;# 
   472  0F18                     	;# 
   473  0F19                     	;# 
   474  0F1A                     	;# 
   475  0F1B                     	;# 
   476  0F1C                     	;# 
   477  0F1D                     	;# 
   478  0F1E                     	;# 
   479  0F1F                     	;# 
   480  0FE3                     	;# 
   481  0FE4                     	;# 
   482  0FE5                     	;# 
   483  0FE6                     	;# 
   484  0FE7                     	;# 
   485  0FE8                     	;# 
   486  0FE9                     	;# 
   487  0FEA                     	;# 
   488  0FEB                     	;# 
   489  0FED                     	;# 
   490  0FEE                     	;# 
   491  0FEF                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000E                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  008C                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011D                     	;# 
   546  018C                     	;# 
   547  018E                     	;# 
   548  0191                     	;# 
   549  0191                     	;# 
   550  0192                     	;# 
   551  0193                     	;# 
   552  0193                     	;# 
   553  0194                     	;# 
   554  0195                     	;# 
   555  0196                     	;# 
   556  020C                     	;# 
   557  0211                     	;# 
   558  0211                     	;# 
   559  0212                     	;# 
   560  0212                     	;# 
   561  0213                     	;# 
   562  0213                     	;# 
   563  0214                     	;# 
   564  0214                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0216                     	;# 
   569  0216                     	;# 
   570  0217                     	;# 
   571  0217                     	;# 
   572  0391                     	;# 
   573  0392                     	;# 
   574  0393                     	;# 
   575  0498                     	;# 
   576  0498                     	;# 
   577  0499                     	;# 
   578  049A                     	;# 
   579  049B                     	;# 
   580  049B                     	;# 
   581  049C                     	;# 
   582  049D                     	;# 
   583  049E                     	;# 
   584  049F                     	;# 
   585  0611                     	;# 
   586  0612                     	;# 
   587  0613                     	;# 
   588  0613                     	;# 
   589  0614                     	;# 
   590  0615                     	;# 
   591  0616                     	;# 
   592  0616                     	;# 
   593  0617                     	;# 
   594  0618                     	;# 
   595  0619                     	;# 
   596  0619                     	;# 
   597  061A                     	;# 
   598  061B                     	;# 
   599  061C                     	;# 
   600  061C                     	;# 
   601  0691                     	;# 
   602  0692                     	;# 
   603  0693                     	;# 
   604  0694                     	;# 
   605  0695                     	;# 
   606  0F0F                     	;# 
   607  0F10                     	;# 
   608  0F11                     	;# 
   609  0F12                     	;# 
   610  0F13                     	;# 
   611  0F14                     	;# 
   612  0F15                     	;# 
   613  0F16                     	;# 
   614  0F17                     	;# 
   615  0F18                     	;# 
   616  0F19                     	;# 
   617  0F1A                     	;# 
   618  0F1B                     	;# 
   619  0F1C                     	;# 
   620  0F1D                     	;# 
   621  0F1E                     	;# 
   622  0F1F                     	;# 
   623  0FE3                     	;# 
   624  0FE4                     	;# 
   625  0FE5                     	;# 
   626  0FE6                     	;# 
   627  0FE7                     	;# 
   628  0FE8                     	;# 
   629  0FE9                     	;# 
   630  0FEA                     	;# 
   631  0FEB                     	;# 
   632  0FED                     	;# 
   633  0FEE                     	;# 
   634  0FEF                     	;# 
   635                           
   636                           	psect	idataCOMMON
   637  013E                     __pidataCOMMON:	
   638                           
   639                           ;initializer for _mode
   640  013E  3401               	retlw	1
   641  07E0                     _NVMEM_absaddr	set	2016
   642                           
   643                           	psect	stringtext1
   644  0131                     __pstringtext1:	
   645  0131                     _n_ADDRESS_P0:	
   646  0131  34AD               	retlw	173
   647  0132  3487               	retlw	135
   648  0133  3466               	retlw	102
   649  0134  34BC               	retlw	188
   650  0135  34BB               	retlw	187
   651  0136                     __end_of_n_ADDRESS_P0:	
   652                           
   653                           	psect	stringtext2
   654  013F                     __pstringtext2:	
   655  013F                     _n_ADDRESS_MUL:	
   656  013F  3421               	retlw	33
   657  0140                     __end_of_n_ADDRESS_MUL:	
   658  07E0                     _NVMEM_absaddr	set	2016
   659                           
   660                           	psect	_NVMEM_text
   661  07E0                     __p_NVMEM_text:	
   662  07E0                     _NVMEM:	
   663  07E0  3455               	retlw	85
   664  07E1  346E               	retlw	110
   665  07E2  3463               	retlw	99
   666  07E3  346F               	retlw	111
   667  07E4  346E               	retlw	110
   668  07E5  3466               	retlw	102
   669  07E6  3469               	retlw	105
   670  07E7  3467               	retlw	103
   671  07E8  3475               	retlw	117
   672  07E9  3472               	retlw	114
   673  07EA  3465               	retlw	101
   674  07EB  3464               	retlw	100
   675  07EC  3400               	retlw	0
   676  07ED  3400               	retlw	0
   677  07EE  3400               	retlw	0
   678  07EF  3400               	retlw	0
   679  07F0  3400               	retlw	0
   680  07F1  3400               	retlw	0
   681  07F2  3400               	retlw	0
   682  07F3  3400               	retlw	0
   683  07F4  3400               	retlw	0
   684  07F5  3400               	retlw	0
   685  07F6  3400               	retlw	0
   686  07F7  3400               	retlw	0
   687  07F8  3400               	retlw	0
   688  07F9  3400               	retlw	0
   689  07FA  3400               	retlw	0
   690  07FB  3400               	retlw	0
   691  07FC  3400               	retlw	0
   692  07FD  3400               	retlw	0
   693  07FE  3400               	retlw	0
   694  07FF  3400               	retlw	0
   695  0800                     __end_of_NVMEM:	
   696  000C                     _PORTAbits	set	12
   697  000B                     _INTCONbits	set	11
   698  008E                     _TRISCbits	set	142
   699  008C                     _TRISAbits	set	140
   700  0099                     _OSCCONbits	set	153
   701  0194                     _PMDATH	set	404
   702  0193                     _PMDATL	set	403
   703  0196                     _PMCON2	set	406
   704  0195                     _PMCON1bits	set	405
   705  0192                     _PMADRH	set	402
   706  0191                     _PMADRL	set	401
   707  0195                     _PMCON1	set	405
   708  018E                     _ANSELC	set	398
   709  018C                     _ANSELA	set	396
   710  0215                     _SSPCON1bits	set	533
   711  0214                     _SSP1STATbits	set	532
   712  0211                     _SSP1BUF	set	529
   713                           
   714                           ; #config settings
   715  0000                     
   716                           	psect	cinit
   717  0010                     start_initialization:	
   718  0010                     __initialization:	
   719                           
   720                           ; Initialize objects allocated to COMMON
   721  0010  213E               	fcall	__pidataCOMMON	;fetch initializer
   722  0011  00FA               	movwf	__pdataCOMMON& (0+127)
   723                           
   724                           ; Clear objects allocated to BANK0
   725  0012  01A8               	clrf	__pbssBANK0& (0+127)
   726  0013                     end_of_initialization:	
   727                           ;End of C runtime variable initialization code
   728                           
   729  0013                     __end_of__initialization:	
   730  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   731  0014  0020               	movlb	0
   732  0015  2904               	ljmp	_main	;jump to C main() function
   733                           
   734                           	psect	dataCOMMON
   735  007A                     __pdataCOMMON:	
   736  007A                     _mode:	
   737  007A                     	ds	1
   738                           
   739                           	psect	bssBANK0
   740  0028                     __pbssBANK0:	
   741  0028                     _status:	
   742  0028                     	ds	1
   743                           
   744                           	psect	cstackCOMMON
   745  0070                     __pcstackCOMMON:	
   746  0070                     ?_nrf24l01ISR:	
   747  0070                     ??_nrf24l01ISR:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_nrf24l01SendStart:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_nrf24l01SendByte:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_nrf24l01SendEnd:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_nrf24l01Init:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_ISR:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ??_ISR:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_loop:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_main:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_nrf24l01SPIStart:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_nrf24l01SPISend:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_nrf24l01SPIEnd:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_nrf24l01SetTransmitMode:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_nrf24l01InitRegisters:	
   787                           ; 1 bytes @ 0x0
   788                           
   789                           
   790                           ; 1 bytes @ 0x0
   791  0070                     	ds	1
   792  0071                     ??_nrf24l01SendEnd:	
   793  0071                     ??_nrf24l01SPIStart:	
   794                           ; 1 bytes @ 0x1
   795                           
   796  0071                     ??_nrf24l01SPISend:	
   797                           ; 1 bytes @ 0x1
   798                           
   799  0071                     ??_nrf24l01SPIEnd:	
   800                           ; 1 bytes @ 0x1
   801                           
   802  0071                     nrf24l01SPISend@data:	
   803                           ; 1 bytes @ 0x1
   804                           
   805                           
   806                           ; 1 bytes @ 0x1
   807  0071                     	ds	1
   808  0072                     ??_nrf24l01SendByte:	
   809  0072                     ?_nrf24l01Send:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0072                     nrf24l01Send@data:	
   813                           ; 1 bytes @ 0x2
   814                           
   815  0072                     nrf24l01SendByte@payloadByte:	
   816                           ; 1 bytes @ 0x2
   817                           
   818                           
   819                           ; 1 bytes @ 0x2
   820  0072                     	ds	1
   821  0073                     ??_nrf24l01Send:	
   822                           
   823                           ; 1 bytes @ 0x3
   824  0073                     	ds	1
   825  0074                     nrf24l01Send@command:	
   826                           
   827                           ; 1 bytes @ 0x4
   828  0074                     	ds	1
   829  0075                     ??_nrf24l01SetTransmitMode:	
   830  0075                     ??_nrf24l01InitRegisters:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 1 bytes @ 0x5
   835  0075                     	ds	1
   836  0076                     ??_nrf24l01Init:	
   837  0076                     nrf24l01SetTransmitMode@config:	
   838                           ; 1 bytes @ 0x6
   839                           
   840                           
   841                           ; 1 bytes @ 0x6
   842  0076                     	ds	1
   843  0077                     ??_nrf24l01SendStart:	
   844  0077                     ??_loop:	
   845                           ; 1 bytes @ 0x7
   846                           
   847                           
   848                           ; 1 bytes @ 0x7
   849  0077                     	ds	2
   850  0079                     loop@payloadByte:	
   851                           
   852                           ; 1 bytes @ 0x9
   853  0079                     	ds	1
   854  007A                     ??_main:	
   855                           
   856                           	psect	cstackBANK0
   857  0020                     __pcstackBANK0:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  0020                     nrf24l01InitRegisters@setupAW:	
   861                           
   862                           ; 1 bytes @ 0x0
   863  0020                     	ds	1
   864  0021                     nrf24l01InitRegisters@setupRetries:	
   865                           
   866                           ; 1 bytes @ 0x1
   867  0021                     	ds	1
   868  0022                     nrf24l01InitRegisters@feature:	
   869                           
   870                           ; 1 bytes @ 0x2
   871  0022                     	ds	1
   872  0023                     nrf24l01InitRegisters@rfSetup:	
   873                           
   874                           ; 1 bytes @ 0x3
   875  0023                     	ds	1
   876  0024                     nrf24l01InitRegisters@config:	
   877                           
   878                           ; 1 bytes @ 0x4
   879  0024                     	ds	1
   880  0025                     nrf24l01InitRegisters@enRXAddr:	
   881                           
   882                           ; 1 bytes @ 0x5
   883  0025                     	ds	1
   884  0026                     nrf24l01InitRegisters@enAA:	
   885                           
   886                           ; 1 bytes @ 0x6
   887  0026                     	ds	1
   888  0027                     nrf24l01InitRegisters@DynPD:	
   889                           
   890                           ; 1 bytes @ 0x7
   891  0027                     	ds	1
   892                           
   893                           	psect	maintext
   894  0104                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 36 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : B1F/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1
   914 ;;      Params:         0       0       0
   915 ;;      Locals:         0       0       0
   916 ;;      Temps:          0       0       0
   917 ;;      Totals:         0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels required when called:    7
   920 ;; This function calls:
   921 ;;		_loop
   922 ;;		_nrf24l01Init
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _main
   930  0104                     _main:	
   931                           
   932                           ;main.c: 38: INTCONbits.GIE = 0;
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   936  0104  138B               	bcf	11,7	;volatile
   937                           
   938                           ;main.c: 39: INTCONbits.PEIE = 1;
   939  0105  170B               	bsf	11,6	;volatile
   940                           
   941                           ;main.c: 41: OSCCONbits.IRCF = 0b1111;
   942  0106  3078               	movlw	120
   943  0107  0021               	movlb	1	; select bank1
   944  0108  0499               	iorwf	25,f	;volatile
   945                           
   946                           ;main.c: 42: OSCCONbits.SCS = 0b10;
   947  0109  0819               	movf	25,w	;volatile
   948  010A  39FC               	andlw	-4
   949  010B  3802               	iorlw	2
   950  010C  0099               	movwf	25	;volatile
   951                           
   952                           ;main.c: 44: nrf24l01Init();
   953  010D  2094               	fcall	_nrf24l01Init
   954                           
   955                           ;main.c: 46: INTCONbits.GIE = 1;
   956  010E  178B               	bsf	11,7	;volatile
   957  010F                     l991:	
   958                           ;main.c: 48: while(1){
   959                           
   960                           
   961                           ;main.c: 49: loop();
   962  010F  20BB               	fcall	_loop
   963  0110  290F               	goto	l991
   964  0111                     __end_of_main:	
   965                           ;main.c: 50: }
   966                           ;main.c: 52: return;
   967                           
   968                           
   969                           	psect	text1
   970  0094                     __ptext1:	
   971 ;; *************** function _nrf24l01Init *****************
   972 ;; Defined at:
   973 ;;		line 180 in file "nrf24l01.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1
   987 ;;      Params:         0       0       0
   988 ;;      Locals:         0       0       0
   989 ;;      Temps:          1       0       0
   990 ;;      Totals:         1       0       0
   991 ;;Total ram usage:        1 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		_nrf24l01InitRegisters
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _nrf24l01Init
  1003  0094                     _nrf24l01Init:	
  1004                           
  1005                           ;nrf24l01.c: 182: TRISAbits.TRISA0 = 0;
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  1009  0094  0021               	movlb	1	; select bank1
  1010  0095  100C               	bcf	12,0	;volatile
  1011                           
  1012                           ;nrf24l01.c: 186: ANSELA = 0x00;
  1013  0096  0023               	movlb	3	; select bank3
  1014  0097  018C               	clrf	12	;volatile
  1015                           
  1016                           ;nrf24l01.c: 187: ANSELC = 0x00;
  1017  0098  018E               	clrf	14	;volatile
  1018                           
  1019                           ;nrf24l01.c: 189: TRISAbits.TRISA1 = 0;
  1020  0099  0021               	movlb	1	; select bank1
  1021  009A  108C               	bcf	12,1	;volatile
  1022                           
  1023                           ;nrf24l01.c: 191: TRISCbits.TRISC1 = 1;
  1024  009B  148E               	bsf	14,1	;volatile
  1025                           
  1026                           ;nrf24l01.c: 192: TRISCbits.TRISC2 = 0;
  1027  009C  110E               	bcf	14,2	;volatile
  1028                           
  1029                           ;nrf24l01.c: 193: TRISCbits.TRISC0 = 0;
  1030  009D  100E               	bcf	14,0	;volatile
  1031                           
  1032                           ;nrf24l01.c: 195: SSPCON1bits.SSPEN = 0;
  1033  009E  0024               	movlb	4	; select bank4
  1034  009F  1295               	bcf	21,5	;volatile
  1035                           
  1036                           ;nrf24l01.c: 196: SSPCON1bits.CKP = 0;
  1037  00A0  1215               	bcf	21,4	;volatile
  1038                           
  1039                           ;nrf24l01.c: 197: SSP1STATbits.CKE = 1;
  1040  00A1  1714               	bsf	20,6	;volatile
  1041                           
  1042                           ;nrf24l01.c: 198: SSPCON1bits.SSPM = 0b0000;
  1043  00A2  30F0               	movlw	-16
  1044  00A3  0595               	andwf	21,f	;volatile
  1045                           
  1046                           ;nrf24l01.c: 200: SSPCON1bits.SSPEN = 1;
  1047  00A4  1695               	bsf	21,5	;volatile
  1048                           
  1049                           ;nrf24l01.c: 202: PORTAbits.RA0 = 0;
  1050  00A5  0020               	movlb	0	; select bank0
  1051  00A6  100C               	bcf	12,0	;volatile
  1052                           
  1053                           ;nrf24l01.c: 204: _delay((unsigned long)((11)*(16000000/4000.0)));
  1054  00A7  303A               	movlw	58
  1055  00A8  00F6               	movwf	??_nrf24l01Init
  1056  00A9  3023               	movlw	35
  1057  00AA                     u97:	
  1058  00AA  0B89               	decfsz	9,f
  1059  00AB  28AA               	goto	u97
  1060  00AC  0BF6               	decfsz	??_nrf24l01Init,f
  1061  00AD  28AA               	goto	u97
  1062  00AE  0000               	nop
  1063                           
  1064                           ;nrf24l01.c: 206: nrf24l01InitRegisters();
  1065  00AF  2016               	fcall	_nrf24l01InitRegisters
  1066                           
  1067                           ;nrf24l01.c: 208: _delay((unsigned long)((2)*(16000000/4000.0)));
  1068  00B0  300B               	movlw	11
  1069  00B1  00F6               	movwf	??_nrf24l01Init
  1070  00B2  3062               	movlw	98
  1071  00B3                     u107:	
  1072  00B3  0B89               	decfsz	9,f
  1073  00B4  28B3               	goto	u107
  1074  00B5  0BF6               	decfsz	??_nrf24l01Init,f
  1075  00B6  28B3               	goto	u107
  1076  00B7  3200               	nop2
  1077                           
  1078                           ;nrf24l01.c: 210: PORTAbits.RA0 = 1;
  1079  00B8  0020               	movlb	0	; select bank0
  1080  00B9  140C               	bsf	12,0	;volatile
  1081  00BA  0008               	return
  1082  00BB                     __end_of_nrf24l01Init:	
  1083                           
  1084                           	psect	text2
  1085  0016                     __ptext2:	
  1086 ;; *************** function _nrf24l01InitRegisters *****************
  1087 ;; Defined at:
  1088 ;;		line 97 in file "nrf24l01.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  DynPD           1    7[BANK0 ] struct .
  1093 ;;  enAA            1    6[BANK0 ] struct .
  1094 ;;  enRXAddr        1    5[BANK0 ] struct .
  1095 ;;  config          1    4[BANK0 ] struct .
  1096 ;;  rfSetup         1    3[BANK0 ] struct .
  1097 ;;  feature         1    2[BANK0 ] struct .
  1098 ;;  setupRetries    1    1[BANK0 ] struct .
  1099 ;;  setupAW         1    0[BANK0 ] struct .
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1
  1109 ;;      Params:         0       0       0
  1110 ;;      Locals:         0       8       0
  1111 ;;      Temps:          1       0       0
  1112 ;;      Totals:         1       8       0
  1113 ;;Total ram usage:        9 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    4
  1116 ;; This function calls:
  1117 ;;		_nrf24l01Send
  1118 ;; This function is called by:
  1119 ;;		_nrf24l01Init
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _nrf24l01InitRegisters
  1125  0016                     _nrf24l01InitRegisters:	
  1126                           
  1127                           ;nrf24l01.c: 99: n_SETUP_AW_t setupAW;
  1128                           ;nrf24l01.c: 100: setupAW.byte = 0x00;
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  1132  0016  0020               	movlb	0	; select bank0
  1133  0017  01A0               	clrf	nrf24l01InitRegisters@setupAW
  1134                           
  1135                           ;nrf24l01.c: 101: setupAW.AW = 3;
  1136  0018  3003               	movlw	3
  1137  0019  04A0               	iorwf	nrf24l01InitRegisters@setupAW,f
  1138                           
  1139                           ;nrf24l01.c: 102: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  1140  001A  0820               	movf	nrf24l01InitRegisters@setupAW,w
  1141  001B  00F5               	movwf	??_nrf24l01InitRegisters
  1142  001C  0875               	movf	??_nrf24l01InitRegisters,w
  1143  001D  00F2               	movwf	nrf24l01Send@data
  1144  001E  3022               	movlw	34
  1145  001F  20F4               	fcall	_nrf24l01Send
  1146                           
  1147                           ;nrf24l01.c: 105: n_SETUP_RETR_t setupRetries;
  1148                           ;nrf24l01.c: 106: setupRetries.ARD = 15;
  1149  0020  30F0               	movlw	240
  1150  0021  0020               	movlb	0	; select bank0
  1151  0022  04A1               	iorwf	nrf24l01InitRegisters@setupRetries,f
  1152                           
  1153                           ;nrf24l01.c: 107: setupRetries.ARC = 15;
  1154  0023  300F               	movlw	15
  1155  0024  04A1               	iorwf	nrf24l01InitRegisters@setupRetries,f
  1156                           
  1157                           ;nrf24l01.c: 108: nrf24l01Send(0b00100000 | 0x04, setupRetries.byte);
  1158  0025  0821               	movf	nrf24l01InitRegisters@setupRetries,w
  1159  0026  00F5               	movwf	??_nrf24l01InitRegisters
  1160  0027  0875               	movf	??_nrf24l01InitRegisters,w
  1161  0028  00F2               	movwf	nrf24l01Send@data
  1162  0029  3024               	movlw	36
  1163  002A  20F4               	fcall	_nrf24l01Send
  1164                           
  1165                           ;nrf24l01.c: 116: n_RF_SETUP_t rfSetup;
  1166                           ;nrf24l01.c: 117: rfSetup.RF_DR_LOW = 0;
  1167  002B  0020               	movlb	0	; select bank0
  1168  002C  12A3               	bcf	nrf24l01InitRegisters@rfSetup,5
  1169                           
  1170                           ;nrf24l01.c: 118: rfSetup.RF_DR_HIGH = 1;
  1171  002D  15A3               	bsf	nrf24l01InitRegisters@rfSetup,3
  1172                           
  1173                           ;nrf24l01.c: 119: rfSetup.RF_PWR = 3;
  1174  002E  3006               	movlw	6
  1175  002F  04A3               	iorwf	nrf24l01InitRegisters@rfSetup,f
  1176                           
  1177                           ;nrf24l01.c: 120: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  1178  0030  0823               	movf	nrf24l01InitRegisters@rfSetup,w
  1179  0031  00F5               	movwf	??_nrf24l01InitRegisters
  1180  0032  0875               	movf	??_nrf24l01InitRegisters,w
  1181  0033  00F2               	movwf	nrf24l01Send@data
  1182  0034  3026               	movlw	38
  1183  0035  20F4               	fcall	_nrf24l01Send
  1184                           
  1185                           ;nrf24l01.c: 123: n_CONFIG_t config;
  1186                           ;nrf24l01.c: 124: config.PRIM_RX = 1;
  1187  0036  0020               	movlb	0	; select bank0
  1188  0037  1424               	bsf	nrf24l01InitRegisters@config,0
  1189                           
  1190                           ;nrf24l01.c: 125: config.EN_CRC = 1;
  1191  0038  15A4               	bsf	nrf24l01InitRegisters@config,3
  1192                           
  1193                           ;nrf24l01.c: 126: config.CRCO = 1;
  1194  0039  1524               	bsf	nrf24l01InitRegisters@config,2
  1195                           
  1196                           ;nrf24l01.c: 127: config.PWR_UP = 1;
  1197  003A  14A4               	bsf	nrf24l01InitRegisters@config,1
  1198                           
  1199                           ;nrf24l01.c: 128: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1200  003B  0824               	movf	nrf24l01InitRegisters@config,w
  1201  003C  00F5               	movwf	??_nrf24l01InitRegisters
  1202  003D  0875               	movf	??_nrf24l01InitRegisters,w
  1203  003E  00F2               	movwf	nrf24l01Send@data
  1204  003F  3020               	movlw	32
  1205  0040  20F4               	fcall	_nrf24l01Send
  1206                           
  1207                           ;nrf24l01.c: 131: n_EN_RXADDR_t enRXAddr;
  1208                           ;nrf24l01.c: 132: enRXAddr.ERX_P0 = 1;
  1209  0041  0020               	movlb	0	; select bank0
  1210  0042  1425               	bsf	nrf24l01InitRegisters@enRXAddr,0
  1211                           
  1212                           ;nrf24l01.c: 133: enRXAddr.ERX_P1 = 1;
  1213  0043  14A5               	bsf	nrf24l01InitRegisters@enRXAddr,1
  1214                           
  1215                           ;nrf24l01.c: 134: enRXAddr.ERX_P2 = 1;
  1216  0044  1525               	bsf	nrf24l01InitRegisters@enRXAddr,2
  1217                           
  1218                           ;nrf24l01.c: 135: enRXAddr.ERX_P3 = 1;
  1219  0045  15A5               	bsf	nrf24l01InitRegisters@enRXAddr,3
  1220                           
  1221                           ;nrf24l01.c: 136: enRXAddr.ERX_P4 = 1;
  1222  0046  1625               	bsf	nrf24l01InitRegisters@enRXAddr,4
  1223                           
  1224                           ;nrf24l01.c: 137: enRXAddr.ERX_P5 = 1;
  1225  0047  16A5               	bsf	nrf24l01InitRegisters@enRXAddr,5
  1226                           
  1227                           ;nrf24l01.c: 138: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  1228  0048  0825               	movf	nrf24l01InitRegisters@enRXAddr,w
  1229  0049  00F5               	movwf	??_nrf24l01InitRegisters
  1230  004A  0875               	movf	??_nrf24l01InitRegisters,w
  1231  004B  00F2               	movwf	nrf24l01Send@data
  1232  004C  3022               	movlw	34
  1233  004D  20F4               	fcall	_nrf24l01Send
  1234                           
  1235                           ;nrf24l01.c: 141: n_EN_AA_t enAA;
  1236                           ;nrf24l01.c: 142: enAA.byte = nrf24l01Send(0b00000000 | 0x01, 0);
  1237  004E  01F2               	clrf	nrf24l01Send@data
  1238  004F  3001               	movlw	1
  1239  0050  20F4               	fcall	_nrf24l01Send
  1240  0051  00F5               	movwf	??_nrf24l01InitRegisters
  1241  0052  0875               	movf	??_nrf24l01InitRegisters,w
  1242  0053  0020               	movlb	0	; select bank0
  1243  0054  00A6               	movwf	nrf24l01InitRegisters@enAA
  1244                           
  1245                           ;nrf24l01.c: 143: enAA.ENAA_P0 = 0;
  1246  0055  1026               	bcf	nrf24l01InitRegisters@enAA,0
  1247                           
  1248                           ;nrf24l01.c: 144: enAA.ENAA_P1 = 0;
  1249  0056  10A6               	bcf	nrf24l01InitRegisters@enAA,1
  1250                           
  1251                           ;nrf24l01.c: 145: enAA.ENAA_P2 = 0;
  1252  0057  1126               	bcf	nrf24l01InitRegisters@enAA,2
  1253                           
  1254                           ;nrf24l01.c: 146: enAA.ENAA_P3 = 0;
  1255  0058  11A6               	bcf	nrf24l01InitRegisters@enAA,3
  1256                           
  1257                           ;nrf24l01.c: 147: enAA.ENAA_P4 = 0;
  1258  0059  1226               	bcf	nrf24l01InitRegisters@enAA,4
  1259                           
  1260                           ;nrf24l01.c: 148: enAA.ENAA_P5 = 0;
  1261  005A  12A6               	bcf	nrf24l01InitRegisters@enAA,5
  1262                           
  1263                           ;nrf24l01.c: 149: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  1264  005B  0826               	movf	nrf24l01InitRegisters@enAA,w
  1265  005C  00F5               	movwf	??_nrf24l01InitRegisters
  1266  005D  0875               	movf	??_nrf24l01InitRegisters,w
  1267  005E  00F2               	movwf	nrf24l01Send@data
  1268  005F  3021               	movlw	33
  1269  0060  20F4               	fcall	_nrf24l01Send
  1270                           
  1271                           ;nrf24l01.c: 153: n_FEATURE_t feature;
  1272                           ;nrf24l01.c: 154: feature.byte = nrf24l01Send(0b00000000 | 0x1D, 0);
  1273  0061  01F2               	clrf	nrf24l01Send@data
  1274  0062  301D               	movlw	29
  1275  0063  20F4               	fcall	_nrf24l01Send
  1276  0064  00F5               	movwf	??_nrf24l01InitRegisters
  1277  0065  0875               	movf	??_nrf24l01InitRegisters,w
  1278  0066  0020               	movlb	0	; select bank0
  1279  0067  00A2               	movwf	nrf24l01InitRegisters@feature
  1280                           
  1281                           ;nrf24l01.c: 155: feature.EN_DPL = 1;
  1282  0068  1522               	bsf	nrf24l01InitRegisters@feature,2
  1283                           
  1284                           ;nrf24l01.c: 156: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  1285  0069  0822               	movf	nrf24l01InitRegisters@feature,w
  1286  006A  00F5               	movwf	??_nrf24l01InitRegisters
  1287  006B  0875               	movf	??_nrf24l01InitRegisters,w
  1288  006C  00F2               	movwf	nrf24l01Send@data
  1289  006D  303D               	movlw	61
  1290  006E  20F4               	fcall	_nrf24l01Send
  1291                           
  1292                           ;nrf24l01.c: 158: n_DYNPD_t DynPD;
  1293                           ;nrf24l01.c: 159: DynPD.byte = nrf24l01Send(0b00000000 | 0x1C, 0);
  1294  006F  01F2               	clrf	nrf24l01Send@data
  1295  0070  301C               	movlw	28
  1296  0071  20F4               	fcall	_nrf24l01Send
  1297  0072  00F5               	movwf	??_nrf24l01InitRegisters
  1298  0073  0875               	movf	??_nrf24l01InitRegisters,w
  1299  0074  0020               	movlb	0	; select bank0
  1300  0075  00A7               	movwf	nrf24l01InitRegisters@DynPD
  1301                           
  1302                           ;nrf24l01.c: 160: DynPD.DPL_P0 = 1;
  1303  0076  1427               	bsf	nrf24l01InitRegisters@DynPD,0
  1304                           
  1305                           ;nrf24l01.c: 161: DynPD.DPL_P1 = 1;
  1306  0077  14A7               	bsf	nrf24l01InitRegisters@DynPD,1
  1307                           
  1308                           ;nrf24l01.c: 162: DynPD.DPL_P2 = 1;
  1309  0078  1527               	bsf	nrf24l01InitRegisters@DynPD,2
  1310                           
  1311                           ;nrf24l01.c: 163: DynPD.DPL_P3 = 1;
  1312  0079  15A7               	bsf	nrf24l01InitRegisters@DynPD,3
  1313                           
  1314                           ;nrf24l01.c: 164: DynPD.DPL_P4 = 1;
  1315  007A  1627               	bsf	nrf24l01InitRegisters@DynPD,4
  1316                           
  1317                           ;nrf24l01.c: 165: DynPD.DPL_P5 = 1;
  1318  007B  16A7               	bsf	nrf24l01InitRegisters@DynPD,5
  1319                           
  1320                           ;nrf24l01.c: 166: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  1321  007C  0827               	movf	nrf24l01InitRegisters@DynPD,w
  1322  007D  00F5               	movwf	??_nrf24l01InitRegisters
  1323  007E  0875               	movf	??_nrf24l01InitRegisters,w
  1324  007F  00F2               	movwf	nrf24l01Send@data
  1325  0080  303C               	movlw	60
  1326  0081  20F4               	fcall	_nrf24l01Send
  1327                           
  1328                           ;nrf24l01.c: 169: status.byte = 0x00;
  1329  0082  0020               	movlb	0	; select bank0
  1330  0083  01A8               	clrf	_status
  1331                           
  1332                           ;nrf24l01.c: 170: status.RX_DR = 1;
  1333  0084  1728               	bsf	_status,6
  1334                           
  1335                           ;nrf24l01.c: 171: status.TX_DS = 1;
  1336  0085  16A8               	bsf	_status,5
  1337                           
  1338                           ;nrf24l01.c: 172: status.MAX_RT = 1;
  1339  0086  1628               	bsf	_status,4
  1340                           
  1341                           ;nrf24l01.c: 173: nrf24l01Send(0b00100000 | 0x07, status.byte);
  1342  0087  0828               	movf	_status,w
  1343  0088  00F5               	movwf	??_nrf24l01InitRegisters
  1344  0089  0875               	movf	??_nrf24l01InitRegisters,w
  1345  008A  00F2               	movwf	nrf24l01Send@data
  1346  008B  3027               	movlw	39
  1347  008C  20F4               	fcall	_nrf24l01Send
  1348                           
  1349                           ;nrf24l01.c: 176: nrf24l01Send(0b11100001, 0);
  1350  008D  01F2               	clrf	nrf24l01Send@data
  1351  008E  30E1               	movlw	225
  1352  008F  20F4               	fcall	_nrf24l01Send
  1353                           
  1354                           ;nrf24l01.c: 177: nrf24l01Send(0b11100010, 0);
  1355  0090  01F2               	clrf	nrf24l01Send@data
  1356  0091  30E2               	movlw	226
  1357  0092  20F4               	fcall	_nrf24l01Send
  1358  0093  0008               	return
  1359  0094                     __end_of_nrf24l01InitRegisters:	
  1360                           
  1361                           	psect	text3
  1362  00BB                     __ptext3:	
  1363 ;; *************** function _loop *****************
  1364 ;; Defined at:
  1365 ;;		line 14 in file "main.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  payloadByte     1    9[COMMON] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1
  1379 ;;      Params:         0       0       0
  1380 ;;      Locals:         1       0       0
  1381 ;;      Temps:          2       0       0
  1382 ;;      Totals:         3       0       0
  1383 ;;Total ram usage:        3 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    6
  1386 ;; This function calls:
  1387 ;;		_nrf24l01SendByte
  1388 ;;		_nrf24l01SendEnd
  1389 ;;		_nrf24l01SendStart
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _loop
  1397  00BB                     _loop:	
  1398                           
  1399                           ;main.c: 16: switch (mode){
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1403  00BB  28CE               	goto	l947
  1404  00BC                     l933:	
  1405                           ;main.c: 17: case 1:
  1406                           
  1407                           
  1408                           ;main.c: 20: nrf24l01SendStart();
  1409  00BC  211C               	fcall	_nrf24l01SendStart
  1410                           
  1411                           ;main.c: 22: unsigned char payloadByte = 'a';
  1412  00BD  3061               	movlw	97
  1413  00BE  00F7               	movwf	??_loop
  1414  00BF  0877               	movf	??_loop,w
  1415  00C0  00F9               	movwf	loop@payloadByte
  1416  00C1                     l941:	
  1417                           ;main.c: 23: while (payloadByte < ('a' + 20) ){
  1418                           
  1419  00C1  3075               	movlw	117
  1420  00C2  0279               	subwf	loop@payloadByte,w
  1421  00C3  1803               	btfsc	3,0
  1422  00C4  28CC               	goto	l943
  1423                           
  1424                           ;main.c: 24: nrf24l01SendByte(payloadByte);
  1425  00C5  0879               	movf	loop@payloadByte,w
  1426  00C6  213A               	fcall	_nrf24l01SendByte
  1427                           
  1428                           ;main.c: 25: payloadByte++;
  1429  00C7  3001               	movlw	1
  1430  00C8  00F7               	movwf	??_loop
  1431  00C9  0877               	movf	??_loop,w
  1432  00CA  07F9               	addwf	loop@payloadByte,f
  1433  00CB  28C1               	goto	l941
  1434  00CC                     l943:	
  1435                           
  1436                           ;main.c: 26: }
  1437                           ;main.c: 27: nrf24l01SendEnd();
  1438  00CC  2136               	fcall	_nrf24l01SendEnd
  1439                           
  1440                           ;main.c: 30: }
  1441                           
  1442                           ;main.c: 29: break;
  1443  00CD  28D3               	goto	l949
  1444  00CE                     l947:	
  1445  00CE  087A               	movf	_mode,w
  1446                           
  1447                           ; Switch size 1, requested type "space"
  1448                           ; Number of cases is 1, Range of values is 1 to 1
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     9 (fixed)
  1453                           ; jumptable            263     9 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455  00CF  3A01               	xorlw	1	; case 1
  1456  00D0  1903               	skipnz
  1457  00D1  28BC               	goto	l933
  1458  00D2  28D3               	goto	l949
  1459  00D3                     l949:	
  1460                           
  1461                           ;main.c: 32: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1462  00D3  3015               	movlw	21
  1463  00D4  00F8               	movwf	??_loop+1
  1464  00D5  304B               	movlw	75
  1465  00D6  00F7               	movwf	??_loop
  1466  00D7  30BE               	movlw	190
  1467  00D8                     u117:	
  1468  00D8  0B89               	decfsz	9,f
  1469  00D9  28D8               	goto	u117
  1470  00DA  0BF7               	decfsz	??_loop,f
  1471  00DB  28D8               	goto	u117
  1472  00DC  0BF8               	decfsz	??_loop+1,f
  1473  00DD  28D8               	goto	u117
  1474  00DE  3200               	nop2
  1475  00DF  0008               	return
  1476  00E0                     __end_of_loop:	
  1477                           
  1478                           	psect	text4
  1479  011C                     __ptext4:	
  1480 ;; *************** function _nrf24l01SendStart *****************
  1481 ;; Defined at:
  1482 ;;		line 74 in file "nrf24l01.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         0       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    5
  1503 ;; This function calls:
  1504 ;;		_nrf24l01SPISend
  1505 ;;		_nrf24l01SPIStart
  1506 ;;		_nrf24l01SetTransmitMode
  1507 ;; This function is called by:
  1508 ;;		_loop
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _nrf24l01SendStart
  1514  011C                     _nrf24l01SendStart:	
  1515                           
  1516                           ;nrf24l01.c: 76: PORTAbits.RA0 = 0;
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _nrf24l01SendStart: [wreg+status,2+status,0+pclath+cstack]
  1520  011C  0020               	movlb	0	; select bank0
  1521  011D  100C               	bcf	12,0	;volatile
  1522                           
  1523                           ;nrf24l01.c: 78: nrf24l01SetTransmitMode();
  1524  011E  20E0               	fcall	_nrf24l01SetTransmitMode
  1525                           
  1526                           ;nrf24l01.c: 80: nrf24l01SPIStart();
  1527  011F  2123               	fcall	_nrf24l01SPIStart
  1528                           
  1529                           ;nrf24l01.c: 82: nrf24l01SPISend(0b10100000);
  1530  0120  30A0               	movlw	160
  1531  0121  2111               	fcall	_nrf24l01SPISend
  1532  0122  0008               	return
  1533  0123                     __end_of_nrf24l01SendStart:	
  1534                           
  1535                           	psect	text5
  1536  00E0                     __ptext5:	
  1537 ;; *************** function _nrf24l01SetTransmitMode *****************
  1538 ;; Defined at:
  1539 ;;		line 52 in file "nrf24l01.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  config          1    6[COMMON] struct .
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1
  1553 ;;      Params:         0       0       0
  1554 ;;      Locals:         1       0       0
  1555 ;;      Temps:          1       0       0
  1556 ;;      Totals:         2       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		_nrf24l01Send
  1562 ;; This function is called by:
  1563 ;;		_nrf24l01SendStart
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _nrf24l01SetTransmitMode
  1569  00E0                     _nrf24l01SetTransmitMode:	
  1570                           
  1571                           ;nrf24l01.c: 53: n_CONFIG_t config;
  1572                           ;nrf24l01.c: 54: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _nrf24l01SetTransmitMode: [wreg+status,2+status,0+pclath+cstack]
  1576  00E0  01F2               	clrf	nrf24l01Send@data
  1577  00E1  3000               	movlw	0
  1578  00E2  20F4               	fcall	_nrf24l01Send
  1579  00E3  00F5               	movwf	??_nrf24l01SetTransmitMode
  1580  00E4  0875               	movf	??_nrf24l01SetTransmitMode,w
  1581  00E5  00F6               	movwf	nrf24l01SetTransmitMode@config
  1582                           
  1583                           ;nrf24l01.c: 55: if (config.PRIM_RX == 1){
  1584  00E6  1C76               	btfss	nrf24l01SetTransmitMode@config,0
  1585  00E7  0008               	return
  1586                           
  1587                           ;nrf24l01.c: 56: config.PRIM_RX = 0;
  1588  00E8  1076               	bcf	nrf24l01SetTransmitMode@config,0
  1589                           
  1590                           ;nrf24l01.c: 57: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1591  00E9  0876               	movf	nrf24l01SetTransmitMode@config,w
  1592  00EA  00F5               	movwf	??_nrf24l01SetTransmitMode
  1593  00EB  0875               	movf	??_nrf24l01SetTransmitMode,w
  1594  00EC  00F2               	movwf	nrf24l01Send@data
  1595  00ED  3020               	movlw	32
  1596  00EE  20F4               	fcall	_nrf24l01Send
  1597                           
  1598                           ;nrf24l01.c: 58: _delay((unsigned long)((130)*(16000000/4000000.0)));
  1599  00EF  30AD               	movlw	173
  1600  00F0                     u127:	
  1601  00F0  0B89               	decfsz	9,f
  1602  00F1  28F0               	goto	u127
  1603  00F2  0000               	nop
  1604  00F3  0008               	return
  1605  00F4                     __end_of_nrf24l01SetTransmitMode:	
  1606                           
  1607                           	psect	text6
  1608  00F4                     __ptext6:	
  1609 ;; *************** function _nrf24l01Send *****************
  1610 ;; Defined at:
  1611 ;;		line 39 in file "nrf24l01.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  command         1    wreg     unsigned char 
  1614 ;;  data            1    2[COMMON] unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  command         1    4[COMMON] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1
  1626 ;;      Params:         1       0       0
  1627 ;;      Locals:         1       0       0
  1628 ;;      Temps:          1       0       0
  1629 ;;      Totals:         3       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    3
  1633 ;; This function calls:
  1634 ;;		_nrf24l01SPIEnd
  1635 ;;		_nrf24l01SPISend
  1636 ;;		_nrf24l01SPIStart
  1637 ;; This function is called by:
  1638 ;;		_nrf24l01SetTransmitMode
  1639 ;;		_nrf24l01InitRegisters
  1640 ;;		_nrf24l01SetRecieveMode
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _nrf24l01Send
  1646  00F4                     _nrf24l01Send:	
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  1650                           ;nrf24l01Send@command stored from wreg
  1651  00F4  00F4               	movwf	nrf24l01Send@command
  1652                           
  1653                           ;nrf24l01.c: 41: nrf24l01SPIStart();
  1654  00F5  2123               	fcall	_nrf24l01SPIStart
  1655                           
  1656                           ;nrf24l01.c: 43: status.byte = nrf24l01SPISend(command);
  1657  00F6  0874               	movf	nrf24l01Send@command,w
  1658  00F7  2111               	fcall	_nrf24l01SPISend
  1659  00F8  00F3               	movwf	??_nrf24l01Send
  1660  00F9  0873               	movf	??_nrf24l01Send,w
  1661  00FA  0020               	movlb	0	; select bank0
  1662  00FB  00A8               	movwf	_status
  1663                           
  1664                           ;nrf24l01.c: 44: data = nrf24l01SPISend(data);
  1665  00FC  0872               	movf	nrf24l01Send@data,w
  1666  00FD  2111               	fcall	_nrf24l01SPISend
  1667  00FE  00F3               	movwf	??_nrf24l01Send
  1668  00FF  0873               	movf	??_nrf24l01Send,w
  1669  0100  00F2               	movwf	nrf24l01Send@data
  1670                           
  1671                           ;nrf24l01.c: 46: nrf24l01SPIEnd();
  1672  0101  212A               	fcall	_nrf24l01SPIEnd
  1673                           
  1674                           ;nrf24l01.c: 48: return data;
  1675  0102  0872               	movf	nrf24l01Send@data,w
  1676  0103  0008               	return
  1677  0104                     __end_of_nrf24l01Send:	
  1678                           
  1679                           	psect	text7
  1680  0123                     __ptext7:	
  1681 ;; *************** function _nrf24l01SPIStart *****************
  1682 ;; Defined at:
  1683 ;;		line 23 in file "nrf24l01.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1
  1697 ;;      Params:         0       0       0
  1698 ;;      Locals:         0       0       0
  1699 ;;      Temps:          0       0       0
  1700 ;;      Totals:         0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    2
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_nrf24l01Send
  1708 ;;		_nrf24l01SendStart
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _nrf24l01SPIStart
  1714  0123                     _nrf24l01SPIStart:	
  1715                           
  1716                           ;nrf24l01.c: 24: PORTAbits.RA1 = 0;
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _nrf24l01SPIStart: [wreg]
  1720  0123  0020               	movlb	0	; select bank0
  1721  0124  108C               	bcf	12,1	;volatile
  1722                           
  1723                           ;nrf24l01.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1724  0125  300D               	movlw	13
  1725  0126                     u137:	
  1726  0126  0B89               	decfsz	9,f
  1727  0127  2926               	goto	u137
  1728  0128  0000               	nop
  1729  0129  0008               	return
  1730  012A                     __end_of_nrf24l01SPIStart:	
  1731                           
  1732                           	psect	text8
  1733  0136                     __ptext8:	
  1734 ;; *************** function _nrf24l01SendEnd *****************
  1735 ;; Defined at:
  1736 ;;		line 89 in file "nrf24l01.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1
  1750 ;;      Params:         0       0       0
  1751 ;;      Locals:         0       0       0
  1752 ;;      Temps:          0       0       0
  1753 ;;      Totals:         0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    3
  1757 ;; This function calls:
  1758 ;;		_nrf24l01SPIEnd
  1759 ;; This function is called by:
  1760 ;;		_loop
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _nrf24l01SendEnd
  1766  0136                     _nrf24l01SendEnd:	
  1767                           
  1768                           ;nrf24l01.c: 91: nrf24l01SPIEnd();
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _nrf24l01SendEnd: [wreg+status,2+status,0+pclath+cstack]
  1772  0136  212A               	fcall	_nrf24l01SPIEnd
  1773                           
  1774                           ;nrf24l01.c: 93: PORTAbits.RA0 = 1;
  1775  0137  0020               	movlb	0	; select bank0
  1776  0138  140C               	bsf	12,0	;volatile
  1777  0139  0008               	return
  1778  013A                     __end_of_nrf24l01SendEnd:	
  1779                           
  1780                           	psect	text9
  1781  012A                     __ptext9:	
  1782 ;; *************** function _nrf24l01SPIEnd *****************
  1783 ;; Defined at:
  1784 ;;		line 34 in file "nrf24l01.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1
  1798 ;;      Params:         0       0       0
  1799 ;;      Locals:         0       0       0
  1800 ;;      Temps:          0       0       0
  1801 ;;      Totals:         0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    2
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_nrf24l01Send
  1809 ;;		_nrf24l01SendEnd
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _nrf24l01SPIEnd
  1815  012A                     _nrf24l01SPIEnd:	
  1816                           
  1817                           ;nrf24l01.c: 35: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _nrf24l01SPIEnd: [wreg]
  1821  012A  300D               	movlw	13
  1822  012B                     u147:	
  1823  012B  0B89               	decfsz	9,f
  1824  012C  292B               	goto	u147
  1825  012D  0000               	nop
  1826                           
  1827                           ;nrf24l01.c: 36: PORTAbits.RA1 = 1;
  1828  012E  0020               	movlb	0	; select bank0
  1829  012F  148C               	bsf	12,1	;volatile
  1830  0130  0008               	return
  1831  0131                     __end_of_nrf24l01SPIEnd:	
  1832                           
  1833                           	psect	text10
  1834  013A                     __ptext10:	
  1835 ;; *************** function _nrf24l01SendByte *****************
  1836 ;; Defined at:
  1837 ;;		line 85 in file "nrf24l01.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  payloadByte     1    wreg     unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  payloadByte     1    2[COMMON] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1
  1851 ;;      Params:         0       0       0
  1852 ;;      Locals:         1       0       0
  1853 ;;      Temps:          0       0       0
  1854 ;;      Totals:         1       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		_nrf24l01SPISend
  1860 ;; This function is called by:
  1861 ;;		_loop
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _nrf24l01SendByte
  1867  013A                     _nrf24l01SendByte:	
  1868                           
  1869                           ;incstack = 0
  1870                           ; Regs used in _nrf24l01SendByte: [wreg+status,2+status,0+pclath+cstack]
  1871                           ;nrf24l01SendByte@payloadByte stored from wreg
  1872  013A  00F2               	movwf	nrf24l01SendByte@payloadByte
  1873                           
  1874                           ;nrf24l01.c: 86: nrf24l01SPISend(payloadByte);
  1875  013B  0872               	movf	nrf24l01SendByte@payloadByte,w
  1876  013C  2111               	fcall	_nrf24l01SPISend
  1877  013D  0008               	return
  1878  013E                     __end_of_nrf24l01SendByte:	
  1879                           
  1880                           	psect	text11
  1881  0111                     __ptext11:	
  1882 ;; *************** function _nrf24l01SPISend *****************
  1883 ;; Defined at:
  1884 ;;		line 28 in file "nrf24l01.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  data            1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  data            1    1[COMMON] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1
  1898 ;;      Params:         0       0       0
  1899 ;;      Locals:         1       0       0
  1900 ;;      Temps:          0       0       0
  1901 ;;      Totals:         1       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_nrf24l01Send
  1909 ;;		_nrf24l01SendStart
  1910 ;;		_nrf24l01SendByte
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _nrf24l01SPISend
  1916  0111                     _nrf24l01SPISend:	
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _nrf24l01SPISend: [wreg]
  1920                           ;nrf24l01SPISend@data stored from wreg
  1921  0111  00F1               	movwf	nrf24l01SPISend@data
  1922                           
  1923                           ;nrf24l01.c: 29: SSP1BUF = data;
  1924  0112  0871               	movf	nrf24l01SPISend@data,w
  1925  0113  0024               	movlb	4	; select bank4
  1926  0114  0091               	movwf	17	;volatile
  1927  0115                     l83:	
  1928                           ;nrf24l01.c: 30: while (!SSP1STATbits.BF){ __nop(); }
  1929                           
  1930  0115  0024               	movlb	4	; select bank4
  1931  0116  1814               	btfsc	20,0	;volatile
  1932  0117  291A               	goto	l803
  1933  0118  0000               	nop
  1934  0119  2915               	goto	l83
  1935  011A                     l803:	
  1936                           
  1937                           ;nrf24l01.c: 31: return SSP1BUF;
  1938  011A  0811               	movf	17,w	;volatile
  1939  011B  0008               	return
  1940  011C                     __end_of_nrf24l01SPISend:	
  1941                           
  1942                           	psect	intentry
  1943  0004                     __pintentry:	
  1944 ;; *************** function _ISR *****************
  1945 ;; Defined at:
  1946 ;;		line 7 in file "main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		status,2, status,0, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1
  1960 ;;      Params:         0       0       0
  1961 ;;      Locals:         0       0       0
  1962 ;;      Temps:          1       0       0
  1963 ;;      Totals:         1       0       0
  1964 ;;Total ram usage:        1 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    1
  1967 ;; This function calls:
  1968 ;;		_nrf24l01ISR
  1969 ;; This function is called by:
  1970 ;;		Interrupt level 1
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974  0004                     _ISR:	
  1975                           
  1976                           ;incstack = 0
  1977  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1978                           
  1979                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
  1980  0005  3180               	pagesel	$
  1981  0006  0020               	movlb	0	; select bank0
  1982  0007  087F               	movf	127,w
  1983  0008  00F0               	movwf	??_ISR
  1984                           
  1985                           ;main.c: 8: nrf24l01ISR();
  1986  0009  2140               	fcall	_nrf24l01ISR
  1987  000A  0870               	movf	??_ISR,w
  1988  000B  0020               	movlb	0	; select bank0
  1989  000C  00FF               	movwf	127
  1990  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1991  000E  0009               	retfie
  1992  000F                     __end_of_ISR:	
  1993                           
  1994                           	psect	text13
  1995  0140                     __ptext13:	
  1996 ;; *************** function _nrf24l01ISR *****************
  1997 ;; Defined at:
  1998 ;;		line 17 in file "nrf24l01.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		None
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1
  2012 ;;      Params:         0       0       0
  2013 ;;      Locals:         0       0       0
  2014 ;;      Temps:          0       0       0
  2015 ;;      Totals:         0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_ISR
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _nrf24l01ISR
  2027  0140                     _nrf24l01ISR:	
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _nrf24l01ISR: []
  2031  0140  0008               	return
  2032  0141                     __end_of_nrf24l01ISR:	
  2033  007E                     btemp	set	126	;btemp
  2034  007E                     int$flags	set	126
  2035  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      8       9
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_loop
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _nrf24l01SendStart->_nrf24l01SetTransmitMode
    _nrf24l01SetTransmitMode->_nrf24l01Send
    _nrf24l01Send->_nrf24l01SPISend
    _nrf24l01SendByte->_nrf24l01SPISend

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _nrf24l01Init->_nrf24l01InitRegisters

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2093
                               _loop
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         1     1      0    1072
                                              6 COMMON     1     1      0
              _nrf24l01InitRegisters
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                                9     9      0    1072
                                              5 COMMON     1     1      0
                                              0 BANK0      8     8      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 3     3      0    1021
                                              7 COMMON     3     3      0
                   _nrf24l01SendByte
                    _nrf24l01SendEnd
                  _nrf24l01SendStart
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendStart                                    0     0      0     931
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
            _nrf24l01SetTransmitMode
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SetTransmitMode                              2     2      0     909
                                              5 COMMON     2     2      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1     863
                                              2 COMMON     3     2      1
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPIStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendEnd                                      0     0      0       0
                     _nrf24l01SPIEnd
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPIEnd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendByte                                     1     1      0      44
                                              2 COMMON     1     1      0
                    _nrf24l01SPISend
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPISend                                      1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (7) _nrf24l01ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _nrf24l01SendByte
       _nrf24l01SPISend
     _nrf24l01SendEnd
       _nrf24l01SPIEnd
     _nrf24l01SendStart
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01SetTransmitMode
         _nrf24l01Send
           _nrf24l01SPIEnd
           _nrf24l01SPISend
           _nrf24l01SPIStart
   _nrf24l01Init
     _nrf24l01InitRegisters
       _nrf24l01Send
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart

 _ISR (ROOT)
   _nrf24l01ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      14       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      14       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 18 13:20:32 2018

                      __CFG_CP$OFF 0000                                 l83 0115  
                               u97 00AA                nrf24l01Send@command 0074  
                      __CFG_LVP$ON 0000                                l803 011A  
                              l941 00C1                                l933 00BC  
                              l943 00CC                                l947 00CE  
                              l949 00D3                                l991 010F  
                              u107 00B3                                u117 00D8  
                              u127 00F0                                u137 0126  
                              u147 012B                                _ISR 0004  
                  loop@payloadByte 0079                       __CFG_BORV$LO 0000  
                              wreg 0009                               ?_ISR 0070  
                   ??_nrf24l01Init 0076                     ??_nrf24l01Send 0073  
                     __CFG_WRT$OFF 0000                      __p_NVMEM_text 07E0  
                             _main 0104                               _mode 007A  
                             _loop 00BB                               btemp 007E  
                             start 000F           ?_nrf24l01SetTransmitMode 0070  
                            ??_ISR 0070                              ?_main 0070  
                            ?_loop 0070                      __CFG_WDTE$OFF 0000  
                            _NVMEM 07E0                      __CFG_PWRTE$ON 0000  
                   __CFG_BOREN$OFF 0000                              wtemp0 007E  
                 _nrf24l01SPIStart 0123                     __CFG_MCLRE$OFF 0000  
                  __initialization 0010                       __end_of_main 0111  
                     __end_of_loop 00E0                     __CFG_LPBOR$OFF 0000  
                           ??_main 007A                             ??_loop 0077  
                 ??_nrf24l01SPIEnd 0071           __size_of_nrf24l01SPISend 000B  
                 _nrf24l01SendByte 013A                             _ANSELA 018C  
                           _ANSELC 018E                             _PMADRH 0192  
                           _PMADRL 0191                             _PMDATH 0194  
                           _PMDATL 0193                             _PMCON1 0195  
                           _PMCON2 0196           __size_of_nrf24l01SendEnd 0004  
             __size_of_nrf24l01ISR 0001                     __CFG_STVREN$ON 0000  
             __end_of_nrf24l01Init 00BB               __end_of_nrf24l01Send 0104  
            _nrf24l01InitRegisters 0016                             _status 0028  
                     __pdataCOMMON 007A            __end_of__initialization 0013  
                    __end_of_NVMEM 0800                     __pcstackCOMMON 0070  
    nrf24l01InitRegisters@enRXAddr 0025                         __pbssBANK0 0028  
                ??_nrf24l01SPISend 0071                         __pmaintext 0104  
                ??_nrf24l01SendEnd 0071             ?_nrf24l01InitRegisters 0070  
                       __pintentry 0004                nrf24l01SPISend@data 0071  
                _nrf24l01SendStart 011C                 ?_nrf24l01SendStart 0070  
            __end_of_n_ADDRESS_MUL 0140   __size_of_nrf24l01SetTransmitMode 0014  
         __end_of_nrf24l01SPIStart 012A                            _SSP1BUF 0211  
              ??_nrf24l01SendStart 0077              __size_of_nrf24l01Init 0027  
            __size_of_nrf24l01Send 0010          __end_of_nrf24l01SendStart 0123  
         __end_of_nrf24l01SendByte 013E                            __ptext1 0094  
                          __ptext2 0016                            __ptext3 00BB  
                          __ptext4 011C                            __ptext5 00E0  
                          __ptext6 00F4                            __ptext7 0123  
                          __ptext8 0136                            __ptext9 012A  
                     __size_of_ISR 000B               end_of_initialization 0013  
                     _nrf24l01Init 0094                       _nrf24l01Send 00F4  
                        _PORTAbits 000C                   __CFG_FOSC$INTOSC 0000  
                        _TRISAbits 008C                          _TRISCbits 008E  
                 nrf24l01Send@data 0072                      ??_nrf24l01ISR 0070  
       __size_of_nrf24l01SendStart 0007      nrf24l01SetTransmitMode@config 0076  
                    __pidataCOMMON 013E            _nrf24l01SetTransmitMode 00E0  
              start_initialization 0010                    _nrf24l01SPISend 0111  
                      __end_of_ISR 000F        nrf24l01SendByte@payloadByte 0072  
          __size_of_nrf24l01SPIEnd 0007                    _nrf24l01SendEnd 0136  
          ??_nrf24l01InitRegisters 0075                __end_of_nrf24l01ISR 0141  
                        ___latbits 0000                      __pcstackBANK0 0020  
                ?_nrf24l01SPIStart 0070                 ??_nrf24l01SPIStart 0071  
                ?_nrf24l01SendByte 0070          ??_nrf24l01SetTransmitMode 0075  
             __end_of_n_ADDRESS_P0 0136            __end_of_nrf24l01SPISend 011C  
                    _NVMEM_absaddr 07E0                 ??_nrf24l01SendByte 0072  
        nrf24l01InitRegisters@enAA 0026            __end_of_nrf24l01SendEnd 013A  
nrf24l01InitRegisters@setupRetries 0021                        _nrf24l01ISR 0140  
  __end_of_nrf24l01SetTransmitMode 00F4                     _nrf24l01SPIEnd 012A  
                 ?_nrf24l01SPISend 0070                      _n_ADDRESS_MUL 013F  
                         __ptext10 013A                           __ptext11 0111  
                         __ptext13 0140                   ?_nrf24l01SendEnd 0070  
           __end_of_nrf24l01SPIEnd 0131                      __size_of_main 000D  
                    __size_of_loop 0025       nrf24l01InitRegisters@feature 0022  
     nrf24l01InitRegisters@rfSetup 0023     __size_of_nrf24l01InitRegisters 007E  
    __end_of_nrf24l01InitRegisters 0094                           int$flags 007E  
     nrf24l01InitRegisters@setupAW 0020                       _SSP1STATbits 0214  
                       _INTCONbits 000B                    ?_nrf24l01SPIEnd 0070  
                         intlevel1 0000                       _n_ADDRESS_P0 0131  
                       _PMCON1bits 0195                  __CFG_CLKOUTEN$OFF 0000  
      nrf24l01InitRegisters@config 0024                         _OSCCONbits 0099  
        __size_of_nrf24l01SPIStart 0007                      __pstringtext1 0131  
                    __pstringtext2 013F         nrf24l01InitRegisters@DynPD 0027  
                      _SSPCON1bits 0215          __size_of_nrf24l01SendByte 0004  
                    ?_nrf24l01Init 0070                      ?_nrf24l01Send 0072  
                     ?_nrf24l01ISR 0070  
