

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 08 13:16:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	_NVMEM_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16LF1503 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  020C                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  0498                     	;# 
   148  0498                     	;# 
   149  0499                     	;# 
   150  049A                     	;# 
   151  049B                     	;# 
   152  049B                     	;# 
   153  049C                     	;# 
   154  049D                     	;# 
   155  049E                     	;# 
   156  049F                     	;# 
   157  0611                     	;# 
   158  0612                     	;# 
   159  0613                     	;# 
   160  0613                     	;# 
   161  0614                     	;# 
   162  0615                     	;# 
   163  0616                     	;# 
   164  0616                     	;# 
   165  0617                     	;# 
   166  0618                     	;# 
   167  0619                     	;# 
   168  0619                     	;# 
   169  061A                     	;# 
   170  061B                     	;# 
   171  061C                     	;# 
   172  061C                     	;# 
   173  0691                     	;# 
   174  0692                     	;# 
   175  0693                     	;# 
   176  0694                     	;# 
   177  0695                     	;# 
   178  0F0F                     	;# 
   179  0F10                     	;# 
   180  0F11                     	;# 
   181  0F12                     	;# 
   182  0F13                     	;# 
   183  0F14                     	;# 
   184  0F15                     	;# 
   185  0F16                     	;# 
   186  0F17                     	;# 
   187  0F18                     	;# 
   188  0F19                     	;# 
   189  0F1A                     	;# 
   190  0F1B                     	;# 
   191  0F1C                     	;# 
   192  0F1D                     	;# 
   193  0F1E                     	;# 
   194  0F1F                     	;# 
   195  0FE3                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  008C                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010E                     	;# 
   251  0111                     	;# 
   252  0112                     	;# 
   253  0113                     	;# 
   254  0114                     	;# 
   255  0115                     	;# 
   256  0116                     	;# 
   257  0117                     	;# 
   258  0118                     	;# 
   259  0119                     	;# 
   260  011D                     	;# 
   261  018C                     	;# 
   262  018E                     	;# 
   263  0191                     	;# 
   264  0191                     	;# 
   265  0192                     	;# 
   266  0193                     	;# 
   267  0193                     	;# 
   268  0194                     	;# 
   269  0195                     	;# 
   270  0196                     	;# 
   271  020C                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0216                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0217                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0498                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049B                     	;# 
   296  049C                     	;# 
   297  049D                     	;# 
   298  049E                     	;# 
   299  049F                     	;# 
   300  0611                     	;# 
   301  0612                     	;# 
   302  0613                     	;# 
   303  0613                     	;# 
   304  0614                     	;# 
   305  0615                     	;# 
   306  0616                     	;# 
   307  0616                     	;# 
   308  0617                     	;# 
   309  0618                     	;# 
   310  0619                     	;# 
   311  0619                     	;# 
   312  061A                     	;# 
   313  061B                     	;# 
   314  061C                     	;# 
   315  061C                     	;# 
   316  0691                     	;# 
   317  0692                     	;# 
   318  0693                     	;# 
   319  0694                     	;# 
   320  0695                     	;# 
   321  0F0F                     	;# 
   322  0F10                     	;# 
   323  0F11                     	;# 
   324  0F12                     	;# 
   325  0F13                     	;# 
   326  0F14                     	;# 
   327  0F15                     	;# 
   328  0F16                     	;# 
   329  0F17                     	;# 
   330  0F18                     	;# 
   331  0F19                     	;# 
   332  0F1A                     	;# 
   333  0F1B                     	;# 
   334  0F1C                     	;# 
   335  0F1D                     	;# 
   336  0F1E                     	;# 
   337  0F1F                     	;# 
   338  0FE3                     	;# 
   339  0FE4                     	;# 
   340  0FE5                     	;# 
   341  0FE6                     	;# 
   342  0FE7                     	;# 
   343  0FE8                     	;# 
   344  0FE9                     	;# 
   345  0FEA                     	;# 
   346  0FEB                     	;# 
   347  0FED                     	;# 
   348  0FEE                     	;# 
   349  0FEF                     	;# 
   350  0000                     	;# 
   351  0001                     	;# 
   352  0002                     	;# 
   353  0003                     	;# 
   354  0004                     	;# 
   355  0005                     	;# 
   356  0006                     	;# 
   357  0007                     	;# 
   358  0008                     	;# 
   359  0009                     	;# 
   360  000A                     	;# 
   361  000B                     	;# 
   362  000C                     	;# 
   363  000E                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001C                     	;# 
   376  008C                     	;# 
   377  008E                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  010C                     	;# 
   393  010E                     	;# 
   394  0111                     	;# 
   395  0112                     	;# 
   396  0113                     	;# 
   397  0114                     	;# 
   398  0115                     	;# 
   399  0116                     	;# 
   400  0117                     	;# 
   401  0118                     	;# 
   402  0119                     	;# 
   403  011D                     	;# 
   404  018C                     	;# 
   405  018E                     	;# 
   406  0191                     	;# 
   407  0191                     	;# 
   408  0192                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0194                     	;# 
   412  0195                     	;# 
   413  0196                     	;# 
   414  020C                     	;# 
   415  0211                     	;# 
   416  0211                     	;# 
   417  0212                     	;# 
   418  0212                     	;# 
   419  0213                     	;# 
   420  0213                     	;# 
   421  0214                     	;# 
   422  0214                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0216                     	;# 
   427  0216                     	;# 
   428  0217                     	;# 
   429  0217                     	;# 
   430  0391                     	;# 
   431  0392                     	;# 
   432  0393                     	;# 
   433  0498                     	;# 
   434  0498                     	;# 
   435  0499                     	;# 
   436  049A                     	;# 
   437  049B                     	;# 
   438  049B                     	;# 
   439  049C                     	;# 
   440  049D                     	;# 
   441  049E                     	;# 
   442  049F                     	;# 
   443  0611                     	;# 
   444  0612                     	;# 
   445  0613                     	;# 
   446  0613                     	;# 
   447  0614                     	;# 
   448  0615                     	;# 
   449  0616                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  0619                     	;# 
   455  061A                     	;# 
   456  061B                     	;# 
   457  061C                     	;# 
   458  061C                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  0695                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0FE3                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0008                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000E                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010E                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011D                     	;# 
   547  018C                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  020C                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0216                     	;# 
   570  0216                     	;# 
   571  0217                     	;# 
   572  0217                     	;# 
   573  0391                     	;# 
   574  0392                     	;# 
   575  0393                     	;# 
   576  0498                     	;# 
   577  0498                     	;# 
   578  0499                     	;# 
   579  049A                     	;# 
   580  049B                     	;# 
   581  049B                     	;# 
   582  049C                     	;# 
   583  049D                     	;# 
   584  049E                     	;# 
   585  049F                     	;# 
   586  0611                     	;# 
   587  0612                     	;# 
   588  0613                     	;# 
   589  0613                     	;# 
   590  0614                     	;# 
   591  0615                     	;# 
   592  0616                     	;# 
   593  0616                     	;# 
   594  0617                     	;# 
   595  0618                     	;# 
   596  0619                     	;# 
   597  0619                     	;# 
   598  061A                     	;# 
   599  061B                     	;# 
   600  061C                     	;# 
   601  061C                     	;# 
   602  0691                     	;# 
   603  0692                     	;# 
   604  0693                     	;# 
   605  0694                     	;# 
   606  0695                     	;# 
   607  0F0F                     	;# 
   608  0F10                     	;# 
   609  0F11                     	;# 
   610  0F12                     	;# 
   611  0F13                     	;# 
   612  0F14                     	;# 
   613  0F15                     	;# 
   614  0F16                     	;# 
   615  0F17                     	;# 
   616  0F18                     	;# 
   617  0F19                     	;# 
   618  0F1A                     	;# 
   619  0F1B                     	;# 
   620  0F1C                     	;# 
   621  0F1D                     	;# 
   622  0F1E                     	;# 
   623  0F1F                     	;# 
   624  0FE3                     	;# 
   625  0FE4                     	;# 
   626  0FE5                     	;# 
   627  0FE6                     	;# 
   628  0FE7                     	;# 
   629  0FE8                     	;# 
   630  0FE9                     	;# 
   631  0FEA                     	;# 
   632  0FEB                     	;# 
   633  0FED                     	;# 
   634  0FEE                     	;# 
   635  0FEF                     	;# 
   636                           
   637                           	psect	idataCOMMON
   638  01D2                     __pidataCOMMON:	
   639                           
   640                           ;initializer for _mode
   641  01D2  3401               	retlw	1
   642  07E0                     _NVMEM_absaddr	set	2016
   643                           
   644                           	psect	stringtext1
   645  01C6                     __pstringtext1:	
   646  01C6                     _n_ADDRESS_P0:	
   647  01C6  34AD               	retlw	173
   648  01C7  3487               	retlw	135
   649  01C8  3466               	retlw	102
   650  01C9  34BC               	retlw	188
   651  01CA  34BB               	retlw	187
   652  01CB                     __end_of_n_ADDRESS_P0:	
   653                           
   654                           	psect	stringtext2
   655  01D3                     __pstringtext2:	
   656  01D3                     _n_ADDRESS_MUL:	
   657  01D3  3421               	retlw	33
   658  01D4                     __end_of_n_ADDRESS_MUL:	
   659  07E0                     _NVMEM_absaddr	set	2016
   660                           
   661                           	psect	_NVMEM_text
   662  07E0                     __p_NVMEM_text:	
   663  07E0                     _NVMEM:	
   664  07E0  3455               	retlw	85
   665  07E1  346E               	retlw	110
   666  07E2  3463               	retlw	99
   667  07E3  346F               	retlw	111
   668  07E4  346E               	retlw	110
   669  07E5  3466               	retlw	102
   670  07E6  3469               	retlw	105
   671  07E7  3467               	retlw	103
   672  07E8  3475               	retlw	117
   673  07E9  3472               	retlw	114
   674  07EA  3465               	retlw	101
   675  07EB  3464               	retlw	100
   676  07EC  3400               	retlw	0
   677  07ED  3400               	retlw	0
   678  07EE  3400               	retlw	0
   679  07EF  3400               	retlw	0
   680  07F0  3400               	retlw	0
   681  07F1  3400               	retlw	0
   682  07F2  3400               	retlw	0
   683  07F3  3400               	retlw	0
   684  07F4  3400               	retlw	0
   685  07F5  3400               	retlw	0
   686  07F6  3400               	retlw	0
   687  07F7  3400               	retlw	0
   688  07F8  3400               	retlw	0
   689  07F9  3400               	retlw	0
   690  07FA  3400               	retlw	0
   691  07FB  3400               	retlw	0
   692  07FC  3400               	retlw	0
   693  07FD  3400               	retlw	0
   694  07FE  3400               	retlw	0
   695  07FF  3400               	retlw	0
   696  0800                     __end_of_NVMEM:	
   697  000C                     _PORTAbits	set	12
   698  000B                     _INTCONbits	set	11
   699  008E                     _TRISCbits	set	142
   700  008C                     _TRISAbits	set	140
   701  0099                     _OSCCONbits	set	153
   702  0194                     _PMDATH	set	404
   703  0193                     _PMDATL	set	403
   704  0196                     _PMCON2	set	406
   705  0195                     _PMCON1bits	set	405
   706  0192                     _PMADRH	set	402
   707  0191                     _PMADRL	set	401
   708  0195                     _PMCON1	set	405
   709  0215                     _SSPCON1bits	set	533
   710  0214                     _SSP1STATbits	set	532
   711  0211                     _SSP1BUF	set	529
   712                           
   713                           ; #config settings
   714  0000                     
   715                           	psect	cinit
   716  0010                     start_initialization:	
   717  0010                     __initialization:	
   718                           
   719                           ; Initialize objects allocated to COMMON
   720  0010  21D2               	fcall	__pidataCOMMON	;fetch initializer
   721  0011  00FC               	movwf	__pdataCOMMON& (0+127)
   722                           
   723                           ; Clear objects allocated to COMMON
   724  0012  01FB               	clrf	__pbssCOMMON& (0+127)
   725  0013                     end_of_initialization:	
   726                           ;End of C runtime variable initialization code
   727                           
   728  0013                     __end_of__initialization:	
   729  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   730  0014  0020               	movlb	0
   731  0015  29A8               	ljmp	_main	;jump to C main() function
   732                           
   733                           	psect	bssCOMMON
   734  007B                     __pbssCOMMON:	
   735  007B                     _status:	
   736  007B                     	ds	1
   737                           
   738                           	psect	dataCOMMON
   739  007C                     __pdataCOMMON:	
   740  007C                     _mode:	
   741  007C                     	ds	1
   742                           
   743                           	psect	cstackCOMMON
   744  0070                     __pcstackCOMMON:	
   745  0070                     ?_nrf24l01ISR:	
   746  0070                     ??_nrf24l01ISR:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_nrf24l01SendStart:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_nrf24l01SendByte:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_nrf24l01SendEnd:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_nrf24l01Init:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_ISR:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_ISR:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_loop:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_main:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_nrf24l01SPIStart:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_nrf24l01SPISend:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_nrf24l01SPIEnd:	
   780                           ; 1 bytes @ 0x0
   781                           
   782                           
   783                           ; 1 bytes @ 0x0
   784  0070                     	ds	1
   785  0071                     ??_nrf24l01SendEnd:	
   786  0071                     ??_nrf24l01SPIStart:	
   787                           ; 1 bytes @ 0x1
   788                           
   789  0071                     ??_nrf24l01SPISend:	
   790                           ; 1 bytes @ 0x1
   791                           
   792  0071                     ??_nrf24l01SPIEnd:	
   793                           ; 1 bytes @ 0x1
   794                           
   795  0071                     ?___bmul:	
   796                           ; 1 bytes @ 0x1
   797                           
   798  0071                     ?_read_flashmem:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0071                     ?___lwmod:	
   802                           ; 2 bytes @ 0x1
   803                           
   804  0071                     ___bmul@multiplicand:	
   805                           ; 2 bytes @ 0x1
   806                           
   807  0071                     read_flashmem@offset:	
   808                           ; 1 bytes @ 0x1
   809                           
   810  0071                     ___lwmod@divisor:	
   811                           ; 2 bytes @ 0x1
   812                           
   813                           
   814                           ; 2 bytes @ 0x1
   815  0071                     	ds	1
   816  0072                     ??___bmul:	
   817  0072                     nrf24l01SPISend@data:	
   818                           ; 1 bytes @ 0x2
   819                           
   820                           
   821                           ; 1 bytes @ 0x2
   822  0072                     	ds	1
   823  0073                     ??_nrf24l01SendByte:	
   824  0073                     ??_read_flashmem:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0073                     ?_nrf24l01Send:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0073                     nrf24l01Send@data:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     nrf24l01SendByte@payloadByte:	
   834                           ; 1 bytes @ 0x3
   835                           
   836  0073                     ___bmul@product:	
   837                           ; 1 bytes @ 0x3
   838                           
   839  0073                     ___lwmod@dividend:	
   840                           ; 1 bytes @ 0x3
   841                           
   842                           
   843                           ; 2 bytes @ 0x3
   844  0073                     	ds	1
   845  0074                     ??_nrf24l01Send:	
   846  0074                     ___bmul@multiplier:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 1 bytes @ 0x4
   851  0074                     	ds	1
   852  0075                     ??___lwmod:	
   853  0075                     nrf24l01Send@command:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0075                     read_flashmem@result:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 2 bytes @ 0x5
   861  0075                     	ds	1
   862  0076                     ??_nrf24l01SendStart:	
   863  0076                     ___lwmod@counter:	
   864                           ; 1 bytes @ 0x6
   865                           
   866                           
   867                           ; 1 bytes @ 0x6
   868  0076                     	ds	1
   869  0077                     ??_nrf24l01Init:	
   870  0077                     nrf24l01SendStart@config:	
   871                           ; 1 bytes @ 0x7
   872                           
   873                           
   874                           ; 1 bytes @ 0x7
   875  0077                     	ds	1
   876  0078                     ??_loop:	
   877                           
   878                           ; 1 bytes @ 0x8
   879  0078                     	ds	2
   880  007A                     loop@payloadByte:	
   881                           
   882                           ; 1 bytes @ 0xA
   883  007A                     	ds	1
   884  007B                     ??_main:	
   885                           
   886                           	psect	cstackBANK0
   887  0020                     __pcstackBANK0:	
   888                           ; 1 bytes @ 0xB
   889                           
   890  0020                     nrf24l01Init@channel:	
   891                           
   892                           ; 1 bytes @ 0x0
   893  0020                     	ds	1
   894  0021                     nrf24l01Init@byte:	
   895                           
   896                           ; 1 bytes @ 0x1
   897  0021                     	ds	1
   898  0022                     nrf24l01Init@i:	
   899                           
   900                           ; 1 bytes @ 0x2
   901  0022                     	ds	1
   902  0023                     nrf24l01Init@pipe:	
   903                           
   904                           ; 1 bytes @ 0x3
   905  0023                     	ds	1
   906  0024                     nrf24l01Init@rxPW:	
   907                           
   908                           ; 1 bytes @ 0x4
   909  0024                     	ds	1
   910                           
   911                           	psect	maintext
   912  01A8                     __pmaintext:	
   913 ;;
   914 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   915 ;;
   916 ;; *************** function _main *****************
   917 ;; Defined at:
   918 ;;		line 33 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : B1F/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1
   932 ;;      Params:         0       0       0
   933 ;;      Locals:         0       0       0
   934 ;;      Temps:          0       0       0
   935 ;;      Totals:         0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels required when called:    6
   938 ;; This function calls:
   939 ;;		_loop
   940 ;;		_nrf24l01Init
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _main
   948  01A8                     _main:	
   949                           
   950                           ;main.c: 35: INTCONbits.GIE = 0;
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   954  01A8  138B               	bcf	11,7	;volatile
   955                           
   956                           ;main.c: 36: INTCONbits.PEIE = 1;
   957  01A9  170B               	bsf	11,6	;volatile
   958                           
   959                           ;main.c: 38: OSCCONbits.IRCF = 0b1111;
   960  01AA  3078               	movlw	120
   961  01AB  0021               	movlb	1	; select bank1
   962  01AC  0499               	iorwf	25,f	;volatile
   963                           
   964                           ;main.c: 39: OSCCONbits.SCS = 0b10;
   965  01AD  0819               	movf	25,w	;volatile
   966  01AE  39FC               	andlw	-4
   967  01AF  3802               	iorlw	2
   968  01B0  0099               	movwf	25	;volatile
   969                           
   970                           ;main.c: 41: nrf24l01Init();
   971  01B1  2016               	fcall	_nrf24l01Init
   972                           
   973                           ;main.c: 43: INTCONbits.GIE = 1;
   974  01B2  178B               	bsf	11,7	;volatile
   975  01B3                     l936:	
   976                           ;main.c: 45: while(1){
   977                           
   978                           
   979                           ;main.c: 46: loop();
   980  01B3  2128               	fcall	_loop
   981  01B4  29B3               	goto	l936
   982  01B5                     __end_of_main:	
   983                           ;main.c: 47: }
   984                           ;main.c: 49: return;
   985                           
   986                           
   987                           	psect	text1
   988  0016                     __ptext1:	
   989 ;; *************** function _nrf24l01Init *****************
   990 ;; Defined at:
   991 ;;		line 68 in file "nrf24l01.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  rxPW            1    4[BANK0 ] struct .
   996 ;;  pipe            1    3[BANK0 ] unsigned char 
   997 ;;  i               1    2[BANK0 ] unsigned char 
   998 ;;  byte            1    1[BANK0 ] unsigned char 
   999 ;;  channel         1    0[BANK0 ] struct .
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1
  1009 ;;      Params:         0       0       0
  1010 ;;      Locals:         0       5       0
  1011 ;;      Temps:          3       0       0
  1012 ;;      Totals:         3       5       0
  1013 ;;Total ram usage:        8 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		___bmul
  1018 ;;		___lwmod
  1019 ;;		_nrf24l01SPIEnd
  1020 ;;		_nrf24l01SPISend
  1021 ;;		_nrf24l01SPIStart
  1022 ;;		_nrf24l01Send
  1023 ;;		_read_flashmem
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _nrf24l01Init
  1031  0016                     _nrf24l01Init:	
  1032                           
  1033                           ;nrf24l01.c: 74: TRISAbits.TRISA0 = 0;
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _nrf24l01Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1037  0016  0021               	movlb	1	; select bank1
  1038  0017  100C               	bcf	12,0	;volatile
  1039                           
  1040                           ;nrf24l01.c: 75: PORTAbits.RA0 = 0;
  1041  0018  0020               	movlb	0	; select bank0
  1042  0019  100C               	bcf	12,0	;volatile
  1043                           
  1044                           ;nrf24l01.c: 78: TRISAbits.TRISA1 = 0;
  1045  001A  0021               	movlb	1	; select bank1
  1046  001B  108C               	bcf	12,1	;volatile
  1047                           
  1048                           ;nrf24l01.c: 79: PORTAbits.RA1 = 1;
  1049  001C  0020               	movlb	0	; select bank0
  1050  001D  148C               	bsf	12,1	;volatile
  1051                           
  1052                           ;nrf24l01.c: 81: TRISAbits.TRISA1 = 0;
  1053  001E  0021               	movlb	1	; select bank1
  1054  001F  108C               	bcf	12,1	;volatile
  1055                           
  1056                           ;nrf24l01.c: 82: PORTAbits.RA1 = 1;
  1057  0020  0020               	movlb	0	; select bank0
  1058  0021  148C               	bsf	12,1	;volatile
  1059                           
  1060                           ;nrf24l01.c: 84: TRISCbits.TRISC1 = 1;
  1061  0022  0021               	movlb	1	; select bank1
  1062  0023  148E               	bsf	14,1	;volatile
  1063                           
  1064                           ;nrf24l01.c: 85: TRISCbits.TRISC2 = 0;
  1065  0024  110E               	bcf	14,2	;volatile
  1066                           
  1067                           ;nrf24l01.c: 87: TRISCbits.TRISC0 = 0;
  1068  0025  100E               	bcf	14,0	;volatile
  1069                           
  1070                           ;nrf24l01.c: 89: SSPCON1bits.SSPEN = 0;
  1071  0026  0024               	movlb	4	; select bank4
  1072  0027  1295               	bcf	21,5	;volatile
  1073                           
  1074                           ;nrf24l01.c: 90: SSPCON1bits.CKP = 0;
  1075  0028  1215               	bcf	21,4	;volatile
  1076                           
  1077                           ;nrf24l01.c: 91: SSP1STATbits.CKE = 1;
  1078  0029  1714               	bsf	20,6	;volatile
  1079                           
  1080                           ;nrf24l01.c: 93: SSPCON1bits.SSPM = 0b0000;
  1081  002A  30F0               	movlw	-16
  1082  002B  0595               	andwf	21,f	;volatile
  1083                           
  1084                           ;nrf24l01.c: 95: SSPCON1bits.SSPEN = 1;
  1085  002C  1695               	bsf	21,5	;volatile
  1086                           
  1087                           ;nrf24l01.c: 99: n_RF_CH_t channel;
  1088                           ;nrf24l01.c: 100: channel.RF_CH = 83;
  1089  002D  0020               	movlb	0	; select bank0
  1090  002E  0820               	movf	nrf24l01Init@channel,w
  1091  002F  3980               	andlw	-128
  1092  0030  3853               	iorlw	83
  1093  0031  00A0               	movwf	nrf24l01Init@channel
  1094                           
  1095                           ;nrf24l01.c: 101: nrf24l01Send(0b00100000 | 0x05, channel.byte);
  1096  0032  0820               	movf	nrf24l01Init@channel,w
  1097  0033  00F7               	movwf	??_nrf24l01Init
  1098  0034  0877               	movf	??_nrf24l01Init,w
  1099  0035  00F3               	movwf	nrf24l01Send@data
  1100  0036  3025               	movlw	37
  1101  0037  218A               	fcall	_nrf24l01Send
  1102                           
  1103                           ;nrf24l01.c: 104: unsigned char pipe = 0;
  1104  0038  0020               	movlb	0	; select bank0
  1105  0039  01A3               	clrf	nrf24l01Init@pipe
  1106                           
  1107                           ;nrf24l01.c: 105: unsigned char i = 0;
  1108  003A  01A2               	clrf	nrf24l01Init@i
  1109  003B                     l888:	
  1110                           ;nrf24l01.c: 106: unsigned char byte;
  1111                           ;nrf24l01.c: 108: while (i < 16){
  1112                           
  1113  003B  3010               	movlw	16
  1114  003C  0222               	subwf	nrf24l01Init@i,w
  1115  003D  1803               	btfsc	3,0
  1116  003E  2858               	goto	l890
  1117                           
  1118                           ;nrf24l01.c: 109: byte = read_flashmem((unsigned) 0 + i);
  1119  003F  0822               	movf	nrf24l01Init@i,w
  1120  0040  00F7               	movwf	??_nrf24l01Init
  1121  0041  01F8               	clrf	??_nrf24l01Init+1
  1122  0042  0877               	movf	??_nrf24l01Init,w
  1123  0043  00F1               	movwf	read_flashmem@offset
  1124  0044  0878               	movf	??_nrf24l01Init+1,w
  1125  0045  00F2               	movwf	read_flashmem@offset+1
  1126  0046  214C               	fcall	_read_flashmem
  1127  0047  0871               	movf	?_read_flashmem,w
  1128  0048  00F9               	movwf	??_nrf24l01Init+2
  1129  0049  0879               	movf	??_nrf24l01Init+2,w
  1130  004A  0020               	movlb	0	; select bank0
  1131  004B  00A1               	movwf	nrf24l01Init@byte
  1132                           
  1133                           ;nrf24l01.c: 111: if (byte == 0){
  1134  004C  0821               	movf	nrf24l01Init@byte,w
  1135  004D  1903               	btfsc	3,2
  1136  004E  2858               	goto	l890
  1137                           
  1138                           ;nrf24l01.c: 113: }
  1139                           ;nrf24l01.c: 115: pipe+= byte;
  1140                           
  1141                           ;nrf24l01.c: 112: break;
  1142  004F  0821               	movf	nrf24l01Init@byte,w
  1143  0050  00F7               	movwf	??_nrf24l01Init
  1144  0051  0877               	movf	??_nrf24l01Init,w
  1145  0052  07A3               	addwf	nrf24l01Init@pipe,f
  1146                           
  1147                           ;nrf24l01.c: 117: i++;
  1148  0053  3001               	movlw	1
  1149  0054  00F7               	movwf	??_nrf24l01Init
  1150  0055  0877               	movf	??_nrf24l01Init,w
  1151  0056  07A2               	addwf	nrf24l01Init@i,f
  1152  0057  283B               	goto	l888
  1153  0058                     l890:	
  1154                           
  1155                           ;nrf24l01.c: 118: }
  1156                           ;nrf24l01.c: 120: pipe = (unsigned) pipe % 5;
  1157  0058  3005               	movlw	5
  1158  0059  00F1               	movwf	___lwmod@divisor
  1159  005A  3000               	movlw	0
  1160  005B  00F2               	movwf	___lwmod@divisor+1
  1161  005C  0823               	movf	nrf24l01Init@pipe,w
  1162  005D  00F7               	movwf	??_nrf24l01Init
  1163  005E  01F8               	clrf	??_nrf24l01Init+1
  1164  005F  0877               	movf	??_nrf24l01Init,w
  1165  0060  00F3               	movwf	___lwmod@dividend
  1166  0061  0878               	movf	??_nrf24l01Init+1,w
  1167  0062  00F4               	movwf	___lwmod@dividend+1
  1168  0063  20FC               	fcall	___lwmod
  1169  0064  0871               	movf	?___lwmod,w
  1170  0065  00F9               	movwf	??_nrf24l01Init+2
  1171  0066  0879               	movf	??_nrf24l01Init+2,w
  1172  0067  0020               	movlb	0	; select bank0
  1173  0068  00A3               	movwf	nrf24l01Init@pipe
  1174                           
  1175                           ;nrf24l01.c: 123: nrf24l01SPIStart();
  1176  0069  21CF               	fcall	_nrf24l01SPIStart
  1177                           
  1178                           ;nrf24l01.c: 124: status.byte = nrf24l01SPISend(0b00100000 | 0x10);
  1179  006A  3030               	movlw	48
  1180  006B  2199               	fcall	_nrf24l01SPISend
  1181  006C  00F7               	movwf	??_nrf24l01Init
  1182  006D  0877               	movf	??_nrf24l01Init,w
  1183  006E  00FB               	movwf	_status
  1184                           
  1185                           ;nrf24l01.c: 125: nrf24l01SPISend(n_ADDRESS_P0[0]);
  1186  006F  30C6               	movlw	low (_n_ADDRESS_P0| (0+32768))
  1187  0070  0084               	movwf	4
  1188  0071  3081               	movlw	high (_n_ADDRESS_P0| (0+32768))
  1189  0072  0085               	movwf	5
  1190  0073  0800               	movf	0,w	;code access
  1191  0074  2199               	fcall	_nrf24l01SPISend
  1192                           
  1193                           ;nrf24l01.c: 126: nrf24l01SPISend(n_ADDRESS_P0[1]);
  1194  0075  30C7               	movlw	low ((_n_ADDRESS_P0+1)| (0+32768))
  1195  0076  0084               	movwf	4
  1196  0077  3081               	movlw	high ((_n_ADDRESS_P0+1)| (0+32768))
  1197  0078  0085               	movwf	5
  1198  0079  0800               	movf	0,w	;code access
  1199  007A  2199               	fcall	_nrf24l01SPISend
  1200                           
  1201                           ;nrf24l01.c: 127: nrf24l01SPISend(n_ADDRESS_P0[2]);
  1202  007B  30C8               	movlw	low ((_n_ADDRESS_P0+2)| (0+32768))
  1203  007C  0084               	movwf	4
  1204  007D  3081               	movlw	high ((_n_ADDRESS_P0+2)| (0+32768))
  1205  007E  0085               	movwf	5
  1206  007F  0800               	movf	0,w	;code access
  1207  0080  2199               	fcall	_nrf24l01SPISend
  1208                           
  1209                           ;nrf24l01.c: 128: nrf24l01SPISend(n_ADDRESS_P0[3]);
  1210  0081  30C9               	movlw	low ((_n_ADDRESS_P0+3)| (0+32768))
  1211  0082  0084               	movwf	4
  1212  0083  3081               	movlw	high ((_n_ADDRESS_P0+3)| (0+32768))
  1213  0084  0085               	movwf	5
  1214  0085  0800               	movf	0,w	;code access
  1215  0086  2199               	fcall	_nrf24l01SPISend
  1216                           
  1217                           ;nrf24l01.c: 129: nrf24l01SPISend(n_ADDRESS_P0[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1218  0087  30CA               	movlw	low ((_n_ADDRESS_P0+4)| (0+32768))
  1219  0088  0084               	movwf	4
  1220  0089  3081               	movlw	high ((_n_ADDRESS_P0+4)| (0+32768))
  1221  008A  0085               	movwf	5
  1222  008B  0800               	movf	0,w	;code access
  1223  008C  00F7               	movwf	??_nrf24l01Init
  1224  008D  30D3               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1225  008E  0084               	movwf	4
  1226  008F  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1227  0090  0085               	movwf	5
  1228  0091  0800               	movf	0,w	;code access
  1229  0092  00F8               	movwf	??_nrf24l01Init+1
  1230  0093  0878               	movf	??_nrf24l01Init+1,w
  1231  0094  00F1               	movwf	___bmul@multiplicand
  1232  0095  0020               	movlb	0	; select bank0
  1233  0096  0823               	movf	nrf24l01Init@pipe,w
  1234  0097  2168               	fcall	___bmul
  1235  0098  0777               	addwf	??_nrf24l01Init,w
  1236  0099  2199               	fcall	_nrf24l01SPISend
  1237                           
  1238                           ;nrf24l01.c: 130: nrf24l01SPIEnd();
  1239  009A  21BF               	fcall	_nrf24l01SPIEnd
  1240                           
  1241                           ;nrf24l01.c: 133: nrf24l01SPIStart();
  1242  009B  21CF               	fcall	_nrf24l01SPIStart
  1243                           
  1244                           ;nrf24l01.c: 134: status.byte = nrf24l01SPISend(0b00100000 | 0x0A);
  1245  009C  302A               	movlw	42
  1246  009D  2199               	fcall	_nrf24l01SPISend
  1247  009E  00F7               	movwf	??_nrf24l01Init
  1248  009F  0877               	movf	??_nrf24l01Init,w
  1249  00A0  00FB               	movwf	_status
  1250                           
  1251                           ;nrf24l01.c: 135: nrf24l01SPISend(n_ADDRESS_P0[0]);
  1252  00A1  30C6               	movlw	low (_n_ADDRESS_P0| (0+32768))
  1253  00A2  0084               	movwf	4
  1254  00A3  3081               	movlw	high (_n_ADDRESS_P0| (0+32768))
  1255  00A4  0085               	movwf	5
  1256  00A5  0800               	movf	0,w	;code access
  1257  00A6  2199               	fcall	_nrf24l01SPISend
  1258                           
  1259                           ;nrf24l01.c: 136: nrf24l01SPISend(n_ADDRESS_P0[1]);
  1260  00A7  30C7               	movlw	low ((_n_ADDRESS_P0+1)| (0+32768))
  1261  00A8  0084               	movwf	4
  1262  00A9  3081               	movlw	high ((_n_ADDRESS_P0+1)| (0+32768))
  1263  00AA  0085               	movwf	5
  1264  00AB  0800               	movf	0,w	;code access
  1265  00AC  2199               	fcall	_nrf24l01SPISend
  1266                           
  1267                           ;nrf24l01.c: 137: nrf24l01SPISend(n_ADDRESS_P0[2]);
  1268  00AD  30C8               	movlw	low ((_n_ADDRESS_P0+2)| (0+32768))
  1269  00AE  0084               	movwf	4
  1270  00AF  3081               	movlw	high ((_n_ADDRESS_P0+2)| (0+32768))
  1271  00B0  0085               	movwf	5
  1272  00B1  0800               	movf	0,w	;code access
  1273  00B2  2199               	fcall	_nrf24l01SPISend
  1274                           
  1275                           ;nrf24l01.c: 138: nrf24l01SPISend(n_ADDRESS_P0[3]);
  1276  00B3  30C9               	movlw	low ((_n_ADDRESS_P0+3)| (0+32768))
  1277  00B4  0084               	movwf	4
  1278  00B5  3081               	movlw	high ((_n_ADDRESS_P0+3)| (0+32768))
  1279  00B6  0085               	movwf	5
  1280  00B7  0800               	movf	0,w	;code access
  1281  00B8  2199               	fcall	_nrf24l01SPISend
  1282                           
  1283                           ;nrf24l01.c: 139: nrf24l01SPISend(n_ADDRESS_P0[4] + (unsigned) (pipe * n_ADDRESS_MUL));
  1284  00B9  30CA               	movlw	low ((_n_ADDRESS_P0+4)| (0+32768))
  1285  00BA  0084               	movwf	4
  1286  00BB  3081               	movlw	high ((_n_ADDRESS_P0+4)| (0+32768))
  1287  00BC  0085               	movwf	5
  1288  00BD  0800               	movf	0,w	;code access
  1289  00BE  00F7               	movwf	??_nrf24l01Init
  1290  00BF  30D3               	movlw	low (_n_ADDRESS_MUL| (0+32768))
  1291  00C0  0084               	movwf	4
  1292  00C1  3081               	movlw	high (_n_ADDRESS_MUL| (0+32768))
  1293  00C2  0085               	movwf	5
  1294  00C3  0800               	movf	0,w	;code access
  1295  00C4  00F8               	movwf	??_nrf24l01Init+1
  1296  00C5  0878               	movf	??_nrf24l01Init+1,w
  1297  00C6  00F1               	movwf	___bmul@multiplicand
  1298  00C7  0020               	movlb	0	; select bank0
  1299  00C8  0823               	movf	nrf24l01Init@pipe,w
  1300  00C9  2168               	fcall	___bmul
  1301  00CA  0777               	addwf	??_nrf24l01Init,w
  1302  00CB  2199               	fcall	_nrf24l01SPISend
  1303                           
  1304                           ;nrf24l01.c: 140: nrf24l01SPIEnd();
  1305  00CC  21BF               	fcall	_nrf24l01SPIEnd
  1306                           
  1307                           ;nrf24l01.c: 143: n_RX_PW_t rxPW;
  1308                           ;nrf24l01.c: 144: rxPW.RX_PW = 32;
  1309  00CD  0020               	movlb	0	; select bank0
  1310  00CE  0824               	movf	nrf24l01Init@rxPW,w
  1311  00CF  39C0               	andlw	-64
  1312  00D0  3820               	iorlw	32
  1313  00D1  00A4               	movwf	nrf24l01Init@rxPW
  1314                           
  1315                           ;nrf24l01.c: 145: nrf24l01Send(0b00100000 | 0x11, rxPW.byte);
  1316  00D2  0824               	movf	nrf24l01Init@rxPW,w
  1317  00D3  00F7               	movwf	??_nrf24l01Init
  1318  00D4  0877               	movf	??_nrf24l01Init,w
  1319  00D5  00F3               	movwf	nrf24l01Send@data
  1320  00D6  3031               	movlw	49
  1321  00D7  218A               	fcall	_nrf24l01Send
  1322                           
  1323                           ;nrf24l01.c: 146: nrf24l01Send(0b00100000 | 0x12, rxPW.byte);
  1324  00D8  0020               	movlb	0	; select bank0
  1325  00D9  0824               	movf	nrf24l01Init@rxPW,w
  1326  00DA  00F7               	movwf	??_nrf24l01Init
  1327  00DB  0877               	movf	??_nrf24l01Init,w
  1328  00DC  00F3               	movwf	nrf24l01Send@data
  1329  00DD  3032               	movlw	50
  1330  00DE  218A               	fcall	_nrf24l01Send
  1331                           
  1332                           ;nrf24l01.c: 147: nrf24l01Send(0b00100000 | 0x13, rxPW.byte);
  1333  00DF  0020               	movlb	0	; select bank0
  1334  00E0  0824               	movf	nrf24l01Init@rxPW,w
  1335  00E1  00F7               	movwf	??_nrf24l01Init
  1336  00E2  0877               	movf	??_nrf24l01Init,w
  1337  00E3  00F3               	movwf	nrf24l01Send@data
  1338  00E4  3033               	movlw	51
  1339  00E5  218A               	fcall	_nrf24l01Send
  1340                           
  1341                           ;nrf24l01.c: 148: nrf24l01Send(0b00100000 | 0x14, rxPW.byte);
  1342  00E6  0020               	movlb	0	; select bank0
  1343  00E7  0824               	movf	nrf24l01Init@rxPW,w
  1344  00E8  00F7               	movwf	??_nrf24l01Init
  1345  00E9  0877               	movf	??_nrf24l01Init,w
  1346  00EA  00F3               	movwf	nrf24l01Send@data
  1347  00EB  3034               	movlw	52
  1348  00EC  218A               	fcall	_nrf24l01Send
  1349                           
  1350                           ;nrf24l01.c: 149: nrf24l01Send(0b00100000 | 0x15, rxPW.byte);
  1351  00ED  0020               	movlb	0	; select bank0
  1352  00EE  0824               	movf	nrf24l01Init@rxPW,w
  1353  00EF  00F7               	movwf	??_nrf24l01Init
  1354  00F0  0877               	movf	??_nrf24l01Init,w
  1355  00F1  00F3               	movwf	nrf24l01Send@data
  1356  00F2  3035               	movlw	53
  1357  00F3  218A               	fcall	_nrf24l01Send
  1358                           
  1359                           ;nrf24l01.c: 150: nrf24l01Send(0b00100000 | 0x16, rxPW.byte);
  1360  00F4  0020               	movlb	0	; select bank0
  1361  00F5  0824               	movf	nrf24l01Init@rxPW,w
  1362  00F6  00F7               	movwf	??_nrf24l01Init
  1363  00F7  0877               	movf	??_nrf24l01Init,w
  1364  00F8  00F3               	movwf	nrf24l01Send@data
  1365  00F9  3036               	movlw	54
  1366  00FA  218A               	fcall	_nrf24l01Send
  1367  00FB  0008               	return
  1368  00FC                     __end_of_nrf24l01Init:	
  1369                           
  1370                           	psect	text2
  1371  014C                     __ptext2:	
  1372 ;; *************** function _read_flashmem *****************
  1373 ;; Defined at:
  1374 ;;		line 58 in file "flash.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  offset          2    1[COMMON] unsigned int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  result          2    5[COMMON] unsigned int 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    1[COMMON] unsigned int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1
  1388 ;;      Params:         2       0       0
  1389 ;;      Locals:         2       0       0
  1390 ;;      Temps:          2       0       0
  1391 ;;      Totals:         6       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    2
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_nrf24l01Init
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _read_flashmem
  1404  014C                     _read_flashmem:	
  1405                           
  1406                           ;flash.c: 60: INTCONbits.GIE = 0;
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _read_flashmem: [wreg+status,2+status,0]
  1410  014C  138B               	bcf	11,7	;volatile
  1411                           
  1412                           ;flash.c: 62: PMCON1 = 0x00;
  1413  014D  0023               	movlb	3	; select bank3
  1414  014E  0195               	clrf	21	;volatile
  1415                           
  1416                           ;flash.c: 64: PMADRL = (char) (((0x800U-32) + offset) >> 0);
  1417  014F  0871               	movf	read_flashmem@offset,w
  1418  0150  3EE0               	addlw	224
  1419  0151  0091               	movwf	17	;volatile
  1420                           
  1421                           ;flash.c: 65: PMADRH = (char) (((0x800U-32) + offset) >> 8);
  1422  0152  0871               	movf	read_flashmem@offset,w
  1423  0153  3EE0               	addlw	224
  1424  0154  00F3               	movwf	??_read_flashmem
  1425  0155  3007               	movlw	7
  1426  0156  3D72               	addwfc	read_flashmem@offset+1,w
  1427  0157  00F4               	movwf	??_read_flashmem+1
  1428  0158  0874               	movf	??_read_flashmem+1,w
  1429  0159  0092               	movwf	18	;volatile
  1430                           
  1431                           ;flash.c: 67: PMCON1bits.RD = 1;
  1432  015A  1415               	bsf	21,0	;volatile
  1433                           
  1434                           ;flash.c: 69: __nop();
  1435  015B  0000               	nop
  1436                           
  1437                           ;flash.c: 70: __nop();
  1438  015C  0000               	nop
  1439                           
  1440                           ;flash.c: 72: unsigned int result = (unsigned) ((PMDATH) << 8) | (PMDATL);
  1441  015D  0023               	movlb	3	; select bank3
  1442  015E  0814               	movf	20,w	;volatile
  1443  015F  00F6               	movwf	read_flashmem@result+1
  1444  0160  0813               	movf	19,w	;volatile
  1445  0161  00F5               	movwf	read_flashmem@result
  1446                           
  1447                           ;flash.c: 74: INTCONbits.GIE = 1;
  1448  0162  178B               	bsf	11,7	;volatile
  1449                           
  1450                           ;flash.c: 76: return result;
  1451  0163  0876               	movf	read_flashmem@result+1,w
  1452  0164  00F2               	movwf	?_read_flashmem+1
  1453  0165  0875               	movf	read_flashmem@result,w
  1454  0166  00F1               	movwf	?_read_flashmem
  1455  0167  0008               	return
  1456  0168                     __end_of_read_flashmem:	
  1457                           
  1458                           	psect	text3
  1459  00FC                     __ptext3:	
  1460 ;; *************** function ___lwmod *****************
  1461 ;; Defined at:
  1462 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  divisor         2    1[COMMON] unsigned int 
  1465 ;;  dividend        2    3[COMMON] unsigned int 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  counter         1    6[COMMON] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2    1[COMMON] unsigned int 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1
  1477 ;;      Params:         4       0       0
  1478 ;;      Locals:         1       0       0
  1479 ;;      Temps:          1       0       0
  1480 ;;      Totals:         6       0       0
  1481 ;;Total ram usage:        6 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    2
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_nrf24l01Init
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function ___lwmod
  1493  00FC                     ___lwmod:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1497  00FC  0871               	movf	___lwmod@divisor,w
  1498  00FD  0472               	iorwf	___lwmod@divisor+1,w
  1499  00FE  1903               	btfsc	3,2
  1500  00FF  2923               	goto	l844
  1501  0100  01F6               	clrf	___lwmod@counter
  1502  0101  0AF6               	incf	___lwmod@counter,f
  1503  0102                     l834:	
  1504  0102  1BF2               	btfsc	___lwmod@divisor+1,7
  1505  0103  290E               	goto	l836
  1506  0104  3001               	movlw	1
  1507  0105                     u175:	
  1508  0105  35F1               	lslf	___lwmod@divisor,f
  1509  0106  0DF2               	rlf	___lwmod@divisor+1,f
  1510  0107  0B89               	decfsz	9,f
  1511  0108  2905               	goto	u175
  1512  0109  3001               	movlw	1
  1513  010A  00F5               	movwf	??___lwmod
  1514  010B  0875               	movf	??___lwmod,w
  1515  010C  07F6               	addwf	___lwmod@counter,f
  1516  010D  2902               	goto	l834
  1517  010E                     l836:	
  1518  010E  0872               	movf	___lwmod@divisor+1,w
  1519  010F  0274               	subwf	___lwmod@dividend+1,w
  1520  0110  1D03               	skipz
  1521  0111  2914               	goto	u195
  1522  0112  0871               	movf	___lwmod@divisor,w
  1523  0113  0273               	subwf	___lwmod@dividend,w
  1524  0114                     u195:	
  1525  0114  1C03               	skipc
  1526  0115  291A               	goto	l840
  1527  0116  0871               	movf	___lwmod@divisor,w
  1528  0117  02F3               	subwf	___lwmod@dividend,f
  1529  0118  0872               	movf	___lwmod@divisor+1,w
  1530  0119  3BF4               	subwfb	___lwmod@dividend+1,f
  1531  011A                     l840:	
  1532  011A  3001               	movlw	1
  1533  011B                     u205:	
  1534  011B  36F2               	lsrf	___lwmod@divisor+1,f
  1535  011C  0CF1               	rrf	___lwmod@divisor,f
  1536  011D  0B89               	decfsz	9,f
  1537  011E  291B               	goto	u205
  1538  011F  3001               	movlw	1
  1539  0120  02F6               	subwf	___lwmod@counter,f
  1540  0121  1D03               	btfss	3,2
  1541  0122  290E               	goto	l836
  1542  0123                     l844:	
  1543  0123  0874               	movf	___lwmod@dividend+1,w
  1544  0124  00F2               	movwf	?___lwmod+1
  1545  0125  0873               	movf	___lwmod@dividend,w
  1546  0126  00F1               	movwf	?___lwmod
  1547  0127  0008               	return
  1548  0128                     __end_of___lwmod:	
  1549                           
  1550                           	psect	text4
  1551  0168                     __ptext4:	
  1552 ;; *************** function ___bmul *****************
  1553 ;; Defined at:
  1554 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  multiplier      1    wreg     unsigned char 
  1557 ;;  multiplicand    1    1[COMMON] unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  multiplier      1    4[COMMON] unsigned char 
  1560 ;;  product         1    3[COMMON] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1
  1570 ;;      Params:         1       0       0
  1571 ;;      Locals:         2       0       0
  1572 ;;      Temps:          1       0       0
  1573 ;;      Totals:         4       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    2
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_nrf24l01Init
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function ___bmul
  1586  0168                     ___bmul:	
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1590                           ;___bmul@multiplier stored from wreg
  1591  0168  00F4               	movwf	___bmul@multiplier
  1592  0169  01F3               	clrf	___bmul@product
  1593  016A                     l814:	
  1594  016A  1C74               	btfss	___bmul@multiplier,0
  1595  016B  2970               	goto	l818
  1596  016C  0871               	movf	___bmul@multiplicand,w
  1597  016D  00F2               	movwf	??___bmul
  1598  016E  0872               	movf	??___bmul,w
  1599  016F  07F3               	addwf	___bmul@product,f
  1600  0170                     l818:	
  1601  0170  1003               	clrc
  1602  0171  0DF1               	rlf	___bmul@multiplicand,f
  1603  0172  1003               	clrc
  1604  0173  0CF4               	rrf	___bmul@multiplier,f
  1605  0174  0874               	movf	___bmul@multiplier,w
  1606  0175  1D03               	btfss	3,2
  1607  0176  296A               	goto	l814
  1608  0177  0873               	movf	___bmul@product,w
  1609  0178  0008               	return
  1610  0179                     __end_of___bmul:	
  1611                           
  1612                           	psect	text5
  1613  0128                     __ptext5:	
  1614 ;; *************** function _loop *****************
  1615 ;; Defined at:
  1616 ;;		line 14 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  payloadByte     1   10[COMMON] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1
  1630 ;;      Params:         0       0       0
  1631 ;;      Locals:         1       0       0
  1632 ;;      Temps:          2       0       0
  1633 ;;      Totals:         3       0       0
  1634 ;;Total ram usage:        3 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    5
  1637 ;; This function calls:
  1638 ;;		_nrf24l01SendByte
  1639 ;;		_nrf24l01SendEnd
  1640 ;;		_nrf24l01SendStart
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _loop
  1648  0128                     _loop:	
  1649                           
  1650                           ;main.c: 16: switch (mode){
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1654  0128  293B               	goto	l864
  1655  0129                     l850:	
  1656                           ;main.c: 17: case 1:
  1657                           
  1658                           
  1659                           ;main.c: 19: nrf24l01SendStart();
  1660  0129  2179               	fcall	_nrf24l01SendStart
  1661                           
  1662                           ;main.c: 20: unsigned char payloadByte = 'A';
  1663  012A  3041               	movlw	65
  1664  012B  00F8               	movwf	??_loop
  1665  012C  0878               	movf	??_loop,w
  1666  012D  00FA               	movwf	loop@payloadByte
  1667  012E                     l858:	
  1668                           ;main.c: 21: while (payloadByte < ('A' + 8) ){
  1669                           
  1670  012E  3049               	movlw	73
  1671  012F  027A               	subwf	loop@payloadByte,w
  1672  0130  1803               	btfsc	3,0
  1673  0131  2939               	goto	l860
  1674                           
  1675                           ;main.c: 22: nrf24l01SendByte(payloadByte);
  1676  0132  087A               	movf	loop@payloadByte,w
  1677  0133  21CB               	fcall	_nrf24l01SendByte
  1678                           
  1679                           ;main.c: 23: payloadByte++;
  1680  0134  3001               	movlw	1
  1681  0135  00F8               	movwf	??_loop
  1682  0136  0878               	movf	??_loop,w
  1683  0137  07FA               	addwf	loop@payloadByte,f
  1684  0138  292E               	goto	l858
  1685  0139                     l860:	
  1686                           
  1687                           ;main.c: 24: }
  1688                           ;main.c: 25: nrf24l01SendEnd();
  1689  0139  21B5               	fcall	_nrf24l01SendEnd
  1690                           
  1691                           ;main.c: 27: }
  1692                           
  1693                           ;main.c: 26: break;
  1694  013A  2940               	goto	l866
  1695  013B                     l864:	
  1696  013B  087C               	movf	_mode,w
  1697                           
  1698                           ; Switch size 1, requested type "space"
  1699                           ; Number of cases is 1, Range of values is 1 to 1
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte            4     3 (average)
  1703                           ; direct_byte           11     9 (fixed)
  1704                           ; jumptable            263     9 (fixed)
  1705                           ;	Chosen strategy is simple_byte
  1706  013C  3A01               	xorlw	1	; case 1
  1707  013D  1903               	skipnz
  1708  013E  2929               	goto	l850
  1709  013F  2940               	goto	l866
  1710  0140                     l866:	
  1711                           
  1712                           ;main.c: 29: _delay((unsigned long)((500)*(16000000/4000.0)));
  1713  0140  300B               	movlw	11
  1714  0141  00F9               	movwf	??_loop+1
  1715  0142  3026               	movlw	38
  1716  0143  00F8               	movwf	??_loop
  1717  0144  305E               	movlw	94
  1718  0145                     u257:	
  1719  0145  0B89               	decfsz	9,f
  1720  0146  2945               	goto	u257
  1721  0147  0BF8               	decfsz	??_loop,f
  1722  0148  2945               	goto	u257
  1723  0149  0BF9               	decfsz	??_loop+1,f
  1724  014A  2945               	goto	u257
  1725  014B  0008               	return
  1726  014C                     __end_of_loop:	
  1727                           
  1728                           	psect	text6
  1729  0179                     __ptext6:	
  1730 ;; *************** function _nrf24l01SendStart *****************
  1731 ;; Defined at:
  1732 ;;		line 43 in file "nrf24l01.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  config          1    7[COMMON] struct .
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         0       0       0
  1747 ;;      Locals:         1       0       0
  1748 ;;      Temps:          1       0       0
  1749 ;;      Totals:         2       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    4
  1753 ;; This function calls:
  1754 ;;		_nrf24l01SPISend
  1755 ;;		_nrf24l01SPIStart
  1756 ;;		_nrf24l01Send
  1757 ;; This function is called by:
  1758 ;;		_loop
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _nrf24l01SendStart
  1764  0179                     _nrf24l01SendStart:	
  1765                           
  1766                           ;nrf24l01.c: 46: n_CONFIG_t config;
  1767                           ;nrf24l01.c: 47: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _nrf24l01SendStart: [wreg+status,2+status,0+pclath+cstack]
  1771  0179  01F3               	clrf	nrf24l01Send@data
  1772  017A  3000               	movlw	0
  1773  017B  218A               	fcall	_nrf24l01Send
  1774  017C  00F6               	movwf	??_nrf24l01SendStart
  1775  017D  0876               	movf	??_nrf24l01SendStart,w
  1776  017E  00F7               	movwf	nrf24l01SendStart@config
  1777                           
  1778                           ;nrf24l01.c: 48: config.PRIM_RX = 0;
  1779  017F  1077               	bcf	nrf24l01SendStart@config,0
  1780                           
  1781                           ;nrf24l01.c: 49: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1782  0180  0877               	movf	nrf24l01SendStart@config,w
  1783  0181  00F6               	movwf	??_nrf24l01SendStart
  1784  0182  0876               	movf	??_nrf24l01SendStart,w
  1785  0183  00F3               	movwf	nrf24l01Send@data
  1786  0184  3020               	movlw	32
  1787  0185  218A               	fcall	_nrf24l01Send
  1788                           
  1789                           ;nrf24l01.c: 51: nrf24l01SPIStart();
  1790  0186  21CF               	fcall	_nrf24l01SPIStart
  1791                           
  1792                           ;nrf24l01.c: 53: nrf24l01SPISend(0b10100000);
  1793  0187  30A0               	movlw	160
  1794  0188  2199               	fcall	_nrf24l01SPISend
  1795  0189  0008               	return
  1796  018A                     __end_of_nrf24l01SendStart:	
  1797                           
  1798                           	psect	text7
  1799  018A                     __ptext7:	
  1800 ;; *************** function _nrf24l01Send *****************
  1801 ;; Defined at:
  1802 ;;		line 30 in file "nrf24l01.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  command         1    wreg     unsigned char 
  1805 ;;  data            1    3[COMMON] unsigned char 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  command         1    5[COMMON] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      unsigned char 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, pclath, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1
  1817 ;;      Params:         1       0       0
  1818 ;;      Locals:         1       0       0
  1819 ;;      Temps:          1       0       0
  1820 ;;      Totals:         3       0       0
  1821 ;;Total ram usage:        3 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    3
  1824 ;; This function calls:
  1825 ;;		_nrf24l01SPIEnd
  1826 ;;		_nrf24l01SPISend
  1827 ;;		_nrf24l01SPIStart
  1828 ;; This function is called by:
  1829 ;;		_nrf24l01SendStart
  1830 ;;		_nrf24l01Init
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _nrf24l01Send
  1836  018A                     _nrf24l01Send:	
  1837                           
  1838                           ;incstack = 0
  1839                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  1840                           ;nrf24l01Send@command stored from wreg
  1841  018A  00F5               	movwf	nrf24l01Send@command
  1842                           
  1843                           ;nrf24l01.c: 32: nrf24l01SPIStart();
  1844  018B  21CF               	fcall	_nrf24l01SPIStart
  1845                           
  1846                           ;nrf24l01.c: 34: status.byte = nrf24l01SPISend(command);
  1847  018C  0875               	movf	nrf24l01Send@command,w
  1848  018D  2199               	fcall	_nrf24l01SPISend
  1849  018E  00F4               	movwf	??_nrf24l01Send
  1850  018F  0874               	movf	??_nrf24l01Send,w
  1851  0190  00FB               	movwf	_status
  1852                           
  1853                           ;nrf24l01.c: 35: data = nrf24l01SPISend(data);
  1854  0191  0873               	movf	nrf24l01Send@data,w
  1855  0192  2199               	fcall	_nrf24l01SPISend
  1856  0193  00F4               	movwf	??_nrf24l01Send
  1857  0194  0874               	movf	??_nrf24l01Send,w
  1858  0195  00F3               	movwf	nrf24l01Send@data
  1859                           
  1860                           ;nrf24l01.c: 37: nrf24l01SPIEnd();
  1861  0196  21BF               	fcall	_nrf24l01SPIEnd
  1862                           
  1863                           ;nrf24l01.c: 39: return data;
  1864  0197  0873               	movf	nrf24l01Send@data,w
  1865  0198  0008               	return
  1866  0199                     __end_of_nrf24l01Send:	
  1867                           
  1868                           	psect	text8
  1869  01CF                     __ptext8:	
  1870 ;; *************** function _nrf24l01SPIStart *****************
  1871 ;; Defined at:
  1872 ;;		line 14 in file "nrf24l01.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		None
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1
  1886 ;;      Params:         0       0       0
  1887 ;;      Locals:         0       0       0
  1888 ;;      Temps:          0       0       0
  1889 ;;      Totals:         0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_nrf24l01Send
  1897 ;;		_nrf24l01SendStart
  1898 ;;		_nrf24l01Init
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _nrf24l01SPIStart
  1904  01CF                     _nrf24l01SPIStart:	
  1905                           
  1906                           ;nrf24l01.c: 15: PORTAbits.RA1 = 0;
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _nrf24l01SPIStart: []
  1910  01CF  0020               	movlb	0	; select bank0
  1911  01D0  108C               	bcf	12,1	;volatile
  1912  01D1  0008               	return
  1913  01D2                     __end_of_nrf24l01SPIStart:	
  1914                           
  1915                           	psect	text9
  1916  01B5                     __ptext9:	
  1917 ;; *************** function _nrf24l01SendEnd *****************
  1918 ;; Defined at:
  1919 ;;		line 59 in file "nrf24l01.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1
  1933 ;;      Params:         0       0       0
  1934 ;;      Locals:         0       0       0
  1935 ;;      Temps:          0       0       0
  1936 ;;      Totals:         0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		_nrf24l01SPIEnd
  1942 ;; This function is called by:
  1943 ;;		_loop
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _nrf24l01SendEnd
  1949  01B5                     _nrf24l01SendEnd:	
  1950                           
  1951                           ;nrf24l01.c: 61: nrf24l01SPIEnd();
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _nrf24l01SendEnd: [wreg+status,2+status,0+pclath+cstack]
  1955  01B5  21BF               	fcall	_nrf24l01SPIEnd
  1956                           
  1957                           ;nrf24l01.c: 63: PORTAbits.RA0 = 1;
  1958  01B6  0020               	movlb	0	; select bank0
  1959  01B7  140C               	bsf	12,0	;volatile
  1960                           
  1961                           ;nrf24l01.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1962  01B8  300D               	movlw	13
  1963  01B9                     u267:	
  1964  01B9  0B89               	decfsz	9,f
  1965  01BA  29B9               	goto	u267
  1966  01BB  0000               	nop
  1967                           
  1968                           ;nrf24l01.c: 65: PORTAbits.RA0 = 0;
  1969  01BC  0020               	movlb	0	; select bank0
  1970  01BD  100C               	bcf	12,0	;volatile
  1971  01BE  0008               	return
  1972  01BF                     __end_of_nrf24l01SendEnd:	
  1973                           
  1974                           	psect	text10
  1975  01BF                     __ptext10:	
  1976 ;; *************** function _nrf24l01SPIEnd *****************
  1977 ;; Defined at:
  1978 ;;		line 25 in file "nrf24l01.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1
  1992 ;;      Params:         0       0       0
  1993 ;;      Locals:         0       0       0
  1994 ;;      Temps:          0       0       0
  1995 ;;      Totals:         0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_nrf24l01Send
  2003 ;;		_nrf24l01SendEnd
  2004 ;;		_nrf24l01Init
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _nrf24l01SPIEnd
  2010  01BF                     _nrf24l01SPIEnd:	
  2011                           
  2012                           ;nrf24l01.c: 26: PORTAbits.RA1 = 1;
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _nrf24l01SPIEnd: [wreg]
  2016  01BF  0020               	movlb	0	; select bank0
  2017  01C0  148C               	bsf	12,1	;volatile
  2018                           
  2019                           ;nrf24l01.c: 27: _delay((unsigned long)((5)*(16000000/4000000.0)));
  2020  01C1  3006               	movlw	6
  2021  01C2                     u277:	
  2022  01C2  0B89               	decfsz	9,f
  2023  01C3  29C2               	goto	u277
  2024  01C4  3200               	nop2
  2025  01C5  0008               	return
  2026  01C6                     __end_of_nrf24l01SPIEnd:	
  2027                           
  2028                           	psect	text11
  2029  01CB                     __ptext11:	
  2030 ;; *************** function _nrf24l01SendByte *****************
  2031 ;; Defined at:
  2032 ;;		line 55 in file "nrf24l01.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  payloadByte     1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  payloadByte     1    3[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1
  2046 ;;      Params:         0       0       0
  2047 ;;      Locals:         1       0       0
  2048 ;;      Temps:          0       0       0
  2049 ;;      Totals:         1       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    3
  2053 ;; This function calls:
  2054 ;;		_nrf24l01SPISend
  2055 ;; This function is called by:
  2056 ;;		_loop
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _nrf24l01SendByte
  2062  01CB                     _nrf24l01SendByte:	
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _nrf24l01SendByte: [wreg+status,2+status,0+pclath+cstack]
  2066                           ;nrf24l01SendByte@payloadByte stored from wreg
  2067  01CB  00F3               	movwf	nrf24l01SendByte@payloadByte
  2068                           
  2069                           ;nrf24l01.c: 56: nrf24l01SPISend(payloadByte);
  2070  01CC  0873               	movf	nrf24l01SendByte@payloadByte,w
  2071  01CD  2199               	fcall	_nrf24l01SPISend
  2072  01CE  0008               	return
  2073  01CF                     __end_of_nrf24l01SendByte:	
  2074                           
  2075                           	psect	text12
  2076  0199                     __ptext12:	
  2077 ;; *************** function _nrf24l01SPISend *****************
  2078 ;; Defined at:
  2079 ;;		line 18 in file "nrf24l01.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  data            1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  data            1    2[COMMON] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      unsigned char 
  2086 ;; Registers used:
  2087 ;;		wreg
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1
  2093 ;;      Params:         0       0       0
  2094 ;;      Locals:         1       0       0
  2095 ;;      Temps:          1       0       0
  2096 ;;      Totals:         2       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    2
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_nrf24l01Send
  2104 ;;		_nrf24l01SendStart
  2105 ;;		_nrf24l01SendByte
  2106 ;;		_nrf24l01Init
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _nrf24l01SPISend
  2112  0199                     _nrf24l01SPISend:	
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _nrf24l01SPISend: [wreg]
  2116                           ;nrf24l01SPISend@data stored from wreg
  2117  0199  00F2               	movwf	nrf24l01SPISend@data
  2118                           
  2119                           ;nrf24l01.c: 19: SSP1BUF = data;
  2120  019A  0872               	movf	nrf24l01SPISend@data,w
  2121  019B  0024               	movlb	4	; select bank4
  2122  019C  0091               	movwf	17	;volatile
  2123  019D                     l81:	
  2124                           ;nrf24l01.c: 20: while (!SSP1STATbits.BF){ __nop(); }
  2125                           
  2126  019D  0024               	movlb	4	; select bank4
  2127  019E  1814               	btfsc	20,0	;volatile
  2128  019F  29A2               	goto	l754
  2129  01A0  0000               	nop
  2130  01A1  299D               	goto	l81
  2131  01A2                     l754:	
  2132                           
  2133                           ;nrf24l01.c: 21: data = SSP1BUF;
  2134  01A2  0811               	movf	17,w	;volatile
  2135  01A3  00F1               	movwf	??_nrf24l01SPISend
  2136  01A4  0871               	movf	??_nrf24l01SPISend,w
  2137  01A5  00F2               	movwf	nrf24l01SPISend@data
  2138                           
  2139                           ;nrf24l01.c: 22: return data;
  2140  01A6  0872               	movf	nrf24l01SPISend@data,w
  2141  01A7  0008               	return
  2142  01A8                     __end_of_nrf24l01SPISend:	
  2143                           
  2144                           	psect	intentry
  2145  0004                     __pintentry:	
  2146 ;; *************** function _ISR *****************
  2147 ;; Defined at:
  2148 ;;		line 7 in file "main.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1
  2162 ;;      Params:         0       0       0
  2163 ;;      Locals:         0       0       0
  2164 ;;      Temps:          1       0       0
  2165 ;;      Totals:         1       0       0
  2166 ;;Total ram usage:        1 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		_nrf24l01ISR
  2171 ;; This function is called by:
  2172 ;;		Interrupt level 1
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176  0004                     _ISR:	
  2177                           
  2178                           ;incstack = 0
  2179  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2180                           
  2181                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
  2182  0005  3180               	pagesel	$
  2183  0006  0020               	movlb	0	; select bank0
  2184  0007  087F               	movf	127,w
  2185  0008  00F0               	movwf	??_ISR
  2186                           
  2187                           ;main.c: 8: nrf24l01ISR();
  2188  0009  21D4               	fcall	_nrf24l01ISR
  2189  000A  0870               	movf	??_ISR,w
  2190  000B  0020               	movlb	0	; select bank0
  2191  000C  00FF               	movwf	127
  2192  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2193  000E  0009               	retfie
  2194  000F                     __end_of_ISR:	
  2195                           
  2196                           	psect	text14
  2197  01D4                     __ptext14:	
  2198 ;; *************** function _nrf24l01ISR *****************
  2199 ;; Defined at:
  2200 ;;		line 8 in file "nrf24l01.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		None
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1
  2214 ;;      Params:         0       0       0
  2215 ;;      Locals:         0       0       0
  2216 ;;      Temps:          0       0       0
  2217 ;;      Totals:         0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_ISR
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _nrf24l01ISR
  2229  01D4                     _nrf24l01ISR:	
  2230                           
  2231                           ;incstack = 0
  2232                           ; Regs used in _nrf24l01ISR: []
  2233  01D4  0008               	return
  2234  01D5                     __end_of_nrf24l01ISR:	
  2235  007E                     btemp	set	126	;btemp
  2236  007E                     int$flags	set	126
  2237  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      5       5
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_loop
    _nrf24l01Init->___lwmod
    _nrf24l01Init->_read_flashmem
    _loop->_nrf24l01SendStart
    _nrf24l01SendStart->_nrf24l01Send
    _nrf24l01Send->_nrf24l01SPISend
    _nrf24l01SendByte->_nrf24l01SPISend

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_nrf24l01Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2074
                               _loop
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         8     8      0    1393
                                              7 COMMON     3     3      0
                                              0 BANK0      5     5      0
                             ___bmul
                            ___lwmod
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                       _nrf24l01Send
                      _read_flashmem
 ---------------------------------------------------------------------------------
 (2) _read_flashmem                                        6     4      2     110
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     245
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     178
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _loop                                                 3     3      0     681
                                              8 COMMON     3     3      0
                   _nrf24l01SendByte
                    _nrf24l01SendEnd
                  _nrf24l01SendStart
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendStart                                    2     2      0     568
                                              6 COMMON     2     2      0
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (2) _nrf24l01Send                                         3     2      1     499
                                              3 COMMON     3     2      1
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendEnd                                      0     0      0       0
                     _nrf24l01SPIEnd
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPIEnd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendByte                                     1     1      0      67
                                              3 COMMON     1     1      0
                    _nrf24l01SPISend
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SPISend                                      2     2      0      45
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (6) _nrf24l01ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _nrf24l01SendByte
       _nrf24l01SPISend
     _nrf24l01SendEnd
       _nrf24l01SPIEnd
     _nrf24l01SendStart
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01Send
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart
   _nrf24l01Init
     ___bmul
     ___lwmod
     _nrf24l01SPIEnd
     _nrf24l01SPISend
     _nrf24l01SPIStart
     _nrf24l01Send
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart
     _read_flashmem

 _ISR (ROOT)
   _nrf24l01ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5       5       6        6.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      12       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 08 13:16:31 2018

             ___bmul@product 0073                  __CFG_CP$OFF 0000                           l81 019D  
        nrf24l01Send@command 0075                  __CFG_LVP$ON 0000                          l814 016A  
                        l840 011A                          l754 01A2                          l850 0129  
                        l818 0170                          l834 0102                          l860 0139  
                        l836 010E                          l844 0123                          l864 013B  
                        l936 01B3                          l866 0140                          l858 012E  
                        l890 0058                          l888 003B                          u205 011B  
                        u175 0105                          u257 0145                          u267 01B9  
                        u195 0114                          _ISR 0004                          u277 01C2  
            loop@payloadByte 007A                 __CFG_BORV$LO 0000                          wreg 0009  
                       ?_ISR 0070               ??_nrf24l01Init 0077               ??_nrf24l01Send 0074  
               __CFG_WRT$OFF 0000                __p_NVMEM_text 07E0                         _main 01A8  
                       _mode 007C                         _loop 0128                         fsr0h 0005  
                       indf0 0000                         fsr0l 0004                         btemp 007E  
                       start 000F                nrf24l01Init@i 0022            ___bmul@multiplier 0074  
    nrf24l01SendStart@config 0077                        ??_ISR 0070                        ?_main 0070  
                      ?_loop 0070                __CFG_WDTE$OFF 0000              __end_of___lwmod 0128  
                      _NVMEM 07E0                __CFG_PWRTE$ON 0000               __CFG_BOREN$OFF 0000  
                      status 0003                        wtemp0 007E             _nrf24l01SPIStart 01CF  
             __CFG_MCLRE$OFF 0000              __initialization 0010                 __end_of_main 01B5  
               __end_of_loop 014C               __CFG_LPBOR$OFF 0000                       ??_main 007B  
                     ??_loop 0078             ??_nrf24l01SPIEnd 0071     __size_of_nrf24l01SPISend 000F  
           _nrf24l01SendByte 01CB                       _PMADRH 0192                       _PMADRL 0191  
                     _PMDATH 0194                       _PMDATL 0193                       _PMCON1 0195  
                     _PMCON2 0196     __size_of_nrf24l01SendEnd 000A         __size_of_nrf24l01ISR 0001  
                     ___bmul 0168               __CFG_STVREN$ON 0000                    ??___lwmod 0075  
       __end_of_nrf24l01Init 00FC         __end_of_nrf24l01Send 0199                       _status 007B  
               __pdataCOMMON 007C       __size_of_read_flashmem 001C      __end_of__initialization 0013  
              __end_of_NVMEM 0800          ___bmul@multiplicand 0071               __pcstackCOMMON 0070  
          ??_nrf24l01SPISend 0071                _read_flashmem 014C                   __pmaintext 01A8  
                    ?___bmul 0071            ??_nrf24l01SendEnd 0071                   __pintentry 0004  
        nrf24l01SPISend@data 0072            _nrf24l01SendStart 0179           ?_nrf24l01SendStart 0070  
      __end_of_n_ADDRESS_MUL 01D4     __end_of_nrf24l01SPIStart 01D2                      _SSP1BUF 0211  
        ??_nrf24l01SendStart 0076               ?_read_flashmem 0071        __size_of_nrf24l01Init 00E6  
      __size_of_nrf24l01Send 000F              __size_of___bmul 0011    __end_of_nrf24l01SendStart 018A  
   __end_of_nrf24l01SendByte 01CF                      ___lwmod 00FC                      __ptext1 0016  
                    __ptext2 014C                      __ptext3 00FC                      __ptext4 0168  
                    __ptext5 0128                      __ptext6 0179                      __ptext7 018A  
                    __ptext8 01CF                      __ptext9 01B5                 __size_of_ISR 000B  
       end_of_initialization 0013                 _nrf24l01Init 0016                 _nrf24l01Send 018A  
           nrf24l01Init@byte 0021             nrf24l01Init@rxPW 0024             nrf24l01Init@pipe 0023  
                  _PORTAbits 000C             __CFG_FOSC$INTOSC 0000                    _TRISAbits 008C  
                  _TRISCbits 008E             nrf24l01Send@data 0073                ??_nrf24l01ISR 0070  
            ??_read_flashmem 0073   __size_of_nrf24l01SendStart 0011               __end_of___bmul 0179  
              __pidataCOMMON 01D2          start_initialization 0010              _nrf24l01SPISend 0199  
                __end_of_ISR 000F  nrf24l01SendByte@payloadByte 0073      __size_of_nrf24l01SPIEnd 0007  
            _nrf24l01SendEnd 01B5                     ??___bmul 0072          __end_of_nrf24l01ISR 01D5  
                __pbssCOMMON 007B                    ___latbits 0000                __pcstackBANK0 0020  
          ?_nrf24l01SPIStart 0070           ??_nrf24l01SPIStart 0071            ?_nrf24l01SendByte 0070  
                   ?___lwmod 0071         __end_of_n_ADDRESS_P0 01CB      __end_of_nrf24l01SPISend 01A8  
              _NVMEM_absaddr 07E0           ??_nrf24l01SendByte 0073      __end_of_nrf24l01SendEnd 01BF  
                _nrf24l01ISR 01D4               _nrf24l01SPIEnd 01BF             __size_of___lwmod 002C  
           ?_nrf24l01SPISend 0070                _n_ADDRESS_MUL 01D3                     __ptext10 01BF  
                   __ptext11 01CB                     __ptext12 0199                     __ptext14 01D4  
           ?_nrf24l01SendEnd 0070       __end_of_nrf24l01SPIEnd 01C6          nrf24l01Init@channel 0020  
              __size_of_main 000D                __size_of_loop 0024        __end_of_read_flashmem 0168  
                   int$flags 007E                 _SSP1STATbits 0214                   _INTCONbits 000B  
            ?_nrf24l01SPIEnd 0070                     intlevel1 0000          read_flashmem@offset 0071  
               _n_ADDRESS_P0 01C6          read_flashmem@result 0075                   _PMCON1bits 0195  
           ___lwmod@dividend 0073            __CFG_CLKOUTEN$OFF 0000                   _OSCCONbits 0099  
  __size_of_nrf24l01SPIStart 0003                __pstringtext1 01C6                __pstringtext2 01D3  
            ___lwmod@divisor 0071              ___lwmod@counter 0076                  _SSPCON1bits 0215  
  __size_of_nrf24l01SendByte 0004                ?_nrf24l01Init 0070                ?_nrf24l01Send 0073  
               ?_nrf24l01ISR 0070  
