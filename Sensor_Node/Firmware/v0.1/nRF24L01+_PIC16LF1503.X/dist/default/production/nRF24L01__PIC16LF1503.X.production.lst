

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 21 17:39:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	_NVMEM_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16LF1503 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000E                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018E                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  020C                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0391                     	;# 
   150  0392                     	;# 
   151  0393                     	;# 
   152  0498                     	;# 
   153  0498                     	;# 
   154  0499                     	;# 
   155  049A                     	;# 
   156  049B                     	;# 
   157  049B                     	;# 
   158  049C                     	;# 
   159  049D                     	;# 
   160  049E                     	;# 
   161  049F                     	;# 
   162  0611                     	;# 
   163  0612                     	;# 
   164  0613                     	;# 
   165  0613                     	;# 
   166  0614                     	;# 
   167  0615                     	;# 
   168  0616                     	;# 
   169  0616                     	;# 
   170  0617                     	;# 
   171  0618                     	;# 
   172  0619                     	;# 
   173  0619                     	;# 
   174  061A                     	;# 
   175  061B                     	;# 
   176  061C                     	;# 
   177  061C                     	;# 
   178  0691                     	;# 
   179  0692                     	;# 
   180  0693                     	;# 
   181  0694                     	;# 
   182  0695                     	;# 
   183  0F0F                     	;# 
   184  0F10                     	;# 
   185  0F11                     	;# 
   186  0F12                     	;# 
   187  0F13                     	;# 
   188  0F14                     	;# 
   189  0F15                     	;# 
   190  0F16                     	;# 
   191  0F17                     	;# 
   192  0F18                     	;# 
   193  0F19                     	;# 
   194  0F1A                     	;# 
   195  0F1B                     	;# 
   196  0F1C                     	;# 
   197  0F1D                     	;# 
   198  0F1E                     	;# 
   199  0F1F                     	;# 
   200  0FE3                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  008C                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010E                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011D                     	;# 
   266  018C                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0194                     	;# 
   274  0195                     	;# 
   275  0196                     	;# 
   276  020C                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0214                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0391                     	;# 
   293  0392                     	;# 
   294  0393                     	;# 
   295  0498                     	;# 
   296  0498                     	;# 
   297  0499                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049B                     	;# 
   301  049C                     	;# 
   302  049D                     	;# 
   303  049E                     	;# 
   304  049F                     	;# 
   305  0611                     	;# 
   306  0612                     	;# 
   307  0613                     	;# 
   308  0613                     	;# 
   309  0614                     	;# 
   310  0615                     	;# 
   311  0616                     	;# 
   312  0616                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  0619                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  061C                     	;# 
   321  0691                     	;# 
   322  0692                     	;# 
   323  0693                     	;# 
   324  0694                     	;# 
   325  0695                     	;# 
   326  0F0F                     	;# 
   327  0F10                     	;# 
   328  0F11                     	;# 
   329  0F12                     	;# 
   330  0F13                     	;# 
   331  0F14                     	;# 
   332  0F15                     	;# 
   333  0F16                     	;# 
   334  0F17                     	;# 
   335  0F18                     	;# 
   336  0F19                     	;# 
   337  0F1A                     	;# 
   338  0F1B                     	;# 
   339  0F1C                     	;# 
   340  0F1D                     	;# 
   341  0F1E                     	;# 
   342  0F1F                     	;# 
   343  0FE3                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  008C                     	;# 
   382  008E                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0099                     	;# 
   390  009A                     	;# 
   391  009B                     	;# 
   392  009B                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  010C                     	;# 
   398  010E                     	;# 
   399  0111                     	;# 
   400  0112                     	;# 
   401  0113                     	;# 
   402  0114                     	;# 
   403  0115                     	;# 
   404  0116                     	;# 
   405  0117                     	;# 
   406  0118                     	;# 
   407  0119                     	;# 
   408  011D                     	;# 
   409  018C                     	;# 
   410  018E                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  020C                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  0212                     	;# 
   423  0212                     	;# 
   424  0213                     	;# 
   425  0213                     	;# 
   426  0214                     	;# 
   427  0214                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0216                     	;# 
   432  0216                     	;# 
   433  0217                     	;# 
   434  0217                     	;# 
   435  0391                     	;# 
   436  0392                     	;# 
   437  0393                     	;# 
   438  0498                     	;# 
   439  0498                     	;# 
   440  0499                     	;# 
   441  049A                     	;# 
   442  049B                     	;# 
   443  049B                     	;# 
   444  049C                     	;# 
   445  049D                     	;# 
   446  049E                     	;# 
   447  049F                     	;# 
   448  0611                     	;# 
   449  0612                     	;# 
   450  0613                     	;# 
   451  0613                     	;# 
   452  0614                     	;# 
   453  0615                     	;# 
   454  0616                     	;# 
   455  0616                     	;# 
   456  0617                     	;# 
   457  0618                     	;# 
   458  0619                     	;# 
   459  0619                     	;# 
   460  061A                     	;# 
   461  061B                     	;# 
   462  061C                     	;# 
   463  061C                     	;# 
   464  0691                     	;# 
   465  0692                     	;# 
   466  0693                     	;# 
   467  0694                     	;# 
   468  0695                     	;# 
   469  0F0F                     	;# 
   470  0F10                     	;# 
   471  0F11                     	;# 
   472  0F12                     	;# 
   473  0F13                     	;# 
   474  0F14                     	;# 
   475  0F15                     	;# 
   476  0F16                     	;# 
   477  0F17                     	;# 
   478  0F18                     	;# 
   479  0F19                     	;# 
   480  0F1A                     	;# 
   481  0F1B                     	;# 
   482  0F1C                     	;# 
   483  0F1D                     	;# 
   484  0F1E                     	;# 
   485  0F1F                     	;# 
   486  0FE3                     	;# 
   487  0FE4                     	;# 
   488  0FE5                     	;# 
   489  0FE6                     	;# 
   490  0FE7                     	;# 
   491  0FE8                     	;# 
   492  0FE9                     	;# 
   493  0FEA                     	;# 
   494  0FEB                     	;# 
   495  0FED                     	;# 
   496  0FEE                     	;# 
   497  0FEF                     	;# 
   498  0000                     	;# 
   499  0001                     	;# 
   500  0002                     	;# 
   501  0003                     	;# 
   502  0004                     	;# 
   503  0005                     	;# 
   504  0006                     	;# 
   505  0007                     	;# 
   506  0008                     	;# 
   507  0009                     	;# 
   508  000A                     	;# 
   509  000B                     	;# 
   510  000C                     	;# 
   511  000E                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  008C                     	;# 
   525  008E                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0097                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010E                     	;# 
   542  0111                     	;# 
   543  0112                     	;# 
   544  0113                     	;# 
   545  0114                     	;# 
   546  0115                     	;# 
   547  0116                     	;# 
   548  0117                     	;# 
   549  0118                     	;# 
   550  0119                     	;# 
   551  011D                     	;# 
   552  018C                     	;# 
   553  018E                     	;# 
   554  0191                     	;# 
   555  0191                     	;# 
   556  0192                     	;# 
   557  0193                     	;# 
   558  0193                     	;# 
   559  0194                     	;# 
   560  0195                     	;# 
   561  0196                     	;# 
   562  020C                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0216                     	;# 
   575  0216                     	;# 
   576  0217                     	;# 
   577  0217                     	;# 
   578  0391                     	;# 
   579  0392                     	;# 
   580  0393                     	;# 
   581  0498                     	;# 
   582  0498                     	;# 
   583  0499                     	;# 
   584  049A                     	;# 
   585  049B                     	;# 
   586  049B                     	;# 
   587  049C                     	;# 
   588  049D                     	;# 
   589  049E                     	;# 
   590  049F                     	;# 
   591  0611                     	;# 
   592  0612                     	;# 
   593  0613                     	;# 
   594  0613                     	;# 
   595  0614                     	;# 
   596  0615                     	;# 
   597  0616                     	;# 
   598  0616                     	;# 
   599  0617                     	;# 
   600  0618                     	;# 
   601  0619                     	;# 
   602  0619                     	;# 
   603  061A                     	;# 
   604  061B                     	;# 
   605  061C                     	;# 
   606  061C                     	;# 
   607  0691                     	;# 
   608  0692                     	;# 
   609  0693                     	;# 
   610  0694                     	;# 
   611  0695                     	;# 
   612  0F0F                     	;# 
   613  0F10                     	;# 
   614  0F11                     	;# 
   615  0F12                     	;# 
   616  0F13                     	;# 
   617  0F14                     	;# 
   618  0F15                     	;# 
   619  0F16                     	;# 
   620  0F17                     	;# 
   621  0F18                     	;# 
   622  0F19                     	;# 
   623  0F1A                     	;# 
   624  0F1B                     	;# 
   625  0F1C                     	;# 
   626  0F1D                     	;# 
   627  0F1E                     	;# 
   628  0F1F                     	;# 
   629  0FE3                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641                           
   642                           	psect	idataBANK0
   643  02DE                     __pidataBANK0:	
   644                           
   645                           ;initializer for _mode
   646  02DE  3401               	retlw	1
   647  07E0                     _NVMEM_absaddr	set	2016
   648                           
   649                           	psect	stringtext1
   650  02D5                     __pstringtext1:	
   651  02D5                     _n_ADDRESS_P0:	
   652  02D5  34AD               	retlw	173
   653  02D6  3487               	retlw	135
   654  02D7  3466               	retlw	102
   655  02D8  34BC               	retlw	188
   656  02D9  34BB               	retlw	187
   657  02DA                     __end_of_n_ADDRESS_P0:	
   658                           
   659                           	psect	stringtext2
   660  02DF                     __pstringtext2:	
   661  02DF                     _n_ADDRESS_MUL:	
   662  02DF  3421               	retlw	33
   663  02E0                     __end_of_n_ADDRESS_MUL:	
   664  07E0                     _NVMEM_absaddr	set	2016
   665                           
   666                           	psect	_NVMEM_text
   667  07E0                     __p_NVMEM_text:	
   668  07E0                     _NVMEM:	
   669  07E0  3455               	retlw	85
   670  07E1  346E               	retlw	110
   671  07E2  3463               	retlw	99
   672  07E3  346F               	retlw	111
   673  07E4  346E               	retlw	110
   674  07E5  3466               	retlw	102
   675  07E6  3469               	retlw	105
   676  07E7  3467               	retlw	103
   677  07E8  3475               	retlw	117
   678  07E9  3472               	retlw	114
   679  07EA  3465               	retlw	101
   680  07EB  3464               	retlw	100
   681  07EC  3400               	retlw	0
   682  07ED  3400               	retlw	0
   683  07EE  3400               	retlw	0
   684  07EF  3400               	retlw	0
   685  07F0  3400               	retlw	0
   686  07F1  3400               	retlw	0
   687  07F2  3400               	retlw	0
   688  07F3  3400               	retlw	0
   689  07F4  3400               	retlw	0
   690  07F5  3400               	retlw	0
   691  07F6  3400               	retlw	0
   692  07F7  3400               	retlw	0
   693  07F8  3400               	retlw	0
   694  07F9  3400               	retlw	0
   695  07FA  3400               	retlw	0
   696  07FB  3400               	retlw	0
   697  07FC  3400               	retlw	0
   698  07FD  3400               	retlw	0
   699  07FE  3400               	retlw	0
   700  07FF  3400               	retlw	0
   701  0800                     __end_of_NVMEM:	
   702  000C                     _PORTAbits	set	12
   703  000B                     _INTCONbits	set	11
   704  008E                     _TRISCbits	set	142
   705  009E                     _ADCON1bits	set	158
   706  008C                     _TRISAbits	set	140
   707  0095                     _OPTION_REGbits	set	149
   708  0099                     _OSCCONbits	set	153
   709  009C                     _ADRESH	set	156
   710  009B                     _ADRESL	set	155
   711  009D                     _ADCON0bits	set	157
   712  0194                     _PMDATH	set	404
   713  0193                     _PMDATL	set	403
   714  0196                     _PMCON2	set	406
   715  0195                     _PMCON1bits	set	405
   716  0192                     _PMADRH	set	402
   717  0191                     _PMADRL	set	401
   718  0195                     _PMCON1	set	405
   719  018E                     _ANSELC	set	398
   720  018C                     _ANSELA	set	396
   721  018C                     _ANSELAbits	set	396
   722  0215                     _SSPCON1bits	set	533
   723  0214                     _SSP1STATbits	set	532
   724  0211                     _SSP1BUF	set	529
   725                           
   726                           ; #config settings
   727  0000                     
   728                           	psect	cinit
   729  0010                     start_initialization:	
   730  0010                     __initialization:	
   731                           
   732                           ; Initialize objects allocated to BANK0
   733  0010  22DE               	fcall	__pidataBANK0	;fetch initializer
   734  0011  00BB               	movwf	__pdataBANK0& (0+127)
   735                           
   736                           ; Clear objects allocated to BANK0
   737  0012  01BA               	clrf	__pbssBANK0& (0+127)
   738  0013                     end_of_initialization:	
   739                           ;End of C runtime variable initialization code
   740                           
   741  0013                     __end_of__initialization:	
   742  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   743  0014  0020               	movlb	0
   744  0015  29E0               	ljmp	_main	;jump to C main() function
   745                           
   746                           	psect	bssBANK0
   747  003A                     __pbssBANK0:	
   748  003A                     _status:	
   749  003A                     	ds	1
   750                           
   751                           	psect	dataBANK0
   752  003B                     __pdataBANK0:	
   753  003B                     _mode:	
   754  003B                     	ds	1
   755                           
   756                           	psect	cstackCOMMON
   757  0070                     __pcstackCOMMON:	
   758  0070                     ?_nrf24l01ISR:	
   759  0070                     ??_nrf24l01ISR:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_nrf24l01SendByte:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_nrf24l01SendStart:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_nrf24l01SendEnd:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_nrf24l01Init:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_ISR:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ??_ISR:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_sendName:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_loop:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_main:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_nrf24l01SPIStart:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_nrf24l01SPISend:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_nrf24l01SPIEnd:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_nrf24l01SetTransmitMode:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_nrf24l01InitRegisters:	
   802                           ; 1 bytes @ 0x0
   803                           
   804                           
   805                           ; 1 bytes @ 0x0
   806  0070                     	ds	1
   807  0071                     ??_nrf24l01SendEnd:	
   808  0071                     ??_nrf24l01SPIStart:	
   809                           ; 1 bytes @ 0x1
   810                           
   811  0071                     ??_nrf24l01SPISend:	
   812                           ; 1 bytes @ 0x1
   813                           
   814  0071                     ??_nrf24l01SPIEnd:	
   815                           ; 1 bytes @ 0x1
   816                           
   817  0071                     ?_read_flashmem:	
   818                           ; 1 bytes @ 0x1
   819                           
   820  0071                     ?___lwdiv:	
   821                           ; 2 bytes @ 0x1
   822                           
   823  0071                     ?___lwmod:	
   824                           ; 2 bytes @ 0x1
   825                           
   826  0071                     nrf24l01SPISend@data:	
   827                           ; 2 bytes @ 0x1
   828                           
   829  0071                     read_flashmem@offset:	
   830                           ; 1 bytes @ 0x1
   831                           
   832  0071                     ___lwdiv@divisor:	
   833                           ; 2 bytes @ 0x1
   834                           
   835  0071                     ___lwmod@divisor:	
   836                           ; 2 bytes @ 0x1
   837                           
   838                           
   839                           ; 2 bytes @ 0x1
   840  0071                     	ds	1
   841  0072                     ??_nrf24l01SendByte:	
   842  0072                     ?_nrf24l01Send:	
   843                           ; 1 bytes @ 0x2
   844                           
   845  0072                     nrf24l01Send@data:	
   846                           ; 1 bytes @ 0x2
   847                           
   848  0072                     nrf24l01SendByte@payloadByte:	
   849                           ; 1 bytes @ 0x2
   850                           
   851                           
   852                           ; 1 bytes @ 0x2
   853  0072                     	ds	1
   854  0073                     ??_read_flashmem:	
   855  0073                     ??_nrf24l01Send:	
   856                           ; 1 bytes @ 0x3
   857                           
   858  0073                     ___lwdiv@dividend:	
   859                           ; 1 bytes @ 0x3
   860                           
   861  0073                     ___lwmod@dividend:	
   862                           ; 2 bytes @ 0x3
   863                           
   864                           
   865                           ; 2 bytes @ 0x3
   866  0073                     	ds	1
   867  0074                     nrf24l01Send@command:	
   868                           
   869                           ; 1 bytes @ 0x4
   870  0074                     	ds	1
   871  0075                     ??_nrf24l01SetTransmitMode:	
   872  0075                     ??_nrf24l01InitRegisters:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0075                     ??___lwdiv:	
   876                           ; 1 bytes @ 0x5
   877                           
   878  0075                     ??___lwmod:	
   879                           ; 1 bytes @ 0x5
   880                           
   881  0075                     read_flashmem@result:	
   882                           ; 1 bytes @ 0x5
   883                           
   884                           
   885                           ; 2 bytes @ 0x5
   886  0075                     	ds	1
   887  0076                     ??_nrf24l01Init:	
   888  0076                     nrf24l01SetTransmitMode@config:	
   889                           ; 1 bytes @ 0x6
   890                           
   891  0076                     ___lwmod@counter:	
   892                           ; 1 bytes @ 0x6
   893                           
   894  0076                     ___lwdiv@quotient:	
   895                           ; 1 bytes @ 0x6
   896                           
   897                           
   898                           ; 2 bytes @ 0x6
   899  0076                     	ds	1
   900  0077                     ??_nrf24l01SendStart:	
   901  0077                     ??_sendName:	
   902                           ; 1 bytes @ 0x7
   903                           
   904                           
   905                           ; 1 bytes @ 0x7
   906  0077                     	ds	1
   907  0078                     ___lwdiv@counter:	
   908  0078                     sendName@offset:	
   909                           ; 1 bytes @ 0x8
   910                           
   911                           
   912                           ; 2 bytes @ 0x8
   913  0078                     	ds	1
   914  0079                     ?_utoa:	
   915  0079                     utoa@val:	
   916                           ; 1 bytes @ 0x9
   917                           
   918                           
   919                           ; 2 bytes @ 0x9
   920  0079                     	ds	1
   921  007A                     sendName@btye:	
   922                           
   923                           ; 1 bytes @ 0xA
   924  007A                     	ds	1
   925  007B                     utoa@base:	
   926                           
   927                           ; 2 bytes @ 0xB
   928  007B                     	ds	2
   929                           
   930                           	psect	cstackBANK0
   931  0020                     __pcstackBANK0:	
   932  0020                     ??_utoa:	
   933  0020                     nrf24l01InitRegisters@setupAW:	
   934                           ; 1 bytes @ 0x0
   935                           
   936                           
   937                           ; 1 bytes @ 0x0
   938  0020                     	ds	1
   939  0021                     nrf24l01InitRegisters@setupRetries:	
   940  0021                     utoa@v:	
   941                           ; 1 bytes @ 0x1
   942                           
   943                           
   944                           ; 2 bytes @ 0x1
   945  0021                     	ds	1
   946  0022                     nrf24l01InitRegisters@feature:	
   947                           
   948                           ; 1 bytes @ 0x2
   949  0022                     	ds	1
   950  0023                     nrf24l01InitRegisters@rfSetup:	
   951  0023                     utoa@c:	
   952                           ; 1 bytes @ 0x3
   953                           
   954                           
   955                           ; 1 bytes @ 0x3
   956  0023                     	ds	1
   957  0024                     nrf24l01InitRegisters@config:	
   958  0024                     utoa@buf:	
   959                           ; 1 bytes @ 0x4
   960                           
   961                           
   962                           ; 1 bytes @ 0x4
   963  0024                     	ds	1
   964  0025                     ?_itoa:	
   965  0025                     nrf24l01InitRegisters@enRXAddr:	
   966                           ; 1 bytes @ 0x5
   967                           
   968  0025                     itoa@val:	
   969                           ; 1 bytes @ 0x5
   970                           
   971                           
   972                           ; 2 bytes @ 0x5
   973  0025                     	ds	1
   974  0026                     nrf24l01InitRegisters@enAA:	
   975                           
   976                           ; 1 bytes @ 0x6
   977  0026                     	ds	1
   978  0027                     nrf24l01InitRegisters@DynPD:	
   979  0027                     itoa@base:	
   980                           ; 1 bytes @ 0x7
   981                           
   982                           
   983                           ; 2 bytes @ 0x7
   984  0027                     	ds	2
   985  0029                     ??_itoa:	
   986                           
   987                           ; 1 bytes @ 0x9
   988  0029                     	ds	1
   989  002A                     itoa@cp:	
   990                           
   991                           ; 1 bytes @ 0xA
   992  002A                     	ds	1
   993  002B                     itoa@buf:	
   994                           
   995                           ; 1 bytes @ 0xB
   996  002B                     	ds	1
   997  002C                     ??_loop:	
   998                           
   999                           ; 1 bytes @ 0xC
  1000  002C                     	ds	3
  1001  002F                     loop@buffer:	
  1002                           
  1003                           ; 8 bytes @ 0xF
  1004  002F                     	ds	8
  1005  0037                     loop@result:	
  1006                           
  1007                           ; 2 bytes @ 0x17
  1008  0037                     	ds	2
  1009  0039                     ??_main:	
  1010                           
  1011                           ; 1 bytes @ 0x19
  1012  0039                     	ds	1
  1013                           
  1014                           	psect	maintext
  1015  01E0                     __pmaintext:	
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1018 ;;
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 109 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : B1F/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1
  1035 ;;      Params:         0       0       0
  1036 ;;      Locals:         0       0       0
  1037 ;;      Temps:          0       1       0
  1038 ;;      Totals:         0       1       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels required when called:    7
  1041 ;; This function calls:
  1042 ;;		_loop
  1043 ;;		_nrf24l01Init
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _main
  1051  01E0                     _main:	
  1052                           
  1053                           ;main.c: 111: INTCONbits.GIE = 0;
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1057  01E0  138B               	bcf	11,7	;volatile
  1058                           
  1059                           ;main.c: 112: INTCONbits.PEIE = 1;
  1060  01E1  170B               	bsf	11,6	;volatile
  1061                           
  1062                           ;main.c: 114: OSCCONbits.IRCF = 0b1111;
  1063  01E2  3078               	movlw	120
  1064  01E3  0021               	movlb	1	; select bank1
  1065  01E4  0499               	iorwf	25,f	;volatile
  1066                           
  1067                           ;main.c: 115: OSCCONbits.SCS = 0b10;
  1068  01E5  0819               	movf	25,w	;volatile
  1069  01E6  39FC               	andlw	-4
  1070  01E7  3802               	iorlw	2
  1071  01E8  0099               	movwf	25	;volatile
  1072                           
  1073                           ;main.c: 117: _delay((unsigned long)((10)*(16000000/4000.0)));
  1074  01E9  3034               	movlw	52
  1075  01EA  0020               	movlb	0	; select bank0
  1076  01EB  00B9               	movwf	??_main
  1077  01EC  30F1               	movlw	241
  1078  01ED                     u497:	
  1079  01ED  0B89               	decfsz	9,f
  1080  01EE  29ED               	goto	u497
  1081  01EF  0BB9               	decfsz	??_main,f
  1082  01F0  29ED               	goto	u497
  1083  01F1  3200               	nop2
  1084                           
  1085                           ;main.c: 119: nrf24l01Init();
  1086  01F2  2207               	fcall	_nrf24l01Init
  1087                           
  1088                           ;main.c: 121: OPTION_REGbits.nWPUEN = 0;
  1089  01F3  0021               	movlb	1	; select bank1
  1090  01F4  1395               	bcf	21,7	;volatile
  1091                           
  1092                           ;main.c: 125: ADCON0bits.ADON = 0;
  1093  01F5  101D               	bcf	29,0	;volatile
  1094                           
  1095                           ;main.c: 127: ANSELAbits.ANSA4 = 1;
  1096  01F6  0023               	movlb	3	; select bank3
  1097  01F7  160C               	bsf	12,4	;volatile
  1098                           
  1099                           ;main.c: 128: TRISAbits.TRISA4 = 1;
  1100  01F8  0021               	movlb	1	; select bank1
  1101  01F9  160C               	bsf	12,4	;volatile
  1102                           
  1103                           ;main.c: 130: ADCON1bits.ADCS = 0b111;
  1104  01FA  3070               	movlw	112
  1105  01FB  049E               	iorwf	30,f	;volatile
  1106                           
  1107                           ;main.c: 131: ADCON1bits.ADFM = 1;
  1108  01FC  179E               	bsf	30,7	;volatile
  1109                           
  1110                           ;main.c: 132: ADCON1bits.ADPREF = 0b00;
  1111  01FD  30FC               	movlw	-4
  1112  01FE  059E               	andwf	30,f	;volatile
  1113                           
  1114                           ;main.c: 134: ADCON0bits.CHS = 3;
  1115  01FF  081D               	movf	29,w	;volatile
  1116  0200  3983               	andlw	-125
  1117  0201  380C               	iorlw	12
  1118  0202  009D               	movwf	29	;volatile
  1119                           
  1120                           ;main.c: 135: ADCON0bits.ADON = 1;
  1121  0203  141D               	bsf	29,0	;volatile
  1122                           
  1123                           ;main.c: 137: INTCONbits.GIE = 1;
  1124  0204  178B               	bsf	11,7	;volatile
  1125  0205                     l1439:	
  1126                           ;main.c: 139: while(1){
  1127                           
  1128                           
  1129                           ;main.c: 140: loop();
  1130  0205  2016               	fcall	_loop
  1131  0206  2A05               	goto	l1439
  1132  0207                     __end_of_main:	
  1133                           ;main.c: 141: }
  1134                           ;main.c: 143: return;
  1135                           
  1136                           
  1137                           	psect	text1
  1138  0207                     __ptext1:	
  1139 ;; *************** function _nrf24l01Init *****************
  1140 ;; Defined at:
  1141 ;;		line 186 in file "nrf24l01.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1
  1155 ;;      Params:         0       0       0
  1156 ;;      Locals:         0       0       0
  1157 ;;      Temps:          1       0       0
  1158 ;;      Totals:         1       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    5
  1162 ;; This function calls:
  1163 ;;		_nrf24l01InitRegisters
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _nrf24l01Init
  1171  0207                     _nrf24l01Init:	
  1172                           
  1173                           ;nrf24l01.c: 188: TRISAbits.TRISA0 = 0;
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  1177  0207  0021               	movlb	1	; select bank1
  1178  0208  100C               	bcf	12,0	;volatile
  1179                           
  1180                           ;nrf24l01.c: 192: ANSELA = 0x00;
  1181  0209  0023               	movlb	3	; select bank3
  1182  020A  018C               	clrf	12	;volatile
  1183                           
  1184                           ;nrf24l01.c: 193: ANSELC = 0x00;
  1185  020B  018E               	clrf	14	;volatile
  1186                           
  1187                           ;nrf24l01.c: 195: TRISAbits.TRISA1 = 0;
  1188  020C  0021               	movlb	1	; select bank1
  1189  020D  108C               	bcf	12,1	;volatile
  1190                           
  1191                           ;nrf24l01.c: 197: TRISCbits.TRISC1 = 1;
  1192  020E  148E               	bsf	14,1	;volatile
  1193                           
  1194                           ;nrf24l01.c: 198: TRISCbits.TRISC2 = 0;
  1195  020F  110E               	bcf	14,2	;volatile
  1196                           
  1197                           ;nrf24l01.c: 199: TRISCbits.TRISC0 = 0;
  1198  0210  100E               	bcf	14,0	;volatile
  1199                           
  1200                           ;nrf24l01.c: 201: SSPCON1bits.SSPEN = 0;
  1201  0211  0024               	movlb	4	; select bank4
  1202  0212  1295               	bcf	21,5	;volatile
  1203                           
  1204                           ;nrf24l01.c: 202: SSPCON1bits.CKP = 0;
  1205  0213  1215               	bcf	21,4	;volatile
  1206                           
  1207                           ;nrf24l01.c: 203: SSP1STATbits.CKE = 1;
  1208  0214  1714               	bsf	20,6	;volatile
  1209                           
  1210                           ;nrf24l01.c: 204: SSPCON1bits.SSPM = 0b0000;
  1211  0215  30F0               	movlw	-16
  1212  0216  0595               	andwf	21,f	;volatile
  1213                           
  1214                           ;nrf24l01.c: 206: SSPCON1bits.SSPEN = 1;
  1215  0217  1695               	bsf	21,5	;volatile
  1216                           
  1217                           ;nrf24l01.c: 208: PORTAbits.RA0 = 0;
  1218  0218  0020               	movlb	0	; select bank0
  1219  0219  100C               	bcf	12,0	;volatile
  1220                           
  1221                           ;nrf24l01.c: 210: _delay((unsigned long)((11)*(16000000/4000.0)));
  1222  021A  303A               	movlw	58
  1223  021B  00F6               	movwf	??_nrf24l01Init
  1224  021C  3023               	movlw	35
  1225  021D                     u507:	
  1226  021D  0B89               	decfsz	9,f
  1227  021E  2A1D               	goto	u507
  1228  021F  0BF6               	decfsz	??_nrf24l01Init,f
  1229  0220  2A1D               	goto	u507
  1230  0221  0000               	nop
  1231                           
  1232                           ;nrf24l01.c: 212: nrf24l01InitRegisters();
  1233  0222  209F               	fcall	_nrf24l01InitRegisters
  1234                           
  1235                           ;nrf24l01.c: 214: _delay((unsigned long)((2)*(16000000/4000.0)));
  1236  0223  300B               	movlw	11
  1237  0224  00F6               	movwf	??_nrf24l01Init
  1238  0225  3062               	movlw	98
  1239  0226                     u517:	
  1240  0226  0B89               	decfsz	9,f
  1241  0227  2A26               	goto	u517
  1242  0228  0BF6               	decfsz	??_nrf24l01Init,f
  1243  0229  2A26               	goto	u517
  1244  022A  3200               	nop2
  1245  022B  0008               	return
  1246  022C                     __end_of_nrf24l01Init:	
  1247                           
  1248                           	psect	text2
  1249  009F                     __ptext2:	
  1250 ;; *************** function _nrf24l01InitRegisters *****************
  1251 ;; Defined at:
  1252 ;;		line 99 in file "nrf24l01.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  DynPD           1    7[BANK0 ] struct .
  1257 ;;  enAA            1    6[BANK0 ] struct .
  1258 ;;  enRXAddr        1    5[BANK0 ] struct .
  1259 ;;  config          1    4[BANK0 ] struct .
  1260 ;;  rfSetup         1    3[BANK0 ] struct .
  1261 ;;  feature         1    2[BANK0 ] struct .
  1262 ;;  setupRetries    1    1[BANK0 ] struct .
  1263 ;;  setupAW         1    0[BANK0 ] struct .
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1
  1273 ;;      Params:         0       0       0
  1274 ;;      Locals:         0       8       0
  1275 ;;      Temps:          1       0       0
  1276 ;;      Totals:         1       8       0
  1277 ;;Total ram usage:        9 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		_nrf24l01Send
  1282 ;; This function is called by:
  1283 ;;		_nrf24l01Init
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _nrf24l01InitRegisters
  1289  009F                     _nrf24l01InitRegisters:	
  1290                           
  1291                           ;nrf24l01.c: 101: nrf24l01Send(0b00100000 | 0x00, 0x00);
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  1295  009F  01F2               	clrf	nrf24l01Send@data
  1296  00A0  3020               	movlw	32
  1297  00A1  229B               	fcall	_nrf24l01Send
  1298                           
  1299                           ;nrf24l01.c: 103: _delay((unsigned long)((130)*(16000000/4000000.0)));
  1300  00A2  30AD               	movlw	173
  1301  00A3                     u527:	
  1302  00A3  0B89               	decfsz	9,f
  1303  00A4  28A3               	goto	u527
  1304  00A5  0000               	nop
  1305                           
  1306                           ;nrf24l01.c: 105: n_SETUP_AW_t setupAW;
  1307                           ;nrf24l01.c: 106: setupAW.byte = 0x00;
  1308  00A6  0020               	movlb	0	; select bank0
  1309  00A7  01A0               	clrf	nrf24l01InitRegisters@setupAW
  1310                           
  1311                           ;nrf24l01.c: 107: setupAW.AW = 3;
  1312  00A8  3003               	movlw	3
  1313  00A9  04A0               	iorwf	nrf24l01InitRegisters@setupAW,f
  1314                           
  1315                           ;nrf24l01.c: 108: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  1316  00AA  0820               	movf	nrf24l01InitRegisters@setupAW,w
  1317  00AB  00F5               	movwf	??_nrf24l01InitRegisters
  1318  00AC  0875               	movf	??_nrf24l01InitRegisters,w
  1319  00AD  00F2               	movwf	nrf24l01Send@data
  1320  00AE  3022               	movlw	34
  1321  00AF  229B               	fcall	_nrf24l01Send
  1322                           
  1323                           ;nrf24l01.c: 111: n_SETUP_RETR_t setupRetries;
  1324                           ;nrf24l01.c: 112: setupRetries.ARD = 15;
  1325  00B0  30F0               	movlw	240
  1326  00B1  0020               	movlb	0	; select bank0
  1327  00B2  04A1               	iorwf	nrf24l01InitRegisters@setupRetries,f
  1328                           
  1329                           ;nrf24l01.c: 113: setupRetries.ARC = 15;
  1330  00B3  300F               	movlw	15
  1331  00B4  04A1               	iorwf	nrf24l01InitRegisters@setupRetries,f
  1332                           
  1333                           ;nrf24l01.c: 114: nrf24l01Send(0b00100000 | 0x04, setupRetries.byte);
  1334  00B5  0821               	movf	nrf24l01InitRegisters@setupRetries,w
  1335  00B6  00F5               	movwf	??_nrf24l01InitRegisters
  1336  00B7  0875               	movf	??_nrf24l01InitRegisters,w
  1337  00B8  00F2               	movwf	nrf24l01Send@data
  1338  00B9  3024               	movlw	36
  1339  00BA  229B               	fcall	_nrf24l01Send
  1340                           
  1341                           ;nrf24l01.c: 122: n_RF_SETUP_t rfSetup;
  1342                           ;nrf24l01.c: 123: rfSetup.RF_DR_LOW = 0;
  1343  00BB  0020               	movlb	0	; select bank0
  1344  00BC  12A3               	bcf	nrf24l01InitRegisters@rfSetup,5
  1345                           
  1346                           ;nrf24l01.c: 124: rfSetup.RF_DR_HIGH = 1;
  1347  00BD  15A3               	bsf	nrf24l01InitRegisters@rfSetup,3
  1348                           
  1349                           ;nrf24l01.c: 125: rfSetup.RF_PWR = 3;
  1350  00BE  3006               	movlw	6
  1351  00BF  04A3               	iorwf	nrf24l01InitRegisters@rfSetup,f
  1352                           
  1353                           ;nrf24l01.c: 126: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  1354  00C0  0823               	movf	nrf24l01InitRegisters@rfSetup,w
  1355  00C1  00F5               	movwf	??_nrf24l01InitRegisters
  1356  00C2  0875               	movf	??_nrf24l01InitRegisters,w
  1357  00C3  00F2               	movwf	nrf24l01Send@data
  1358  00C4  3026               	movlw	38
  1359  00C5  229B               	fcall	_nrf24l01Send
  1360                           
  1361                           ;nrf24l01.c: 129: n_CONFIG_t config;
  1362                           ;nrf24l01.c: 130: config.PRIM_RX = 1;
  1363  00C6  0020               	movlb	0	; select bank0
  1364  00C7  1424               	bsf	nrf24l01InitRegisters@config,0
  1365                           
  1366                           ;nrf24l01.c: 131: config.EN_CRC = 1;
  1367  00C8  15A4               	bsf	nrf24l01InitRegisters@config,3
  1368                           
  1369                           ;nrf24l01.c: 132: config.CRCO = 1;
  1370  00C9  1524               	bsf	nrf24l01InitRegisters@config,2
  1371                           
  1372                           ;nrf24l01.c: 133: config.PWR_UP = 1;
  1373  00CA  14A4               	bsf	nrf24l01InitRegisters@config,1
  1374                           
  1375                           ;nrf24l01.c: 134: nrf24l01Send(0b00100000 | 0x00, config.byte);
  1376  00CB  0824               	movf	nrf24l01InitRegisters@config,w
  1377  00CC  00F5               	movwf	??_nrf24l01InitRegisters
  1378  00CD  0875               	movf	??_nrf24l01InitRegisters,w
  1379  00CE  00F2               	movwf	nrf24l01Send@data
  1380  00CF  3020               	movlw	32
  1381  00D0  229B               	fcall	_nrf24l01Send
  1382                           
  1383                           ;nrf24l01.c: 137: n_EN_RXADDR_t enRXAddr;
  1384                           ;nrf24l01.c: 138: enRXAddr.ERX_P0 = 1;
  1385  00D1  0020               	movlb	0	; select bank0
  1386  00D2  1425               	bsf	nrf24l01InitRegisters@enRXAddr,0
  1387                           
  1388                           ;nrf24l01.c: 139: enRXAddr.ERX_P1 = 1;
  1389  00D3  14A5               	bsf	nrf24l01InitRegisters@enRXAddr,1
  1390                           
  1391                           ;nrf24l01.c: 140: enRXAddr.ERX_P2 = 1;
  1392  00D4  1525               	bsf	nrf24l01InitRegisters@enRXAddr,2
  1393                           
  1394                           ;nrf24l01.c: 141: enRXAddr.ERX_P3 = 1;
  1395  00D5  15A5               	bsf	nrf24l01InitRegisters@enRXAddr,3
  1396                           
  1397                           ;nrf24l01.c: 142: enRXAddr.ERX_P4 = 1;
  1398  00D6  1625               	bsf	nrf24l01InitRegisters@enRXAddr,4
  1399                           
  1400                           ;nrf24l01.c: 143: enRXAddr.ERX_P5 = 1;
  1401  00D7  16A5               	bsf	nrf24l01InitRegisters@enRXAddr,5
  1402                           
  1403                           ;nrf24l01.c: 144: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  1404  00D8  0825               	movf	nrf24l01InitRegisters@enRXAddr,w
  1405  00D9  00F5               	movwf	??_nrf24l01InitRegisters
  1406  00DA  0875               	movf	??_nrf24l01InitRegisters,w
  1407  00DB  00F2               	movwf	nrf24l01Send@data
  1408  00DC  3022               	movlw	34
  1409  00DD  229B               	fcall	_nrf24l01Send
  1410                           
  1411                           ;nrf24l01.c: 147: n_EN_AA_t enAA;
  1412                           ;nrf24l01.c: 148: enAA.byte = nrf24l01Send(0b00000000 | 0x01, 0);
  1413  00DE  01F2               	clrf	nrf24l01Send@data
  1414  00DF  3001               	movlw	1
  1415  00E0  229B               	fcall	_nrf24l01Send
  1416  00E1  00F5               	movwf	??_nrf24l01InitRegisters
  1417  00E2  0875               	movf	??_nrf24l01InitRegisters,w
  1418  00E3  0020               	movlb	0	; select bank0
  1419  00E4  00A6               	movwf	nrf24l01InitRegisters@enAA
  1420                           
  1421                           ;nrf24l01.c: 149: enAA.ENAA_P0 = 0;
  1422  00E5  1026               	bcf	nrf24l01InitRegisters@enAA,0
  1423                           
  1424                           ;nrf24l01.c: 150: enAA.ENAA_P1 = 0;
  1425  00E6  10A6               	bcf	nrf24l01InitRegisters@enAA,1
  1426                           
  1427                           ;nrf24l01.c: 151: enAA.ENAA_P2 = 0;
  1428  00E7  1126               	bcf	nrf24l01InitRegisters@enAA,2
  1429                           
  1430                           ;nrf24l01.c: 152: enAA.ENAA_P3 = 0;
  1431  00E8  11A6               	bcf	nrf24l01InitRegisters@enAA,3
  1432                           
  1433                           ;nrf24l01.c: 153: enAA.ENAA_P4 = 0;
  1434  00E9  1226               	bcf	nrf24l01InitRegisters@enAA,4
  1435                           
  1436                           ;nrf24l01.c: 154: enAA.ENAA_P5 = 0;
  1437  00EA  12A6               	bcf	nrf24l01InitRegisters@enAA,5
  1438                           
  1439                           ;nrf24l01.c: 155: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  1440  00EB  0826               	movf	nrf24l01InitRegisters@enAA,w
  1441  00EC  00F5               	movwf	??_nrf24l01InitRegisters
  1442  00ED  0875               	movf	??_nrf24l01InitRegisters,w
  1443  00EE  00F2               	movwf	nrf24l01Send@data
  1444  00EF  3021               	movlw	33
  1445  00F0  229B               	fcall	_nrf24l01Send
  1446                           
  1447                           ;nrf24l01.c: 159: n_FEATURE_t feature;
  1448                           ;nrf24l01.c: 160: feature.byte = nrf24l01Send(0b00000000 | 0x1D, 0);
  1449  00F1  01F2               	clrf	nrf24l01Send@data
  1450  00F2  301D               	movlw	29
  1451  00F3  229B               	fcall	_nrf24l01Send
  1452  00F4  00F5               	movwf	??_nrf24l01InitRegisters
  1453  00F5  0875               	movf	??_nrf24l01InitRegisters,w
  1454  00F6  0020               	movlb	0	; select bank0
  1455  00F7  00A2               	movwf	nrf24l01InitRegisters@feature
  1456                           
  1457                           ;nrf24l01.c: 161: feature.EN_DPL = 1;
  1458  00F8  1522               	bsf	nrf24l01InitRegisters@feature,2
  1459                           
  1460                           ;nrf24l01.c: 162: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  1461  00F9  0822               	movf	nrf24l01InitRegisters@feature,w
  1462  00FA  00F5               	movwf	??_nrf24l01InitRegisters
  1463  00FB  0875               	movf	??_nrf24l01InitRegisters,w
  1464  00FC  00F2               	movwf	nrf24l01Send@data
  1465  00FD  303D               	movlw	61
  1466  00FE  229B               	fcall	_nrf24l01Send
  1467                           
  1468                           ;nrf24l01.c: 164: n_DYNPD_t DynPD;
  1469                           ;nrf24l01.c: 165: DynPD.byte = nrf24l01Send(0b00000000 | 0x1C, 0);
  1470  00FF  01F2               	clrf	nrf24l01Send@data
  1471  0100  301C               	movlw	28
  1472  0101  229B               	fcall	_nrf24l01Send
  1473  0102  00F5               	movwf	??_nrf24l01InitRegisters
  1474  0103  0875               	movf	??_nrf24l01InitRegisters,w
  1475  0104  0020               	movlb	0	; select bank0
  1476  0105  00A7               	movwf	nrf24l01InitRegisters@DynPD
  1477                           
  1478                           ;nrf24l01.c: 166: DynPD.DPL_P0 = 1;
  1479  0106  1427               	bsf	nrf24l01InitRegisters@DynPD,0
  1480                           
  1481                           ;nrf24l01.c: 167: DynPD.DPL_P1 = 1;
  1482  0107  14A7               	bsf	nrf24l01InitRegisters@DynPD,1
  1483                           
  1484                           ;nrf24l01.c: 168: DynPD.DPL_P2 = 1;
  1485  0108  1527               	bsf	nrf24l01InitRegisters@DynPD,2
  1486                           
  1487                           ;nrf24l01.c: 169: DynPD.DPL_P3 = 1;
  1488  0109  15A7               	bsf	nrf24l01InitRegisters@DynPD,3
  1489                           
  1490                           ;nrf24l01.c: 170: DynPD.DPL_P4 = 1;
  1491  010A  1627               	bsf	nrf24l01InitRegisters@DynPD,4
  1492                           
  1493                           ;nrf24l01.c: 171: DynPD.DPL_P5 = 1;
  1494  010B  16A7               	bsf	nrf24l01InitRegisters@DynPD,5
  1495                           
  1496                           ;nrf24l01.c: 172: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  1497  010C  0827               	movf	nrf24l01InitRegisters@DynPD,w
  1498  010D  00F5               	movwf	??_nrf24l01InitRegisters
  1499  010E  0875               	movf	??_nrf24l01InitRegisters,w
  1500  010F  00F2               	movwf	nrf24l01Send@data
  1501  0110  303C               	movlw	60
  1502  0111  229B               	fcall	_nrf24l01Send
  1503                           
  1504                           ;nrf24l01.c: 175: status.byte = 0x00;
  1505  0112  0020               	movlb	0	; select bank0
  1506  0113  01BA               	clrf	_status
  1507                           
  1508                           ;nrf24l01.c: 176: status.RX_DR = 1;
  1509  0114  173A               	bsf	_status,6
  1510                           
  1511                           ;nrf24l01.c: 177: status.TX_DS = 1;
  1512  0115  16BA               	bsf	_status,5
  1513                           
  1514                           ;nrf24l01.c: 178: status.MAX_RT = 1;
  1515  0116  163A               	bsf	_status,4
  1516                           
  1517                           ;nrf24l01.c: 179: nrf24l01Send(0b00100000 | 0x07, status.byte);
  1518  0117  083A               	movf	_status,w
  1519  0118  00F5               	movwf	??_nrf24l01InitRegisters
  1520  0119  0875               	movf	??_nrf24l01InitRegisters,w
  1521  011A  00F2               	movwf	nrf24l01Send@data
  1522  011B  3027               	movlw	39
  1523  011C  229B               	fcall	_nrf24l01Send
  1524                           
  1525                           ;nrf24l01.c: 182: nrf24l01Send(0b11100001, 0);
  1526  011D  01F2               	clrf	nrf24l01Send@data
  1527  011E  30E1               	movlw	225
  1528  011F  229B               	fcall	_nrf24l01Send
  1529                           
  1530                           ;nrf24l01.c: 183: nrf24l01Send(0b11100010, 0);
  1531  0120  01F2               	clrf	nrf24l01Send@data
  1532  0121  30E2               	movlw	226
  1533  0122  229B               	fcall	_nrf24l01Send
  1534  0123  0008               	return
  1535  0124                     __end_of_nrf24l01InitRegisters:	
  1536                           
  1537                           	psect	text3
  1538  0016                     __ptext3:	
  1539 ;; *************** function _loop *****************
  1540 ;; Defined at:
  1541 ;;		line 40 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  buffer          8   15[BANK0 ] unsigned char [8]
  1546 ;;  result          2   23[BANK0 ] int 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1
  1556 ;;      Params:         0       0       0
  1557 ;;      Locals:         0      10       0
  1558 ;;      Temps:          0       3       0
  1559 ;;      Totals:         0      13       0
  1560 ;;Total ram usage:       13 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    6
  1563 ;; This function calls:
  1564 ;;		_itoa
  1565 ;;		_nrf24l01SendByte
  1566 ;;		_nrf24l01SendEnd
  1567 ;;		_nrf24l01SendStart
  1568 ;;		_sendName
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _loop
  1576  0016                     _loop:	
  1577                           
  1578                           ;main.c: 42: switch (mode){
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1582  0016  2888               	goto	l1369
  1583  0017                     l1317:	
  1584                           ;main.c: 43: case 1:
  1585                           
  1586                           
  1587                           ;main.c: 46: nrf24l01SendStart();
  1588  0017  22C0               	fcall	_nrf24l01SendStart
  1589                           
  1590                           ;main.c: 47: sendName();
  1591  0018  224F               	fcall	_sendName
  1592                           
  1593                           ;main.c: 48: nrf24l01SendByte('/');
  1594  0019  302F               	movlw	47
  1595  001A  22DA               	fcall	_nrf24l01SendByte
  1596                           
  1597                           ;main.c: 49: nrf24l01SendByte('B');
  1598  001B  3042               	movlw	66
  1599  001C  22DA               	fcall	_nrf24l01SendByte
  1600                           
  1601                           ;main.c: 50: nrf24l01SendByte('O');
  1602  001D  304F               	movlw	79
  1603  001E  22DA               	fcall	_nrf24l01SendByte
  1604                           
  1605                           ;main.c: 51: nrf24l01SendByte('O');
  1606  001F  304F               	movlw	79
  1607  0020  22DA               	fcall	_nrf24l01SendByte
  1608                           
  1609                           ;main.c: 52: nrf24l01SendByte('T');
  1610  0021  3054               	movlw	84
  1611  0022  22DA               	fcall	_nrf24l01SendByte
  1612                           
  1613                           ;main.c: 53: nrf24l01SendByte('/');
  1614  0023  302F               	movlw	47
  1615  0024  22DA               	fcall	_nrf24l01SendByte
  1616                           
  1617                           ;main.c: 54: nrf24l01SendByte('1');
  1618  0025  3031               	movlw	49
  1619  0026  22DA               	fcall	_nrf24l01SendByte
  1620                           
  1621                           ;main.c: 55: nrf24l01SendEnd();
  1622  0027  22B6               	fcall	_nrf24l01SendEnd
  1623                           
  1624                           ;main.c: 57: mode = 2;
  1625  0028  3002               	movlw	2
  1626  0029  0020               	movlb	0	; select bank0
  1627  002A  00AC               	movwf	??_loop
  1628  002B  082C               	movf	??_loop,w
  1629  002C  00BB               	movwf	_mode
  1630                           
  1631                           ;main.c: 58: break;
  1632  002D  2891               	goto	l1371
  1633  002E                     l1321:	
  1634                           ;main.c: 61: case 2:
  1635                           
  1636                           
  1637                           ;main.c: 63: ADCON0bits.CHS = 3;
  1638  002E  0021               	movlb	1	; select bank1
  1639  002F  081D               	movf	29,w	;volatile
  1640  0030  3983               	andlw	-125
  1641  0031  380C               	iorlw	12
  1642  0032  009D               	movwf	29	;volatile
  1643                           
  1644                           ;main.c: 65: _delay((unsigned long)((50)*(16000000/4000000.0)));
  1645  0033  3042               	movlw	66
  1646  0034                     u537:	
  1647  0034  0B89               	decfsz	9,f
  1648  0035  2834               	goto	u537
  1649  0036  3200               	nop2
  1650                           
  1651                           ;main.c: 67: ADCON0bits.ADGO = 1;
  1652  0037  0021               	movlb	1	; select bank1
  1653  0038  149D               	bsf	29,1	;volatile
  1654  0039                     l69:	
  1655                           ;main.c: 69: while (ADCON0bits.ADGO){
  1656                           
  1657  0039  0021               	movlb	1	; select bank1
  1658  003A  1C9D               	btfss	29,1	;volatile
  1659  003B  283E               	goto	l1327
  1660                           
  1661                           ;main.c: 70: __nop();
  1662  003C  0000               	nop
  1663  003D  2839               	goto	l69
  1664  003E                     l1327:	
  1665                           
  1666                           ;main.c: 71: }
  1667                           ;main.c: 74: char buffer[8];
  1668                           ;main.c: 75: int result = 0x00;
  1669  003E  0020               	movlb	0	; select bank0
  1670  003F  01B7               	clrf	loop@result
  1671  0040  01B8               	clrf	loop@result+1
  1672                           
  1673                           ;main.c: 76: result = ADRESL;
  1674  0041  0021               	movlb	1	; select bank1
  1675  0042  081B               	movf	27,w	;volatile
  1676  0043  0020               	movlb	0	; select bank0
  1677  0044  00AC               	movwf	??_loop
  1678  0045  01AD               	clrf	??_loop+1
  1679  0046  082C               	movf	??_loop,w
  1680  0047  00B7               	movwf	loop@result
  1681  0048  082D               	movf	??_loop+1,w
  1682  0049  00B8               	movwf	loop@result+1
  1683                           
  1684                           ;main.c: 77: result|= (ADRESH << 8);
  1685  004A  0021               	movlb	1	; select bank1
  1686  004B  081C               	movf	28,w	;volatile
  1687  004C  0020               	movlb	0	; select bank0
  1688  004D  00AC               	movwf	??_loop
  1689  004E  01AD               	clrf	??_loop+1
  1690  004F  082C               	movf	??_loop,w
  1691  0050  00AD               	movwf	??_loop+1
  1692  0051  01AC               	clrf	??_loop
  1693  0052  082C               	movf	??_loop,w
  1694  0053  04B7               	iorwf	loop@result,f
  1695  0054  082D               	movf	??_loop+1,w
  1696  0055  04B8               	iorwf	loop@result+1,f
  1697                           
  1698                           ;main.c: 81: itoa(buffer, result, 10);
  1699  0056  0838               	movf	loop@result+1,w
  1700  0057  00A6               	movwf	itoa@val+1
  1701  0058  0837               	movf	loop@result,w
  1702  0059  00A5               	movwf	itoa@val
  1703  005A  300A               	movlw	10
  1704  005B  00A7               	movwf	itoa@base
  1705  005C  3000               	movlw	0
  1706  005D  00A8               	movwf	itoa@base+1
  1707  005E  302F               	movlw	(low (loop@buffer| 0))& (0+255)
  1708  005F  222C               	fcall	_itoa
  1709                           
  1710                           ;main.c: 86: nrf24l01SendStart();
  1711  0060  22C0               	fcall	_nrf24l01SendStart
  1712                           
  1713                           ;main.c: 87: sendName();
  1714  0061  224F               	fcall	_sendName
  1715                           
  1716                           ;main.c: 88: nrf24l01SendByte('/');
  1717  0062  302F               	movlw	47
  1718  0063  22DA               	fcall	_nrf24l01SendByte
  1719                           
  1720                           ;main.c: 89: nrf24l01SendByte('A');
  1721  0064  3041               	movlw	65
  1722  0065  22DA               	fcall	_nrf24l01SendByte
  1723                           
  1724                           ;main.c: 90: nrf24l01SendByte('D');
  1725  0066  3044               	movlw	68
  1726  0067  22DA               	fcall	_nrf24l01SendByte
  1727                           
  1728                           ;main.c: 91: nrf24l01SendByte('C');
  1729  0068  3043               	movlw	67
  1730  0069  22DA               	fcall	_nrf24l01SendByte
  1731                           
  1732                           ;main.c: 92: nrf24l01SendByte('3');
  1733  006A  3033               	movlw	51
  1734  006B  22DA               	fcall	_nrf24l01SendByte
  1735                           
  1736                           ;main.c: 93: nrf24l01SendByte('/');
  1737  006C  302F               	movlw	47
  1738  006D  22DA               	fcall	_nrf24l01SendByte
  1739                           
  1740                           ;main.c: 94: nrf24l01SendByte(buffer[0]);
  1741  006E  0020               	movlb	0	; select bank0
  1742  006F  082F               	movf	loop@buffer,w
  1743  0070  22DA               	fcall	_nrf24l01SendByte
  1744                           
  1745                           ;main.c: 95: nrf24l01SendByte(buffer[1]);
  1746  0071  0020               	movlb	0	; select bank0
  1747  0072  0830               	movf	loop@buffer+1,w
  1748  0073  22DA               	fcall	_nrf24l01SendByte
  1749                           
  1750                           ;main.c: 96: nrf24l01SendByte(buffer[2]);
  1751  0074  0020               	movlb	0	; select bank0
  1752  0075  0831               	movf	loop@buffer+2,w
  1753  0076  22DA               	fcall	_nrf24l01SendByte
  1754                           
  1755                           ;main.c: 97: nrf24l01SendByte(buffer[3]);
  1756  0077  0020               	movlb	0	; select bank0
  1757  0078  0832               	movf	loop@buffer+3,w
  1758  0079  22DA               	fcall	_nrf24l01SendByte
  1759                           
  1760                           ;main.c: 98: nrf24l01SendByte(buffer[4]);
  1761  007A  0020               	movlb	0	; select bank0
  1762  007B  0833               	movf	loop@buffer+4,w
  1763  007C  22DA               	fcall	_nrf24l01SendByte
  1764                           
  1765                           ;main.c: 99: nrf24l01SendByte(buffer[5]);
  1766  007D  0020               	movlb	0	; select bank0
  1767  007E  0834               	movf	loop@buffer+5,w
  1768  007F  22DA               	fcall	_nrf24l01SendByte
  1769                           
  1770                           ;main.c: 100: nrf24l01SendByte(buffer[6]);
  1771  0080  0020               	movlb	0	; select bank0
  1772  0081  0835               	movf	loop@buffer+6,w
  1773  0082  22DA               	fcall	_nrf24l01SendByte
  1774                           
  1775                           ;main.c: 101: nrf24l01SendByte(buffer[7]);
  1776  0083  0020               	movlb	0	; select bank0
  1777  0084  0836               	movf	loop@buffer+7,w
  1778  0085  22DA               	fcall	_nrf24l01SendByte
  1779                           
  1780                           ;main.c: 102: nrf24l01SendEnd();
  1781  0086  22B6               	fcall	_nrf24l01SendEnd
  1782                           
  1783                           ;main.c: 103: }
  1784  0087  2891               	goto	l1371
  1785  0088                     l1369:	
  1786  0088  0020               	movlb	0	; select bank0
  1787  0089  083B               	movf	_mode,w
  1788                           
  1789                           ; Switch size 1, requested type "space"
  1790                           ; Number of cases is 2, Range of values is 1 to 2
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte            7     4 (average)
  1794                           ; direct_byte           13     9 (fixed)
  1795                           ; jumptable            263     9 (fixed)
  1796                           ;	Chosen strategy is simple_byte
  1797  008A  3A01               	xorlw	1	; case 1
  1798  008B  1903               	skipnz
  1799  008C  2817               	goto	l1317
  1800  008D  3A03               	xorlw	3	; case 2
  1801  008E  1903               	skipnz
  1802  008F  282E               	goto	l1321
  1803  0090  2891               	goto	l1371
  1804  0091                     l1371:	
  1805                           
  1806                           ;main.c: 105: _delay((unsigned long)((500)*(16000000/4000.0)));
  1807  0091  300B               	movlw	11
  1808  0092  0020               	movlb	0	; select bank0
  1809  0093  00AD               	movwf	??_loop+1
  1810  0094  3026               	movlw	38
  1811  0095  00AC               	movwf	??_loop
  1812  0096  305D               	movlw	93
  1813  0097                     u547:	
  1814  0097  0B89               	decfsz	9,f
  1815  0098  2897               	goto	u547
  1816  0099  0BAC               	decfsz	??_loop,f
  1817  009A  2897               	goto	u547
  1818  009B  0BAD               	decfsz	??_loop+1,f
  1819  009C  2897               	goto	u547
  1820  009D  3200               	nop2
  1821  009E  0008               	return
  1822  009F                     __end_of_loop:	
  1823                           
  1824                           	psect	text4
  1825  024F                     __ptext4:	
  1826 ;; *************** function _sendName *****************
  1827 ;; Defined at:
  1828 ;;		line 17 in file "main.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  offset          2    8[COMMON] unsigned int 
  1833 ;;  btye            1   10[COMMON] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         0       0       0
  1844 ;;      Locals:         3       0       0
  1845 ;;      Temps:          1       0       0
  1846 ;;      Totals:         4       0       0
  1847 ;;Total ram usage:        4 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    4
  1850 ;; This function calls:
  1851 ;;		_nrf24l01SendByte
  1852 ;;		_read_flashmem
  1853 ;; This function is called by:
  1854 ;;		_loop
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _sendName
  1860  024F                     _sendName:	
  1861                           
  1862                           ;main.c: 19: unsigned int offset = 0;
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _sendName: [wreg+status,2+status,0+pclath+cstack]
  1866  024F  01F8               	clrf	sendName@offset
  1867  0250  01F9               	clrf	sendName@offset+1
  1868  0251                     l1187:	
  1869                           ;main.c: 20: unsigned char btye;
  1870                           ;main.c: 21: while (offset < 16){
  1871                           
  1872  0251  3000               	movlw	0
  1873  0252  0279               	subwf	sendName@offset+1,w
  1874  0253  3010               	movlw	16
  1875  0254  1903               	skipnz
  1876  0255  0278               	subwf	sendName@offset,w
  1877  0256  1803               	btfsc	3,0
  1878  0257  0008               	return
  1879                           
  1880                           ;main.c: 22: btye = read_flashmem(offset);
  1881  0258  0879               	movf	sendName@offset+1,w
  1882  0259  00F2               	movwf	read_flashmem@offset+1
  1883  025A  0878               	movf	sendName@offset,w
  1884  025B  00F1               	movwf	read_flashmem@offset
  1885  025C  226B               	fcall	_read_flashmem
  1886  025D  0871               	movf	?_read_flashmem,w
  1887  025E  00F7               	movwf	??_sendName
  1888  025F  0877               	movf	??_sendName,w
  1889  0260  00FA               	movwf	sendName@btye
  1890                           
  1891                           ;main.c: 24: if (btye == 0x00){
  1892  0261  087A               	movf	sendName@btye,w
  1893  0262  1903               	btfsc	3,2
  1894  0263  0008               	return
  1895                           
  1896                           ;main.c: 26: }
  1897                           ;main.c: 28: nrf24l01SendByte(btye);
  1898                           
  1899                           ;main.c: 25: return;
  1900  0264  087A               	movf	sendName@btye,w
  1901  0265  22DA               	fcall	_nrf24l01SendByte
  1902                           
  1903                           ;main.c: 29: offset++;
  1904  0266  3001               	movlw	1
  1905  0267  07F8               	addwf	sendName@offset,f
  1906  0268  3000               	movlw	0
  1907  0269  3DF9               	addwfc	sendName@offset+1,f
  1908  026A  2A51               	goto	l1187
  1909  026B                     __end_of_sendName:	
  1910                           
  1911                           	psect	text5
  1912  026B                     __ptext5:	
  1913 ;; *************** function _read_flashmem *****************
  1914 ;; Defined at:
  1915 ;;		line 58 in file "flash.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  offset          2    1[COMMON] unsigned int 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  result          2    5[COMMON] unsigned int 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  2    1[COMMON] unsigned int 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1
  1929 ;;      Params:         2       0       0
  1930 ;;      Locals:         2       0       0
  1931 ;;      Temps:          2       0       0
  1932 ;;      Totals:         6       0       0
  1933 ;;Total ram usage:        6 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_sendName
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _read_flashmem
  1945  026B                     _read_flashmem:	
  1946                           
  1947                           ;flash.c: 60: INTCONbits.GIE = 0;
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _read_flashmem: [wreg+status,2+status,0]
  1951  026B  138B               	bcf	11,7	;volatile
  1952                           
  1953                           ;flash.c: 62: PMCON1 = 0x00;
  1954  026C  0023               	movlb	3	; select bank3
  1955  026D  0195               	clrf	21	;volatile
  1956                           
  1957                           ;flash.c: 64: PMADRL = (char) (((0x800U-32) + offset) >> 0);
  1958  026E  0871               	movf	read_flashmem@offset,w
  1959  026F  3EE0               	addlw	224
  1960  0270  0091               	movwf	17	;volatile
  1961                           
  1962                           ;flash.c: 65: PMADRH = (char) (((0x800U-32) + offset) >> 8);
  1963  0271  0871               	movf	read_flashmem@offset,w
  1964  0272  3EE0               	addlw	224
  1965  0273  00F3               	movwf	??_read_flashmem
  1966  0274  3007               	movlw	7
  1967  0275  3D72               	addwfc	read_flashmem@offset+1,w
  1968  0276  00F4               	movwf	??_read_flashmem+1
  1969  0277  0874               	movf	??_read_flashmem+1,w
  1970  0278  0092               	movwf	18	;volatile
  1971                           
  1972                           ;flash.c: 67: PMCON1bits.RD = 1;
  1973  0279  1415               	bsf	21,0	;volatile
  1974                           
  1975                           ;flash.c: 69: __nop();
  1976  027A  0000               	nop
  1977                           
  1978                           ;flash.c: 70: __nop();
  1979  027B  0000               	nop
  1980                           
  1981                           ;flash.c: 72: unsigned int result = (unsigned) ((PMDATH) << 8) | (PMDATL);
  1982  027C  0023               	movlb	3	; select bank3
  1983  027D  0814               	movf	20,w	;volatile
  1984  027E  00F6               	movwf	read_flashmem@result+1
  1985  027F  0813               	movf	19,w	;volatile
  1986  0280  00F5               	movwf	read_flashmem@result
  1987                           
  1988                           ;flash.c: 74: INTCONbits.GIE = 1;
  1989  0281  178B               	bsf	11,7	;volatile
  1990                           
  1991                           ;flash.c: 76: return result;
  1992  0282  0876               	movf	read_flashmem@result+1,w
  1993  0283  00F2               	movwf	?_read_flashmem+1
  1994  0284  0875               	movf	read_flashmem@result,w
  1995  0285  00F1               	movwf	?_read_flashmem
  1996  0286  0008               	return
  1997  0287                     __end_of_read_flashmem:	
  1998                           
  1999                           	psect	text6
  2000  02DA                     __ptext6:	
  2001 ;; *************** function _nrf24l01SendByte *****************
  2002 ;; Defined at:
  2003 ;;		line 85 in file "nrf24l01.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  payloadByte     1    wreg     unsigned char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  payloadByte     1    2[COMMON] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1
  2017 ;;      Params:         0       0       0
  2018 ;;      Locals:         1       0       0
  2019 ;;      Temps:          0       0       0
  2020 ;;      Totals:         1       0       0
  2021 ;;Total ram usage:        1 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    3
  2024 ;; This function calls:
  2025 ;;		_nrf24l01SPISend
  2026 ;; This function is called by:
  2027 ;;		_sendName
  2028 ;;		_loop
  2029 ;;		_sendString
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _nrf24l01SendByte
  2035  02DA                     _nrf24l01SendByte:	
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _nrf24l01SendByte: [wreg+status,2+status,0+pclath+cstack]
  2039                           ;nrf24l01SendByte@payloadByte stored from wreg
  2040  02DA  00F2               	movwf	nrf24l01SendByte@payloadByte
  2041                           
  2042                           ;nrf24l01.c: 86: nrf24l01SPISend(payloadByte);
  2043  02DB  0872               	movf	nrf24l01SendByte@payloadByte,w
  2044  02DC  22AB               	fcall	_nrf24l01SPISend
  2045  02DD  0008               	return
  2046  02DE                     __end_of_nrf24l01SendByte:	
  2047                           
  2048                           	psect	text7
  2049  02C0                     __ptext7:	
  2050 ;; *************** function _nrf24l01SendStart *****************
  2051 ;; Defined at:
  2052 ;;		line 74 in file "nrf24l01.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1
  2066 ;;      Params:         0       0       0
  2067 ;;      Locals:         0       0       0
  2068 ;;      Temps:          0       0       0
  2069 ;;      Totals:         0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    5
  2073 ;; This function calls:
  2074 ;;		_nrf24l01SPISend
  2075 ;;		_nrf24l01SPIStart
  2076 ;;		_nrf24l01SetTransmitMode
  2077 ;; This function is called by:
  2078 ;;		_loop
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _nrf24l01SendStart
  2084  02C0                     _nrf24l01SendStart:	
  2085                           
  2086                           ;nrf24l01.c: 76: PORTAbits.RA0 = 0;
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _nrf24l01SendStart: [wreg+status,2+status,0+pclath+cstack]
  2090  02C0  0020               	movlb	0	; select bank0
  2091  02C1  100C               	bcf	12,0	;volatile
  2092                           
  2093                           ;nrf24l01.c: 78: nrf24l01SetTransmitMode();
  2094  02C2  2287               	fcall	_nrf24l01SetTransmitMode
  2095                           
  2096                           ;nrf24l01.c: 80: nrf24l01SPIStart();
  2097  02C3  22C7               	fcall	_nrf24l01SPIStart
  2098                           
  2099                           ;nrf24l01.c: 82: nrf24l01SPISend(0b10100000);
  2100  02C4  30A0               	movlw	160
  2101  02C5  22AB               	fcall	_nrf24l01SPISend
  2102  02C6  0008               	return
  2103  02C7                     __end_of_nrf24l01SendStart:	
  2104                           
  2105                           	psect	text8
  2106  0287                     __ptext8:	
  2107 ;; *************** function _nrf24l01SetTransmitMode *****************
  2108 ;; Defined at:
  2109 ;;		line 52 in file "nrf24l01.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  config          1    6[COMMON] struct .
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1
  2123 ;;      Params:         0       0       0
  2124 ;;      Locals:         1       0       0
  2125 ;;      Temps:          1       0       0
  2126 ;;      Totals:         2       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		_nrf24l01Send
  2132 ;; This function is called by:
  2133 ;;		_nrf24l01SendStart
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _nrf24l01SetTransmitMode
  2139  0287                     _nrf24l01SetTransmitMode:	
  2140                           
  2141                           ;nrf24l01.c: 53: n_CONFIG_t config;
  2142                           ;nrf24l01.c: 54: config.byte = nrf24l01Send(0b00000000 | 0x00, 0);
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _nrf24l01SetTransmitMode: [wreg+status,2+status,0+pclath+cstack]
  2146  0287  01F2               	clrf	nrf24l01Send@data
  2147  0288  3000               	movlw	0
  2148  0289  229B               	fcall	_nrf24l01Send
  2149  028A  00F5               	movwf	??_nrf24l01SetTransmitMode
  2150  028B  0875               	movf	??_nrf24l01SetTransmitMode,w
  2151  028C  00F6               	movwf	nrf24l01SetTransmitMode@config
  2152                           
  2153                           ;nrf24l01.c: 55: if (config.PRIM_RX == 1){
  2154  028D  1C76               	btfss	nrf24l01SetTransmitMode@config,0
  2155  028E  0008               	return
  2156                           
  2157                           ;nrf24l01.c: 56: config.PRIM_RX = 0;
  2158  028F  1076               	bcf	nrf24l01SetTransmitMode@config,0
  2159                           
  2160                           ;nrf24l01.c: 57: nrf24l01Send(0b00100000 | 0x00, config.byte);
  2161  0290  0876               	movf	nrf24l01SetTransmitMode@config,w
  2162  0291  00F5               	movwf	??_nrf24l01SetTransmitMode
  2163  0292  0875               	movf	??_nrf24l01SetTransmitMode,w
  2164  0293  00F2               	movwf	nrf24l01Send@data
  2165  0294  3020               	movlw	32
  2166  0295  229B               	fcall	_nrf24l01Send
  2167                           
  2168                           ;nrf24l01.c: 58: _delay((unsigned long)((130)*(16000000/4000000.0)));
  2169  0296  30AD               	movlw	173
  2170  0297                     u557:	
  2171  0297  0B89               	decfsz	9,f
  2172  0298  2A97               	goto	u557
  2173  0299  0000               	nop
  2174  029A  0008               	return
  2175  029B                     __end_of_nrf24l01SetTransmitMode:	
  2176                           
  2177                           	psect	text9
  2178  029B                     __ptext9:	
  2179 ;; *************** function _nrf24l01Send *****************
  2180 ;; Defined at:
  2181 ;;		line 39 in file "nrf24l01.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  command         1    wreg     unsigned char 
  2184 ;;  data            1    2[COMMON] unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  command         1    4[COMMON] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1
  2196 ;;      Params:         1       0       0
  2197 ;;      Locals:         1       0       0
  2198 ;;      Temps:          1       0       0
  2199 ;;      Totals:         3       0       0
  2200 ;;Total ram usage:        3 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    3
  2203 ;; This function calls:
  2204 ;;		_nrf24l01SPIEnd
  2205 ;;		_nrf24l01SPISend
  2206 ;;		_nrf24l01SPIStart
  2207 ;; This function is called by:
  2208 ;;		_nrf24l01SetTransmitMode
  2209 ;;		_nrf24l01InitRegisters
  2210 ;;		_nrf24l01SetRecieveMode
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _nrf24l01Send
  2216  029B                     _nrf24l01Send:	
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  2220                           ;nrf24l01Send@command stored from wreg
  2221  029B  00F4               	movwf	nrf24l01Send@command
  2222                           
  2223                           ;nrf24l01.c: 41: nrf24l01SPIStart();
  2224  029C  22C7               	fcall	_nrf24l01SPIStart
  2225                           
  2226                           ;nrf24l01.c: 43: status.byte = nrf24l01SPISend(command);
  2227  029D  0874               	movf	nrf24l01Send@command,w
  2228  029E  22AB               	fcall	_nrf24l01SPISend
  2229  029F  00F3               	movwf	??_nrf24l01Send
  2230  02A0  0873               	movf	??_nrf24l01Send,w
  2231  02A1  0020               	movlb	0	; select bank0
  2232  02A2  00BA               	movwf	_status
  2233                           
  2234                           ;nrf24l01.c: 44: data = nrf24l01SPISend(data);
  2235  02A3  0872               	movf	nrf24l01Send@data,w
  2236  02A4  22AB               	fcall	_nrf24l01SPISend
  2237  02A5  00F3               	movwf	??_nrf24l01Send
  2238  02A6  0873               	movf	??_nrf24l01Send,w
  2239  02A7  00F2               	movwf	nrf24l01Send@data
  2240                           
  2241                           ;nrf24l01.c: 46: nrf24l01SPIEnd();
  2242  02A8  22CE               	fcall	_nrf24l01SPIEnd
  2243                           
  2244                           ;nrf24l01.c: 48: return data;
  2245  02A9  0872               	movf	nrf24l01Send@data,w
  2246  02AA  0008               	return
  2247  02AB                     __end_of_nrf24l01Send:	
  2248                           
  2249                           	psect	text10
  2250  02C7                     __ptext10:	
  2251 ;; *************** function _nrf24l01SPIStart *****************
  2252 ;; Defined at:
  2253 ;;		line 23 in file "nrf24l01.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    2
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_nrf24l01Send
  2278 ;;		_nrf24l01SendStart
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _nrf24l01SPIStart
  2284  02C7                     _nrf24l01SPIStart:	
  2285                           
  2286                           ;nrf24l01.c: 24: PORTAbits.RA1 = 0;
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _nrf24l01SPIStart: [wreg]
  2290  02C7  0020               	movlb	0	; select bank0
  2291  02C8  108C               	bcf	12,1	;volatile
  2292                           
  2293                           ;nrf24l01.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2294  02C9  300D               	movlw	13
  2295  02CA                     u567:	
  2296  02CA  0B89               	decfsz	9,f
  2297  02CB  2ACA               	goto	u567
  2298  02CC  0000               	nop
  2299  02CD  0008               	return
  2300  02CE                     __end_of_nrf24l01SPIStart:	
  2301                           
  2302                           	psect	text11
  2303  02AB                     __ptext11:	
  2304 ;; *************** function _nrf24l01SPISend *****************
  2305 ;; Defined at:
  2306 ;;		line 28 in file "nrf24l01.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  data            1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  data            1    1[COMMON] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      unsigned char 
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1
  2320 ;;      Params:         0       0       0
  2321 ;;      Locals:         1       0       0
  2322 ;;      Temps:          0       0       0
  2323 ;;      Totals:         1       0       0
  2324 ;;Total ram usage:        1 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_nrf24l01Send
  2331 ;;		_nrf24l01SendStart
  2332 ;;		_nrf24l01SendByte
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _nrf24l01SPISend
  2338  02AB                     _nrf24l01SPISend:	
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _nrf24l01SPISend: [wreg]
  2342                           ;nrf24l01SPISend@data stored from wreg
  2343  02AB  00F1               	movwf	nrf24l01SPISend@data
  2344                           
  2345                           ;nrf24l01.c: 29: SSP1BUF = data;
  2346  02AC  0871               	movf	nrf24l01SPISend@data,w
  2347  02AD  0024               	movlb	4	; select bank4
  2348  02AE  0091               	movwf	17	;volatile
  2349  02AF                     l117:	
  2350                           ;nrf24l01.c: 30: while (!SSP1STATbits.BF){ __nop(); }
  2351                           
  2352  02AF  0024               	movlb	4	; select bank4
  2353  02B0  1814               	btfsc	20,0	;volatile
  2354  02B1  2AB4               	goto	l1045
  2355  02B2  0000               	nop
  2356  02B3  2AAF               	goto	l117
  2357  02B4                     l1045:	
  2358                           
  2359                           ;nrf24l01.c: 31: return SSP1BUF;
  2360  02B4  0811               	movf	17,w	;volatile
  2361  02B5  0008               	return
  2362  02B6                     __end_of_nrf24l01SPISend:	
  2363                           
  2364                           	psect	text12
  2365  02B6                     __ptext12:	
  2366 ;; *************** function _nrf24l01SendEnd *****************
  2367 ;; Defined at:
  2368 ;;		line 89 in file "nrf24l01.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1
  2382 ;;      Params:         0       0       0
  2383 ;;      Locals:         0       0       0
  2384 ;;      Temps:          0       0       0
  2385 ;;      Totals:         0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		_nrf24l01SPIEnd
  2391 ;; This function is called by:
  2392 ;;		_loop
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _nrf24l01SendEnd
  2398  02B6                     _nrf24l01SendEnd:	
  2399                           
  2400                           ;nrf24l01.c: 91: nrf24l01SPIEnd();
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _nrf24l01SendEnd: [wreg+status,2+status,0+pclath+cstack]
  2404  02B6  22CE               	fcall	_nrf24l01SPIEnd
  2405                           
  2406                           ;nrf24l01.c: 93: PORTAbits.RA0 = 1;
  2407  02B7  0020               	movlb	0	; select bank0
  2408  02B8  140C               	bsf	12,0	;volatile
  2409                           
  2410                           ;nrf24l01.c: 94: _delay((unsigned long)((50)*(16000000/4000000.0)));
  2411  02B9  3042               	movlw	66
  2412  02BA                     u577:	
  2413  02BA  0B89               	decfsz	9,f
  2414  02BB  2ABA               	goto	u577
  2415  02BC  3200               	nop2
  2416                           
  2417                           ;nrf24l01.c: 95: PORTAbits.RA0 = 0;
  2418  02BD  0020               	movlb	0	; select bank0
  2419  02BE  100C               	bcf	12,0	;volatile
  2420  02BF  0008               	return
  2421  02C0                     __end_of_nrf24l01SendEnd:	
  2422                           
  2423                           	psect	text13
  2424  02CE                     __ptext13:	
  2425 ;; *************** function _nrf24l01SPIEnd *****************
  2426 ;; Defined at:
  2427 ;;		line 34 in file "nrf24l01.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1
  2441 ;;      Params:         0       0       0
  2442 ;;      Locals:         0       0       0
  2443 ;;      Temps:          0       0       0
  2444 ;;      Totals:         0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    2
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_nrf24l01Send
  2452 ;;		_nrf24l01SendEnd
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _nrf24l01SPIEnd
  2458  02CE                     _nrf24l01SPIEnd:	
  2459                           
  2460                           ;nrf24l01.c: 35: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _nrf24l01SPIEnd: [wreg]
  2464  02CE  300D               	movlw	13
  2465  02CF                     u587:	
  2466  02CF  0B89               	decfsz	9,f
  2467  02D0  2ACF               	goto	u587
  2468  02D1  0000               	nop
  2469                           
  2470                           ;nrf24l01.c: 36: PORTAbits.RA1 = 1;
  2471  02D2  0020               	movlb	0	; select bank0
  2472  02D3  148C               	bsf	12,1	;volatile
  2473  02D4  0008               	return
  2474  02D5                     __end_of_nrf24l01SPIEnd:	
  2475                           
  2476                           	psect	text14
  2477  022C                     __ptext14:	
  2478 ;; *************** function _itoa *****************
  2479 ;; Defined at:
  2480 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  buf             1    wreg     PTR unsigned char 
  2483 ;;		 -> loop@buffer(8), 
  2484 ;;  val             2    5[BANK0 ] int 
  2485 ;;  base            2    7[BANK0 ] int 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  2488 ;;		 -> loop@buffer(8), 
  2489 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  2490 ;;		 -> loop@buffer(8), 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      PTR unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1
  2500 ;;      Params:         0       4       0
  2501 ;;      Locals:         0       2       0
  2502 ;;      Temps:          0       1       0
  2503 ;;      Totals:         0       7       0
  2504 ;;Total ram usage:        7 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    4
  2507 ;; This function calls:
  2508 ;;		_utoa
  2509 ;; This function is called by:
  2510 ;;		_loop
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _itoa
  2516  022C                     _itoa:	
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2520                           ;itoa@buf stored from wreg
  2521  022C  0020               	movlb	0	; select bank0
  2522  022D  00AB               	movwf	itoa@buf
  2523  022E  082B               	movf	itoa@buf,w
  2524  022F  00A9               	movwf	??_itoa
  2525  0230  0829               	movf	??_itoa,w
  2526  0231  00AA               	movwf	itoa@cp
  2527  0232  1FA6               	btfss	itoa@val+1,7
  2528  0233  2A44               	goto	l1211
  2529  0234  302D               	movlw	45
  2530  0235  00A9               	movwf	??_itoa
  2531  0236  082B               	movf	itoa@buf,w
  2532  0237  0086               	movwf	6
  2533  0238  0187               	clrf	7
  2534  0239  0829               	movf	??_itoa,w
  2535  023A  0081               	movwf	1
  2536  023B  3001               	movlw	1
  2537  023C  00A9               	movwf	??_itoa
  2538  023D  0829               	movf	??_itoa,w
  2539  023E  07AB               	addwf	itoa@buf,f
  2540  023F  09A5               	comf	itoa@val,f
  2541  0240  09A6               	comf	itoa@val+1,f
  2542  0241  0AA5               	incf	itoa@val,f
  2543  0242  1903               	skipnz
  2544  0243  0AA6               	incf	itoa@val+1,f
  2545  0244                     l1211:	
  2546  0244  0826               	movf	itoa@val+1,w
  2547  0245  00FA               	movwf	utoa@val+1
  2548  0246  0825               	movf	itoa@val,w
  2549  0247  00F9               	movwf	utoa@val
  2550  0248  0828               	movf	itoa@base+1,w
  2551  0249  00FC               	movwf	utoa@base+1
  2552  024A  0827               	movf	itoa@base,w
  2553  024B  00FB               	movwf	utoa@base
  2554  024C  082B               	movf	itoa@buf,w
  2555  024D  2124               	fcall	_utoa
  2556  024E  0008               	return
  2557  024F                     __end_of_itoa:	
  2558                           ;	Return value of _itoa is never used
  2559                           
  2560                           
  2561                           	psect	text15
  2562  0124                     __ptext15:	
  2563 ;; *************** function _utoa *****************
  2564 ;; Defined at:
  2565 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  buf             1    wreg     PTR unsigned char 
  2568 ;;		 -> loop@buffer(8), 
  2569 ;;  val             2    9[COMMON] unsigned int 
  2570 ;;  base            2   11[COMMON] int 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2573 ;;		 -> loop@buffer(8), 
  2574 ;;  v               2    1[BANK0 ] unsigned int 
  2575 ;;  c               1    3[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      PTR unsigned char 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1
  2585 ;;      Params:         4       0       0
  2586 ;;      Locals:         0       4       0
  2587 ;;      Temps:          0       1       0
  2588 ;;      Totals:         4       5       0
  2589 ;;Total ram usage:        9 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    3
  2592 ;; This function calls:
  2593 ;;		___lwdiv
  2594 ;;		___lwmod
  2595 ;; This function is called by:
  2596 ;;		_itoa
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _utoa
  2602  0124                     _utoa:	
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2606                           ;utoa@buf stored from wreg
  2607  0124  0020               	movlb	0	; select bank0
  2608  0125  00A4               	movwf	utoa@buf
  2609  0126  087A               	movf	utoa@val+1,w
  2610  0127  00A2               	movwf	utoa@v+1
  2611  0128  0879               	movf	utoa@val,w
  2612  0129  00A1               	movwf	utoa@v
  2613  012A                     l1147:	
  2614  012A  087C               	movf	utoa@base+1,w
  2615  012B  00F2               	movwf	___lwdiv@divisor+1
  2616  012C  087B               	movf	utoa@base,w
  2617  012D  00F1               	movwf	___lwdiv@divisor
  2618  012E  0822               	movf	utoa@v+1,w
  2619  012F  00F4               	movwf	___lwdiv@dividend+1
  2620  0130  0821               	movf	utoa@v,w
  2621  0131  00F3               	movwf	___lwdiv@dividend
  2622  0132  2180               	fcall	___lwdiv
  2623  0133  0872               	movf	?___lwdiv+1,w
  2624  0134  0020               	movlb	0	; select bank0
  2625  0135  00A2               	movwf	utoa@v+1
  2626  0136  0871               	movf	?___lwdiv,w
  2627  0137  00A1               	movwf	utoa@v
  2628  0138  3001               	movlw	1
  2629  0139  00A0               	movwf	??_utoa
  2630  013A  0820               	movf	??_utoa,w
  2631  013B  07A4               	addwf	utoa@buf,f
  2632  013C  0821               	movf	utoa@v,w
  2633  013D  0422               	iorwf	utoa@v+1,w
  2634  013E  1D03               	btfss	3,2
  2635  013F  292A               	goto	l1147
  2636  0140  0824               	movf	utoa@buf,w
  2637  0141  0086               	movwf	6
  2638  0142  0187               	clrf	7
  2639  0143  0181               	clrf	1
  2640  0144  3001               	movlw	1
  2641  0145  02A4               	subwf	utoa@buf,f
  2642  0146                     l1157:	
  2643  0146  087C               	movf	utoa@base+1,w
  2644  0147  00F2               	movwf	___lwmod@divisor+1
  2645  0148  087B               	movf	utoa@base,w
  2646  0149  00F1               	movwf	___lwmod@divisor
  2647  014A  087A               	movf	utoa@val+1,w
  2648  014B  00F4               	movwf	___lwmod@dividend+1
  2649  014C  0879               	movf	utoa@val,w
  2650  014D  00F3               	movwf	___lwmod@dividend
  2651  014E  21B4               	fcall	___lwmod
  2652  014F  0871               	movf	?___lwmod,w
  2653  0150  0020               	movlb	0	; select bank0
  2654  0151  00A0               	movwf	??_utoa
  2655  0152  0820               	movf	??_utoa,w
  2656  0153  00A3               	movwf	utoa@c
  2657  0154  087C               	movf	utoa@base+1,w
  2658  0155  00F2               	movwf	___lwdiv@divisor+1
  2659  0156  087B               	movf	utoa@base,w
  2660  0157  00F1               	movwf	___lwdiv@divisor
  2661  0158  087A               	movf	utoa@val+1,w
  2662  0159  00F4               	movwf	___lwdiv@dividend+1
  2663  015A  0879               	movf	utoa@val,w
  2664  015B  00F3               	movwf	___lwdiv@dividend
  2665  015C  2180               	fcall	___lwdiv
  2666  015D  0872               	movf	?___lwdiv+1,w
  2667  015E  00FA               	movwf	utoa@val+1
  2668  015F  0871               	movf	?___lwdiv,w
  2669  0160  00F9               	movwf	utoa@val
  2670  0161  300A               	movlw	10
  2671  0162  0020               	movlb	0	; select bank0
  2672  0163  0223               	subwf	utoa@c,w
  2673  0164  1C03               	skipc
  2674  0165  296A               	goto	l446
  2675  0166  3007               	movlw	7
  2676  0167  00A0               	movwf	??_utoa
  2677  0168  0820               	movf	??_utoa,w
  2678  0169  07A3               	addwf	utoa@c,f
  2679  016A                     l446:	
  2680  016A  3030               	movlw	48
  2681  016B  00A0               	movwf	??_utoa
  2682  016C  0820               	movf	??_utoa,w
  2683  016D  07A3               	addwf	utoa@c,f
  2684  016E  0823               	movf	utoa@c,w
  2685  016F  00A0               	movwf	??_utoa
  2686  0170  0824               	movf	utoa@buf,w
  2687  0171  0086               	movwf	6
  2688  0172  0187               	clrf	7
  2689  0173  0820               	movf	??_utoa,w
  2690  0174  0081               	movwf	1
  2691  0175  3001               	movlw	1
  2692  0176  02A4               	subwf	utoa@buf,f
  2693  0177  0879               	movf	utoa@val,w
  2694  0178  047A               	iorwf	utoa@val+1,w
  2695  0179  1D03               	btfss	3,2
  2696  017A  2946               	goto	l1157
  2697                           
  2698                           ;	Return value of _utoa is never used
  2699  017B  3001               	movlw	1
  2700  017C  00A0               	movwf	??_utoa
  2701  017D  0820               	movf	??_utoa,w
  2702  017E  07A4               	addwf	utoa@buf,f
  2703  017F  0008               	return
  2704  0180                     __end_of_utoa:	
  2705                           
  2706                           	psect	text16
  2707  01B4                     __ptext16:	
  2708 ;; *************** function ___lwmod *****************
  2709 ;; Defined at:
  2710 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  divisor         2    1[COMMON] unsigned int 
  2713 ;;  dividend        2    3[COMMON] unsigned int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  counter         1    6[COMMON] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2    1[COMMON] unsigned int 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1
  2725 ;;      Params:         4       0       0
  2726 ;;      Locals:         1       0       0
  2727 ;;      Temps:          1       0       0
  2728 ;;      Totals:         6       0       0
  2729 ;;Total ram usage:        6 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    2
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_utoa
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function ___lwmod
  2741  01B4                     ___lwmod:	
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2745  01B4  0871               	movf	___lwmod@divisor,w
  2746  01B5  0472               	iorwf	___lwmod@divisor+1,w
  2747  01B6  1903               	btfsc	3,2
  2748  01B7  29DB               	goto	l1107
  2749  01B8  01F6               	clrf	___lwmod@counter
  2750  01B9  0AF6               	incf	___lwmod@counter,f
  2751  01BA                     l1097:	
  2752  01BA  1BF2               	btfsc	___lwmod@divisor+1,7
  2753  01BB  29C6               	goto	l1099
  2754  01BC  3001               	movlw	1
  2755  01BD                     u345:	
  2756  01BD  35F1               	lslf	___lwmod@divisor,f
  2757  01BE  0DF2               	rlf	___lwmod@divisor+1,f
  2758  01BF  0B89               	decfsz	9,f
  2759  01C0  29BD               	goto	u345
  2760  01C1  3001               	movlw	1
  2761  01C2  00F5               	movwf	??___lwmod
  2762  01C3  0875               	movf	??___lwmod,w
  2763  01C4  07F6               	addwf	___lwmod@counter,f
  2764  01C5  29BA               	goto	l1097
  2765  01C6                     l1099:	
  2766  01C6  0872               	movf	___lwmod@divisor+1,w
  2767  01C7  0274               	subwf	___lwmod@dividend+1,w
  2768  01C8  1D03               	skipz
  2769  01C9  29CC               	goto	u365
  2770  01CA  0871               	movf	___lwmod@divisor,w
  2771  01CB  0273               	subwf	___lwmod@dividend,w
  2772  01CC                     u365:	
  2773  01CC  1C03               	skipc
  2774  01CD  29D2               	goto	l1103
  2775  01CE  0871               	movf	___lwmod@divisor,w
  2776  01CF  02F3               	subwf	___lwmod@dividend,f
  2777  01D0  0872               	movf	___lwmod@divisor+1,w
  2778  01D1  3BF4               	subwfb	___lwmod@dividend+1,f
  2779  01D2                     l1103:	
  2780  01D2  3001               	movlw	1
  2781  01D3                     u375:	
  2782  01D3  36F2               	lsrf	___lwmod@divisor+1,f
  2783  01D4  0CF1               	rrf	___lwmod@divisor,f
  2784  01D5  0B89               	decfsz	9,f
  2785  01D6  29D3               	goto	u375
  2786  01D7  3001               	movlw	1
  2787  01D8  02F6               	subwf	___lwmod@counter,f
  2788  01D9  1D03               	btfss	3,2
  2789  01DA  29C6               	goto	l1099
  2790  01DB                     l1107:	
  2791  01DB  0874               	movf	___lwmod@dividend+1,w
  2792  01DC  00F2               	movwf	?___lwmod+1
  2793  01DD  0873               	movf	___lwmod@dividend,w
  2794  01DE  00F1               	movwf	?___lwmod
  2795  01DF  0008               	return
  2796  01E0                     __end_of___lwmod:	
  2797                           
  2798                           	psect	text17
  2799  0180                     __ptext17:	
  2800 ;; *************** function ___lwdiv *****************
  2801 ;; Defined at:
  2802 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  divisor         2    1[COMMON] unsigned int 
  2805 ;;  dividend        2    3[COMMON] unsigned int 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  quotient        2    6[COMMON] unsigned int 
  2808 ;;  counter         1    8[COMMON] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2    1[COMMON] unsigned int 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1
  2818 ;;      Params:         4       0       0
  2819 ;;      Locals:         3       0       0
  2820 ;;      Temps:          1       0       0
  2821 ;;      Totals:         8       0       0
  2822 ;;Total ram usage:        8 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    2
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_utoa
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function ___lwdiv
  2834  0180                     ___lwdiv:	
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2838  0180  01F6               	clrf	___lwdiv@quotient
  2839  0181  01F7               	clrf	___lwdiv@quotient+1
  2840  0182  0871               	movf	___lwdiv@divisor,w
  2841  0183  0472               	iorwf	___lwdiv@divisor+1,w
  2842  0184  1903               	btfsc	3,2
  2843  0185  29AF               	goto	l1085
  2844  0186  01F8               	clrf	___lwdiv@counter
  2845  0187  0AF8               	incf	___lwdiv@counter,f
  2846  0188                     l1073:	
  2847  0188  1BF2               	btfsc	___lwdiv@divisor+1,7
  2848  0189  2994               	goto	l1075
  2849  018A  3001               	movlw	1
  2850  018B                     u275:	
  2851  018B  35F1               	lslf	___lwdiv@divisor,f
  2852  018C  0DF2               	rlf	___lwdiv@divisor+1,f
  2853  018D  0B89               	decfsz	9,f
  2854  018E  298B               	goto	u275
  2855  018F  3001               	movlw	1
  2856  0190  00F5               	movwf	??___lwdiv
  2857  0191  0875               	movf	??___lwdiv,w
  2858  0192  07F8               	addwf	___lwdiv@counter,f
  2859  0193  2988               	goto	l1073
  2860  0194                     l1075:	
  2861  0194  3001               	movlw	1
  2862  0195                     u295:	
  2863  0195  35F6               	lslf	___lwdiv@quotient,f
  2864  0196  0DF7               	rlf	___lwdiv@quotient+1,f
  2865  0197  0B89               	decfsz	9,f
  2866  0198  2995               	goto	u295
  2867  0199  0872               	movf	___lwdiv@divisor+1,w
  2868  019A  0274               	subwf	___lwdiv@dividend+1,w
  2869  019B  1D03               	skipz
  2870  019C  299F               	goto	u305
  2871  019D  0871               	movf	___lwdiv@divisor,w
  2872  019E  0273               	subwf	___lwdiv@dividend,w
  2873  019F                     u305:	
  2874  019F  1C03               	skipc
  2875  01A0  29A6               	goto	l1081
  2876  01A1  0871               	movf	___lwdiv@divisor,w
  2877  01A2  02F3               	subwf	___lwdiv@dividend,f
  2878  01A3  0872               	movf	___lwdiv@divisor+1,w
  2879  01A4  3BF4               	subwfb	___lwdiv@dividend+1,f
  2880  01A5  1476               	bsf	___lwdiv@quotient,0
  2881  01A6                     l1081:	
  2882  01A6  3001               	movlw	1
  2883  01A7                     u315:	
  2884  01A7  36F2               	lsrf	___lwdiv@divisor+1,f
  2885  01A8  0CF1               	rrf	___lwdiv@divisor,f
  2886  01A9  0B89               	decfsz	9,f
  2887  01AA  29A7               	goto	u315
  2888  01AB  3001               	movlw	1
  2889  01AC  02F8               	subwf	___lwdiv@counter,f
  2890  01AD  1D03               	btfss	3,2
  2891  01AE  2994               	goto	l1075
  2892  01AF                     l1085:	
  2893  01AF  0877               	movf	___lwdiv@quotient+1,w
  2894  01B0  00F2               	movwf	?___lwdiv+1
  2895  01B1  0876               	movf	___lwdiv@quotient,w
  2896  01B2  00F1               	movwf	?___lwdiv
  2897  01B3  0008               	return
  2898  01B4                     __end_of___lwdiv:	
  2899                           
  2900                           	psect	intentry
  2901  0004                     __pintentry:	
  2902 ;; *************** function _ISR *****************
  2903 ;; Defined at:
  2904 ;;		line 9 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1
  2918 ;;      Params:         0       0       0
  2919 ;;      Locals:         0       0       0
  2920 ;;      Temps:          1       0       0
  2921 ;;      Totals:         1       0       0
  2922 ;;Total ram usage:        1 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    1
  2925 ;; This function calls:
  2926 ;;		_nrf24l01ISR
  2927 ;; This function is called by:
  2928 ;;		Interrupt level 1
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932  0004                     _ISR:	
  2933                           
  2934                           ;incstack = 0
  2935  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2936                           
  2937                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
  2938  0005  3180               	pagesel	$
  2939  0006  0020               	movlb	0	; select bank0
  2940  0007  087F               	movf	127,w
  2941  0008  00F0               	movwf	??_ISR
  2942                           
  2943                           ;main.c: 10: nrf24l01ISR();
  2944  0009  22E0               	fcall	_nrf24l01ISR
  2945  000A  0870               	movf	??_ISR,w
  2946  000B  0020               	movlb	0	; select bank0
  2947  000C  00FF               	movwf	127
  2948  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2949  000E  0009               	retfie
  2950  000F                     __end_of_ISR:	
  2951                           
  2952                           	psect	text19
  2953  02E0                     __ptext19:	
  2954 ;; *************** function _nrf24l01ISR *****************
  2955 ;; Defined at:
  2956 ;;		line 17 in file "nrf24l01.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		None
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1
  2970 ;;      Params:         0       0       0
  2971 ;;      Locals:         0       0       0
  2972 ;;      Temps:          0       0       0
  2973 ;;      Totals:         0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_ISR
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _nrf24l01ISR
  2985  02E0                     _nrf24l01ISR:	
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _nrf24l01ISR: []
  2989  02E0  0008               	return
  2990  02E1                     __end_of_nrf24l01ISR:	
  2991  007E                     btemp	set	126	;btemp
  2992  007E                     int$flags	set	126
  2993  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     26      28
    BANK1            32      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> loop@buffer(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> loop@buffer(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> loop@buffer(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> loop@buffer(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> loop@buffer(BANK0[8]), 


Critical Paths under _main in COMMON

    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _sendName->_read_flashmem
    _nrf24l01SendByte->_nrf24l01SPISend
    _nrf24l01SendStart->_nrf24l01SetTransmitMode
    _nrf24l01SetTransmitMode->_nrf24l01Send
    _nrf24l01Send->_nrf24l01SPISend
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _nrf24l01Init->_nrf24l01InitRegisters
    _loop->_itoa
    _itoa->_utoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4919
                                             25 BANK0      1     1      0
                               _loop
                       _nrf24l01Init
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         1     1      0    1514
                                              6 COMMON     1     1      0
              _nrf24l01InitRegisters
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                                9     9      0    1514
                                              5 COMMON     1     1      0
                                              0 BANK0      8     8      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                13    13      0    3405
                                             12 BANK0     13    13      0
                               _itoa
                   _nrf24l01SendByte
                    _nrf24l01SendEnd
                  _nrf24l01SendStart
                           _sendName
 ---------------------------------------------------------------------------------
 (2) _sendName                                             4     4      0     266
                                              7 COMMON     4     4      0
                   _nrf24l01SendByte
                      _read_flashmem
 ---------------------------------------------------------------------------------
 (3) _read_flashmem                                        6     4      2     131
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SendByte                                     1     1      0      44
                                              2 COMMON     1     1      0
                    _nrf24l01SPISend
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendStart                                    0     0      0    1373
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
            _nrf24l01SetTransmitMode
 ---------------------------------------------------------------------------------
 (3) _nrf24l01SetTransmitMode                              2     2      0    1351
                                              5 COMMON     2     2      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1305
                                              2 COMMON     3     2      1
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPIStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPISend                                      1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SendEnd                                      0     0      0       0
                     _nrf24l01SPIEnd
 ---------------------------------------------------------------------------------
 (4) _nrf24l01SPIEnd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1486
                                              5 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1165
                                              9 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     287
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     418
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (7) _nrf24l01ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _nrf24l01SendByte
       _nrf24l01SPISend
     _nrf24l01SendEnd
       _nrf24l01SPIEnd
     _nrf24l01SendStart
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01SetTransmitMode
         _nrf24l01Send
           _nrf24l01SPIEnd
           _nrf24l01SPISend
           _nrf24l01SPIStart
     _sendName
       _nrf24l01SendByte
         _nrf24l01SPISend
       _read_flashmem
   _nrf24l01Init
     _nrf24l01InitRegisters
       _nrf24l01Send
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart

 _ISR (ROOT)
   _nrf24l01ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1A      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      29       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 21 17:39:06 2018

                      __CFG_CP$OFF 0000                                 l69 0039  
              nrf24l01Send@command 0074                        __CFG_LVP$ON 0000  
                              l117 02AF                                l446 016A  
                              u305 019F                                u315 01A7  
                              u345 01BD                                u275 018B  
                              u507 021D                                _ISR 0004  
                              u365 01CC                                u517 0226  
                              u295 0195                                u375 01D3  
                              u527 00A3                                u537 0034  
                              u547 0097                                u557 0297  
                              u567 02CA                                u577 02BA  
                              u497 01ED                                u587 02CF  
                     __CFG_BORV$LO 0000                                wreg 0009  
                             ?_ISR 0070                     ??_nrf24l01Init 0076  
                             l1103 01D2                               l1107 01DB  
                             l1211 0244                               l1045 02B4  
                             l1081 01A6                               l1073 0188  
                             l1321 002E                               l1075 0194  
                             l1147 012A                               l1085 01AF  
                             l1157 0146                               l1317 0017  
                             l1327 003E                               l1097 01BA  
                             l1099 01C6                               l1187 0251  
                             l1371 0091                               l1439 0205  
                             l1369 0088                     ??_nrf24l01Send 0073  
                     __CFG_WRT$OFF 0000                      __p_NVMEM_text 07E0  
                             _main 01E0                               _mode 003B  
                             _itoa 022C                               _loop 0016  
                             fsr1h 0007                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             _utoa 0124                               start 000F  
         ?_nrf24l01SetTransmitMode 0070                              ??_ISR 0070  
                            ?_main 0070                              ?_itoa 0025  
                            ?_loop 0070                      __CFG_WDTE$OFF 0000  
                            ?_utoa 0079                    __end_of___lwdiv 01B4  
                  __end_of___lwmod 01E0                              _NVMEM 07E0  
                    __CFG_PWRTE$ON 0000                     __CFG_BOREN$OFF 0000  
                            utoa@c 0023                              utoa@v 0021  
                            status 0003                              wtemp0 007E  
                 _nrf24l01SPIStart 02C7                     __CFG_MCLRE$OFF 0000  
                  __initialization 0010                       __end_of_main 0207  
                     __end_of_itoa 024F                       __end_of_loop 009F  
                     __end_of_utoa 0180                     __CFG_LPBOR$OFF 0000  
                           ??_main 0039                             ??_itoa 0029  
                           ??_loop 002C                             ??_utoa 0020  
                 ??_nrf24l01SPIEnd 0071           __size_of_nrf24l01SPISend 000B  
                 _nrf24l01SendByte 02DA                             _ADRESH 009C  
                           _ADRESL 009B                             _ANSELA 018C  
                           _ANSELC 018E                             _PMADRH 0192  
                           _PMADRL 0191                             _PMDATH 0194  
                           _PMDATL 0193                             _PMCON1 0195  
                           _PMCON2 0196           __size_of_nrf24l01SendEnd 000A  
             __size_of_nrf24l01ISR 0001                     __CFG_STVREN$ON 0000  
                        ??___lwdiv 0075                          ??___lwmod 0075  
             __end_of_nrf24l01Init 022C               __end_of_nrf24l01Send 02AB  
            _nrf24l01InitRegisters 009F                             _status 003A  
                 __end_of_sendName 026B                             itoa@cp 002A  
           __size_of_read_flashmem 001C            __end_of__initialization 0013  
                    __end_of_NVMEM 0800                     __pcstackCOMMON 0070  
                     __pidataBANK0 02DE      nrf24l01InitRegisters@enRXAddr 0025  
                   _OPTION_REGbits 0095                         __pbssBANK0 003A  
                ??_nrf24l01SPISend 0071                      _read_flashmem 026B  
                       __pmaintext 01E0                  ??_nrf24l01SendEnd 0071  
           ?_nrf24l01InitRegisters 0070                         __pintentry 0004  
              nrf24l01SPISend@data 0071                  _nrf24l01SendStart 02C0  
               ?_nrf24l01SendStart 0070              __end_of_n_ADDRESS_MUL 02E0  
 __size_of_nrf24l01SetTransmitMode 0014           __end_of_nrf24l01SPIStart 02CE  
                          _SSP1BUF 0211                ??_nrf24l01SendStart 0077  
                        ?_sendName 0070                     ?_read_flashmem 0071  
            __size_of_nrf24l01Init 0025              __size_of_nrf24l01Send 0010  
        __end_of_nrf24l01SendStart 02C7           __end_of_nrf24l01SendByte 02DE  
                          ___lwdiv 0180                            ___lwmod 01B4  
                          __ptext1 0207                            __ptext2 009F  
                          __ptext3 0016                            __ptext4 024F  
                          __ptext5 026B                            __ptext6 02DA  
                          __ptext7 02C0                            __ptext8 0287  
                          __ptext9 029B                       __size_of_ISR 000B  
             end_of_initialization 0013                       _nrf24l01Init 0207  
                     _nrf24l01Send 029B                            itoa@buf 002B  
                          itoa@val 0025                         ??_sendName 0077  
                          utoa@buf 0024                            utoa@val 0079  
                        _PORTAbits 000C                   __CFG_FOSC$INTOSC 0000  
                        _TRISAbits 008C                          _TRISCbits 008E  
                 nrf24l01Send@data 0072                      ??_nrf24l01ISR 0070  
                  ??_read_flashmem 0073         __size_of_nrf24l01SendStart 0007  
    nrf24l01SetTransmitMode@config 0076            _nrf24l01SetTransmitMode 0287  
              start_initialization 0010                    _nrf24l01SPISend 02AB  
                      __end_of_ISR 000F        nrf24l01SendByte@payloadByte 0072  
          __size_of_nrf24l01SPIEnd 0007                    _nrf24l01SendEnd 02B6  
          ??_nrf24l01InitRegisters 0075                __end_of_nrf24l01ISR 02E1  
                      __pdataBANK0 003B                          ___latbits 0000  
                    __pcstackBANK0 0020                  ?_nrf24l01SPIStart 0070  
               ??_nrf24l01SPIStart 0071                         loop@buffer 002F  
                   sendName@offset 0078                         loop@result 0037  
                     sendName@btye 007A                   ___lwdiv@dividend 0073  
                __size_of_sendName 001C                  ?_nrf24l01SendByte 0070  
                         ?___lwdiv 0071          ??_nrf24l01SetTransmitMode 0075  
                         ?___lwmod 0071               __end_of_n_ADDRESS_P0 02DA  
          __end_of_nrf24l01SPISend 02B6                      _NVMEM_absaddr 07E0  
               ??_nrf24l01SendByte 0072          nrf24l01InitRegisters@enAA 0026  
          __end_of_nrf24l01SendEnd 02C0                   ___lwdiv@quotient 0076  
nrf24l01InitRegisters@setupRetries 0021                        _nrf24l01ISR 02E0  
                       _ADCON0bits 009D                         _ADCON1bits 009E  
  __end_of_nrf24l01SetTransmitMode 029B                     _nrf24l01SPIEnd 02CE  
                 __size_of___lwdiv 0034                   __size_of___lwmod 002C  
                 ?_nrf24l01SPISend 0070                         _ANSELAbits 018C  
                    _n_ADDRESS_MUL 02DF                    ___lwdiv@divisor 0071  
                  ___lwdiv@counter 0078                           __ptext10 02C7  
                         __ptext11 02AB                           __ptext12 02B6  
                         __ptext13 02CE                           __ptext14 022C  
                         __ptext15 0124                           __ptext16 01B4  
                         __ptext17 0180                           __ptext19 02E0  
                 ?_nrf24l01SendEnd 0070             __end_of_nrf24l01SPIEnd 02D5  
                    __size_of_main 0027                      __size_of_itoa 0023  
                    __size_of_loop 0089                      __size_of_utoa 005C  
     nrf24l01InitRegisters@feature 0022                           _sendName 024F  
            __end_of_read_flashmem 0287       nrf24l01InitRegisters@rfSetup 0023  
   __size_of_nrf24l01InitRegisters 0085      __end_of_nrf24l01InitRegisters 0124  
                         int$flags 007E       nrf24l01InitRegisters@setupAW 0020  
                     _SSP1STATbits 0214                         _INTCONbits 000B  
                         itoa@base 0027                    ?_nrf24l01SPIEnd 0070  
                         intlevel1 0000                read_flashmem@offset 0071  
                     _n_ADDRESS_P0 02D5                read_flashmem@result 0075  
                       _PMCON1bits 0195                   ___lwmod@dividend 0073  
                __CFG_CLKOUTEN$OFF 0000        nrf24l01InitRegisters@config 0024  
                       _OSCCONbits 0099          __size_of_nrf24l01SPIStart 0007  
                    __pstringtext1 02D5                      __pstringtext2 02DF  
                         utoa@base 007B         nrf24l01InitRegisters@DynPD 0027  
                  ___lwmod@divisor 0071                    ___lwmod@counter 0076  
                      _SSPCON1bits 0215          __size_of_nrf24l01SendByte 0004  
                    ?_nrf24l01Init 0070                      ?_nrf24l01Send 0072  
                     ?_nrf24l01ISR 0070  
