

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jun 24 15:49:53 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.00
    50                           ; Generated 27/05/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16LF18325 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0097                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  018C                     	;# 
   142  018E                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028E                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0297                     	;# 
   205  0298                     	;# 
   206  029F                     	;# 
   207  030C                     	;# 
   208  030E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0314                     	;# 
   214  0315                     	;# 
   215  0315                     	;# 
   216  0316                     	;# 
   217  0317                     	;# 
   218  0318                     	;# 
   219  038C                     	;# 
   220  038E                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  0397                     	;# 
   225  0398                     	;# 
   226  0399                     	;# 
   227  039A                     	;# 
   228  039C                     	;# 
   229  039D                     	;# 
   230  039E                     	;# 
   231  039F                     	;# 
   232  0411                     	;# 
   233  0411                     	;# 
   234  0412                     	;# 
   235  0413                     	;# 
   236  0414                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  0418                     	;# 
   241  0418                     	;# 
   242  0419                     	;# 
   243  041A                     	;# 
   244  041B                     	;# 
   245  041C                     	;# 
   246  041D                     	;# 
   247  041E                     	;# 
   248  041F                     	;# 
   249  0498                     	;# 
   250  0498                     	;# 
   251  0499                     	;# 
   252  049A                     	;# 
   253  049B                     	;# 
   254  049B                     	;# 
   255  049C                     	;# 
   256  049D                     	;# 
   257  049E                     	;# 
   258  049F                     	;# 
   259  0617                     	;# 
   260  0618                     	;# 
   261  0619                     	;# 
   262  0619                     	;# 
   263  061A                     	;# 
   264  061B                     	;# 
   265  061C                     	;# 
   266  061C                     	;# 
   267  061F                     	;# 
   268  0691                     	;# 
   269  0692                     	;# 
   270  0693                     	;# 
   271  0694                     	;# 
   272  0695                     	;# 
   273  0696                     	;# 
   274  0697                     	;# 
   275  0698                     	;# 
   276  0699                     	;# 
   277  0711                     	;# 
   278  0712                     	;# 
   279  0713                     	;# 
   280  0714                     	;# 
   281  0715                     	;# 
   282  0716                     	;# 
   283  0717                     	;# 
   284  0718                     	;# 
   285  0719                     	;# 
   286  0891                     	;# 
   287  0891                     	;# 
   288  0891                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0892                     	;# 
   293  0892                     	;# 
   294  0892                     	;# 
   295  0893                     	;# 
   296  0893                     	;# 
   297  0893                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0894                     	;# 
   302  0894                     	;# 
   303  0894                     	;# 
   304  0895                     	;# 
   305  0895                     	;# 
   306  0895                     	;# 
   307  0896                     	;# 
   308  0896                     	;# 
   309  0896                     	;# 
   310  089B                     	;# 
   311  0911                     	;# 
   312  0912                     	;# 
   313  0913                     	;# 
   314  0914                     	;# 
   315  0915                     	;# 
   316  0916                     	;# 
   317  0918                     	;# 
   318  0919                     	;# 
   319  091A                     	;# 
   320  091B                     	;# 
   321  091C                     	;# 
   322  091D                     	;# 
   323  091E                     	;# 
   324  091F                     	;# 
   325  0E0F                     	;# 
   326  0E10                     	;# 
   327  0E11                     	;# 
   328  0E12                     	;# 
   329  0E13                     	;# 
   330  0E14                     	;# 
   331  0E15                     	;# 
   332  0E16                     	;# 
   333  0E17                     	;# 
   334  0E18                     	;# 
   335  0E19                     	;# 
   336  0E1A                     	;# 
   337  0E1B                     	;# 
   338  0E1C                     	;# 
   339  0E1D                     	;# 
   340  0E1E                     	;# 
   341  0E1F                     	;# 
   342  0E20                     	;# 
   343  0E21                     	;# 
   344  0E22                     	;# 
   345  0E24                     	;# 
   346  0E25                     	;# 
   347  0E28                     	;# 
   348  0E29                     	;# 
   349  0E2A                     	;# 
   350  0E2B                     	;# 
   351  0E2C                     	;# 
   352  0E2D                     	;# 
   353  0E2E                     	;# 
   354  0E2F                     	;# 
   355  0E90                     	;# 
   356  0E91                     	;# 
   357  0E92                     	;# 
   358  0E94                     	;# 
   359  0E95                     	;# 
   360  0EA0                     	;# 
   361  0EA1                     	;# 
   362  0EA2                     	;# 
   363  0EA3                     	;# 
   364  0EA4                     	;# 
   365  0EA5                     	;# 
   366  0F0F                     	;# 
   367  0F10                     	;# 
   368  0F11                     	;# 
   369  0F12                     	;# 
   370  0F13                     	;# 
   371  0F14                     	;# 
   372  0F15                     	;# 
   373  0F16                     	;# 
   374  0F17                     	;# 
   375  0F18                     	;# 
   376  0F19                     	;# 
   377  0F1A                     	;# 
   378  0F1B                     	;# 
   379  0F1C                     	;# 
   380  0F1D                     	;# 
   381  0F1E                     	;# 
   382  0F1F                     	;# 
   383  0F20                     	;# 
   384  0F21                     	;# 
   385  0F22                     	;# 
   386  0F23                     	;# 
   387  0F24                     	;# 
   388  0F25                     	;# 
   389  0F26                     	;# 
   390  0F27                     	;# 
   391  0F28                     	;# 
   392  0F29                     	;# 
   393  0F2A                     	;# 
   394  0F2B                     	;# 
   395  0F2C                     	;# 
   396  0F2D                     	;# 
   397  0F2E                     	;# 
   398  0F2F                     	;# 
   399  0F30                     	;# 
   400  0F31                     	;# 
   401  0F32                     	;# 
   402  0F33                     	;# 
   403  0F34                     	;# 
   404  0F35                     	;# 
   405  0F36                     	;# 
   406  0F37                     	;# 
   407  0FE4                     	;# 
   408  0FE5                     	;# 
   409  0FE6                     	;# 
   410  0FE7                     	;# 
   411  0FE8                     	;# 
   412  0FE9                     	;# 
   413  0FEA                     	;# 
   414  0FEB                     	;# 
   415  0FED                     	;# 
   416  0FEE                     	;# 
   417  0FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0014                     	;# 
   437  0015                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  008C                     	;# 
   452  008E                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0097                     	;# 
   459  009B                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  010C                     	;# 
   466  010E                     	;# 
   467  0111                     	;# 
   468  0112                     	;# 
   469  0113                     	;# 
   470  0114                     	;# 
   471  0115                     	;# 
   472  0116                     	;# 
   473  0117                     	;# 
   474  0118                     	;# 
   475  0119                     	;# 
   476  018C                     	;# 
   477  018E                     	;# 
   478  0199                     	;# 
   479  0199                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019A                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019C                     	;# 
   492  019D                     	;# 
   493  019D                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019E                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  019F                     	;# 
   500  019F                     	;# 
   501  019F                     	;# 
   502  019F                     	;# 
   503  020C                     	;# 
   504  020E                     	;# 
   505  0211                     	;# 
   506  0211                     	;# 
   507  0212                     	;# 
   508  0212                     	;# 
   509  0213                     	;# 
   510  0213                     	;# 
   511  0214                     	;# 
   512  0214                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0216                     	;# 
   518  0216                     	;# 
   519  0217                     	;# 
   520  0217                     	;# 
   521  0219                     	;# 
   522  021A                     	;# 
   523  021B                     	;# 
   524  021C                     	;# 
   525  021D                     	;# 
   526  021D                     	;# 
   527  021E                     	;# 
   528  021F                     	;# 
   529  028C                     	;# 
   530  028E                     	;# 
   531  0291                     	;# 
   532  0291                     	;# 
   533  0292                     	;# 
   534  0293                     	;# 
   535  0294                     	;# 
   536  0295                     	;# 
   537  0295                     	;# 
   538  0296                     	;# 
   539  0297                     	;# 
   540  0298                     	;# 
   541  029F                     	;# 
   542  030C                     	;# 
   543  030E                     	;# 
   544  0311                     	;# 
   545  0311                     	;# 
   546  0312                     	;# 
   547  0313                     	;# 
   548  0314                     	;# 
   549  0315                     	;# 
   550  0315                     	;# 
   551  0316                     	;# 
   552  0317                     	;# 
   553  0318                     	;# 
   554  038C                     	;# 
   555  038E                     	;# 
   556  0391                     	;# 
   557  0392                     	;# 
   558  0393                     	;# 
   559  0397                     	;# 
   560  0398                     	;# 
   561  0399                     	;# 
   562  039A                     	;# 
   563  039C                     	;# 
   564  039D                     	;# 
   565  039E                     	;# 
   566  039F                     	;# 
   567  0411                     	;# 
   568  0411                     	;# 
   569  0412                     	;# 
   570  0413                     	;# 
   571  0414                     	;# 
   572  0415                     	;# 
   573  0416                     	;# 
   574  0417                     	;# 
   575  0418                     	;# 
   576  0418                     	;# 
   577  0419                     	;# 
   578  041A                     	;# 
   579  041B                     	;# 
   580  041C                     	;# 
   581  041D                     	;# 
   582  041E                     	;# 
   583  041F                     	;# 
   584  0498                     	;# 
   585  0498                     	;# 
   586  0499                     	;# 
   587  049A                     	;# 
   588  049B                     	;# 
   589  049B                     	;# 
   590  049C                     	;# 
   591  049D                     	;# 
   592  049E                     	;# 
   593  049F                     	;# 
   594  0617                     	;# 
   595  0618                     	;# 
   596  0619                     	;# 
   597  0619                     	;# 
   598  061A                     	;# 
   599  061B                     	;# 
   600  061C                     	;# 
   601  061C                     	;# 
   602  061F                     	;# 
   603  0691                     	;# 
   604  0692                     	;# 
   605  0693                     	;# 
   606  0694                     	;# 
   607  0695                     	;# 
   608  0696                     	;# 
   609  0697                     	;# 
   610  0698                     	;# 
   611  0699                     	;# 
   612  0711                     	;# 
   613  0712                     	;# 
   614  0713                     	;# 
   615  0714                     	;# 
   616  0715                     	;# 
   617  0716                     	;# 
   618  0717                     	;# 
   619  0718                     	;# 
   620  0719                     	;# 
   621  0891                     	;# 
   622  0891                     	;# 
   623  0891                     	;# 
   624  0891                     	;# 
   625  0891                     	;# 
   626  0891                     	;# 
   627  0892                     	;# 
   628  0892                     	;# 
   629  0892                     	;# 
   630  0893                     	;# 
   631  0893                     	;# 
   632  0893                     	;# 
   633  0893                     	;# 
   634  0893                     	;# 
   635  0893                     	;# 
   636  0894                     	;# 
   637  0894                     	;# 
   638  0894                     	;# 
   639  0895                     	;# 
   640  0895                     	;# 
   641  0895                     	;# 
   642  0896                     	;# 
   643  0896                     	;# 
   644  0896                     	;# 
   645  089B                     	;# 
   646  0911                     	;# 
   647  0912                     	;# 
   648  0913                     	;# 
   649  0914                     	;# 
   650  0915                     	;# 
   651  0916                     	;# 
   652  0918                     	;# 
   653  0919                     	;# 
   654  091A                     	;# 
   655  091B                     	;# 
   656  091C                     	;# 
   657  091D                     	;# 
   658  091E                     	;# 
   659  091F                     	;# 
   660  0E0F                     	;# 
   661  0E10                     	;# 
   662  0E11                     	;# 
   663  0E12                     	;# 
   664  0E13                     	;# 
   665  0E14                     	;# 
   666  0E15                     	;# 
   667  0E16                     	;# 
   668  0E17                     	;# 
   669  0E18                     	;# 
   670  0E19                     	;# 
   671  0E1A                     	;# 
   672  0E1B                     	;# 
   673  0E1C                     	;# 
   674  0E1D                     	;# 
   675  0E1E                     	;# 
   676  0E1F                     	;# 
   677  0E20                     	;# 
   678  0E21                     	;# 
   679  0E22                     	;# 
   680  0E24                     	;# 
   681  0E25                     	;# 
   682  0E28                     	;# 
   683  0E29                     	;# 
   684  0E2A                     	;# 
   685  0E2B                     	;# 
   686  0E2C                     	;# 
   687  0E2D                     	;# 
   688  0E2E                     	;# 
   689  0E2F                     	;# 
   690  0E90                     	;# 
   691  0E91                     	;# 
   692  0E92                     	;# 
   693  0E94                     	;# 
   694  0E95                     	;# 
   695  0EA0                     	;# 
   696  0EA1                     	;# 
   697  0EA2                     	;# 
   698  0EA3                     	;# 
   699  0EA4                     	;# 
   700  0EA5                     	;# 
   701  0F0F                     	;# 
   702  0F10                     	;# 
   703  0F11                     	;# 
   704  0F12                     	;# 
   705  0F13                     	;# 
   706  0F14                     	;# 
   707  0F15                     	;# 
   708  0F16                     	;# 
   709  0F17                     	;# 
   710  0F18                     	;# 
   711  0F19                     	;# 
   712  0F1A                     	;# 
   713  0F1B                     	;# 
   714  0F1C                     	;# 
   715  0F1D                     	;# 
   716  0F1E                     	;# 
   717  0F1F                     	;# 
   718  0F20                     	;# 
   719  0F21                     	;# 
   720  0F22                     	;# 
   721  0F23                     	;# 
   722  0F24                     	;# 
   723  0F25                     	;# 
   724  0F26                     	;# 
   725  0F27                     	;# 
   726  0F28                     	;# 
   727  0F29                     	;# 
   728  0F2A                     	;# 
   729  0F2B                     	;# 
   730  0F2C                     	;# 
   731  0F2D                     	;# 
   732  0F2E                     	;# 
   733  0F2F                     	;# 
   734  0F30                     	;# 
   735  0F31                     	;# 
   736  0F32                     	;# 
   737  0F33                     	;# 
   738  0F34                     	;# 
   739  0F35                     	;# 
   740  0F36                     	;# 
   741  0F37                     	;# 
   742  0FE4                     	;# 
   743  0FE5                     	;# 
   744  0FE6                     	;# 
   745  0FE7                     	;# 
   746  0FE8                     	;# 
   747  0FE9                     	;# 
   748  0FEA                     	;# 
   749  0FEB                     	;# 
   750  0FED                     	;# 
   751  0FEE                     	;# 
   752  0FEF                     	;# 
   753  0000                     	;# 
   754  0001                     	;# 
   755  0002                     	;# 
   756  0003                     	;# 
   757  0004                     	;# 
   758  0005                     	;# 
   759  0006                     	;# 
   760  0007                     	;# 
   761  0008                     	;# 
   762  0009                     	;# 
   763  000A                     	;# 
   764  000B                     	;# 
   765  000C                     	;# 
   766  000E                     	;# 
   767  0010                     	;# 
   768  0011                     	;# 
   769  0012                     	;# 
   770  0013                     	;# 
   771  0014                     	;# 
   772  0015                     	;# 
   773  0015                     	;# 
   774  0016                     	;# 
   775  0016                     	;# 
   776  0017                     	;# 
   777  0018                     	;# 
   778  0019                     	;# 
   779  0019                     	;# 
   780  001A                     	;# 
   781  001B                     	;# 
   782  001C                     	;# 
   783  001D                     	;# 
   784  001E                     	;# 
   785  001F                     	;# 
   786  008C                     	;# 
   787  008E                     	;# 
   788  0090                     	;# 
   789  0091                     	;# 
   790  0092                     	;# 
   791  0093                     	;# 
   792  0094                     	;# 
   793  0097                     	;# 
   794  009B                     	;# 
   795  009B                     	;# 
   796  009C                     	;# 
   797  009D                     	;# 
   798  009E                     	;# 
   799  009F                     	;# 
   800  010C                     	;# 
   801  010E                     	;# 
   802  0111                     	;# 
   803  0112                     	;# 
   804  0113                     	;# 
   805  0114                     	;# 
   806  0115                     	;# 
   807  0116                     	;# 
   808  0117                     	;# 
   809  0118                     	;# 
   810  0119                     	;# 
   811  018C                     	;# 
   812  018E                     	;# 
   813  0199                     	;# 
   814  0199                     	;# 
   815  0199                     	;# 
   816  019A                     	;# 
   817  019A                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019D                     	;# 
   829  019D                     	;# 
   830  019E                     	;# 
   831  019E                     	;# 
   832  019E                     	;# 
   833  019F                     	;# 
   834  019F                     	;# 
   835  019F                     	;# 
   836  019F                     	;# 
   837  019F                     	;# 
   838  020C                     	;# 
   839  020E                     	;# 
   840  0211                     	;# 
   841  0211                     	;# 
   842  0212                     	;# 
   843  0212                     	;# 
   844  0213                     	;# 
   845  0213                     	;# 
   846  0214                     	;# 
   847  0214                     	;# 
   848  0215                     	;# 
   849  0215                     	;# 
   850  0215                     	;# 
   851  0215                     	;# 
   852  0216                     	;# 
   853  0216                     	;# 
   854  0217                     	;# 
   855  0217                     	;# 
   856  0219                     	;# 
   857  021A                     	;# 
   858  021B                     	;# 
   859  021C                     	;# 
   860  021D                     	;# 
   861  021D                     	;# 
   862  021E                     	;# 
   863  021F                     	;# 
   864  028C                     	;# 
   865  028E                     	;# 
   866  0291                     	;# 
   867  0291                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0297                     	;# 
   875  0298                     	;# 
   876  029F                     	;# 
   877  030C                     	;# 
   878  030E                     	;# 
   879  0311                     	;# 
   880  0311                     	;# 
   881  0312                     	;# 
   882  0313                     	;# 
   883  0314                     	;# 
   884  0315                     	;# 
   885  0315                     	;# 
   886  0316                     	;# 
   887  0317                     	;# 
   888  0318                     	;# 
   889  038C                     	;# 
   890  038E                     	;# 
   891  0391                     	;# 
   892  0392                     	;# 
   893  0393                     	;# 
   894  0397                     	;# 
   895  0398                     	;# 
   896  0399                     	;# 
   897  039A                     	;# 
   898  039C                     	;# 
   899  039D                     	;# 
   900  039E                     	;# 
   901  039F                     	;# 
   902  0411                     	;# 
   903  0411                     	;# 
   904  0412                     	;# 
   905  0413                     	;# 
   906  0414                     	;# 
   907  0415                     	;# 
   908  0416                     	;# 
   909  0417                     	;# 
   910  0418                     	;# 
   911  0418                     	;# 
   912  0419                     	;# 
   913  041A                     	;# 
   914  041B                     	;# 
   915  041C                     	;# 
   916  041D                     	;# 
   917  041E                     	;# 
   918  041F                     	;# 
   919  0498                     	;# 
   920  0498                     	;# 
   921  0499                     	;# 
   922  049A                     	;# 
   923  049B                     	;# 
   924  049B                     	;# 
   925  049C                     	;# 
   926  049D                     	;# 
   927  049E                     	;# 
   928  049F                     	;# 
   929  0617                     	;# 
   930  0618                     	;# 
   931  0619                     	;# 
   932  0619                     	;# 
   933  061A                     	;# 
   934  061B                     	;# 
   935  061C                     	;# 
   936  061C                     	;# 
   937  061F                     	;# 
   938  0691                     	;# 
   939  0692                     	;# 
   940  0693                     	;# 
   941  0694                     	;# 
   942  0695                     	;# 
   943  0696                     	;# 
   944  0697                     	;# 
   945  0698                     	;# 
   946  0699                     	;# 
   947  0711                     	;# 
   948  0712                     	;# 
   949  0713                     	;# 
   950  0714                     	;# 
   951  0715                     	;# 
   952  0716                     	;# 
   953  0717                     	;# 
   954  0718                     	;# 
   955  0719                     	;# 
   956  0891                     	;# 
   957  0891                     	;# 
   958  0891                     	;# 
   959  0891                     	;# 
   960  0891                     	;# 
   961  0891                     	;# 
   962  0892                     	;# 
   963  0892                     	;# 
   964  0892                     	;# 
   965  0893                     	;# 
   966  0893                     	;# 
   967  0893                     	;# 
   968  0893                     	;# 
   969  0893                     	;# 
   970  0893                     	;# 
   971  0894                     	;# 
   972  0894                     	;# 
   973  0894                     	;# 
   974  0895                     	;# 
   975  0895                     	;# 
   976  0895                     	;# 
   977  0896                     	;# 
   978  0896                     	;# 
   979  0896                     	;# 
   980  089B                     	;# 
   981  0911                     	;# 
   982  0912                     	;# 
   983  0913                     	;# 
   984  0914                     	;# 
   985  0915                     	;# 
   986  0916                     	;# 
   987  0918                     	;# 
   988  0919                     	;# 
   989  091A                     	;# 
   990  091B                     	;# 
   991  091C                     	;# 
   992  091D                     	;# 
   993  091E                     	;# 
   994  091F                     	;# 
   995  0E0F                     	;# 
   996  0E10                     	;# 
   997  0E11                     	;# 
   998  0E12                     	;# 
   999  0E13                     	;# 
  1000  0E14                     	;# 
  1001  0E15                     	;# 
  1002  0E16                     	;# 
  1003  0E17                     	;# 
  1004  0E18                     	;# 
  1005  0E19                     	;# 
  1006  0E1A                     	;# 
  1007  0E1B                     	;# 
  1008  0E1C                     	;# 
  1009  0E1D                     	;# 
  1010  0E1E                     	;# 
  1011  0E1F                     	;# 
  1012  0E20                     	;# 
  1013  0E21                     	;# 
  1014  0E22                     	;# 
  1015  0E24                     	;# 
  1016  0E25                     	;# 
  1017  0E28                     	;# 
  1018  0E29                     	;# 
  1019  0E2A                     	;# 
  1020  0E2B                     	;# 
  1021  0E2C                     	;# 
  1022  0E2D                     	;# 
  1023  0E2E                     	;# 
  1024  0E2F                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0EA0                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0F0F                     	;# 
  1037  0F10                     	;# 
  1038  0F11                     	;# 
  1039  0F12                     	;# 
  1040  0F13                     	;# 
  1041  0F14                     	;# 
  1042  0F15                     	;# 
  1043  0F16                     	;# 
  1044  0F17                     	;# 
  1045  0F18                     	;# 
  1046  0F19                     	;# 
  1047  0F1A                     	;# 
  1048  0F1B                     	;# 
  1049  0F1C                     	;# 
  1050  0F1D                     	;# 
  1051  0F1E                     	;# 
  1052  0F1F                     	;# 
  1053  0F20                     	;# 
  1054  0F21                     	;# 
  1055  0F22                     	;# 
  1056  0F23                     	;# 
  1057  0F24                     	;# 
  1058  0F25                     	;# 
  1059  0F26                     	;# 
  1060  0F27                     	;# 
  1061  0F28                     	;# 
  1062  0F29                     	;# 
  1063  0F2A                     	;# 
  1064  0F2B                     	;# 
  1065  0F2C                     	;# 
  1066  0F2D                     	;# 
  1067  0F2E                     	;# 
  1068  0F2F                     	;# 
  1069  0F30                     	;# 
  1070  0F31                     	;# 
  1071  0F32                     	;# 
  1072  0F33                     	;# 
  1073  0F34                     	;# 
  1074  0F35                     	;# 
  1075  0F36                     	;# 
  1076  0F37                     	;# 
  1077  0FE4                     	;# 
  1078  0FE5                     	;# 
  1079  0FE6                     	;# 
  1080  0FE7                     	;# 
  1081  0FE8                     	;# 
  1082  0FE9                     	;# 
  1083  0FEA                     	;# 
  1084  0FEB                     	;# 
  1085  0FED                     	;# 
  1086  0FEE                     	;# 
  1087  0FEF                     	;# 
  1088  0000                     	;# 
  1089  0001                     	;# 
  1090  0002                     	;# 
  1091  0003                     	;# 
  1092  0004                     	;# 
  1093  0005                     	;# 
  1094  0006                     	;# 
  1095  0007                     	;# 
  1096  0008                     	;# 
  1097  0009                     	;# 
  1098  000A                     	;# 
  1099  000B                     	;# 
  1100  000C                     	;# 
  1101  000E                     	;# 
  1102  0010                     	;# 
  1103  0011                     	;# 
  1104  0012                     	;# 
  1105  0013                     	;# 
  1106  0014                     	;# 
  1107  0015                     	;# 
  1108  0015                     	;# 
  1109  0016                     	;# 
  1110  0016                     	;# 
  1111  0017                     	;# 
  1112  0018                     	;# 
  1113  0019                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  001D                     	;# 
  1119  001E                     	;# 
  1120  001F                     	;# 
  1121  008C                     	;# 
  1122  008E                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0092                     	;# 
  1126  0093                     	;# 
  1127  0094                     	;# 
  1128  0097                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  009F                     	;# 
  1135  010C                     	;# 
  1136  010E                     	;# 
  1137  0111                     	;# 
  1138  0112                     	;# 
  1139  0113                     	;# 
  1140  0114                     	;# 
  1141  0115                     	;# 
  1142  0116                     	;# 
  1143  0117                     	;# 
  1144  0118                     	;# 
  1145  0119                     	;# 
  1146  018C                     	;# 
  1147  018E                     	;# 
  1148  0199                     	;# 
  1149  0199                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019A                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019B                     	;# 
  1159  019C                     	;# 
  1160  019C                     	;# 
  1161  019C                     	;# 
  1162  019D                     	;# 
  1163  019D                     	;# 
  1164  019D                     	;# 
  1165  019E                     	;# 
  1166  019E                     	;# 
  1167  019E                     	;# 
  1168  019F                     	;# 
  1169  019F                     	;# 
  1170  019F                     	;# 
  1171  019F                     	;# 
  1172  019F                     	;# 
  1173  020C                     	;# 
  1174  020E                     	;# 
  1175  0211                     	;# 
  1176  0211                     	;# 
  1177  0212                     	;# 
  1178  0212                     	;# 
  1179  0213                     	;# 
  1180  0213                     	;# 
  1181  0214                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0215                     	;# 
  1187  0216                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0217                     	;# 
  1191  0219                     	;# 
  1192  021A                     	;# 
  1193  021B                     	;# 
  1194  021C                     	;# 
  1195  021D                     	;# 
  1196  021D                     	;# 
  1197  021E                     	;# 
  1198  021F                     	;# 
  1199  028C                     	;# 
  1200  028E                     	;# 
  1201  0291                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0293                     	;# 
  1205  0294                     	;# 
  1206  0295                     	;# 
  1207  0295                     	;# 
  1208  0296                     	;# 
  1209  0297                     	;# 
  1210  0298                     	;# 
  1211  029F                     	;# 
  1212  030C                     	;# 
  1213  030E                     	;# 
  1214  0311                     	;# 
  1215  0311                     	;# 
  1216  0312                     	;# 
  1217  0313                     	;# 
  1218  0314                     	;# 
  1219  0315                     	;# 
  1220  0315                     	;# 
  1221  0316                     	;# 
  1222  0317                     	;# 
  1223  0318                     	;# 
  1224  038C                     	;# 
  1225  038E                     	;# 
  1226  0391                     	;# 
  1227  0392                     	;# 
  1228  0393                     	;# 
  1229  0397                     	;# 
  1230  0398                     	;# 
  1231  0399                     	;# 
  1232  039A                     	;# 
  1233  039C                     	;# 
  1234  039D                     	;# 
  1235  039E                     	;# 
  1236  039F                     	;# 
  1237  0411                     	;# 
  1238  0411                     	;# 
  1239  0412                     	;# 
  1240  0413                     	;# 
  1241  0414                     	;# 
  1242  0415                     	;# 
  1243  0416                     	;# 
  1244  0417                     	;# 
  1245  0418                     	;# 
  1246  0418                     	;# 
  1247  0419                     	;# 
  1248  041A                     	;# 
  1249  041B                     	;# 
  1250  041C                     	;# 
  1251  041D                     	;# 
  1252  041E                     	;# 
  1253  041F                     	;# 
  1254  0498                     	;# 
  1255  0498                     	;# 
  1256  0499                     	;# 
  1257  049A                     	;# 
  1258  049B                     	;# 
  1259  049B                     	;# 
  1260  049C                     	;# 
  1261  049D                     	;# 
  1262  049E                     	;# 
  1263  049F                     	;# 
  1264  0617                     	;# 
  1265  0618                     	;# 
  1266  0619                     	;# 
  1267  0619                     	;# 
  1268  061A                     	;# 
  1269  061B                     	;# 
  1270  061C                     	;# 
  1271  061C                     	;# 
  1272  061F                     	;# 
  1273  0691                     	;# 
  1274  0692                     	;# 
  1275  0693                     	;# 
  1276  0694                     	;# 
  1277  0695                     	;# 
  1278  0696                     	;# 
  1279  0697                     	;# 
  1280  0698                     	;# 
  1281  0699                     	;# 
  1282  0711                     	;# 
  1283  0712                     	;# 
  1284  0713                     	;# 
  1285  0714                     	;# 
  1286  0715                     	;# 
  1287  0716                     	;# 
  1288  0717                     	;# 
  1289  0718                     	;# 
  1290  0719                     	;# 
  1291  0891                     	;# 
  1292  0891                     	;# 
  1293  0891                     	;# 
  1294  0891                     	;# 
  1295  0891                     	;# 
  1296  0891                     	;# 
  1297  0892                     	;# 
  1298  0892                     	;# 
  1299  0892                     	;# 
  1300  0893                     	;# 
  1301  0893                     	;# 
  1302  0893                     	;# 
  1303  0893                     	;# 
  1304  0893                     	;# 
  1305  0893                     	;# 
  1306  0894                     	;# 
  1307  0894                     	;# 
  1308  0894                     	;# 
  1309  0895                     	;# 
  1310  0895                     	;# 
  1311  0895                     	;# 
  1312  0896                     	;# 
  1313  0896                     	;# 
  1314  0896                     	;# 
  1315  089B                     	;# 
  1316  0911                     	;# 
  1317  0912                     	;# 
  1318  0913                     	;# 
  1319  0914                     	;# 
  1320  0915                     	;# 
  1321  0916                     	;# 
  1322  0918                     	;# 
  1323  0919                     	;# 
  1324  091A                     	;# 
  1325  091B                     	;# 
  1326  091C                     	;# 
  1327  091D                     	;# 
  1328  091E                     	;# 
  1329  091F                     	;# 
  1330  0E0F                     	;# 
  1331  0E10                     	;# 
  1332  0E11                     	;# 
  1333  0E12                     	;# 
  1334  0E13                     	;# 
  1335  0E14                     	;# 
  1336  0E15                     	;# 
  1337  0E16                     	;# 
  1338  0E17                     	;# 
  1339  0E18                     	;# 
  1340  0E19                     	;# 
  1341  0E1A                     	;# 
  1342  0E1B                     	;# 
  1343  0E1C                     	;# 
  1344  0E1D                     	;# 
  1345  0E1E                     	;# 
  1346  0E1F                     	;# 
  1347  0E20                     	;# 
  1348  0E21                     	;# 
  1349  0E22                     	;# 
  1350  0E24                     	;# 
  1351  0E25                     	;# 
  1352  0E28                     	;# 
  1353  0E29                     	;# 
  1354  0E2A                     	;# 
  1355  0E2B                     	;# 
  1356  0E2C                     	;# 
  1357  0E2D                     	;# 
  1358  0E2E                     	;# 
  1359  0E2F                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E94                     	;# 
  1364  0E95                     	;# 
  1365  0EA0                     	;# 
  1366  0EA1                     	;# 
  1367  0EA2                     	;# 
  1368  0EA3                     	;# 
  1369  0EA4                     	;# 
  1370  0EA5                     	;# 
  1371  0F0F                     	;# 
  1372  0F10                     	;# 
  1373  0F11                     	;# 
  1374  0F12                     	;# 
  1375  0F13                     	;# 
  1376  0F14                     	;# 
  1377  0F15                     	;# 
  1378  0F16                     	;# 
  1379  0F17                     	;# 
  1380  0F18                     	;# 
  1381  0F19                     	;# 
  1382  0F1A                     	;# 
  1383  0F1B                     	;# 
  1384  0F1C                     	;# 
  1385  0F1D                     	;# 
  1386  0F1E                     	;# 
  1387  0F1F                     	;# 
  1388  0F20                     	;# 
  1389  0F21                     	;# 
  1390  0F22                     	;# 
  1391  0F23                     	;# 
  1392  0F24                     	;# 
  1393  0F25                     	;# 
  1394  0F26                     	;# 
  1395  0F27                     	;# 
  1396  0F28                     	;# 
  1397  0F29                     	;# 
  1398  0F2A                     	;# 
  1399  0F2B                     	;# 
  1400  0F2C                     	;# 
  1401  0F2D                     	;# 
  1402  0F2E                     	;# 
  1403  0F2F                     	;# 
  1404  0F30                     	;# 
  1405  0F31                     	;# 
  1406  0F32                     	;# 
  1407  0F33                     	;# 
  1408  0F34                     	;# 
  1409  0F35                     	;# 
  1410  0F36                     	;# 
  1411  0F37                     	;# 
  1412  0FE4                     	;# 
  1413  0FE5                     	;# 
  1414  0FE6                     	;# 
  1415  0FE7                     	;# 
  1416  0FE8                     	;# 
  1417  0FE9                     	;# 
  1418  0FEA                     	;# 
  1419  0FEB                     	;# 
  1420  0FED                     	;# 
  1421  0FEE                     	;# 
  1422  0FEF                     	;# 
  1423  0000                     	;# 
  1424  0001                     	;# 
  1425  0002                     	;# 
  1426  0003                     	;# 
  1427  0004                     	;# 
  1428  0005                     	;# 
  1429  0006                     	;# 
  1430  0007                     	;# 
  1431  0008                     	;# 
  1432  0009                     	;# 
  1433  000A                     	;# 
  1434  000B                     	;# 
  1435  000C                     	;# 
  1436  000E                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0014                     	;# 
  1442  0015                     	;# 
  1443  0015                     	;# 
  1444  0016                     	;# 
  1445  0016                     	;# 
  1446  0017                     	;# 
  1447  0018                     	;# 
  1448  0019                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  001D                     	;# 
  1454  001E                     	;# 
  1455  001F                     	;# 
  1456  008C                     	;# 
  1457  008E                     	;# 
  1458  0090                     	;# 
  1459  0091                     	;# 
  1460  0092                     	;# 
  1461  0093                     	;# 
  1462  0094                     	;# 
  1463  0097                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010E                     	;# 
  1472  0111                     	;# 
  1473  0112                     	;# 
  1474  0113                     	;# 
  1475  0114                     	;# 
  1476  0115                     	;# 
  1477  0116                     	;# 
  1478  0117                     	;# 
  1479  0118                     	;# 
  1480  0119                     	;# 
  1481  018C                     	;# 
  1482  018E                     	;# 
  1483  0199                     	;# 
  1484  0199                     	;# 
  1485  0199                     	;# 
  1486  019A                     	;# 
  1487  019A                     	;# 
  1488  019A                     	;# 
  1489  019B                     	;# 
  1490  019B                     	;# 
  1491  019B                     	;# 
  1492  019B                     	;# 
  1493  019B                     	;# 
  1494  019C                     	;# 
  1495  019C                     	;# 
  1496  019C                     	;# 
  1497  019D                     	;# 
  1498  019D                     	;# 
  1499  019D                     	;# 
  1500  019E                     	;# 
  1501  019E                     	;# 
  1502  019E                     	;# 
  1503  019F                     	;# 
  1504  019F                     	;# 
  1505  019F                     	;# 
  1506  019F                     	;# 
  1507  019F                     	;# 
  1508  020C                     	;# 
  1509  020E                     	;# 
  1510  0211                     	;# 
  1511  0211                     	;# 
  1512  0212                     	;# 
  1513  0212                     	;# 
  1514  0213                     	;# 
  1515  0213                     	;# 
  1516  0214                     	;# 
  1517  0214                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0215                     	;# 
  1521  0215                     	;# 
  1522  0216                     	;# 
  1523  0216                     	;# 
  1524  0217                     	;# 
  1525  0217                     	;# 
  1526  0219                     	;# 
  1527  021A                     	;# 
  1528  021B                     	;# 
  1529  021C                     	;# 
  1530  021D                     	;# 
  1531  021D                     	;# 
  1532  021E                     	;# 
  1533  021F                     	;# 
  1534  028C                     	;# 
  1535  028E                     	;# 
  1536  0291                     	;# 
  1537  0291                     	;# 
  1538  0292                     	;# 
  1539  0293                     	;# 
  1540  0294                     	;# 
  1541  0295                     	;# 
  1542  0295                     	;# 
  1543  0296                     	;# 
  1544  0297                     	;# 
  1545  0298                     	;# 
  1546  029F                     	;# 
  1547  030C                     	;# 
  1548  030E                     	;# 
  1549  0311                     	;# 
  1550  0311                     	;# 
  1551  0312                     	;# 
  1552  0313                     	;# 
  1553  0314                     	;# 
  1554  0315                     	;# 
  1555  0315                     	;# 
  1556  0316                     	;# 
  1557  0317                     	;# 
  1558  0318                     	;# 
  1559  038C                     	;# 
  1560  038E                     	;# 
  1561  0391                     	;# 
  1562  0392                     	;# 
  1563  0393                     	;# 
  1564  0397                     	;# 
  1565  0398                     	;# 
  1566  0399                     	;# 
  1567  039A                     	;# 
  1568  039C                     	;# 
  1569  039D                     	;# 
  1570  039E                     	;# 
  1571  039F                     	;# 
  1572  0411                     	;# 
  1573  0411                     	;# 
  1574  0412                     	;# 
  1575  0413                     	;# 
  1576  0414                     	;# 
  1577  0415                     	;# 
  1578  0416                     	;# 
  1579  0417                     	;# 
  1580  0418                     	;# 
  1581  0418                     	;# 
  1582  0419                     	;# 
  1583  041A                     	;# 
  1584  041B                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  041F                     	;# 
  1589  0498                     	;# 
  1590  0498                     	;# 
  1591  0499                     	;# 
  1592  049A                     	;# 
  1593  049B                     	;# 
  1594  049B                     	;# 
  1595  049C                     	;# 
  1596  049D                     	;# 
  1597  049E                     	;# 
  1598  049F                     	;# 
  1599  0617                     	;# 
  1600  0618                     	;# 
  1601  0619                     	;# 
  1602  0619                     	;# 
  1603  061A                     	;# 
  1604  061B                     	;# 
  1605  061C                     	;# 
  1606  061C                     	;# 
  1607  061F                     	;# 
  1608  0691                     	;# 
  1609  0692                     	;# 
  1610  0693                     	;# 
  1611  0694                     	;# 
  1612  0695                     	;# 
  1613  0696                     	;# 
  1614  0697                     	;# 
  1615  0698                     	;# 
  1616  0699                     	;# 
  1617  0711                     	;# 
  1618  0712                     	;# 
  1619  0713                     	;# 
  1620  0714                     	;# 
  1621  0715                     	;# 
  1622  0716                     	;# 
  1623  0717                     	;# 
  1624  0718                     	;# 
  1625  0719                     	;# 
  1626  0891                     	;# 
  1627  0891                     	;# 
  1628  0891                     	;# 
  1629  0891                     	;# 
  1630  0891                     	;# 
  1631  0891                     	;# 
  1632  0892                     	;# 
  1633  0892                     	;# 
  1634  0892                     	;# 
  1635  0893                     	;# 
  1636  0893                     	;# 
  1637  0893                     	;# 
  1638  0893                     	;# 
  1639  0893                     	;# 
  1640  0893                     	;# 
  1641  0894                     	;# 
  1642  0894                     	;# 
  1643  0894                     	;# 
  1644  0895                     	;# 
  1645  0895                     	;# 
  1646  0895                     	;# 
  1647  0896                     	;# 
  1648  0896                     	;# 
  1649  0896                     	;# 
  1650  089B                     	;# 
  1651  0911                     	;# 
  1652  0912                     	;# 
  1653  0913                     	;# 
  1654  0914                     	;# 
  1655  0915                     	;# 
  1656  0916                     	;# 
  1657  0918                     	;# 
  1658  0919                     	;# 
  1659  091A                     	;# 
  1660  091B                     	;# 
  1661  091C                     	;# 
  1662  091D                     	;# 
  1663  091E                     	;# 
  1664  091F                     	;# 
  1665  0E0F                     	;# 
  1666  0E10                     	;# 
  1667  0E11                     	;# 
  1668  0E12                     	;# 
  1669  0E13                     	;# 
  1670  0E14                     	;# 
  1671  0E15                     	;# 
  1672  0E16                     	;# 
  1673  0E17                     	;# 
  1674  0E18                     	;# 
  1675  0E19                     	;# 
  1676  0E1A                     	;# 
  1677  0E1B                     	;# 
  1678  0E1C                     	;# 
  1679  0E1D                     	;# 
  1680  0E1E                     	;# 
  1681  0E1F                     	;# 
  1682  0E20                     	;# 
  1683  0E21                     	;# 
  1684  0E22                     	;# 
  1685  0E24                     	;# 
  1686  0E25                     	;# 
  1687  0E28                     	;# 
  1688  0E29                     	;# 
  1689  0E2A                     	;# 
  1690  0E2B                     	;# 
  1691  0E2C                     	;# 
  1692  0E2D                     	;# 
  1693  0E2E                     	;# 
  1694  0E2F                     	;# 
  1695  0E90                     	;# 
  1696  0E91                     	;# 
  1697  0E92                     	;# 
  1698  0E94                     	;# 
  1699  0E95                     	;# 
  1700  0EA0                     	;# 
  1701  0EA1                     	;# 
  1702  0EA2                     	;# 
  1703  0EA3                     	;# 
  1704  0EA4                     	;# 
  1705  0EA5                     	;# 
  1706  0F0F                     	;# 
  1707  0F10                     	;# 
  1708  0F11                     	;# 
  1709  0F12                     	;# 
  1710  0F13                     	;# 
  1711  0F14                     	;# 
  1712  0F15                     	;# 
  1713  0F16                     	;# 
  1714  0F17                     	;# 
  1715  0F18                     	;# 
  1716  0F19                     	;# 
  1717  0F1A                     	;# 
  1718  0F1B                     	;# 
  1719  0F1C                     	;# 
  1720  0F1D                     	;# 
  1721  0F1E                     	;# 
  1722  0F1F                     	;# 
  1723  0F20                     	;# 
  1724  0F21                     	;# 
  1725  0F22                     	;# 
  1726  0F23                     	;# 
  1727  0F24                     	;# 
  1728  0F25                     	;# 
  1729  0F26                     	;# 
  1730  0F27                     	;# 
  1731  0F28                     	;# 
  1732  0F29                     	;# 
  1733  0F2A                     	;# 
  1734  0F2B                     	;# 
  1735  0F2C                     	;# 
  1736  0F2D                     	;# 
  1737  0F2E                     	;# 
  1738  0F2F                     	;# 
  1739  0F30                     	;# 
  1740  0F31                     	;# 
  1741  0F32                     	;# 
  1742  0F33                     	;# 
  1743  0F34                     	;# 
  1744  0F35                     	;# 
  1745  0F36                     	;# 
  1746  0F37                     	;# 
  1747  0FE4                     	;# 
  1748  0FE5                     	;# 
  1749  0FE6                     	;# 
  1750  0FE7                     	;# 
  1751  0FE8                     	;# 
  1752  0FE9                     	;# 
  1753  0FEA                     	;# 
  1754  0FEB                     	;# 
  1755  0FED                     	;# 
  1756  0FEE                     	;# 
  1757  0FEF                     	;# 
  1758  0000                     	;# 
  1759  0001                     	;# 
  1760  0002                     	;# 
  1761  0003                     	;# 
  1762  0004                     	;# 
  1763  0005                     	;# 
  1764  0006                     	;# 
  1765  0007                     	;# 
  1766  0008                     	;# 
  1767  0009                     	;# 
  1768  000A                     	;# 
  1769  000B                     	;# 
  1770  000C                     	;# 
  1771  000E                     	;# 
  1772  0010                     	;# 
  1773  0011                     	;# 
  1774  0012                     	;# 
  1775  0013                     	;# 
  1776  0014                     	;# 
  1777  0015                     	;# 
  1778  0015                     	;# 
  1779  0016                     	;# 
  1780  0016                     	;# 
  1781  0017                     	;# 
  1782  0018                     	;# 
  1783  0019                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  001B                     	;# 
  1787  001C                     	;# 
  1788  001D                     	;# 
  1789  001E                     	;# 
  1790  001F                     	;# 
  1791  008C                     	;# 
  1792  008E                     	;# 
  1793  0090                     	;# 
  1794  0091                     	;# 
  1795  0092                     	;# 
  1796  0093                     	;# 
  1797  0094                     	;# 
  1798  0097                     	;# 
  1799  009B                     	;# 
  1800  009B                     	;# 
  1801  009C                     	;# 
  1802  009D                     	;# 
  1803  009E                     	;# 
  1804  009F                     	;# 
  1805  010C                     	;# 
  1806  010E                     	;# 
  1807  0111                     	;# 
  1808  0112                     	;# 
  1809  0113                     	;# 
  1810  0114                     	;# 
  1811  0115                     	;# 
  1812  0116                     	;# 
  1813  0117                     	;# 
  1814  0118                     	;# 
  1815  0119                     	;# 
  1816  018C                     	;# 
  1817  018E                     	;# 
  1818  0199                     	;# 
  1819  0199                     	;# 
  1820  0199                     	;# 
  1821  019A                     	;# 
  1822  019A                     	;# 
  1823  019A                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019C                     	;# 
  1830  019C                     	;# 
  1831  019C                     	;# 
  1832  019D                     	;# 
  1833  019D                     	;# 
  1834  019D                     	;# 
  1835  019E                     	;# 
  1836  019E                     	;# 
  1837  019E                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  020C                     	;# 
  1844  020E                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  0219                     	;# 
  1862  021A                     	;# 
  1863  021B                     	;# 
  1864  021C                     	;# 
  1865  021D                     	;# 
  1866  021D                     	;# 
  1867  021E                     	;# 
  1868  021F                     	;# 
  1869  028C                     	;# 
  1870  028E                     	;# 
  1871  0291                     	;# 
  1872  0291                     	;# 
  1873  0292                     	;# 
  1874  0293                     	;# 
  1875  0294                     	;# 
  1876  0295                     	;# 
  1877  0295                     	;# 
  1878  0296                     	;# 
  1879  0297                     	;# 
  1880  0298                     	;# 
  1881  029F                     	;# 
  1882  030C                     	;# 
  1883  030E                     	;# 
  1884  0311                     	;# 
  1885  0311                     	;# 
  1886  0312                     	;# 
  1887  0313                     	;# 
  1888  0314                     	;# 
  1889  0315                     	;# 
  1890  0315                     	;# 
  1891  0316                     	;# 
  1892  0317                     	;# 
  1893  0318                     	;# 
  1894  038C                     	;# 
  1895  038E                     	;# 
  1896  0391                     	;# 
  1897  0392                     	;# 
  1898  0393                     	;# 
  1899  0397                     	;# 
  1900  0398                     	;# 
  1901  0399                     	;# 
  1902  039A                     	;# 
  1903  039C                     	;# 
  1904  039D                     	;# 
  1905  039E                     	;# 
  1906  039F                     	;# 
  1907  0411                     	;# 
  1908  0411                     	;# 
  1909  0412                     	;# 
  1910  0413                     	;# 
  1911  0414                     	;# 
  1912  0415                     	;# 
  1913  0416                     	;# 
  1914  0417                     	;# 
  1915  0418                     	;# 
  1916  0418                     	;# 
  1917  0419                     	;# 
  1918  041A                     	;# 
  1919  041B                     	;# 
  1920  041C                     	;# 
  1921  041D                     	;# 
  1922  041E                     	;# 
  1923  041F                     	;# 
  1924  0498                     	;# 
  1925  0498                     	;# 
  1926  0499                     	;# 
  1927  049A                     	;# 
  1928  049B                     	;# 
  1929  049B                     	;# 
  1930  049C                     	;# 
  1931  049D                     	;# 
  1932  049E                     	;# 
  1933  049F                     	;# 
  1934  0617                     	;# 
  1935  0618                     	;# 
  1936  0619                     	;# 
  1937  0619                     	;# 
  1938  061A                     	;# 
  1939  061B                     	;# 
  1940  061C                     	;# 
  1941  061C                     	;# 
  1942  061F                     	;# 
  1943  0691                     	;# 
  1944  0692                     	;# 
  1945  0693                     	;# 
  1946  0694                     	;# 
  1947  0695                     	;# 
  1948  0696                     	;# 
  1949  0697                     	;# 
  1950  0698                     	;# 
  1951  0699                     	;# 
  1952  0711                     	;# 
  1953  0712                     	;# 
  1954  0713                     	;# 
  1955  0714                     	;# 
  1956  0715                     	;# 
  1957  0716                     	;# 
  1958  0717                     	;# 
  1959  0718                     	;# 
  1960  0719                     	;# 
  1961  0891                     	;# 
  1962  0891                     	;# 
  1963  0891                     	;# 
  1964  0891                     	;# 
  1965  0891                     	;# 
  1966  0891                     	;# 
  1967  0892                     	;# 
  1968  0892                     	;# 
  1969  0892                     	;# 
  1970  0893                     	;# 
  1971  0893                     	;# 
  1972  0893                     	;# 
  1973  0893                     	;# 
  1974  0893                     	;# 
  1975  0893                     	;# 
  1976  0894                     	;# 
  1977  0894                     	;# 
  1978  0894                     	;# 
  1979  0895                     	;# 
  1980  0895                     	;# 
  1981  0895                     	;# 
  1982  0896                     	;# 
  1983  0896                     	;# 
  1984  0896                     	;# 
  1985  089B                     	;# 
  1986  0911                     	;# 
  1987  0912                     	;# 
  1988  0913                     	;# 
  1989  0914                     	;# 
  1990  0915                     	;# 
  1991  0916                     	;# 
  1992  0918                     	;# 
  1993  0919                     	;# 
  1994  091A                     	;# 
  1995  091B                     	;# 
  1996  091C                     	;# 
  1997  091D                     	;# 
  1998  091E                     	;# 
  1999  091F                     	;# 
  2000  0E0F                     	;# 
  2001  0E10                     	;# 
  2002  0E11                     	;# 
  2003  0E12                     	;# 
  2004  0E13                     	;# 
  2005  0E14                     	;# 
  2006  0E15                     	;# 
  2007  0E16                     	;# 
  2008  0E17                     	;# 
  2009  0E18                     	;# 
  2010  0E19                     	;# 
  2011  0E1A                     	;# 
  2012  0E1B                     	;# 
  2013  0E1C                     	;# 
  2014  0E1D                     	;# 
  2015  0E1E                     	;# 
  2016  0E1F                     	;# 
  2017  0E20                     	;# 
  2018  0E21                     	;# 
  2019  0E22                     	;# 
  2020  0E24                     	;# 
  2021  0E25                     	;# 
  2022  0E28                     	;# 
  2023  0E29                     	;# 
  2024  0E2A                     	;# 
  2025  0E2B                     	;# 
  2026  0E2C                     	;# 
  2027  0E2D                     	;# 
  2028  0E2E                     	;# 
  2029  0E2F                     	;# 
  2030  0E90                     	;# 
  2031  0E91                     	;# 
  2032  0E92                     	;# 
  2033  0E94                     	;# 
  2034  0E95                     	;# 
  2035  0EA0                     	;# 
  2036  0EA1                     	;# 
  2037  0EA2                     	;# 
  2038  0EA3                     	;# 
  2039  0EA4                     	;# 
  2040  0EA5                     	;# 
  2041  0F0F                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F28                     	;# 
  2067  0F29                     	;# 
  2068  0F2A                     	;# 
  2069  0F2B                     	;# 
  2070  0F2C                     	;# 
  2071  0F2D                     	;# 
  2072  0F2E                     	;# 
  2073  0F2F                     	;# 
  2074  0F30                     	;# 
  2075  0F31                     	;# 
  2076  0F32                     	;# 
  2077  0F33                     	;# 
  2078  0F34                     	;# 
  2079  0F35                     	;# 
  2080  0F36                     	;# 
  2081  0F37                     	;# 
  2082  0FE4                     	;# 
  2083  0FE5                     	;# 
  2084  0FE6                     	;# 
  2085  0FE7                     	;# 
  2086  0FE8                     	;# 
  2087  0FE9                     	;# 
  2088  0FEA                     	;# 
  2089  0FEB                     	;# 
  2090  0FED                     	;# 
  2091  0FEE                     	;# 
  2092  0FEF                     	;# 
  2093                           
  2094                           	psect	stringtext1
  2095  0602                     __pstringtext1:	
  2096  0602                     _romData_t:	
  2097  0602  3455               	retlw	85
  2098  0603  346E               	retlw	110
  2099  0604  3463               	retlw	99
  2100  0605  346F               	retlw	111
  2101  0606  346E               	retlw	110
  2102  0607  3466               	retlw	102
  2103  0608  3469               	retlw	105
  2104  0609  3467               	retlw	103
  2105  060A  3475               	retlw	117
  2106  060B  3472               	retlw	114
  2107  060C  3465               	retlw	101
  2108  060D  3464               	retlw	100
  2109  060E  3400               	retlw	0
  2110  060F  3400               	retlw	0
  2111  0610  3400               	retlw	0
  2112  0611  3400               	retlw	0
  2113  0612  3400               	retlw	0
  2114  0613  3400               	retlw	0
  2115  0614                     __end_of_romData_t:	
  2116                           
  2117                           	psect	stringtext2
  2118  065F                     __pstringtext2:	
  2119  065F                     _n_ADDRESS_P0:	
  2120  065F  34AD               	retlw	173
  2121  0660  3487               	retlw	135
  2122  0661  3466               	retlw	102
  2123  0662  34BC               	retlw	188
  2124  0663  34BB               	retlw	187
  2125  0664                     __end_of_n_ADDRESS_P0:	
  2126                           
  2127                           	psect	stringtext3
  2128  063E                     __pstringtext3:	
  2129  063E                     _n_ADDRESS_MUL:	
  2130  063E  3421               	retlw	33
  2131  063F                     __end_of_n_ADDRESS_MUL:	
  2132  0003                     _STATUSbits	set	3
  2133  0010                     _PIR0bits	set	16
  2134  000C                     _PORTAbits	set	12
  2135  000B                     _INTCONbits	set	11
  2136  0097                     _WDTCONbits	set	151
  2137  009E                     _ADCON1bits	set	158
  2138  009C                     _ADRESH	set	156
  2139  009B                     _ADRESL	set	155
  2140  009D                     _ADCON0bits	set	157
  2141  0090                     _PIE0bits	set	144
  2142  008E                     _TRISCbits	set	142
  2143  008C                     _TRISAbits	set	140
  2144  0117                     _FVRCONbits	set	279
  2145  018E                     _ANSELCbits	set	398
  2146  018C                     _ANSELAbits	set	396
  2147  018E                     _ANSELC	set	398
  2148  018C                     _ANSELA	set	396
  2149  020C                     _WPUAbits	set	524
  2150  0211                     _SSP1BUF	set	529
  2151  0214                     _SSP1STATbits	set	532
  2152  0215                     _SSPCON1bits	set	533
  2153  0894                     _PMDATH	set	2196
  2154  0893                     _PMDATL	set	2195
  2155  0896                     _PMCON2	set	2198
  2156  0895                     _PMCON1bits	set	2197
  2157  0892                     _PMADRH	set	2194
  2158  0891                     _PMADRL	set	2193
  2159  0895                     _PMCON1	set	2197
  2160  091A                     _OSCCON2bits	set	2330
  2161  0919                     _OSCCON1bits	set	2329
  2162  063F                     STR_5:	
  2163  063F  3441               	retlw	65	;'A'
  2164  0640  3444               	retlw	68	;'D'
  2165  0641  3443               	retlw	67	;'C'
  2166  0642  3433               	retlw	51	;'3'
  2167  0643  3431               	retlw	49	;'1'
  2168  0644  3400               	retlw	0
  2169                           
  2170                           	psect	stringtext4
  2171  0653                     __pstringtext4:	
  2172  0653                     STR_4:	
  2173  0653  3441               	retlw	65	;'A'
  2174  0654  3444               	retlw	68	;'D'
  2175  0655  3443               	retlw	67	;'C'
  2176  0656  3432               	retlw	50	;'2'
  2177  0657  3439               	retlw	57	;'9'
  2178  0658  3400               	retlw	0
  2179                           
  2180                           	psect	stringtext5
  2181  0664                     __pstringtext5:	
  2182  0664                     STR_2:	
  2183  0664  3441               	retlw	65	;'A'
  2184  0665  3444               	retlw	68	;'D'
  2185  0666  3443               	retlw	67	;'C'
  2186  0667  3433               	retlw	51	;'3'
  2187  0668  3400               	retlw	0
  2188                           
  2189                           	psect	stringtext6
  2190  0669                     __pstringtext6:	
  2191  0669                     STR_3:	
  2192  0669  3441               	retlw	65	;'A'
  2193  066A  3444               	retlw	68	;'D'
  2194  066B  3443               	retlw	67	;'C'
  2195  066C  3437               	retlw	55	;'7'
  2196  066D  3400               	retlw	0
  2197                           
  2198                           	psect	stringtext7
  2199  066E                     __pstringtext7:	
  2200  066E                     STR_6:	
  2201  066E  3442               	retlw	66	;'B'
  2202  066F  344F               	retlw	79	;'O'
  2203  0670  344F               	retlw	79	;'O'
  2204  0671  3454               	retlw	84	;'T'
  2205  0672  3400               	retlw	0
  2206                           
  2207                           	psect	stringtext8
  2208  0673                     __pstringtext8:	
  2209  0673                     STR_7:	
  2210  0673  3441               	retlw	65	;'A'
  2211  0674  3443               	retlw	67	;'C'
  2212  0675  344B               	retlw	75	;'K'
  2213  0676  3400               	retlw	0
  2214                           
  2215                           	psect	stringtext9
  2216  0677                     __pstringtext9:	
  2217  0677                     STR_1:	
  2218  0677  3444               	retlw	68	;'D'
  2219  0678  3442               	retlw	66	;'B'
  2220  0679  3447               	retlw	71	;'G'
  2221  067A  3400               	retlw	0
  2222                           
  2223                           	psect	stringtext10
  2224  0000                     __pstringtext10:	
  2225                           
  2226                           ; #config settings
  2227  0000                     
  2228                           	psect	cinit
  2229  0011                     start_initialization:	
  2230  0011                     __initialization:	
  2231                           
  2232                           ; Clear objects allocated to COMMON
  2233  0011  01F9               	clrf	__pbssCOMMON& (0+127)
  2234  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2235                           
  2236                           ; Clear objects allocated to BANK0
  2237  0013  3049               	movlw	low __pbssBANK0
  2238  0014  0084               	movwf	4
  2239  0015  3000               	movlw	high __pbssBANK0
  2240  0016  0085               	movwf	5
  2241  0017  3024               	movlw	36
  2242  0018  3186  2659  3180   	fcall	clear_ram0
  2243                           
  2244                           ; Clear objects allocated to BANK1
  2245  001B  30A0               	movlw	low __pbssBANK1
  2246  001C  0084               	movwf	4
  2247  001D  3000               	movlw	high __pbssBANK1
  2248  001E  0085               	movwf	5
  2249  001F  3020               	movlw	32
  2250  0020  3186  2659         	fcall	clear_ram0
  2251  0022                     end_of_initialization:	
  2252                           ;End of C runtime variable initialization code
  2253                           
  2254  0022                     __end_of__initialization:	
  2255  0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2256  0023  0020               	movlb	0
  2257  0024  3182  2A59         	ljmp	_main	;jump to C main() function
  2258                           
  2259                           	psect	bssCOMMON
  2260  0079                     __pbssCOMMON:	
  2261  0079                     _nrf24l01RXPacketData:	
  2262  0079                     	ds	1
  2263  007A                     _sleepLoop:	
  2264  007A                     	ds	1
  2265                           
  2266                           	psect	bssBANK0
  2267  0049                     __pbssBANK0:	
  2268  0049                     _counter:	
  2269  0049                     	ds	2
  2270  004B                     _nrf24l01:	
  2271  004B                     	ds	1
  2272  004C                     _nrf24l01TXPacketData:	
  2273  004C                     	ds	1
  2274  004D                     _nrf24l01RXValue:	
  2275  004D                     	ds	8
  2276  0055                     _nrf24l01RXTopic:	
  2277  0055                     	ds	8
  2278  005D                     _nrf24l01TXValue:	
  2279  005D                     	ds	8
  2280  0065                     _nrf24l01TXTopic:	
  2281  0065                     	ds	8
  2282                           
  2283                           	psect	bssBANK1
  2284  00A0                     __pbssBANK1:	
  2285  00A0                     _nrf24l01RXName:	
  2286  00A0                     	ds	16
  2287  00B0                     _nrf24l01TXName:	
  2288  00B0                     	ds	16
  2289                           
  2290                           	psect	clrtext
  2291  0659                     clear_ram0:	
  2292                           ;	Called with FSR0 containing the base address, and
  2293                           ;	WREG with the size to clear
  2294                           
  2295  0659  0064               	clrwdt	;clear the watchdog before getting into this loop
  2296  065A                     clrloop0:	
  2297  065A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2298  065B  3101               	addfsr 0,1
  2299  065C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2300  065D  2E5A               	goto	clrloop0	;have we reached the end yet?
  2301  065E  3400               	retlw	0	;all done for this memory range, return
  2302                           
  2303                           	psect	cstackCOMMON
  2304  0070                     __pcstackCOMMON:	
  2305  0070                     ?_nrf24l01ISR:	
  2306  0070                     ?_nrf24l01SetRXMode:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_nrf24l01SendString:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_nrf24l01Init:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_nrf24l01InterfaceInit:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_nrf24l01SPISend:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ??_nrf24l01SPISend:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_nrf24l01SPIStart:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??_nrf24l01SPIStart:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_nrf24l01SPIEnd:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ??_nrf24l01SPIEnd:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_enableInterrupts:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ??_enableInterrupts:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_exception:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??_exception:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_ISR:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_sleep:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_loop:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_main:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_nrf24l01InitRegisters:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?i1_nrf24l01SetRXMode:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     nrf24l01SPISend@data:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     enableInterrupts@enable:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     exception@exception:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     nrf24l01InitRegisters@isReciever:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378                           
  2379                           ; 1 bytes @ 0x0
  2380  0070                     	ds	1
  2381  0071                     ?i1_nrf24l01Send:	
  2382  0071                     i1nrf24l01Send@data:	
  2383                           ; 1 bytes @ 0x1
  2384                           
  2385                           
  2386                           ; 1 bytes @ 0x1
  2387  0071                     	ds	1
  2388  0072                     ??i1_nrf24l01Send:	
  2389                           
  2390                           ; 1 bytes @ 0x2
  2391  0072                     	ds	1
  2392  0073                     i1nrf24l01Send@command:	
  2393                           
  2394                           ; 1 bytes @ 0x3
  2395  0073                     	ds	1
  2396  0074                     ??i1_nrf24l01SetRXMode:	
  2397                           
  2398                           ; 1 bytes @ 0x4
  2399  0074                     	ds	1
  2400  0075                     i1nrf24l01SetRXMode@config:	
  2401                           
  2402                           ; 1 bytes @ 0x5
  2403  0075                     	ds	1
  2404  0076                     i1nrf24l01SetRXMode@rxMode:	
  2405                           
  2406                           ; 1 bytes @ 0x6
  2407  0076                     	ds	1
  2408  0077                     ??_nrf24l01ISR:	
  2409                           
  2410                           ; 1 bytes @ 0x7
  2411  0077                     	ds	1
  2412  0078                     nrf24l01ISR@status:	
  2413                           
  2414                           ; 1 bytes @ 0x8
  2415  0078                     	ds	1
  2416  0079                     ??_ISR:	
  2417                           
  2418                           	psect	cstackBANK0
  2419  0020                     __pcstackBANK0:	
  2420                           ; 1 bytes @ 0x9
  2421                           
  2422  0020                     ?_strcpy:	
  2423  0020                     ??_nrf24l01InterfaceInit:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0020                     ??_sleep:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0020                     ?_nrf24l01Send:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0020                     ?_read_flashmem:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0020                     ?___lwdiv:	
  2436                           ; 2 bytes @ 0x0
  2437                           
  2438  0020                     ?___lwmod:	
  2439                           ; 2 bytes @ 0x0
  2440                           
  2441  0020                     ?___lmul:	
  2442                           ; 2 bytes @ 0x0
  2443                           
  2444  0020                     ?___lldiv:	
  2445                           ; 4 bytes @ 0x0
  2446                           
  2447  0020                     nrf24l01Send@data:	
  2448                           ; 4 bytes @ 0x0
  2449                           
  2450  0020                     read_flashmem@offset:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0020                     ___lwdiv@divisor:	
  2454                           ; 2 bytes @ 0x0
  2455                           
  2456  0020                     ___lwmod@divisor:	
  2457                           ; 2 bytes @ 0x0
  2458                           
  2459  0020                     strcpy@from:	
  2460                           ; 2 bytes @ 0x0
  2461                           
  2462  0020                     ___lmul@multiplier:	
  2463                           ; 2 bytes @ 0x0
  2464                           
  2465  0020                     ___lldiv@divisor:	
  2466                           ; 4 bytes @ 0x0
  2467                           
  2468                           
  2469                           ; 4 bytes @ 0x0
  2470  0020                     	ds	1
  2471  0021                     ??_nrf24l01Send:	
  2472                           
  2473                           ; 1 bytes @ 0x1
  2474  0021                     	ds	1
  2475  0022                     ??_strcpy:	
  2476  0022                     ??_read_flashmem:	
  2477                           ; 1 bytes @ 0x2
  2478                           
  2479  0022                     nrf24l01Send@command:	
  2480                           ; 1 bytes @ 0x2
  2481                           
  2482  0022                     ___lwdiv@dividend:	
  2483                           ; 1 bytes @ 0x2
  2484                           
  2485  0022                     ___lwmod@dividend:	
  2486                           ; 2 bytes @ 0x2
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0x2
  2490  0022                     	ds	1
  2491  0023                     ??_nrf24l01SetRXMode:	
  2492  0023                     ??_nrf24l01InitRegisters:	
  2493                           ; 1 bytes @ 0x3
  2494                           
  2495  0023                     strcpy@cp:	
  2496                           ; 1 bytes @ 0x3
  2497                           
  2498                           
  2499                           ; 1 bytes @ 0x3
  2500  0023                     	ds	1
  2501  0024                     ??___lwdiv:	
  2502  0024                     ??___lwmod:	
  2503                           ; 1 bytes @ 0x4
  2504                           
  2505  0024                     nrf24l01SetRXMode@config:	
  2506                           ; 1 bytes @ 0x4
  2507                           
  2508  0024                     nrf24l01InitRegisters@setupAW:	
  2509                           ; 1 bytes @ 0x4
  2510                           
  2511  0024                     strcpy@to:	
  2512                           ; 1 bytes @ 0x4
  2513                           
  2514  0024                     ___lmul@multiplicand:	
  2515                           ; 1 bytes @ 0x4
  2516                           
  2517  0024                     ___lldiv@dividend:	
  2518                           ; 4 bytes @ 0x4
  2519                           
  2520                           
  2521                           ; 4 bytes @ 0x4
  2522  0024                     	ds	1
  2523  0025                     nrf24l01SetRXMode@rxMode:	
  2524  0025                     nrf24l01InitRegisters@rfSetup:	
  2525                           ; 1 bytes @ 0x5
  2526                           
  2527  0025                     ___lwmod@counter:	
  2528                           ; 1 bytes @ 0x5
  2529                           
  2530  0025                     read_flashmem@result:	
  2531                           ; 1 bytes @ 0x5
  2532                           
  2533  0025                     ___lwdiv@quotient:	
  2534                           ; 2 bytes @ 0x5
  2535                           
  2536                           
  2537                           ; 2 bytes @ 0x5
  2538  0025                     	ds	1
  2539  0026                     ??_nrf24l01SendString:	
  2540  0026                     nrf24l01InitRegisters@feature:	
  2541                           ; 1 bytes @ 0x6
  2542                           
  2543                           
  2544                           ; 1 bytes @ 0x6
  2545  0026                     	ds	1
  2546  0027                     nrf24l01SendString@i:	
  2547  0027                     nrf24l01InitRegisters@status:	
  2548                           ; 1 bytes @ 0x7
  2549                           
  2550  0027                     ___lwdiv@counter:	
  2551                           ; 1 bytes @ 0x7
  2552                           
  2553  0027                     read_flashmem@address:	
  2554                           ; 1 bytes @ 0x7
  2555                           
  2556                           
  2557                           ; 2 bytes @ 0x7
  2558  0027                     	ds	1
  2559  0028                     ??___lmul:	
  2560  0028                     ??___lldiv:	
  2561                           ; 1 bytes @ 0x8
  2562                           
  2563  0028                     nrf24l01InitRegisters@enRXAddr:	
  2564                           ; 1 bytes @ 0x8
  2565                           
  2566  0028                     ___lmul@product:	
  2567                           ; 1 bytes @ 0x8
  2568                           
  2569                           
  2570                           ; 4 bytes @ 0x8
  2571  0028                     	ds	1
  2572  0029                     nrf24l01InitRegisters@enAA:	
  2573  0029                     ___lldiv@quotient:	
  2574                           ; 1 bytes @ 0x9
  2575                           
  2576                           
  2577                           ; 4 bytes @ 0x9
  2578  0029                     	ds	1
  2579  002A                     nrf24l01InitRegisters@DynPD:	
  2580                           
  2581                           ; 1 bytes @ 0xA
  2582  002A                     	ds	1
  2583  002B                     nrf24l01InitRegisters@config:	
  2584                           
  2585                           ; 1 bytes @ 0xB
  2586  002B                     	ds	1
  2587  002C                     ??_nrf24l01Init:	
  2588                           
  2589                           ; 1 bytes @ 0xC
  2590  002C                     	ds	1
  2591  002D                     ___lldiv@counter:	
  2592                           
  2593                           ; 1 bytes @ 0xD
  2594  002D                     	ds	1
  2595  002E                     ?_getADCValue:	
  2596  002E                     nrf24l01Init@isReciever:	
  2597                           ; 4 bytes @ 0xE
  2598                           
  2599  002E                     getADCValue@divider:	
  2600                           ; 1 bytes @ 0xE
  2601                           
  2602                           
  2603                           ; 4 bytes @ 0xE
  2604  002E                     	ds	4
  2605  0032                     ??_getADCValue:	
  2606                           
  2607                           ; 1 bytes @ 0x12
  2608  0032                     	ds	4
  2609  0036                     getADCValue@channel:	
  2610                           
  2611                           ; 1 bytes @ 0x16
  2612  0036                     	ds	1
  2613  0037                     getADCValue@adcLoop:	
  2614                           
  2615                           ; 1 bytes @ 0x17
  2616  0037                     	ds	1
  2617  0038                     getADCValue@adcSum:	
  2618                           
  2619                           ; 4 bytes @ 0x18
  2620  0038                     	ds	4
  2621  003C                     ?_utoa:	
  2622  003C                     utoa@val:	
  2623                           ; 1 bytes @ 0x1C
  2624                           
  2625                           
  2626                           ; 2 bytes @ 0x1C
  2627  003C                     	ds	2
  2628  003E                     utoa@base:	
  2629                           
  2630                           ; 2 bytes @ 0x1E
  2631  003E                     	ds	2
  2632  0040                     ??_utoa:	
  2633                           
  2634                           ; 1 bytes @ 0x20
  2635  0040                     	ds	1
  2636  0041                     utoa@v:	
  2637                           
  2638                           ; 2 bytes @ 0x21
  2639  0041                     	ds	2
  2640  0043                     utoa@c:	
  2641                           
  2642                           ; 1 bytes @ 0x23
  2643  0043                     	ds	1
  2644  0044                     utoa@buf:	
  2645                           
  2646                           ; 1 bytes @ 0x24
  2647  0044                     	ds	1
  2648  0045                     ??_loop:	
  2649  0045                     ??_main:	
  2650                           ; 1 bytes @ 0x25
  2651                           
  2652                           
  2653                           ; 1 bytes @ 0x25
  2654  0045                     	ds	3
  2655  0048                     main@i:	
  2656                           
  2657                           ; 1 bytes @ 0x28
  2658  0048                     	ds	1
  2659                           
  2660                           	psect	maintext
  2661  0259                     __pmaintext:	
  2662 ;;
  2663 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2664 ;;
  2665 ;; *************** function _main *****************
  2666 ;; Defined at:
  2667 ;;		line 114 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  i               1   40[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : B1F/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;Total ram usage:        4 bytes
  2686 ;; Hardware stack levels required when called:   10
  2687 ;; This function calls:
  2688 ;;		_loop
  2689 ;;		_nrf24l01Init
  2690 ;;		_nrf24l01SendString
  2691 ;;		_read_flashmem
  2692 ;;		_sleep
  2693 ;;		_strcpy
  2694 ;;		_utoa
  2695 ;; This function is called by:
  2696 ;;		Startup code after reset
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _main
  2702  0259                     _main:	
  2703                           
  2704                           ;main.c: 117: ANSELA = 0x00;
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2708  0259  0023               	movlb	3	; select bank3
  2709  025A  018C               	clrf	12	;volatile
  2710                           
  2711                           ;main.c: 118: ANSELC = 0x00;
  2712  025B  018E               	clrf	14	;volatile
  2713                           
  2714                           ;main.c: 124: INTCONbits.PEIE = 0;
  2715  025C  130B               	bcf	11,6	;volatile
  2716                           
  2717                           ;main.c: 125: INTCONbits.GIE = 0;
  2718  025D  138B               	bcf	11,7	;volatile
  2719                           
  2720                           ;main.c: 127: OSCCON1bits.NOSC = 0b000;
  2721  025E  308F               	movlw	-113
  2722  025F  0032               	movlb	18	; select bank18
  2723  0260  0599               	andwf	25,f	;volatile
  2724                           
  2725                           ;main.c: 128: OSCCON2bits.COSC = 0b000;
  2726  0261  308F               	movlw	-113
  2727  0262  059A               	andwf	26,f	;volatile
  2728                           
  2729                           ;main.c: 130: OSCCON1bits.NDIV = 0b000;
  2730  0263  30F0               	movlw	-16
  2731  0264  0599               	andwf	25,f	;volatile
  2732                           
  2733                           ;main.c: 131: OSCCON2bits.CDIV = 0b000;
  2734  0265  30F0               	movlw	-16
  2735  0266  059A               	andwf	26,f	;volatile
  2736                           
  2737                           ;main.c: 133: _delay((unsigned long)((10)*(16000000/4000.0)));
  2738  0267  3034               	movlw	52
  2739  0268  0020               	movlb	0	; select bank0
  2740  0269  00C5               	movwf	??_main
  2741  026A  30F1               	movlw	241
  2742  026B                     u1937:	
  2743  026B  0B89               	decfsz	9,f
  2744  026C  2A6B               	goto	u1937
  2745  026D  0BC5               	decfsz	??_main,f
  2746  026E  2A6B               	goto	u1937
  2747  026F  3200               	nop2
  2748                           
  2749                           ;main.c: 135: nrf24l01Init(0);
  2750  0270  3000               	movlw	0
  2751  0271  3185  2583  3182   	fcall	_nrf24l01Init
  2752                           
  2753                           ;main.c: 137: for (unsigned char i = 0; i < sizeof(nrf24l01TXName); i++){
  2754  0274  0020               	movlb	0	; select bank0
  2755  0275  01C8               	clrf	main@i
  2756  0276  3010               	movlw	16
  2757  0277  0248               	subwf	main@i,w
  2758  0278  1803               	btfsc	3,0
  2759  0279  2A95               	goto	l176
  2760  027A                     l2632:	
  2761                           
  2762                           ;main.c: 138: nrf24l01TXName[i] = read_flashmem((unsigned) 0 + i);
  2763  027A  0848               	movf	main@i,w
  2764  027B  00C5               	movwf	??_main
  2765  027C  01C6               	clrf	??_main+1
  2766  027D  0845               	movf	??_main,w
  2767  027E  00A0               	movwf	read_flashmem@offset
  2768  027F  0846               	movf	??_main+1,w
  2769  0280  00A1               	movwf	read_flashmem@offset+1
  2770  0281  3184  24C9  3182   	fcall	_read_flashmem
  2771  0284  0020               	movlb	0	; select bank0
  2772  0285  0820               	movf	?_read_flashmem,w
  2773  0286  00C7               	movwf	??_main+2
  2774  0287  0848               	movf	main@i,w
  2775  0288  3EB0               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  2776  0289  0086               	movwf	6
  2777  028A  0187               	clrf	7
  2778  028B  0847               	movf	??_main+2,w
  2779  028C  0081               	movwf	1
  2780  028D  3001               	movlw	1
  2781  028E  00C5               	movwf	??_main
  2782  028F  0845               	movf	??_main,w
  2783  0290  07C8               	addwf	main@i,f
  2784  0291  3010               	movlw	16
  2785  0292  0248               	subwf	main@i,w
  2786  0293  1C03               	skipc
  2787  0294  2A7A               	goto	l2632
  2788  0295                     l176:	
  2789                           
  2790                           ;main.c: 139: };main.c: 144: FVRCONbits.FVREN = 0;
  2791  0295  0022               	movlb	2	; select bank2
  2792  0296  1397               	bcf	23,7	;volatile
  2793                           
  2794                           ;main.c: 145: FVRCONbits.ADFVR = 1;
  2795  0297  0817               	movf	23,w	;volatile
  2796  0298  39FC               	andlw	-4
  2797  0299  3801               	iorlw	1
  2798  029A  0097               	movwf	23	;volatile
  2799                           
  2800                           ;main.c: 146: FVRCONbits.FVREN = 1;
  2801  029B  1797               	bsf	23,7	;volatile
  2802                           
  2803                           ;main.c: 149: FVRCONbits.TSEN = 0;
  2804  029C  1297               	bcf	23,5	;volatile
  2805                           
  2806                           ;main.c: 150: FVRCONbits.TSRNG = 0;
  2807  029D  1217               	bcf	23,4	;volatile
  2808                           
  2809                           ;main.c: 151: FVRCONbits.TSEN = 1;
  2810  029E  1697               	bsf	23,5	;volatile
  2811                           
  2812                           ;main.c: 154: ADCON0bits.ADON = 0;
  2813  029F  0021               	movlb	1	; select bank1
  2814  02A0  101D               	bcf	29,0	;volatile
  2815                           
  2816                           ;main.c: 156: ANSELAbits.ANSA4 = 1;
  2817  02A1  0023               	movlb	3	; select bank3
  2818  02A2  160C               	bsf	12,4	;volatile
  2819                           
  2820                           ;main.c: 157: TRISAbits.TRISA4 = 1;
  2821  02A3  0021               	movlb	1	; select bank1
  2822  02A4  160C               	bsf	12,4	;volatile
  2823                           
  2824                           ;main.c: 158: WPUAbits.WPUA4 = 0;
  2825  02A5  0024               	movlb	4	; select bank4
  2826  02A6  120C               	bcf	12,4	;volatile
  2827                           
  2828                           ;main.c: 160: ANSELCbits.ANSC3 = 1;
  2829  02A7  0023               	movlb	3	; select bank3
  2830  02A8  158E               	bsf	14,3	;volatile
  2831                           
  2832                           ;main.c: 161: TRISCbits.TRISC3 = 1;
  2833  02A9  0021               	movlb	1	; select bank1
  2834  02AA  158E               	bsf	14,3	;volatile
  2835                           
  2836                           ;main.c: 163: ADCON1bits.ADCS = 0b111;
  2837  02AB  3070               	movlw	112
  2838  02AC  049E               	iorwf	30,f	;volatile
  2839                           
  2840                           ;main.c: 164: ADCON1bits.ADFM = 1;
  2841  02AD  179E               	bsf	30,7	;volatile
  2842                           
  2843                           ;main.c: 165: ADCON1bits.ADPREF = 0b00;
  2844  02AE  30FC               	movlw	-4
  2845  02AF  059E               	andwf	30,f	;volatile
  2846                           
  2847                           ;main.c: 167: ADCON0bits.CHS = 3;
  2848  02B0  081D               	movf	29,w	;volatile
  2849  02B1  3903               	andlw	-253
  2850  02B2  380C               	iorlw	12
  2851  02B3  009D               	movwf	29	;volatile
  2852                           
  2853                           ;main.c: 168: ADCON0bits.ADON = 1;
  2854  02B4  141D               	bsf	29,0	;volatile
  2855                           
  2856                           ;main.c: 172: TRISAbits.TRISA2 = 1;
  2857  02B5  150C               	bsf	12,2	;volatile
  2858                           
  2859                           ;main.c: 173: PIE0bits.INTE = 1;
  2860  02B6  1410               	bsf	16,0	;volatile
  2861                           
  2862                           ;main.c: 174: INTCONbits.INTEDG = 0;
  2863  02B7  100B               	bcf	11,0	;volatile
  2864                           
  2865                           ;main.c: 178: WDTCONbits.WDTPS = 11;
  2866  02B8  0817               	movf	23,w	;volatile
  2867  02B9  39C1               	andlw	-63
  2868  02BA  3816               	iorlw	22
  2869  02BB  0097               	movwf	23	;volatile
  2870                           
  2871                           ;main.c: 181: TRISAbits.TRISA5 = 0;
  2872  02BC  128C               	bcf	12,5	;volatile
  2873                           
  2874                           ;main.c: 182: PORTAbits.RA5 = 0;
  2875  02BD  0020               	movlb	0	; select bank0
  2876  02BE  128C               	bcf	12,5	;volatile
  2877                           
  2878                           ;main.c: 185: INTCONbits.PEIE = 1;
  2879  02BF  170B               	bsf	11,6	;volatile
  2880                           
  2881                           ;main.c: 186: INTCONbits.GIE = 1;
  2882  02C0  178B               	bsf	11,7	;volatile
  2883                           
  2884                           ;main.c: 188: strcpy(nrf24l01TXTopic, "BOOT");
  2885  02C1  306E               	movlw	low (STR_6| (0+32768))
  2886  02C2  00A0               	movwf	strcpy@from
  2887  02C3  3086               	movlw	high (STR_6| (0+32768))
  2888  02C4  00A1               	movwf	strcpy@from+1
  2889  02C5  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  2890  02C6  3185  25CC  3182   	fcall	_strcpy
  2891                           
  2892                           ;main.c: 189: utoa(nrf24l01TXValue, read_flashmem(0 + 16), 10);
  2893  02C9  3010               	movlw	16
  2894  02CA  0020               	movlb	0	; select bank0
  2895  02CB  00A0               	movwf	read_flashmem@offset
  2896  02CC  3000               	movlw	0
  2897  02CD  00A1               	movwf	read_flashmem@offset+1
  2898  02CE  3184  24C9  3182   	fcall	_read_flashmem
  2899  02D1  0020               	movlb	0	; select bank0
  2900  02D2  0821               	movf	?_read_flashmem+1,w
  2901  02D3  00BD               	movwf	utoa@val+1
  2902  02D4  0820               	movf	?_read_flashmem,w
  2903  02D5  00BC               	movwf	utoa@val
  2904  02D6  300A               	movlw	10
  2905  02D7  00BE               	movwf	utoa@base
  2906  02D8  3000               	movlw	0
  2907  02D9  00BF               	movwf	utoa@base+1
  2908  02DA  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  2909  02DB  3183  2373  3182   	fcall	_utoa
  2910                           
  2911                           ;main.c: 190: nrf24l01TXPacketData.byte = 0x00;
  2912  02DE  0020               	movlb	0	; select bank0
  2913  02DF  01CC               	clrf	_nrf24l01TXPacketData
  2914                           
  2915                           ;main.c: 191: nrf24l01TXPacketData.ACKRequest = 0;
  2916  02E0  104C               	bcf	_nrf24l01TXPacketData,0
  2917                           
  2918                           ;main.c: 192: nrf24l01SendString();
  2919  02E1  3180  20F9  3182   	fcall	_nrf24l01SendString
  2920                           
  2921                           ;main.c: 193: sleep();
  2922  02E4  3186  262D  3182   	fcall	_sleep
  2923  02E7                     l2690:	
  2924                           ;main.c: 195: while(1){
  2925                           
  2926                           
  2927                           ;main.c: 196: loop();
  2928  02E7  3180  2026  3182   	fcall	_loop
  2929  02EA  2AE7               	goto	l2690
  2930  02EB                     __end_of_main:	
  2931                           ;main.c: 197: };main.c: 199: return;
  2932                           
  2933                           
  2934                           	psect	text1
  2935  04C9                     __ptext1:	
  2936 ;; *************** function _read_flashmem *****************
  2937 ;; Defined at:
  2938 ;;		line 60 in file "flash.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  offset          2    0[BANK0 ] unsigned int 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  address         2    7[BANK0 ] unsigned int 
  2943 ;;  result          2    5[BANK0 ] unsigned int 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2    0[BANK0 ] unsigned int 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;Total ram usage:        9 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    5
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _read_flashmem
  2969  04C9                     _read_flashmem:	
  2970                           
  2971                           ;flash.c: 62: unsigned int address;;flash.c: 64: INTCONbits.GIE = 0;
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in _read_flashmem: [wreg+status,2]
  2975  04C9  138B               	bcf	11,7	;volatile
  2976                           
  2977                           ;flash.c: 66: PMCON1 = 0x00;
  2978  04CA  0031               	movlb	17	; select bank17
  2979  04CB  0195               	clrf	21	;volsfr
  2980                           
  2981                           ;flash.c: 68: address = (0x2000U - sizeof(romData_t)); + offset;
  2982  04CC  30EE               	movlw	238
  2983  04CD  0020               	movlb	0	; select bank0
  2984  04CE  00A7               	movwf	read_flashmem@address
  2985  04CF  301F               	movlw	31
  2986  04D0  00A8               	movwf	read_flashmem@address+1
  2987                           
  2988                           ;flash.c: 69: PMADRL = (char) (address >> 0);
  2989  04D1  0827               	movf	read_flashmem@address,w
  2990  04D2  0031               	movlb	17	; select bank17
  2991  04D3  0091               	movwf	17	;volatile
  2992                           
  2993                           ;flash.c: 70: PMADRH = (char) (address >> 8);
  2994  04D4  0020               	movlb	0	; select bank0
  2995  04D5  0828               	movf	read_flashmem@address+1,w
  2996  04D6  0031               	movlb	17	; select bank17
  2997  04D7  0092               	movwf	18	;volatile
  2998                           
  2999                           ;flash.c: 72: PMCON1bits.RD = 1;
  3000  04D8  1415               	bsf	21,0	;volsfr
  3001                           
  3002                           ;flash.c: 74: __nop();
  3003  04D9  0000               	nop
  3004                           
  3005                           ;flash.c: 75: __nop();
  3006  04DA  0000               	nop
  3007                           
  3008                           ;flash.c: 77: unsigned int result = 0;
  3009  04DB  0020               	movlb	0	; select bank0
  3010  04DC  01A5               	clrf	read_flashmem@result
  3011  04DD  01A6               	clrf	read_flashmem@result+1
  3012                           
  3013                           ;flash.c: 78: result = PMDATL;
  3014  04DE  0031               	movlb	17	; select bank17
  3015  04DF  0813               	movf	19,w	;volatile
  3016  04E0  0020               	movlb	0	; select bank0
  3017  04E1  00A2               	movwf	??_read_flashmem
  3018  04E2  01A3               	clrf	??_read_flashmem+1
  3019  04E3  0822               	movf	??_read_flashmem,w
  3020  04E4  00A5               	movwf	read_flashmem@result
  3021  04E5  0823               	movf	??_read_flashmem+1,w
  3022  04E6  00A6               	movwf	read_flashmem@result+1
  3023                           
  3024                           ;flash.c: 79: result|= ( (unsigned) (PMDATH) << 8);
  3025  04E7  0031               	movlb	17	; select bank17
  3026  04E8  0814               	movf	20,w	;volatile
  3027  04E9  0020               	movlb	0	; select bank0
  3028  04EA  00A2               	movwf	??_read_flashmem
  3029  04EB  01A3               	clrf	??_read_flashmem+1
  3030  04EC  0822               	movf	??_read_flashmem,w
  3031  04ED  00A3               	movwf	??_read_flashmem+1
  3032  04EE  01A2               	clrf	??_read_flashmem
  3033  04EF  0822               	movf	??_read_flashmem,w
  3034  04F0  04A5               	iorwf	read_flashmem@result,f
  3035  04F1  0823               	movf	??_read_flashmem+1,w
  3036  04F2  04A6               	iorwf	read_flashmem@result+1,f
  3037                           
  3038                           ;flash.c: 81: INTCONbits.GIE = 1;
  3039  04F3  178B               	bsf	11,7	;volatile
  3040                           
  3041                           ;flash.c: 83: return result;
  3042  04F4  0826               	movf	read_flashmem@result+1,w
  3043  04F5  00A1               	movwf	?_read_flashmem+1
  3044  04F6  0825               	movf	read_flashmem@result,w
  3045  04F7  00A0               	movwf	?_read_flashmem
  3046  04F8  0008               	return
  3047  04F9                     __end_of_read_flashmem:	
  3048                           
  3049                           	psect	text2
  3050  0583                     __ptext2:	
  3051 ;; *************** function _nrf24l01Init *****************
  3052 ;; Defined at:
  3053 ;;		line 393 in file "nrf24l01.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  isReciever      1    wreg     unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  isReciever      1   14[BANK0 ] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;Total ram usage:        3 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    8
  3074 ;; This function calls:
  3075 ;;		_nrf24l01InitRegisters
  3076 ;;		_nrf24l01InterfaceInit
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _nrf24l01Init
  3084  0583                     _nrf24l01Init:	
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3088                           ;nrf24l01Init@isReciever stored from wreg
  3089  0583  0020               	movlb	0	; select bank0
  3090  0584  00AE               	movwf	nrf24l01Init@isReciever
  3091                           
  3092                           ;nrf24l01.c: 396: nrf24l01InterfaceInit();
  3093  0585  3186  2614  3185   	fcall	_nrf24l01InterfaceInit
  3094                           
  3095                           ;nrf24l01.c: 400: PORTAbits.RA0 = 0;
  3096  0588  0020               	movlb	0	; select bank0
  3097  0589  100C               	bcf	12,0	;volatile
  3098                           
  3099                           ;nrf24l01.c: 402: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3100  058A  3002               	movlw	2
  3101  058B  0020               	movlb	0	; select bank0
  3102  058C  00AD               	movwf	??_nrf24l01Init+1
  3103  058D  3004               	movlw	4
  3104  058E  00AC               	movwf	??_nrf24l01Init
  3105  058F  30BA               	movlw	186
  3106  0590                     u1947:	
  3107  0590  0B89               	decfsz	9,f
  3108  0591  2D90               	goto	u1947
  3109  0592  0BAC               	decfsz	??_nrf24l01Init,f
  3110  0593  2D90               	goto	u1947
  3111  0594  0BAD               	decfsz	??_nrf24l01Init+1,f
  3112  0595  2D90               	goto	u1947
  3113  0596  0000               	nop
  3114                           
  3115                           ;nrf24l01.c: 404: nrf24l01InitRegisters(isReciever);
  3116  0597  0020               	movlb	0	; select bank0
  3117  0598  082E               	movf	nrf24l01Init@isReciever,w
  3118  0599  3181  21B4  3185   	fcall	_nrf24l01InitRegisters
  3119                           
  3120                           ;nrf24l01.c: 406: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3121  059C  3002               	movlw	2
  3122  059D  0020               	movlb	0	; select bank0
  3123  059E  00AD               	movwf	??_nrf24l01Init+1
  3124  059F  3004               	movlw	4
  3125  05A0  00AC               	movwf	??_nrf24l01Init
  3126  05A1  30BA               	movlw	186
  3127  05A2                     u1957:	
  3128  05A2  0B89               	decfsz	9,f
  3129  05A3  2DA2               	goto	u1957
  3130  05A4  0BAC               	decfsz	??_nrf24l01Init,f
  3131  05A5  2DA2               	goto	u1957
  3132  05A6  0BAD               	decfsz	??_nrf24l01Init+1,f
  3133  05A7  2DA2               	goto	u1957
  3134  05A8  0000               	nop
  3135                           
  3136                           ;nrf24l01.c: 408: PORTAbits.RA0 = 1;
  3137  05A9  0020               	movlb	0	; select bank0
  3138  05AA  140C               	bsf	12,0	;volatile
  3139  05AB  0008               	return
  3140  05AC                     __end_of_nrf24l01Init:	
  3141                           
  3142                           	psect	text3
  3143  0614                     __ptext3:	
  3144 ;; *************** function _nrf24l01InterfaceInit *****************
  3145 ;; Defined at:
  3146 ;;		line 7 in file "interface.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    5
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_nrf24l01Init
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _nrf24l01InterfaceInit
  3176  0614                     _nrf24l01InterfaceInit:	
  3177                           
  3178                           ;interface.c: 9: TRISAbits.TRISA0 = 0;
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3182  0614  0021               	movlb	1	; select bank1
  3183  0615  100C               	bcf	12,0	;volatile
  3184                           
  3185                           ;interface.c: 10: TRISAbits.TRISA1 = 0;
  3186  0616  108C               	bcf	12,1	;volatile
  3187                           
  3188                           ;interface.c: 12: TRISCbits.TRISC1 = 1;
  3189  0617  148E               	bsf	14,1	;volatile
  3190                           
  3191                           ;interface.c: 13: TRISCbits.TRISC2 = 0;
  3192  0618  110E               	bcf	14,2	;volatile
  3193                           
  3194                           ;interface.c: 14: TRISCbits.TRISC0 = 0;
  3195  0619  100E               	bcf	14,0	;volatile
  3196                           
  3197                           ;interface.c: 16: SSPCON1bits.SSPEN = 0;
  3198  061A  0024               	movlb	4	; select bank4
  3199  061B  1295               	bcf	21,5	;volatile
  3200                           
  3201                           ;interface.c: 17: SSPCON1bits.CKP = 0;
  3202  061C  1215               	bcf	21,4	;volatile
  3203                           
  3204                           ;interface.c: 18: SSP1STATbits.CKE = 1;
  3205  061D  1714               	bsf	20,6	;volatile
  3206                           
  3207                           ;interface.c: 19: SSPCON1bits.SSPM = 0b0000;
  3208  061E  30F0               	movlw	-16
  3209  061F  0595               	andwf	21,f	;volatile
  3210                           
  3211                           ;interface.c: 21: SSPCON1bits.SSPEN = 1;
  3212  0620  1695               	bsf	21,5	;volatile
  3213  0621  0008               	return
  3214  0622                     __end_of_nrf24l01InterfaceInit:	
  3215                           
  3216                           	psect	text4
  3217  01B4                     __ptext4:	
  3218 ;; *************** function _nrf24l01InitRegisters *****************
  3219 ;; Defined at:
  3220 ;;		line 308 in file "nrf24l01.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  isReciever      1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  isReciever      1    0[COMMON] unsigned char 
  3225 ;;  config          1   11[BANK0 ] struct .
  3226 ;;  DynPD           1   10[BANK0 ] struct .
  3227 ;;  enAA            1    9[BANK0 ] struct .
  3228 ;;  enRXAddr        1    8[BANK0 ] struct .
  3229 ;;  status          1    7[BANK0 ] struct .
  3230 ;;  feature         1    6[BANK0 ] struct .
  3231 ;;  rfSetup         1    5[BANK0 ] struct .
  3232 ;;  setupAW         1    4[BANK0 ] struct .
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;Total ram usage:        9 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    7
  3249 ;; This function calls:
  3250 ;;		_nrf24l01Send
  3251 ;; This function is called by:
  3252 ;;		_nrf24l01Init
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _nrf24l01InitRegisters
  3258  01B4                     _nrf24l01InitRegisters:	
  3259                           
  3260                           ;nrf24l01.c: 310: n_CONFIG_t config;;nrf24l01.c: 312: config.PWR_UP = 0;
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3264  01B4  0020               	movlb	0	; select bank0
  3265  01B5  10AB               	bcf	nrf24l01InitRegisters@config,1
  3266                           
  3267                           ;nrf24l01.c: 313: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3268  01B6  082B               	movf	nrf24l01InitRegisters@config,w
  3269  01B7  00A3               	movwf	??_nrf24l01InitRegisters
  3270  01B8  0823               	movf	??_nrf24l01InitRegisters,w
  3271  01B9  00A0               	movwf	nrf24l01Send@data
  3272  01BA  3020               	movlw	32
  3273  01BB  3185  25AC  3181   	fcall	_nrf24l01Send
  3274                           
  3275                           ;nrf24l01.c: 315: _delay((unsigned long)((10000)*(16000000/4000000.0)));
  3276  01BE  3034               	movlw	52
  3277  01BF  0020               	movlb	0	; select bank0
  3278  01C0  00A3               	movwf	??_nrf24l01InitRegisters
  3279  01C1  30F1               	movlw	241
  3280  01C2                     u1967:	
  3281  01C2  0B89               	decfsz	9,f
  3282  01C3  29C2               	goto	u1967
  3283  01C4  0BA3               	decfsz	??_nrf24l01InitRegisters,f
  3284  01C5  29C2               	goto	u1967
  3285  01C6  3200               	nop2
  3286                           
  3287                           ;nrf24l01.c: 317: n_SETUP_AW_t setupAW;;nrf24l01.c: 318: setupAW.byte = 0x00;
  3288  01C7  0020               	movlb	0	; select bank0
  3289  01C8  01A4               	clrf	nrf24l01InitRegisters@setupAW
  3290                           
  3291                           ;nrf24l01.c: 319: setupAW.AW = 0b11;
  3292  01C9  3003               	movlw	3
  3293  01CA  04A4               	iorwf	nrf24l01InitRegisters@setupAW,f
  3294                           
  3295                           ;nrf24l01.c: 320: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3296  01CB  0824               	movf	nrf24l01InitRegisters@setupAW,w
  3297  01CC  00A3               	movwf	??_nrf24l01InitRegisters
  3298  01CD  0823               	movf	??_nrf24l01InitRegisters,w
  3299  01CE  00A0               	movwf	nrf24l01Send@data
  3300  01CF  3022               	movlw	34
  3301  01D0  3185  25AC  3181   	fcall	_nrf24l01Send
  3302                           
  3303                           ;nrf24l01.c: 328: n_RF_SETUP_t rfSetup;;nrf24l01.c: 329: rfSetup.RF_DR_LOW = 0;
  3304  01D3  0020               	movlb	0	; select bank0
  3305  01D4  12A5               	bcf	nrf24l01InitRegisters@rfSetup,5
  3306                           
  3307                           ;nrf24l01.c: 330: rfSetup.RF_DR_HIGH = 1;
  3308  01D5  15A5               	bsf	nrf24l01InitRegisters@rfSetup,3
  3309                           
  3310                           ;nrf24l01.c: 331: rfSetup.RF_PWR = 3;
  3311  01D6  3006               	movlw	6
  3312  01D7  04A5               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3313                           
  3314                           ;nrf24l01.c: 332: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3315  01D8  0825               	movf	nrf24l01InitRegisters@rfSetup,w
  3316  01D9  00A3               	movwf	??_nrf24l01InitRegisters
  3317  01DA  0823               	movf	??_nrf24l01InitRegisters,w
  3318  01DB  00A0               	movwf	nrf24l01Send@data
  3319  01DC  3026               	movlw	38
  3320  01DD  3185  25AC  3181   	fcall	_nrf24l01Send
  3321                           
  3322                           ;nrf24l01.c: 335: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 336: enRXAddr.ERX_P0 = 1;
  3323  01E0  0020               	movlb	0	; select bank0
  3324  01E1  1428               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3325                           
  3326                           ;nrf24l01.c: 337: enRXAddr.ERX_P1 = 1;
  3327  01E2  14A8               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3328                           
  3329                           ;nrf24l01.c: 338: enRXAddr.ERX_P2 = 1;
  3330  01E3  1528               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3331                           
  3332                           ;nrf24l01.c: 339: enRXAddr.ERX_P3 = 1;
  3333  01E4  15A8               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3334                           
  3335                           ;nrf24l01.c: 340: enRXAddr.ERX_P4 = 1;
  3336  01E5  1628               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3337                           
  3338                           ;nrf24l01.c: 341: enRXAddr.ERX_P5 = 1;
  3339  01E6  16A8               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3340                           
  3341                           ;nrf24l01.c: 342: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3342  01E7  0828               	movf	nrf24l01InitRegisters@enRXAddr,w
  3343  01E8  00A3               	movwf	??_nrf24l01InitRegisters
  3344  01E9  0823               	movf	??_nrf24l01InitRegisters,w
  3345  01EA  00A0               	movwf	nrf24l01Send@data
  3346  01EB  3022               	movlw	34
  3347  01EC  3185  25AC  3181   	fcall	_nrf24l01Send
  3348                           
  3349                           ;nrf24l01.c: 345: n_EN_AA_t enAA;;nrf24l01.c: 346: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3350  01EF  0020               	movlb	0	; select bank0
  3351  01F0  01A0               	clrf	nrf24l01Send@data
  3352  01F1  3001               	movlw	1
  3353  01F2  3185  25AC  3181   	fcall	_nrf24l01Send
  3354  01F5  0020               	movlb	0	; select bank0
  3355  01F6  00A3               	movwf	??_nrf24l01InitRegisters
  3356  01F7  0823               	movf	??_nrf24l01InitRegisters,w
  3357  01F8  00A9               	movwf	nrf24l01InitRegisters@enAA
  3358                           
  3359                           ;nrf24l01.c: 347: enAA.ENAA_P0 = 0;
  3360  01F9  1029               	bcf	nrf24l01InitRegisters@enAA,0
  3361                           
  3362                           ;nrf24l01.c: 348: enAA.ENAA_P1 = 0;
  3363  01FA  10A9               	bcf	nrf24l01InitRegisters@enAA,1
  3364                           
  3365                           ;nrf24l01.c: 349: enAA.ENAA_P2 = 0;
  3366  01FB  1129               	bcf	nrf24l01InitRegisters@enAA,2
  3367                           
  3368                           ;nrf24l01.c: 350: enAA.ENAA_P3 = 0;
  3369  01FC  11A9               	bcf	nrf24l01InitRegisters@enAA,3
  3370                           
  3371                           ;nrf24l01.c: 351: enAA.ENAA_P4 = 0;
  3372  01FD  1229               	bcf	nrf24l01InitRegisters@enAA,4
  3373                           
  3374                           ;nrf24l01.c: 352: enAA.ENAA_P5 = 0;
  3375  01FE  12A9               	bcf	nrf24l01InitRegisters@enAA,5
  3376                           
  3377                           ;nrf24l01.c: 353: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3378  01FF  0829               	movf	nrf24l01InitRegisters@enAA,w
  3379  0200  00A3               	movwf	??_nrf24l01InitRegisters
  3380  0201  0823               	movf	??_nrf24l01InitRegisters,w
  3381  0202  00A0               	movwf	nrf24l01Send@data
  3382  0203  3021               	movlw	33
  3383  0204  3185  25AC  3181   	fcall	_nrf24l01Send
  3384                           
  3385                           ;nrf24l01.c: 357: n_FEATURE_t feature;;nrf24l01.c: 358: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3386  0207  0020               	movlb	0	; select bank0
  3387  0208  01A0               	clrf	nrf24l01Send@data
  3388  0209  301D               	movlw	29
  3389  020A  3185  25AC  3181   	fcall	_nrf24l01Send
  3390  020D  0020               	movlb	0	; select bank0
  3391  020E  00A3               	movwf	??_nrf24l01InitRegisters
  3392  020F  0823               	movf	??_nrf24l01InitRegisters,w
  3393  0210  00A6               	movwf	nrf24l01InitRegisters@feature
  3394                           
  3395                           ;nrf24l01.c: 359: feature.EN_DPL = 1;
  3396  0211  1526               	bsf	nrf24l01InitRegisters@feature,2
  3397                           
  3398                           ;nrf24l01.c: 360: feature.EN_DYN_ACK = 1;
  3399  0212  1426               	bsf	nrf24l01InitRegisters@feature,0
  3400                           
  3401                           ;nrf24l01.c: 361: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3402  0213  0826               	movf	nrf24l01InitRegisters@feature,w
  3403  0214  00A3               	movwf	??_nrf24l01InitRegisters
  3404  0215  0823               	movf	??_nrf24l01InitRegisters,w
  3405  0216  00A0               	movwf	nrf24l01Send@data
  3406  0217  303D               	movlw	61
  3407  0218  3185  25AC  3181   	fcall	_nrf24l01Send
  3408                           
  3409                           ;nrf24l01.c: 363: n_DYNPD_t DynPD;;nrf24l01.c: 364: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3410  021B  0020               	movlb	0	; select bank0
  3411  021C  01A0               	clrf	nrf24l01Send@data
  3412  021D  301C               	movlw	28
  3413  021E  3185  25AC  3181   	fcall	_nrf24l01Send
  3414  0221  0020               	movlb	0	; select bank0
  3415  0222  00A3               	movwf	??_nrf24l01InitRegisters
  3416  0223  0823               	movf	??_nrf24l01InitRegisters,w
  3417  0224  00AA               	movwf	nrf24l01InitRegisters@DynPD
  3418                           
  3419                           ;nrf24l01.c: 365: DynPD.DPL_P0 = 1;
  3420  0225  142A               	bsf	nrf24l01InitRegisters@DynPD,0
  3421                           
  3422                           ;nrf24l01.c: 366: DynPD.DPL_P1 = 1;
  3423  0226  14AA               	bsf	nrf24l01InitRegisters@DynPD,1
  3424                           
  3425                           ;nrf24l01.c: 367: DynPD.DPL_P2 = 1;
  3426  0227  152A               	bsf	nrf24l01InitRegisters@DynPD,2
  3427                           
  3428                           ;nrf24l01.c: 368: DynPD.DPL_P3 = 1;
  3429  0228  15AA               	bsf	nrf24l01InitRegisters@DynPD,3
  3430                           
  3431                           ;nrf24l01.c: 369: DynPD.DPL_P4 = 1;
  3432  0229  162A               	bsf	nrf24l01InitRegisters@DynPD,4
  3433                           
  3434                           ;nrf24l01.c: 370: DynPD.DPL_P5 = 1;
  3435  022A  16AA               	bsf	nrf24l01InitRegisters@DynPD,5
  3436                           
  3437                           ;nrf24l01.c: 371: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3438  022B  082A               	movf	nrf24l01InitRegisters@DynPD,w
  3439  022C  00A3               	movwf	??_nrf24l01InitRegisters
  3440  022D  0823               	movf	??_nrf24l01InitRegisters,w
  3441  022E  00A0               	movwf	nrf24l01Send@data
  3442  022F  303C               	movlw	60
  3443  0230  3185  25AC  3181   	fcall	_nrf24l01Send
  3444                           
  3445                           ;nrf24l01.c: 374: n_STATUS_t status;;nrf24l01.c: 375: status.byte = 0x00;
  3446  0233  0020               	movlb	0	; select bank0
  3447  0234  01A7               	clrf	nrf24l01InitRegisters@status
  3448                           
  3449                           ;nrf24l01.c: 376: status.RX_DR = 1;
  3450  0235  1727               	bsf	nrf24l01InitRegisters@status,6
  3451                           
  3452                           ;nrf24l01.c: 377: status.TX_DS = 1;
  3453  0236  16A7               	bsf	nrf24l01InitRegisters@status,5
  3454                           
  3455                           ;nrf24l01.c: 378: status.MAX_RT = 1;
  3456  0237  1627               	bsf	nrf24l01InitRegisters@status,4
  3457                           
  3458                           ;nrf24l01.c: 379: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3459  0238  0827               	movf	nrf24l01InitRegisters@status,w
  3460  0239  00A3               	movwf	??_nrf24l01InitRegisters
  3461  023A  0823               	movf	??_nrf24l01InitRegisters,w
  3462  023B  00A0               	movwf	nrf24l01Send@data
  3463  023C  3027               	movlw	39
  3464  023D  3185  25AC  3181   	fcall	_nrf24l01Send
  3465                           
  3466                           ;nrf24l01.c: 382: nrf24l01Send(0b11100001, 0);
  3467  0240  0020               	movlb	0	; select bank0
  3468  0241  01A0               	clrf	nrf24l01Send@data
  3469  0242  30E1               	movlw	225
  3470  0243  3185  25AC  3181   	fcall	_nrf24l01Send
  3471                           
  3472                           ;nrf24l01.c: 383: nrf24l01Send(0b11100010, 0);
  3473  0246  0020               	movlb	0	; select bank0
  3474  0247  01A0               	clrf	nrf24l01Send@data
  3475  0248  30E2               	movlw	226
  3476  0249  3185  25AC  3181   	fcall	_nrf24l01Send
  3477                           
  3478                           ;nrf24l01.c: 386: config.PRIM_RX = 1;
  3479  024C  0020               	movlb	0	; select bank0
  3480  024D  142B               	bsf	nrf24l01InitRegisters@config,0
  3481                           
  3482                           ;nrf24l01.c: 387: config.EN_CRC = 1;
  3483  024E  15AB               	bsf	nrf24l01InitRegisters@config,3
  3484                           
  3485                           ;nrf24l01.c: 388: config.CRCO = 1;
  3486  024F  152B               	bsf	nrf24l01InitRegisters@config,2
  3487                           
  3488                           ;nrf24l01.c: 389: config.PWR_UP = 1;
  3489  0250  14AB               	bsf	nrf24l01InitRegisters@config,1
  3490                           
  3491                           ;nrf24l01.c: 390: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3492  0251  082B               	movf	nrf24l01InitRegisters@config,w
  3493  0252  00A3               	movwf	??_nrf24l01InitRegisters
  3494  0253  0823               	movf	??_nrf24l01InitRegisters,w
  3495  0254  00A0               	movwf	nrf24l01Send@data
  3496  0255  3020               	movlw	32
  3497  0256  3185  25AC         	fcall	_nrf24l01Send
  3498  0258  0008               	return
  3499  0259                     __end_of_nrf24l01InitRegisters:	
  3500                           
  3501                           	psect	text5
  3502  0026                     __ptext5:	
  3503 ;; *************** function _loop *****************
  3504 ;; Defined at:
  3505 ;;		line 71 in file "main.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    9
  3526 ;; This function calls:
  3527 ;;		_getADCValue
  3528 ;;		_nrf24l01SendString
  3529 ;;		_sleep
  3530 ;;		_strcpy
  3531 ;;		_utoa
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _loop
  3539  0026                     _loop:	
  3540                           
  3541                           ;main.c: 75: strcpy(nrf24l01TXTopic, "DBG");
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3545  0026  3077               	movlw	low (STR_1| (0+32768))
  3546  0027  0020               	movlb	0	; select bank0
  3547  0028  00A0               	movwf	strcpy@from
  3548  0029  3086               	movlw	high (STR_1| (0+32768))
  3549  002A  00A1               	movwf	strcpy@from+1
  3550  002B  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3551  002C  3185  25CC  3180   	fcall	_strcpy
  3552                           
  3553                           ;main.c: 76: utoa(nrf24l01TXValue, counter, 10);
  3554  002F  0020               	movlb	0	; select bank0
  3555  0030  084A               	movf	_counter+1,w
  3556  0031  00BD               	movwf	utoa@val+1
  3557  0032  0849               	movf	_counter,w
  3558  0033  00BC               	movwf	utoa@val
  3559  0034  300A               	movlw	10
  3560  0035  00BE               	movwf	utoa@base
  3561  0036  3000               	movlw	0
  3562  0037  00BF               	movwf	utoa@base+1
  3563  0038  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3564  0039  3183  2373  3180   	fcall	_utoa
  3565                           
  3566                           ;main.c: 77: counter = 0;
  3567  003C  0020               	movlb	0	; select bank0
  3568  003D  01C9               	clrf	_counter
  3569  003E  01CA               	clrf	_counter+1
  3570                           
  3571                           ;main.c: 78: nrf24l01TXPacketData.byte = 0x00;
  3572  003F  01CC               	clrf	_nrf24l01TXPacketData
  3573                           
  3574                           ;main.c: 79: nrf24l01TXPacketData.ACKRequest = 0;
  3575  0040  104C               	bcf	_nrf24l01TXPacketData,0
  3576                           
  3577                           ;main.c: 80: nrf24l01SendString();
  3578  0041  3180  20F9  3180   	fcall	_nrf24l01SendString
  3579                           
  3580                           ;main.c: 81: sleep();
  3581  0044  3186  262D  3180   	fcall	_sleep
  3582                           
  3583                           ;main.c: 83: strcpy(nrf24l01TXTopic, "ADC3");
  3584  0047  3064               	movlw	low (STR_2| (0+32768))
  3585  0048  0020               	movlb	0	; select bank0
  3586  0049  00A0               	movwf	strcpy@from
  3587  004A  3086               	movlw	high (STR_2| (0+32768))
  3588  004B  00A1               	movwf	strcpy@from+1
  3589  004C  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3590  004D  3185  25CC  3180   	fcall	_strcpy
  3591                           
  3592                           ;main.c: 84: utoa(nrf24l01TXValue, getADCValue(3, 2505), 10);
  3593  0050  3000               	movlw	0
  3594  0051  0020               	movlb	0	; select bank0
  3595  0052  00B1               	movwf	getADCValue@divider+3
  3596  0053  3000               	movlw	0
  3597  0054  00B0               	movwf	getADCValue@divider+2
  3598  0055  3009               	movlw	9
  3599  0056  00AF               	movwf	getADCValue@divider+1
  3600  0057  30C9               	movlw	201
  3601  0058  00AE               	movwf	getADCValue@divider
  3602  0059  3003               	movlw	3
  3603  005A  3182  22EB  3180   	fcall	_getADCValue
  3604  005D  0020               	movlb	0	; select bank0
  3605  005E  082F               	movf	?_getADCValue+1,w
  3606  005F  00BD               	movwf	utoa@val+1
  3607  0060  082E               	movf	?_getADCValue,w
  3608  0061  00BC               	movwf	utoa@val
  3609  0062  300A               	movlw	10
  3610  0063  00BE               	movwf	utoa@base
  3611  0064  3000               	movlw	0
  3612  0065  00BF               	movwf	utoa@base+1
  3613  0066  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3614  0067  3183  2373  3180   	fcall	_utoa
  3615                           
  3616                           ;main.c: 85: nrf24l01TXPacketData.byte = 0x00;
  3617  006A  0020               	movlb	0	; select bank0
  3618  006B  01CC               	clrf	_nrf24l01TXPacketData
  3619                           
  3620                           ;main.c: 86: nrf24l01TXPacketData.ACKRequest = 0;
  3621  006C  104C               	bcf	_nrf24l01TXPacketData,0
  3622                           
  3623                           ;main.c: 87: nrf24l01SendString();
  3624  006D  3180  20F9  3180   	fcall	_nrf24l01SendString
  3625                           
  3626                           ;main.c: 88: sleep();
  3627  0070  3186  262D  3180   	fcall	_sleep
  3628                           
  3629                           ;main.c: 90: strcpy(nrf24l01TXTopic, "ADC7");
  3630  0073  3069               	movlw	low (STR_3| (0+32768))
  3631  0074  0020               	movlb	0	; select bank0
  3632  0075  00A0               	movwf	strcpy@from
  3633  0076  3086               	movlw	high (STR_3| (0+32768))
  3634  0077  00A1               	movwf	strcpy@from+1
  3635  0078  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3636  0079  3185  25CC  3180   	fcall	_strcpy
  3637                           
  3638                           ;main.c: 91: utoa(nrf24l01TXValue, getADCValue(7, 2500), 10);
  3639  007C  3000               	movlw	0
  3640  007D  0020               	movlb	0	; select bank0
  3641  007E  00B1               	movwf	getADCValue@divider+3
  3642  007F  3000               	movlw	0
  3643  0080  00B0               	movwf	getADCValue@divider+2
  3644  0081  3009               	movlw	9
  3645  0082  00AF               	movwf	getADCValue@divider+1
  3646  0083  30C4               	movlw	196
  3647  0084  00AE               	movwf	getADCValue@divider
  3648  0085  3007               	movlw	7
  3649  0086  3182  22EB  3180   	fcall	_getADCValue
  3650  0089  0020               	movlb	0	; select bank0
  3651  008A  082F               	movf	?_getADCValue+1,w
  3652  008B  00BD               	movwf	utoa@val+1
  3653  008C  082E               	movf	?_getADCValue,w
  3654  008D  00BC               	movwf	utoa@val
  3655  008E  300A               	movlw	10
  3656  008F  00BE               	movwf	utoa@base
  3657  0090  3000               	movlw	0
  3658  0091  00BF               	movwf	utoa@base+1
  3659  0092  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3660  0093  3183  2373  3180   	fcall	_utoa
  3661                           
  3662                           ;main.c: 92: nrf24l01TXPacketData.byte = 0x00;
  3663  0096  0020               	movlb	0	; select bank0
  3664  0097  01CC               	clrf	_nrf24l01TXPacketData
  3665                           
  3666                           ;main.c: 93: nrf24l01TXPacketData.ACKRequest = 0;
  3667  0098  104C               	bcf	_nrf24l01TXPacketData,0
  3668                           
  3669                           ;main.c: 94: nrf24l01SendString();
  3670  0099  3180  20F9  3180   	fcall	_nrf24l01SendString
  3671                           
  3672                           ;main.c: 95: sleep();
  3673  009C  3186  262D  3180   	fcall	_sleep
  3674                           
  3675                           ;main.c: 97: strcpy(nrf24l01TXTopic, "ADC29");
  3676  009F  3053               	movlw	low (STR_4| (0+32768))
  3677  00A0  0020               	movlb	0	; select bank0
  3678  00A1  00A0               	movwf	strcpy@from
  3679  00A2  3086               	movlw	high (STR_4| (0+32768))
  3680  00A3  00A1               	movwf	strcpy@from+1
  3681  00A4  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3682  00A5  3185  25CC  3180   	fcall	_strcpy
  3683                           
  3684                           ;main.c: 98: utoa(nrf24l01TXValue, getADCValue(29, 208900) - 40, 10);
  3685  00A8  3000               	movlw	0
  3686  00A9  0020               	movlb	0	; select bank0
  3687  00AA  00B1               	movwf	getADCValue@divider+3
  3688  00AB  3003               	movlw	3
  3689  00AC  00B0               	movwf	getADCValue@divider+2
  3690  00AD  3030               	movlw	48
  3691  00AE  00AF               	movwf	getADCValue@divider+1
  3692  00AF  3004               	movlw	4
  3693  00B0  00AE               	movwf	getADCValue@divider
  3694  00B1  301D               	movlw	29
  3695  00B2  3182  22EB  3180   	fcall	_getADCValue
  3696  00B5  0020               	movlb	0	; select bank0
  3697  00B6  082E               	movf	?_getADCValue,w
  3698  00B7  3ED8               	addlw	216
  3699  00B8  00BC               	movwf	utoa@val
  3700  00B9  30FF               	movlw	255
  3701  00BA  3D2F               	addwfc	?_getADCValue+1,w
  3702  00BB  00BD               	movwf	utoa@val+1
  3703  00BC  300A               	movlw	10
  3704  00BD  00BE               	movwf	utoa@base
  3705  00BE  3000               	movlw	0
  3706  00BF  00BF               	movwf	utoa@base+1
  3707  00C0  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3708  00C1  3183  2373  3180   	fcall	_utoa
  3709                           
  3710                           ;main.c: 99: nrf24l01TXPacketData.byte = 0x00;
  3711  00C4  0020               	movlb	0	; select bank0
  3712  00C5  01CC               	clrf	_nrf24l01TXPacketData
  3713                           
  3714                           ;main.c: 100: nrf24l01TXPacketData.ACKRequest = 0;
  3715  00C6  104C               	bcf	_nrf24l01TXPacketData,0
  3716                           
  3717                           ;main.c: 101: nrf24l01SendString();
  3718  00C7  3180  20F9  3180   	fcall	_nrf24l01SendString
  3719                           
  3720                           ;main.c: 102: sleep();
  3721  00CA  3186  262D  3180   	fcall	_sleep
  3722                           
  3723                           ;main.c: 104: strcpy(nrf24l01TXTopic, "ADC31");
  3724  00CD  303F               	movlw	low (STR_5| (0+32768))
  3725  00CE  0020               	movlb	0	; select bank0
  3726  00CF  00A0               	movwf	strcpy@from
  3727  00D0  3086               	movlw	high (STR_5| (0+32768))
  3728  00D1  00A1               	movwf	strcpy@from+1
  3729  00D2  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3730  00D3  3185  25CC  3180   	fcall	_strcpy
  3731                           
  3732                           ;main.c: 105: utoa(nrf24l01TXValue, getADCValue(31, 2475), 10);
  3733  00D6  3000               	movlw	0
  3734  00D7  0020               	movlb	0	; select bank0
  3735  00D8  00B1               	movwf	getADCValue@divider+3
  3736  00D9  3000               	movlw	0
  3737  00DA  00B0               	movwf	getADCValue@divider+2
  3738  00DB  3009               	movlw	9
  3739  00DC  00AF               	movwf	getADCValue@divider+1
  3740  00DD  30AB               	movlw	171
  3741  00DE  00AE               	movwf	getADCValue@divider
  3742  00DF  301F               	movlw	31
  3743  00E0  3182  22EB  3180   	fcall	_getADCValue
  3744  00E3  0020               	movlb	0	; select bank0
  3745  00E4  082F               	movf	?_getADCValue+1,w
  3746  00E5  00BD               	movwf	utoa@val+1
  3747  00E6  082E               	movf	?_getADCValue,w
  3748  00E7  00BC               	movwf	utoa@val
  3749  00E8  300A               	movlw	10
  3750  00E9  00BE               	movwf	utoa@base
  3751  00EA  3000               	movlw	0
  3752  00EB  00BF               	movwf	utoa@base+1
  3753  00EC  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3754  00ED  3183  2373  3180   	fcall	_utoa
  3755                           
  3756                           ;main.c: 106: nrf24l01TXPacketData.byte = 0x00;
  3757  00F0  0020               	movlb	0	; select bank0
  3758  00F1  01CC               	clrf	_nrf24l01TXPacketData
  3759                           
  3760                           ;main.c: 107: nrf24l01TXPacketData.ACKRequest = 0;
  3761  00F2  104C               	bcf	_nrf24l01TXPacketData,0
  3762                           
  3763                           ;main.c: 108: nrf24l01SendString();
  3764  00F3  3180  20F9  3180   	fcall	_nrf24l01SendString
  3765                           
  3766                           ;main.c: 109: sleep();
  3767  00F6  3186  262D         	fcall	_sleep
  3768  00F8  0008               	return
  3769  00F9                     __end_of_loop:	
  3770                           
  3771                           	psect	text6
  3772  0373                     __ptext6:	
  3773 ;; *************** function _utoa *****************
  3774 ;; Defined at:
  3775 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  buf             1    wreg     PTR unsigned char 
  3778 ;;		 -> nrf24l01TXValue(8), 
  3779 ;;  val             2   28[BANK0 ] unsigned int 
  3780 ;;  base            2   30[BANK0 ] int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  buf             1   36[BANK0 ] PTR unsigned char 
  3783 ;;		 -> nrf24l01TXValue(8), 
  3784 ;;  v               2   33[BANK0 ] unsigned int 
  3785 ;;  c               1   35[BANK0 ] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      PTR unsigned char 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;Total ram usage:        9 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    6
  3802 ;; This function calls:
  3803 ;;		___lwdiv
  3804 ;;		___lwmod
  3805 ;; This function is called by:
  3806 ;;		_loop
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _utoa
  3813  0373                     _utoa:	
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3817                           ;utoa@buf stored from wreg
  3818  0373  0020               	movlb	0	; select bank0
  3819  0374  00C4               	movwf	utoa@buf
  3820  0375  083D               	movf	utoa@val+1,w
  3821  0376  00C2               	movwf	utoa@v+1
  3822  0377  083C               	movf	utoa@val,w
  3823  0378  00C1               	movwf	utoa@v
  3824  0379                     l2518:	
  3825  0379  083F               	movf	utoa@base+1,w
  3826  037A  00A1               	movwf	___lwdiv@divisor+1
  3827  037B  083E               	movf	utoa@base,w
  3828  037C  00A0               	movwf	___lwdiv@divisor
  3829  037D  0842               	movf	utoa@v+1,w
  3830  037E  00A3               	movwf	___lwdiv@dividend+1
  3831  037F  0841               	movf	utoa@v,w
  3832  0380  00A2               	movwf	___lwdiv@dividend
  3833  0381  3184  245F  3183   	fcall	___lwdiv
  3834  0384  0020               	movlb	0	; select bank0
  3835  0385  0821               	movf	?___lwdiv+1,w
  3836  0386  00C2               	movwf	utoa@v+1
  3837  0387  0820               	movf	?___lwdiv,w
  3838  0388  00C1               	movwf	utoa@v
  3839  0389  3001               	movlw	1
  3840  038A  00C0               	movwf	??_utoa
  3841  038B  0840               	movf	??_utoa,w
  3842  038C  07C4               	addwf	utoa@buf,f
  3843  038D  0841               	movf	utoa@v,w
  3844  038E  0442               	iorwf	utoa@v+1,w
  3845  038F  1D03               	btfss	3,2
  3846  0390  2B79               	goto	l2518
  3847  0391  0844               	movf	utoa@buf,w
  3848  0392  0086               	movwf	6
  3849  0393  0187               	clrf	7
  3850  0394  0181               	clrf	1
  3851  0395  3001               	movlw	1
  3852  0396  02C4               	subwf	utoa@buf,f
  3853  0397                     l2528:	
  3854  0397  083F               	movf	utoa@base+1,w
  3855  0398  00A1               	movwf	___lwmod@divisor+1
  3856  0399  083E               	movf	utoa@base,w
  3857  039A  00A0               	movwf	___lwmod@divisor
  3858  039B  083D               	movf	utoa@val+1,w
  3859  039C  00A3               	movwf	___lwmod@dividend+1
  3860  039D  083C               	movf	utoa@val,w
  3861  039E  00A2               	movwf	___lwmod@dividend
  3862  039F  3185  2529  3183   	fcall	___lwmod
  3863  03A2  0020               	movlb	0	; select bank0
  3864  03A3  0820               	movf	?___lwmod,w
  3865  03A4  00C0               	movwf	??_utoa
  3866  03A5  0840               	movf	??_utoa,w
  3867  03A6  00C3               	movwf	utoa@c
  3868  03A7  083F               	movf	utoa@base+1,w
  3869  03A8  00A1               	movwf	___lwdiv@divisor+1
  3870  03A9  083E               	movf	utoa@base,w
  3871  03AA  00A0               	movwf	___lwdiv@divisor
  3872  03AB  083D               	movf	utoa@val+1,w
  3873  03AC  00A3               	movwf	___lwdiv@dividend+1
  3874  03AD  083C               	movf	utoa@val,w
  3875  03AE  00A2               	movwf	___lwdiv@dividend
  3876  03AF  3184  245F  3183   	fcall	___lwdiv
  3877  03B2  0020               	movlb	0	; select bank0
  3878  03B3  0821               	movf	?___lwdiv+1,w
  3879  03B4  00BD               	movwf	utoa@val+1
  3880  03B5  0820               	movf	?___lwdiv,w
  3881  03B6  00BC               	movwf	utoa@val
  3882  03B7  300A               	movlw	10
  3883  03B8  0243               	subwf	utoa@c,w
  3884  03B9  1C03               	skipc
  3885  03BA  2BBF               	goto	l828
  3886  03BB  3007               	movlw	7
  3887  03BC  00C0               	movwf	??_utoa
  3888  03BD  0840               	movf	??_utoa,w
  3889  03BE  07C3               	addwf	utoa@c,f
  3890  03BF                     l828:	
  3891  03BF  3030               	movlw	48
  3892  03C0  00C0               	movwf	??_utoa
  3893  03C1  0840               	movf	??_utoa,w
  3894  03C2  07C3               	addwf	utoa@c,f
  3895  03C3  0843               	movf	utoa@c,w
  3896  03C4  00C0               	movwf	??_utoa
  3897  03C5  0844               	movf	utoa@buf,w
  3898  03C6  0086               	movwf	6
  3899  03C7  0187               	clrf	7
  3900  03C8  0840               	movf	??_utoa,w
  3901  03C9  0081               	movwf	1
  3902  03CA  3001               	movlw	1
  3903  03CB  02C4               	subwf	utoa@buf,f
  3904  03CC  083C               	movf	utoa@val,w
  3905  03CD  043D               	iorwf	utoa@val+1,w
  3906  03CE  1D03               	btfss	3,2
  3907  03CF  2B97               	goto	l2528
  3908                           
  3909                           ;	Return value of _utoa is never used
  3910  03D0  3001               	movlw	1
  3911  03D1  00C0               	movwf	??_utoa
  3912  03D2  0840               	movf	??_utoa,w
  3913  03D3  07C4               	addwf	utoa@buf,f
  3914  03D4  0008               	return
  3915  03D5                     __end_of_utoa:	
  3916                           
  3917                           	psect	text7
  3918  0529                     __ptext7:	
  3919 ;; *************** function ___lwmod *****************
  3920 ;; Defined at:
  3921 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  divisor         2    0[BANK0 ] unsigned int 
  3924 ;;  dividend        2    2[BANK0 ] unsigned int 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  counter         1    5[BANK0 ] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2    0[BANK0 ] unsigned int 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;Total ram usage:        6 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    5
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_utoa
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function ___lwmod
  3952  0529                     ___lwmod:	
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3956  0529  0020               	movlb	0	; select bank0
  3957  052A  0820               	movf	___lwmod@divisor,w
  3958  052B  0421               	iorwf	___lwmod@divisor+1,w
  3959  052C  1903               	btfsc	3,2
  3960  052D  2D51               	goto	l1826
  3961  052E  01A5               	clrf	___lwmod@counter
  3962  052F  0AA5               	incf	___lwmod@counter,f
  3963  0530                     l1816:	
  3964  0530  1BA1               	btfsc	___lwmod@divisor+1,7
  3965  0531  2D3C               	goto	l1818
  3966  0532  3001               	movlw	1
  3967  0533                     u1015:	
  3968  0533  35A0               	lslf	___lwmod@divisor,f
  3969  0534  0DA1               	rlf	___lwmod@divisor+1,f
  3970  0535  0B89               	decfsz	9,f
  3971  0536  2D33               	goto	u1015
  3972  0537  3001               	movlw	1
  3973  0538  00A4               	movwf	??___lwmod
  3974  0539  0824               	movf	??___lwmod,w
  3975  053A  07A5               	addwf	___lwmod@counter,f
  3976  053B  2D30               	goto	l1816
  3977  053C                     l1818:	
  3978  053C  0821               	movf	___lwmod@divisor+1,w
  3979  053D  0223               	subwf	___lwmod@dividend+1,w
  3980  053E  1D03               	skipz
  3981  053F  2D42               	goto	u1035
  3982  0540  0820               	movf	___lwmod@divisor,w
  3983  0541  0222               	subwf	___lwmod@dividend,w
  3984  0542                     u1035:	
  3985  0542  1C03               	skipc
  3986  0543  2D48               	goto	l1822
  3987  0544  0820               	movf	___lwmod@divisor,w
  3988  0545  02A2               	subwf	___lwmod@dividend,f
  3989  0546  0821               	movf	___lwmod@divisor+1,w
  3990  0547  3BA3               	subwfb	___lwmod@dividend+1,f
  3991  0548                     l1822:	
  3992  0548  3001               	movlw	1
  3993  0549                     u1045:	
  3994  0549  36A1               	lsrf	___lwmod@divisor+1,f
  3995  054A  0CA0               	rrf	___lwmod@divisor,f
  3996  054B  0B89               	decfsz	9,f
  3997  054C  2D49               	goto	u1045
  3998  054D  3001               	movlw	1
  3999  054E  02A5               	subwf	___lwmod@counter,f
  4000  054F  1D03               	btfss	3,2
  4001  0550  2D3C               	goto	l1818
  4002  0551                     l1826:	
  4003  0551  0823               	movf	___lwmod@dividend+1,w
  4004  0552  00A1               	movwf	?___lwmod+1
  4005  0553  0822               	movf	___lwmod@dividend,w
  4006  0554  00A0               	movwf	?___lwmod
  4007  0555  0008               	return
  4008  0556                     __end_of___lwmod:	
  4009                           
  4010                           	psect	text8
  4011  045F                     __ptext8:	
  4012 ;; *************** function ___lwdiv *****************
  4013 ;; Defined at:
  4014 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  divisor         2    0[BANK0 ] unsigned int 
  4017 ;;  dividend        2    2[BANK0 ] unsigned int 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  quotient        2    5[BANK0 ] unsigned int 
  4020 ;;  counter         1    7[BANK0 ] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  2    0[BANK0 ] unsigned int 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4030 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;Total ram usage:        8 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    5
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_utoa
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function ___lwdiv
  4046  045F                     ___lwdiv:	
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4050  045F  0020               	movlb	0	; select bank0
  4051  0460  01A5               	clrf	___lwdiv@quotient
  4052  0461  01A6               	clrf	___lwdiv@quotient+1
  4053  0462  0820               	movf	___lwdiv@divisor,w
  4054  0463  0421               	iorwf	___lwdiv@divisor+1,w
  4055  0464  1903               	btfsc	3,2
  4056  0465  2C8F               	goto	l1804
  4057  0466  01A7               	clrf	___lwdiv@counter
  4058  0467  0AA7               	incf	___lwdiv@counter,f
  4059  0468                     l1792:	
  4060  0468  1BA1               	btfsc	___lwdiv@divisor+1,7
  4061  0469  2C74               	goto	l1794
  4062  046A  3001               	movlw	1
  4063  046B                     u945:	
  4064  046B  35A0               	lslf	___lwdiv@divisor,f
  4065  046C  0DA1               	rlf	___lwdiv@divisor+1,f
  4066  046D  0B89               	decfsz	9,f
  4067  046E  2C6B               	goto	u945
  4068  046F  3001               	movlw	1
  4069  0470  00A4               	movwf	??___lwdiv
  4070  0471  0824               	movf	??___lwdiv,w
  4071  0472  07A7               	addwf	___lwdiv@counter,f
  4072  0473  2C68               	goto	l1792
  4073  0474                     l1794:	
  4074  0474  3001               	movlw	1
  4075  0475                     u965:	
  4076  0475  35A5               	lslf	___lwdiv@quotient,f
  4077  0476  0DA6               	rlf	___lwdiv@quotient+1,f
  4078  0477  0B89               	decfsz	9,f
  4079  0478  2C75               	goto	u965
  4080  0479  0821               	movf	___lwdiv@divisor+1,w
  4081  047A  0223               	subwf	___lwdiv@dividend+1,w
  4082  047B  1D03               	skipz
  4083  047C  2C7F               	goto	u975
  4084  047D  0820               	movf	___lwdiv@divisor,w
  4085  047E  0222               	subwf	___lwdiv@dividend,w
  4086  047F                     u975:	
  4087  047F  1C03               	skipc
  4088  0480  2C86               	goto	l1800
  4089  0481  0820               	movf	___lwdiv@divisor,w
  4090  0482  02A2               	subwf	___lwdiv@dividend,f
  4091  0483  0821               	movf	___lwdiv@divisor+1,w
  4092  0484  3BA3               	subwfb	___lwdiv@dividend+1,f
  4093  0485  1425               	bsf	___lwdiv@quotient,0
  4094  0486                     l1800:	
  4095  0486  3001               	movlw	1
  4096  0487                     u985:	
  4097  0487  36A1               	lsrf	___lwdiv@divisor+1,f
  4098  0488  0CA0               	rrf	___lwdiv@divisor,f
  4099  0489  0B89               	decfsz	9,f
  4100  048A  2C87               	goto	u985
  4101  048B  3001               	movlw	1
  4102  048C  02A7               	subwf	___lwdiv@counter,f
  4103  048D  1D03               	btfss	3,2
  4104  048E  2C74               	goto	l1794
  4105  048F                     l1804:	
  4106  048F  0826               	movf	___lwdiv@quotient+1,w
  4107  0490  00A1               	movwf	?___lwdiv+1
  4108  0491  0825               	movf	___lwdiv@quotient,w
  4109  0492  00A0               	movwf	?___lwdiv
  4110  0493  0008               	return
  4111  0494                     __end_of___lwdiv:	
  4112                           
  4113                           	psect	text9
  4114  05CC                     __ptext9:	
  4115 ;; *************** function _strcpy *****************
  4116 ;; Defined at:
  4117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  to              1    wreg     PTR unsigned char 
  4120 ;;		 -> nrf24l01TXTopic(8), 
  4121 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4122 ;;		 -> STR_6(5), STR_5(6), STR_4(6), STR_3(5), 
  4123 ;;		 -> STR_2(5), STR_1(4), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4126 ;;		 -> nrf24l01TXTopic(8), 
  4127 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  4128 ;;		 -> nrf24l01TXTopic(8), 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      PTR unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        5 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    5
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_loop
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _strcpy
  4155  05CC                     _strcpy:	
  4156                           
  4157                           ;incstack = 0
  4158                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4159                           ;strcpy@to stored from wreg
  4160  05CC  0020               	movlb	0	; select bank0
  4161  05CD  00A4               	movwf	strcpy@to
  4162  05CE  0824               	movf	strcpy@to,w
  4163  05CF  00A2               	movwf	??_strcpy
  4164  05D0  0822               	movf	??_strcpy,w
  4165  05D1  00A3               	movwf	strcpy@cp
  4166  05D2                     l2514:	
  4167  05D2  0823               	movf	strcpy@cp,w
  4168  05D3  0086               	movwf	6
  4169  05D4  0187               	clrf	7
  4170  05D5  0820               	movf	strcpy@from,w
  4171  05D6  0084               	movwf	4
  4172  05D7  0821               	movf	strcpy@from+1,w
  4173  05D8  0085               	movwf	5
  4174  05D9  0800               	movf	0,w	;code access
  4175  05DA  3FC0               	movwi [0]fsr1
  4176  05DB  0889               	movf	9,f
  4177  05DC  1903               	btfsc	3,2
  4178  05DD  0008               	return
  4179  05DE  3001               	movlw	1
  4180  05DF  00A2               	movwf	??_strcpy
  4181  05E0  0822               	movf	??_strcpy,w
  4182  05E1  07A3               	addwf	strcpy@cp,f
  4183  05E2  3001               	movlw	1
  4184  05E3  07A0               	addwf	strcpy@from,f
  4185  05E4  3000               	movlw	0
  4186  05E5  3DA1               	addwfc	strcpy@from+1,f
  4187  05E6  2DD2               	goto	l2514
  4188  05E7                     __end_of_strcpy:	
  4189                           ;	Return value of _strcpy is never used
  4190                           
  4191                           
  4192                           	psect	text10
  4193  062D                     __ptext10:	
  4194 ;; *************** function _sleep *****************
  4195 ;; Defined at:
  4196 ;;		line 46 in file "main.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		None
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    5
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_loop
  4221 ;;		_main
  4222 ;;		_checkRxData
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           
  4227                           ;psect for function _sleep
  4228  062D                     _sleep:	
  4229  062D                     l159:	
  4230                           ;incstack = 0
  4231                           ; Regs used in _sleep: []
  4232                           ;main.c: 47: while (1){
  4233                           
  4234  062D  0063               	sleep	;# 
  4235                           
  4236                           ;main.c: 50: __nop();
  4237  062E  0000               	nop
  4238                           
  4239                           ;main.c: 51: __nop();
  4240  062F  0000               	nop
  4241                           
  4242                           ;main.c: 53: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4243  0630  0020               	movlb	0	; select bank0
  4244  0631  1A03               	btfsc	3,4	;volatile
  4245  0632  2E2D               	goto	l159
  4246  0633  1D83               	btfss	3,3	;volatile
  4247  0634  0008               	return
  4248  0635  2E2D               	goto	l159
  4249  0636                     __end_of_sleep:	
  4250                           ;main.c: 54: return;
  4251                           
  4252                           
  4253                           	psect	text11
  4254  00F9                     __ptext11:	
  4255 ;; *************** function _nrf24l01SendString *****************
  4256 ;; Defined at:
  4257 ;;		line 176 in file "nrf24l01.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  i               1    7[BANK0 ] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;Total ram usage:        2 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    8
  4278 ;; This function calls:
  4279 ;;		_enableInterrupts
  4280 ;;		_nrf24l01SPIEnd
  4281 ;;		_nrf24l01SPISend
  4282 ;;		_nrf24l01SPIStart
  4283 ;;		_nrf24l01SetRXMode
  4284 ;; This function is called by:
  4285 ;;		_loop
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _nrf24l01SendString
  4292  00F9                     _nrf24l01SendString:	
  4293                           
  4294                           ;nrf24l01.c: 179: unsigned char i;;nrf24l01.c: 181: if (counter){
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in _nrf24l01SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4298  00F9  0020               	movlb	0	; select bank0
  4299  00FA  0849               	movf	_counter,w
  4300  00FB  044A               	iorwf	_counter+1,w
  4301  00FC  1903               	btfsc	3,2
  4302  00FD  2902               	goto	l279
  4303                           
  4304                           ;nrf24l01.c: 182: counter--;
  4305  00FE  3001               	movlw	1
  4306  00FF  02C9               	subwf	_counter,f
  4307  0100  3000               	movlw	0
  4308  0101  3BCA               	subwfb	_counter+1,f
  4309  0102                     l279:	
  4310                           ;nrf24l01.c: 183: };nrf24l01.c: 186: RESEND:
  4311                           
  4312                           
  4313                           ;nrf24l01.c: 189: i = 0xFF;
  4314  0102  30FF               	movlw	255
  4315  0103  00A6               	movwf	??_nrf24l01SendString
  4316  0104  0826               	movf	??_nrf24l01SendString,w
  4317  0105  00A7               	movwf	nrf24l01SendString@i
  4318  0106                     l1916:	
  4319                           ;nrf24l01.c: 190: while (nrf24l01.TXBusy){
  4320                           
  4321  0106  0020               	movlb	0	; select bank0
  4322  0107  1CCB               	btfss	_nrf24l01,1	;volatile
  4323  0108  2912               	goto	l283
  4324                           
  4325                           ;nrf24l01.c: 191: if (!--i) {
  4326  0109  3001               	movlw	1
  4327  010A  02A7               	subwf	nrf24l01SendString@i,f
  4328  010B  1903               	btfsc	3,2
  4329  010C  2902               	goto	l279
  4330                           
  4331                           ;nrf24l01.c: 193: };nrf24l01.c: 194: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4332                           
  4333                           ;nrf24l01.c: 192: goto RESEND;
  4334  010D  3042               	movlw	66
  4335  010E                     u1977:	
  4336  010E  0B89               	decfsz	9,f
  4337  010F  290E               	goto	u1977
  4338  0110  3200               	nop2
  4339  0111  2906               	goto	l1916
  4340  0112                     l283:	
  4341                           
  4342                           ;nrf24l01.c: 195: };nrf24l01.c: 199: nrf24l01.TXBusy = 1;
  4343  0112  14CB               	bsf	_nrf24l01,1	;volatile
  4344                           
  4345                           ;nrf24l01.c: 202: enableInterrupts(0);
  4346  0113  3000               	movlw	0
  4347  0114  3186  2636  3180   	fcall	_enableInterrupts
  4348                           
  4349                           ;nrf24l01.c: 205: nrf24l01SetRXMode(0);
  4350  0117  3000               	movlw	0
  4351  0118  3184  2428  3180   	fcall	_nrf24l01SetRXMode
  4352                           
  4353                           ;nrf24l01.c: 208: nrf24l01SPIStart();
  4354  011B  3186  2645  3180   	fcall	_nrf24l01SPIStart
  4355                           
  4356                           ;nrf24l01.c: 211: nrf24l01SPISend(0b10110000);
  4357  011E  30B0               	movlw	176
  4358  011F  3186  2622  3180   	fcall	_nrf24l01SPISend
  4359                           
  4360                           ;nrf24l01.c: 213: nrf24l01SPISend(nrf24l01TXPacketData.byte);
  4361  0122  0020               	movlb	0	; select bank0
  4362  0123  084C               	movf	_nrf24l01TXPacketData,w
  4363  0124  3186  2622  3180   	fcall	_nrf24l01SPISend
  4364                           
  4365                           ;nrf24l01.c: 216: for (i = 0; (nrf24l01TXName[i] != '\0') && (i < sizeof(nrf24l01TXName)
      +                          ); i++){
  4366  0127  0020               	movlb	0	; select bank0
  4367  0128  01A7               	clrf	nrf24l01SendString@i
  4368  0129  2937               	goto	l1926
  4369  012A                     l1922:	
  4370                           
  4371                           ;nrf24l01.c: 217: nrf24l01SPISend(nrf24l01TXName[i]);
  4372  012A  0827               	movf	nrf24l01SendString@i,w
  4373  012B  3EB0               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4374  012C  0086               	movwf	6
  4375  012D  0187               	clrf	7
  4376  012E  0801               	movf	1,w
  4377  012F  3186  2622  3180   	fcall	_nrf24l01SPISend
  4378  0132  3001               	movlw	1
  4379  0133  0020               	movlb	0	; select bank0
  4380  0134  00A6               	movwf	??_nrf24l01SendString
  4381  0135  0826               	movf	??_nrf24l01SendString,w
  4382  0136  07A7               	addwf	nrf24l01SendString@i,f
  4383  0137                     l1926:	
  4384  0137  0827               	movf	nrf24l01SendString@i,w
  4385  0138  3EB0               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4386  0139  0086               	movwf	6
  4387  013A  0187               	clrf	7
  4388  013B  0801               	movf	1,w
  4389  013C  1903               	btfsc	3,2
  4390  013D  2942               	goto	l1930
  4391  013E  3010               	movlw	16
  4392  013F  0227               	subwf	nrf24l01SendString@i,w
  4393  0140  1C03               	skipc
  4394  0141  292A               	goto	l1922
  4395  0142                     l1930:	
  4396                           
  4397                           ;nrf24l01.c: 218: };nrf24l01.c: 221: nrf24l01SPISend('/');
  4398  0142  302F               	movlw	47
  4399  0143  3186  2622  3180   	fcall	_nrf24l01SPISend
  4400                           
  4401                           ;nrf24l01.c: 224: for (i = 0; (nrf24l01TXTopic[i] != '\0') && (i < sizeof(nrf24l01TXTopi
      +                          c)); i++){
  4402  0146  0020               	movlb	0	; select bank0
  4403  0147  01A7               	clrf	nrf24l01SendString@i
  4404  0148  2956               	goto	l1938
  4405  0149                     l1934:	
  4406                           
  4407                           ;nrf24l01.c: 225: nrf24l01SPISend(nrf24l01TXTopic[i]);
  4408  0149  0827               	movf	nrf24l01SendString@i,w
  4409  014A  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4410  014B  0086               	movwf	6
  4411  014C  0187               	clrf	7
  4412  014D  0801               	movf	1,w
  4413  014E  3186  2622  3180   	fcall	_nrf24l01SPISend
  4414  0151  3001               	movlw	1
  4415  0152  0020               	movlb	0	; select bank0
  4416  0153  00A6               	movwf	??_nrf24l01SendString
  4417  0154  0826               	movf	??_nrf24l01SendString,w
  4418  0155  07A7               	addwf	nrf24l01SendString@i,f
  4419  0156                     l1938:	
  4420  0156  0827               	movf	nrf24l01SendString@i,w
  4421  0157  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4422  0158  0086               	movwf	6
  4423  0159  0187               	clrf	7
  4424  015A  0801               	movf	1,w
  4425  015B  1903               	btfsc	3,2
  4426  015C  2961               	goto	l1942
  4427  015D  3008               	movlw	8
  4428  015E  0227               	subwf	nrf24l01SendString@i,w
  4429  015F  1C03               	skipc
  4430  0160  2949               	goto	l1934
  4431  0161                     l1942:	
  4432                           
  4433                           ;nrf24l01.c: 226: };nrf24l01.c: 229: nrf24l01SPISend('/');
  4434  0161  302F               	movlw	47
  4435  0162  3186  2622  3180   	fcall	_nrf24l01SPISend
  4436                           
  4437                           ;nrf24l01.c: 232: for (i = 0; (nrf24l01TXValue[i] != '\0') && (i < sizeof(nrf24l01TXValu
      +                          e)); i++){
  4438  0165  0020               	movlb	0	; select bank0
  4439  0166  01A7               	clrf	nrf24l01SendString@i
  4440  0167  2975               	goto	l1950
  4441  0168                     l1946:	
  4442                           
  4443                           ;nrf24l01.c: 233: nrf24l01SPISend(nrf24l01TXValue[i]);
  4444  0168  0827               	movf	nrf24l01SendString@i,w
  4445  0169  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4446  016A  0086               	movwf	6
  4447  016B  0187               	clrf	7
  4448  016C  0801               	movf	1,w
  4449  016D  3186  2622  3180   	fcall	_nrf24l01SPISend
  4450  0170  3001               	movlw	1
  4451  0171  0020               	movlb	0	; select bank0
  4452  0172  00A6               	movwf	??_nrf24l01SendString
  4453  0173  0826               	movf	??_nrf24l01SendString,w
  4454  0174  07A7               	addwf	nrf24l01SendString@i,f
  4455  0175                     l1950:	
  4456  0175  0827               	movf	nrf24l01SendString@i,w
  4457  0176  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4458  0177  0086               	movwf	6
  4459  0178  0187               	clrf	7
  4460  0179  0801               	movf	1,w
  4461  017A  1903               	btfsc	3,2
  4462  017B  2980               	goto	l1954
  4463  017C  3008               	movlw	8
  4464  017D  0227               	subwf	nrf24l01SendString@i,w
  4465  017E  1C03               	skipc
  4466  017F  2968               	goto	l1946
  4467  0180                     l1954:	
  4468                           
  4469                           ;nrf24l01.c: 234: };nrf24l01.c: 237: nrf24l01SPIEnd();
  4470  0180  3186  264C  3180   	fcall	_nrf24l01SPIEnd
  4471                           
  4472                           ;nrf24l01.c: 240: PORTAbits.RA0 = 1;
  4473  0183  0020               	movlb	0	; select bank0
  4474  0184  140C               	bsf	12,0	;volatile
  4475                           
  4476                           ;nrf24l01.c: 241: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4477  0185  301A               	movlw	26
  4478  0186                     u1987:	
  4479  0186  0B89               	decfsz	9,f
  4480  0187  2986               	goto	u1987
  4481  0188  3200               	nop2
  4482                           
  4483                           ;nrf24l01.c: 242: PORTAbits.RA0 = 0;
  4484  0189  0020               	movlb	0	; select bank0
  4485  018A  100C               	bcf	12,0	;volatile
  4486                           
  4487                           ;nrf24l01.c: 245: enableInterrupts(1);
  4488  018B  3001               	movlw	1
  4489  018C  3186  2636  3180   	fcall	_enableInterrupts
  4490                           
  4491                           ;nrf24l01.c: 248: i = 0xFF;
  4492  018F  30FF               	movlw	255
  4493  0190  0020               	movlb	0	; select bank0
  4494  0191  00A6               	movwf	??_nrf24l01SendString
  4495  0192  0826               	movf	??_nrf24l01SendString,w
  4496  0193  00A7               	movwf	nrf24l01SendString@i
  4497  0194                     l1970:	
  4498                           ;nrf24l01.c: 249: while (nrf24l01.TXBusy){
  4499                           
  4500  0194  0020               	movlb	0	; select bank0
  4501  0195  1CCB               	btfss	_nrf24l01,1	;volatile
  4502  0196  29A0               	goto	l1972
  4503                           
  4504                           ;nrf24l01.c: 250: if (!--i) {
  4505  0197  3001               	movlw	1
  4506  0198  02A7               	subwf	nrf24l01SendString@i,f
  4507  0199  1903               	btfsc	3,2
  4508  019A  2902               	goto	l279
  4509                           
  4510                           ;nrf24l01.c: 252: };nrf24l01.c: 253: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4511                           
  4512                           ;nrf24l01.c: 251: goto RESEND;
  4513  019B  3042               	movlw	66
  4514  019C                     u1997:	
  4515  019C  0B89               	decfsz	9,f
  4516  019D  299C               	goto	u1997
  4517  019E  3200               	nop2
  4518  019F  2994               	goto	l1970
  4519  01A0                     l1972:	
  4520                           
  4521                           ;nrf24l01.c: 254: };nrf24l01.c: 257: i = 0xFF;
  4522  01A0  30FF               	movlw	255
  4523  01A1  00A6               	movwf	??_nrf24l01SendString
  4524  01A2  0826               	movf	??_nrf24l01SendString,w
  4525  01A3  00A7               	movwf	nrf24l01SendString@i
  4526  01A4                     l1980:	
  4527                           ;nrf24l01.c: 258: while (nrf24l01TXPacketData.ACKRequest){
  4528                           
  4529  01A4  0020               	movlb	0	; select bank0
  4530  01A5  1C4C               	btfss	_nrf24l01TXPacketData,0
  4531  01A6  0008               	return
  4532                           
  4533                           ;nrf24l01.c: 259: if (!--i) {
  4534  01A7  3001               	movlw	1
  4535  01A8  02A7               	subwf	nrf24l01SendString@i,f
  4536  01A9  1D03               	btfss	3,2
  4537  01AA  29B0               	goto	l1978
  4538                           
  4539                           ;nrf24l01.c: 260: counter++;
  4540  01AB  3001               	movlw	1
  4541  01AC  07C9               	addwf	_counter,f
  4542  01AD  3000               	movlw	0
  4543  01AE  3DCA               	addwfc	_counter+1,f
  4544                           
  4545                           ;nrf24l01.c: 261: goto RESEND;
  4546  01AF  2902               	goto	l279
  4547  01B0                     l1978:	
  4548                           
  4549                           ;nrf24l01.c: 262: };nrf24l01.c: 263: _delay((unsigned long)((60)*(16000000/4000000.0)));
  4550  01B0  3050               	movlw	80
  4551  01B1                     u2007:	
  4552  01B1  0B89               	decfsz	9,f
  4553  01B2  29B1               	goto	u2007
  4554  01B3  29A4               	goto	l1980
  4555  01B4                     __end_of_nrf24l01SendString:	
  4556                           
  4557                           	psect	text12
  4558  0428                     __ptext12:	
  4559 ;; *************** function _nrf24l01SetRXMode *****************
  4560 ;; Defined at:
  4561 ;;		line 66 in file "nrf24l01.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  rxMode          1    wreg     unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  rxMode          1    5[BANK0 ] unsigned char 
  4566 ;;  config          1    4[BANK0 ] struct .
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, pclath, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;Total ram usage:        3 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    7
  4583 ;; This function calls:
  4584 ;;		_nrf24l01Send
  4585 ;; This function is called by:
  4586 ;;		_nrf24l01SendString
  4587 ;;		_checkRxData
  4588 ;;		_nrf24l01ReceiveString
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _nrf24l01SetRXMode
  4594  0428                     _nrf24l01SetRXMode:	
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  4598                           ;nrf24l01SetRXMode@rxMode stored from wreg
  4599  0428  0020               	movlb	0	; select bank0
  4600  0429  00A5               	movwf	nrf24l01SetRXMode@rxMode
  4601                           
  4602                           ;nrf24l01.c: 67: n_CONFIG_t config;;nrf24l01.c: 68: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  4603  042A  01A0               	clrf	nrf24l01Send@data
  4604  042B  3000               	movlw	0
  4605  042C  3185  25AC  3184   	fcall	_nrf24l01Send
  4606  042F  0020               	movlb	0	; select bank0
  4607  0430  00A3               	movwf	??_nrf24l01SetRXMode
  4608  0431  0823               	movf	??_nrf24l01SetRXMode,w
  4609  0432  00A4               	movwf	nrf24l01SetRXMode@config
  4610                           
  4611                           ;nrf24l01.c: 70: if (config.PRIM_RX != rxMode){
  4612  0433  0824               	movf	nrf24l01SetRXMode@config,w
  4613  0434  3901               	andlw	1
  4614  0435  0625               	xorwf	nrf24l01SetRXMode@rxMode,w
  4615  0436  1903               	skipnz
  4616  0437  2C58               	goto	l1742
  4617                           
  4618                           ;nrf24l01.c: 72: PORTAbits.RA0 = 0;
  4619  0438  100C               	bcf	12,0	;volatile
  4620                           
  4621                           ;nrf24l01.c: 73: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4622  0439  30A0               	movlw	160
  4623  043A                     u2017:	
  4624  043A  3200               	nop2
  4625  043B  0B89               	decfsz	9,f
  4626  043C  2C3A               	goto	u2017
  4627                           
  4628                           ;nrf24l01.c: 79: config.PRIM_RX = rxMode;
  4629  043D  0020               	movlb	0	; select bank0
  4630  043E  0825               	movf	nrf24l01SetRXMode@rxMode,w
  4631  043F  3901               	andlw	1
  4632  0440  1024               	bcf	nrf24l01SetRXMode@config,0
  4633  0441  1D03               	skipz
  4634  0442  1424               	bsf	nrf24l01SetRXMode@config,0
  4635                           
  4636                           ;nrf24l01.c: 80: nrf24l01Send(0b00100000 | 0x00, config.byte);
  4637  0443  0824               	movf	nrf24l01SetRXMode@config,w
  4638  0444  00A3               	movwf	??_nrf24l01SetRXMode
  4639  0445  0823               	movf	??_nrf24l01SetRXMode,w
  4640  0446  00A0               	movwf	nrf24l01Send@data
  4641  0447  3020               	movlw	32
  4642  0448  3185  25AC  3184   	fcall	_nrf24l01Send
  4643                           
  4644                           ;nrf24l01.c: 81: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4645  044B  30A0               	movlw	160
  4646  044C                     u2027:	
  4647  044C  3200               	nop2
  4648  044D  0B89               	decfsz	9,f
  4649  044E  2C4C               	goto	u2027
  4650                           
  4651                           ;nrf24l01.c: 83: if (rxMode){
  4652  044F  0020               	movlb	0	; select bank0
  4653  0450  0825               	movf	nrf24l01SetRXMode@rxMode,w
  4654  0451  1903               	btfsc	3,2
  4655  0452  2C58               	goto	l1742
  4656                           
  4657                           ;nrf24l01.c: 84: PORTAbits.RA0 = 1;
  4658  0453  140C               	bsf	12,0	;volatile
  4659                           
  4660                           ;nrf24l01.c: 85: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4661  0454  30A0               	movlw	160
  4662  0455                     u2037:	
  4663  0455  3200               	nop2
  4664  0456  0B89               	decfsz	9,f
  4665  0457  2C55               	goto	u2037
  4666  0458                     l1742:	
  4667                           
  4668                           ;nrf24l01.c: 86: };nrf24l01.c: 87: };nrf24l01.c: 88: nrf24l01.RXMode = rxMode;
  4669  0458  0020               	movlb	0	; select bank0
  4670  0459  0825               	movf	nrf24l01SetRXMode@rxMode,w
  4671  045A  3901               	andlw	1
  4672  045B  11CB               	bcf	_nrf24l01,3	;volatile
  4673  045C  1D03               	skipz
  4674  045D  15CB               	bsf	_nrf24l01,3	;volatile
  4675  045E  0008               	return
  4676  045F                     __end_of_nrf24l01SetRXMode:	
  4677                           
  4678                           	psect	text13
  4679  05AC                     __ptext13:	
  4680 ;; *************** function _nrf24l01Send *****************
  4681 ;; Defined at:
  4682 ;;		line 18 in file "nrf24l01.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  command         1    wreg     unsigned char 
  4685 ;;  data            1    0[BANK0 ] unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  command         1    2[BANK0 ] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      unsigned char 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;Total ram usage:        3 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    6
  4704 ;; This function calls:
  4705 ;;		_enableInterrupts
  4706 ;;		_nrf24l01SPIEnd
  4707 ;;		_nrf24l01SPISend
  4708 ;;		_nrf24l01SPIStart
  4709 ;; This function is called by:
  4710 ;;		_nrf24l01SetRXMode
  4711 ;;		_nrf24l01InitRegisters
  4712 ;;		_nrf24l01ReceiveString
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _nrf24l01Send
  4718  05AC                     _nrf24l01Send:	
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  4722                           ;nrf24l01Send@command stored from wreg
  4723  05AC  0020               	movlb	0	; select bank0
  4724  05AD  00A2               	movwf	nrf24l01Send@command
  4725                           
  4726                           ;nrf24l01.c: 20: enableInterrupts(0);
  4727  05AE  3000               	movlw	0
  4728  05AF  3186  2636  3185   	fcall	_enableInterrupts
  4729                           
  4730                           ;nrf24l01.c: 22: nrf24l01SPIStart();
  4731  05B2  3186  2645  3185   	fcall	_nrf24l01SPIStart
  4732                           
  4733                           ;nrf24l01.c: 24: nrf24l01SPISend(command);
  4734  05B5  0020               	movlb	0	; select bank0
  4735  05B6  0822               	movf	nrf24l01Send@command,w
  4736  05B7  3186  2622  3185   	fcall	_nrf24l01SPISend
  4737                           
  4738                           ;nrf24l01.c: 25: data = nrf24l01SPISend(data);
  4739  05BA  0020               	movlb	0	; select bank0
  4740  05BB  0820               	movf	nrf24l01Send@data,w
  4741  05BC  3186  2622  3185   	fcall	_nrf24l01SPISend
  4742  05BF  0020               	movlb	0	; select bank0
  4743  05C0  00A1               	movwf	??_nrf24l01Send
  4744  05C1  0821               	movf	??_nrf24l01Send,w
  4745  05C2  00A0               	movwf	nrf24l01Send@data
  4746                           
  4747                           ;nrf24l01.c: 27: nrf24l01SPIEnd();
  4748  05C3  3186  264C  3185   	fcall	_nrf24l01SPIEnd
  4749                           
  4750                           ;nrf24l01.c: 29: enableInterrupts(1);
  4751  05C6  3001               	movlw	1
  4752  05C7  3186  2636         	fcall	_enableInterrupts
  4753                           
  4754                           ;nrf24l01.c: 31: return data;
  4755  05C9  0020               	movlb	0	; select bank0
  4756  05CA  0820               	movf	nrf24l01Send@data,w
  4757  05CB  0008               	return
  4758  05CC                     __end_of_nrf24l01Send:	
  4759                           
  4760                           	psect	text14
  4761  02EB                     __ptext14:	
  4762 ;; *************** function _getADCValue *****************
  4763 ;; Defined at:
  4764 ;;		line 21 in file "main.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  channel         1    wreg     unsigned char 
  4767 ;;  divider         4   14[BANK0 ] unsigned long 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  channel         1   22[BANK0 ] unsigned char 
  4770 ;;  adcSum          4   24[BANK0 ] unsigned long 
  4771 ;;  adcLoop         1   23[BANK0 ] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  4   14[BANK0 ] unsigned long 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:       14 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    6
  4788 ;; This function calls:
  4789 ;;		___lldiv
  4790 ;;		___lmul
  4791 ;; This function is called by:
  4792 ;;		_loop
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           
  4797                           ;psect for function _getADCValue
  4798  02EB                     _getADCValue:	
  4799                           
  4800                           ;incstack = 0
  4801                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  4802                           ;getADCValue@channel stored from wreg
  4803  02EB  0020               	movlb	0	; select bank0
  4804  02EC  00B6               	movwf	getADCValue@channel
  4805                           
  4806                           ;main.c: 23: unsigned long adcSum = 0;
  4807  02ED  3000               	movlw	0
  4808  02EE  00BB               	movwf	getADCValue@adcSum+3
  4809  02EF  3000               	movlw	0
  4810  02F0  00BA               	movwf	getADCValue@adcSum+2
  4811  02F1  3000               	movlw	0
  4812  02F2  00B9               	movwf	getADCValue@adcSum+1
  4813  02F3  3000               	movlw	0
  4814  02F4  00B8               	movwf	getADCValue@adcSum
  4815                           
  4816                           ;main.c: 24: unsigned char adcLoop = 255;
  4817  02F5  30FF               	movlw	255
  4818  02F6  00B2               	movwf	??_getADCValue
  4819  02F7  0832               	movf	??_getADCValue,w
  4820  02F8  00B7               	movwf	getADCValue@adcLoop
  4821                           
  4822                           ;main.c: 26: ADCON0bits.CHS = channel;
  4823  02F9  0836               	movf	getADCValue@channel,w
  4824  02FA  00B2               	movwf	??_getADCValue
  4825  02FB  0DB2               	rlf	??_getADCValue,f
  4826  02FC  0DB2               	rlf	??_getADCValue,f
  4827  02FD  0021               	movlb	1	; select bank1
  4828  02FE  081D               	movf	29,w	;volatile
  4829  02FF  0020               	movlb	0	; select bank0
  4830  0300  0632               	xorwf	??_getADCValue,w
  4831  0301  3903               	andlw	-253
  4832  0302  0632               	xorwf	??_getADCValue,w
  4833  0303  0021               	movlb	1	; select bank1
  4834  0304  009D               	movwf	29	;volatile
  4835                           
  4836                           ;main.c: 27: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4837  0305  30A0               	movlw	160
  4838  0306                     u2047:	
  4839  0306  3200               	nop2
  4840  0307  0B89               	decfsz	9,f
  4841  0308  2B06               	goto	u2047
  4842  0309                     l1856:	
  4843                           ;main.c: 29: while (--adcLoop){
  4844                           
  4845  0309  3001               	movlw	1
  4846  030A  0020               	movlb	0	; select bank0
  4847  030B  02B7               	subwf	getADCValue@adcLoop,f
  4848  030C  1903               	btfsc	3,2
  4849  030D  2B33               	goto	l1858
  4850                           
  4851                           ;main.c: 31: ADCON0bits.ADGO = 1;
  4852  030E  0021               	movlb	1	; select bank1
  4853  030F  149D               	bsf	29,1	;volatile
  4854  0310                     l152:	
  4855                           ;main.c: 32: while (ADCON0bits.ADGO){
  4856                           
  4857  0310  0021               	movlb	1	; select bank1
  4858  0311  1C9D               	btfss	29,1	;volatile
  4859  0312  2B15               	goto	l1854
  4860                           
  4861                           ;main.c: 33: __nop();
  4862  0313  0000               	nop
  4863  0314  2B10               	goto	l152
  4864  0315                     l1854:	
  4865                           
  4866                           ;main.c: 34: };main.c: 36: adcSum+= ADRESL;
  4867  0315  081B               	movf	27,w	;volatile
  4868  0316  0020               	movlb	0	; select bank0
  4869  0317  00B2               	movwf	??_getADCValue
  4870  0318  01B3               	clrf	??_getADCValue+1
  4871  0319  01B4               	clrf	??_getADCValue+2
  4872  031A  01B5               	clrf	??_getADCValue+3
  4873  031B  0832               	movf	??_getADCValue,w
  4874  031C  07B8               	addwf	getADCValue@adcSum,f
  4875  031D  0833               	movf	??_getADCValue+1,w
  4876  031E  3DB9               	addwfc	getADCValue@adcSum+1,f
  4877  031F  0834               	movf	??_getADCValue+2,w
  4878  0320  3DBA               	addwfc	getADCValue@adcSum+2,f
  4879  0321  0835               	movf	??_getADCValue+3,w
  4880  0322  3DBB               	addwfc	getADCValue@adcSum+3,f
  4881                           
  4882                           ;main.c: 37: adcSum+= (unsigned) (ADRESH << 8);
  4883  0323  0021               	movlb	1	; select bank1
  4884  0324  081C               	movf	28,w	;volatile
  4885  0325  0020               	movlb	0	; select bank0
  4886  0326  00B2               	movwf	??_getADCValue
  4887  0327  01B3               	clrf	??_getADCValue+1
  4888  0328  0832               	movf	??_getADCValue,w
  4889  0329  00B3               	movwf	??_getADCValue+1
  4890  032A  01B2               	clrf	??_getADCValue
  4891  032B  0832               	movf	??_getADCValue,w
  4892  032C  07B8               	addwf	getADCValue@adcSum,f
  4893  032D  0833               	movf	??_getADCValue+1,w
  4894  032E  3DB9               	addwfc	getADCValue@adcSum+1,f
  4895  032F  3000               	movlw	0
  4896  0330  3DBA               	addwfc	getADCValue@adcSum+2,f
  4897  0331  3DBB               	addwfc	getADCValue@adcSum+3,f
  4898  0332  2B09               	goto	l1856
  4899  0333                     l1858:	
  4900                           
  4901                           ;main.c: 38: };main.c: 40: adcSum*= 100;
  4902  0333  3000               	movlw	0
  4903  0334  00A3               	movwf	___lmul@multiplier+3
  4904  0335  3000               	movlw	0
  4905  0336  00A2               	movwf	___lmul@multiplier+2
  4906  0337  3000               	movlw	0
  4907  0338  00A1               	movwf	___lmul@multiplier+1
  4908  0339  3064               	movlw	100
  4909  033A  00A0               	movwf	___lmul@multiplier
  4910  033B  083B               	movf	getADCValue@adcSum+3,w
  4911  033C  00A7               	movwf	___lmul@multiplicand+3
  4912  033D  083A               	movf	getADCValue@adcSum+2,w
  4913  033E  00A6               	movwf	___lmul@multiplicand+2
  4914  033F  0839               	movf	getADCValue@adcSum+1,w
  4915  0340  00A5               	movwf	___lmul@multiplicand+1
  4916  0341  0838               	movf	getADCValue@adcSum,w
  4917  0342  00A4               	movwf	___lmul@multiplicand
  4918  0343  3184  24F9  3182   	fcall	___lmul
  4919  0346  0020               	movlb	0	; select bank0
  4920  0347  0823               	movf	?___lmul+3,w
  4921  0348  00BB               	movwf	getADCValue@adcSum+3
  4922  0349  0822               	movf	?___lmul+2,w
  4923  034A  00BA               	movwf	getADCValue@adcSum+2
  4924  034B  0821               	movf	?___lmul+1,w
  4925  034C  00B9               	movwf	getADCValue@adcSum+1
  4926  034D  0820               	movf	?___lmul,w
  4927  034E  00B8               	movwf	getADCValue@adcSum
  4928                           
  4929                           ;main.c: 41: adcSum/= divider;
  4930  034F  0831               	movf	getADCValue@divider+3,w
  4931  0350  00A3               	movwf	___lldiv@divisor+3
  4932  0351  0830               	movf	getADCValue@divider+2,w
  4933  0352  00A2               	movwf	___lldiv@divisor+2
  4934  0353  082F               	movf	getADCValue@divider+1,w
  4935  0354  00A1               	movwf	___lldiv@divisor+1
  4936  0355  082E               	movf	getADCValue@divider,w
  4937  0356  00A0               	movwf	___lldiv@divisor
  4938  0357  083B               	movf	getADCValue@adcSum+3,w
  4939  0358  00A7               	movwf	___lldiv@dividend+3
  4940  0359  083A               	movf	getADCValue@adcSum+2,w
  4941  035A  00A6               	movwf	___lldiv@dividend+2
  4942  035B  0839               	movf	getADCValue@adcSum+1,w
  4943  035C  00A5               	movwf	___lldiv@dividend+1
  4944  035D  0838               	movf	getADCValue@adcSum,w
  4945  035E  00A4               	movwf	___lldiv@dividend
  4946  035F  3183  23D5         	fcall	___lldiv
  4947  0361  0020               	movlb	0	; select bank0
  4948  0362  0823               	movf	?___lldiv+3,w
  4949  0363  00BB               	movwf	getADCValue@adcSum+3
  4950  0364  0822               	movf	?___lldiv+2,w
  4951  0365  00BA               	movwf	getADCValue@adcSum+2
  4952  0366  0821               	movf	?___lldiv+1,w
  4953  0367  00B9               	movwf	getADCValue@adcSum+1
  4954  0368  0820               	movf	?___lldiv,w
  4955  0369  00B8               	movwf	getADCValue@adcSum
  4956                           
  4957                           ;main.c: 43: return adcSum;
  4958  036A  083B               	movf	getADCValue@adcSum+3,w
  4959  036B  00B1               	movwf	?_getADCValue+3
  4960  036C  083A               	movf	getADCValue@adcSum+2,w
  4961  036D  00B0               	movwf	?_getADCValue+2
  4962  036E  0839               	movf	getADCValue@adcSum+1,w
  4963  036F  00AF               	movwf	?_getADCValue+1
  4964  0370  0838               	movf	getADCValue@adcSum,w
  4965  0371  00AE               	movwf	?_getADCValue
  4966  0372  0008               	return
  4967  0373                     __end_of_getADCValue:	
  4968                           
  4969                           	psect	text15
  4970  04F9                     __ptext15:	
  4971 ;; *************** function ___lmul *****************
  4972 ;; Defined at:
  4973 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4976 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  product         4    8[BANK0 ] unsigned long 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  4    0[BANK0 ] unsigned long 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;Total ram usage:       12 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    5
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_getADCValue
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function ___lmul
  5004  04F9                     ___lmul:	
  5005                           
  5006                           ;incstack = 0
  5007                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5008  04F9  3000               	movlw	0
  5009  04FA  0020               	movlb	0	; select bank0
  5010  04FB  00AB               	movwf	___lmul@product+3
  5011  04FC  3000               	movlw	0
  5012  04FD  00AA               	movwf	___lmul@product+2
  5013  04FE  3000               	movlw	0
  5014  04FF  00A9               	movwf	___lmul@product+1
  5015  0500  3000               	movlw	0
  5016  0501  00A8               	movwf	___lmul@product
  5017  0502                     l1746:	
  5018  0502  1C20               	btfss	___lmul@multiplier,0
  5019  0503  2D0C               	goto	l1750
  5020  0504  0824               	movf	___lmul@multiplicand,w
  5021  0505  07A8               	addwf	___lmul@product,f
  5022  0506  0825               	movf	___lmul@multiplicand+1,w
  5023  0507  3DA9               	addwfc	___lmul@product+1,f
  5024  0508  0826               	movf	___lmul@multiplicand+2,w
  5025  0509  3DAA               	addwfc	___lmul@product+2,f
  5026  050A  0827               	movf	___lmul@multiplicand+3,w
  5027  050B  3DAB               	addwfc	___lmul@product+3,f
  5028  050C                     l1750:	
  5029  050C  3001               	movlw	1
  5030  050D                     u835:	
  5031  050D  35A4               	lslf	___lmul@multiplicand,f
  5032  050E  0DA5               	rlf	___lmul@multiplicand+1,f
  5033  050F  0DA6               	rlf	___lmul@multiplicand+2,f
  5034  0510  0DA7               	rlf	___lmul@multiplicand+3,f
  5035  0511  0B89               	decfsz	9,f
  5036  0512  2D0D               	goto	u835
  5037  0513  3001               	movlw	1
  5038  0514                     u845:	
  5039  0514  36A3               	lsrf	___lmul@multiplier+3,f
  5040  0515  0CA2               	rrf	___lmul@multiplier+2,f
  5041  0516  0CA1               	rrf	___lmul@multiplier+1,f
  5042  0517  0CA0               	rrf	___lmul@multiplier,f
  5043  0518  0B89               	decfsz	9,f
  5044  0519  2D14               	goto	u845
  5045  051A  0823               	movf	___lmul@multiplier+3,w
  5046  051B  0422               	iorwf	___lmul@multiplier+2,w
  5047  051C  0421               	iorwf	___lmul@multiplier+1,w
  5048  051D  0420               	iorwf	___lmul@multiplier,w
  5049  051E  1D03               	skipz
  5050  051F  2D02               	goto	l1746
  5051  0520  082B               	movf	___lmul@product+3,w
  5052  0521  00A3               	movwf	?___lmul+3
  5053  0522  082A               	movf	___lmul@product+2,w
  5054  0523  00A2               	movwf	?___lmul+2
  5055  0524  0829               	movf	___lmul@product+1,w
  5056  0525  00A1               	movwf	?___lmul+1
  5057  0526  0828               	movf	___lmul@product,w
  5058  0527  00A0               	movwf	?___lmul
  5059  0528  0008               	return
  5060  0529                     __end_of___lmul:	
  5061                           
  5062                           	psect	text16
  5063  03D5                     __ptext16:	
  5064 ;; *************** function ___lldiv *****************
  5065 ;; Defined at:
  5066 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  divisor         4    0[BANK0 ] unsigned long 
  5069 ;;  dividend        4    4[BANK0 ] unsigned long 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  quotient        4    9[BANK0 ] unsigned long 
  5072 ;;  counter         1   13[BANK0 ] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  4    0[BANK0 ] unsigned long 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5082 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;Total ram usage:       14 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    5
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_getADCValue
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function ___lldiv
  5098  03D5                     ___lldiv:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5102  03D5  3000               	movlw	0
  5103  03D6  0020               	movlb	0	; select bank0
  5104  03D7  00AC               	movwf	___lldiv@quotient+3
  5105  03D8  3000               	movlw	0
  5106  03D9  00AB               	movwf	___lldiv@quotient+2
  5107  03DA  3000               	movlw	0
  5108  03DB  00AA               	movwf	___lldiv@quotient+1
  5109  03DC  3000               	movlw	0
  5110  03DD  00A9               	movwf	___lldiv@quotient
  5111  03DE  0823               	movf	___lldiv@divisor+3,w
  5112  03DF  0422               	iorwf	___lldiv@divisor+2,w
  5113  03E0  0421               	iorwf	___lldiv@divisor+1,w
  5114  03E1  0420               	iorwf	___lldiv@divisor,w
  5115  03E2  1903               	skipnz
  5116  03E3  2C1F               	goto	l1778
  5117  03E4  01AD               	clrf	___lldiv@counter
  5118  03E5  0AAD               	incf	___lldiv@counter,f
  5119  03E6                     l1764:	
  5120  03E6  1BA3               	btfsc	___lldiv@divisor+3,7
  5121  03E7  2BF4               	goto	l1766
  5122  03E8  3001               	movlw	1
  5123  03E9                     u875:	
  5124  03E9  35A0               	lslf	___lldiv@divisor,f
  5125  03EA  0DA1               	rlf	___lldiv@divisor+1,f
  5126  03EB  0DA2               	rlf	___lldiv@divisor+2,f
  5127  03EC  0DA3               	rlf	___lldiv@divisor+3,f
  5128  03ED  0B89               	decfsz	9,f
  5129  03EE  2BE9               	goto	u875
  5130  03EF  3001               	movlw	1
  5131  03F0  00A8               	movwf	??___lldiv
  5132  03F1  0828               	movf	??___lldiv,w
  5133  03F2  07AD               	addwf	___lldiv@counter,f
  5134  03F3  2BE6               	goto	l1764
  5135  03F4                     l1766:	
  5136  03F4  3001               	movlw	1
  5137  03F5                     u895:	
  5138  03F5  35A9               	lslf	___lldiv@quotient,f
  5139  03F6  0DAA               	rlf	___lldiv@quotient+1,f
  5140  03F7  0DAB               	rlf	___lldiv@quotient+2,f
  5141  03F8  0DAC               	rlf	___lldiv@quotient+3,f
  5142  03F9  0B89               	decfsz	9,f
  5143  03FA  2BF5               	goto	u895
  5144  03FB  0823               	movf	___lldiv@divisor+3,w
  5145  03FC  0227               	subwf	___lldiv@dividend+3,w
  5146  03FD  1D03               	skipz
  5147  03FE  2C09               	goto	u905
  5148  03FF  0822               	movf	___lldiv@divisor+2,w
  5149  0400  0226               	subwf	___lldiv@dividend+2,w
  5150  0401  1D03               	skipz
  5151  0402  2C09               	goto	u905
  5152  0403  0821               	movf	___lldiv@divisor+1,w
  5153  0404  0225               	subwf	___lldiv@dividend+1,w
  5154  0405  1D03               	skipz
  5155  0406  2C09               	goto	u905
  5156  0407  0820               	movf	___lldiv@divisor,w
  5157  0408  0224               	subwf	___lldiv@dividend,w
  5158  0409                     u905:	
  5159  0409  1C03               	skipc
  5160  040A  2C14               	goto	l1774
  5161  040B  0820               	movf	___lldiv@divisor,w
  5162  040C  02A4               	subwf	___lldiv@dividend,f
  5163  040D  0821               	movf	___lldiv@divisor+1,w
  5164  040E  3BA5               	subwfb	___lldiv@dividend+1,f
  5165  040F  0822               	movf	___lldiv@divisor+2,w
  5166  0410  3BA6               	subwfb	___lldiv@dividend+2,f
  5167  0411  0823               	movf	___lldiv@divisor+3,w
  5168  0412  3BA7               	subwfb	___lldiv@dividend+3,f
  5169  0413  1429               	bsf	___lldiv@quotient,0
  5170  0414                     l1774:	
  5171  0414  3001               	movlw	1
  5172  0415                     u915:	
  5173  0415  36A3               	lsrf	___lldiv@divisor+3,f
  5174  0416  0CA2               	rrf	___lldiv@divisor+2,f
  5175  0417  0CA1               	rrf	___lldiv@divisor+1,f
  5176  0418  0CA0               	rrf	___lldiv@divisor,f
  5177  0419  0B89               	decfsz	9,f
  5178  041A  2C15               	goto	u915
  5179  041B  3001               	movlw	1
  5180  041C  02AD               	subwf	___lldiv@counter,f
  5181  041D  1D03               	btfss	3,2
  5182  041E  2BF4               	goto	l1766
  5183  041F                     l1778:	
  5184  041F  082C               	movf	___lldiv@quotient+3,w
  5185  0420  00A3               	movwf	?___lldiv+3
  5186  0421  082B               	movf	___lldiv@quotient+2,w
  5187  0422  00A2               	movwf	?___lldiv+2
  5188  0423  082A               	movf	___lldiv@quotient+1,w
  5189  0424  00A1               	movwf	?___lldiv+1
  5190  0425  0829               	movf	___lldiv@quotient,w
  5191  0426  00A0               	movwf	?___lldiv
  5192  0427  0008               	return
  5193  0428                     __end_of___lldiv:	
  5194                           
  5195                           	psect	intentry
  5196  0004                     __pintentry:	
  5197 ;; *************** function _ISR *****************
  5198 ;; Defined at:
  5199 ;;		line 14 in file "main.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    4
  5220 ;; This function calls:
  5221 ;;		_nrf24l01ISR
  5222 ;; This function is called by:
  5223 ;;		Interrupt level 1
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227  0004                     _ISR:	
  5228                           
  5229                           ;incstack = 0
  5230  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5231                           
  5232                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5233  0005  3180               	pagesel	$
  5234                           
  5235                           ;main.c: 15: if (PIR0bits.INTF){
  5236  0006  0020               	movlb	0	; select bank0
  5237  0007  1C10               	btfss	16,0	;volatile
  5238  0008  280D               	goto	i1l147
  5239                           
  5240                           ;main.c: 16: nrf24l01ISR();
  5241  0009  3185  2556         	fcall	_nrf24l01ISR
  5242                           
  5243                           ;main.c: 17: PIR0bits.INTF = 0;
  5244  000B  0020               	movlb	0	; select bank0
  5245  000C  1010               	bcf	16,0	;volatile
  5246  000D                     i1l147:	
  5247  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5248  000E  0009               	retfie
  5249  000F                     __end_of_ISR:	
  5250                           
  5251                           	psect	text18
  5252  0556                     __ptext18:	
  5253 ;; *************** function _nrf24l01ISR *****************
  5254 ;; Defined at:
  5255 ;;		line 268 in file "nrf24l01.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  status          1    8[COMMON] struct .
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        2 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    3
  5276 ;; This function calls:
  5277 ;;		_exception
  5278 ;;		i1_nrf24l01Send
  5279 ;;		i1_nrf24l01SetRXMode
  5280 ;; This function is called by:
  5281 ;;		_ISR
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _nrf24l01ISR
  5287  0556                     _nrf24l01ISR:	
  5288                           
  5289                           ;nrf24l01.c: 270: n_STATUS_t status;;nrf24l01.c: 271: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _nrf24l01ISR: [wreg+status,2+status,0+pclath+cstack]
  5293  0556  01F1               	clrf	i1nrf24l01Send@data
  5294  0557  3007               	movlw	7
  5295  0558  3185  25E7  3185   	fcall	i1_nrf24l01Send
  5296  055B  00F7               	movwf	??_nrf24l01ISR
  5297  055C  0877               	movf	??_nrf24l01ISR,w
  5298  055D  00F8               	movwf	nrf24l01ISR@status
  5299                           
  5300                           ;nrf24l01.c: 274: if (status.byte == 0x00){
  5301  055E  0878               	movf	nrf24l01ISR@status,w
  5302  055F  1D03               	btfss	3,2
  5303  0560  2D65               	goto	i1l2136
  5304                           
  5305                           ;nrf24l01.c: 275: exception(1);
  5306  0561  3001               	movlw	1
  5307  0562  3186  267B  3185   	fcall	_exception
  5308  0565                     i1l2136:	
  5309                           
  5310                           ;nrf24l01.c: 276: };nrf24l01.c: 279: if (status.byte == 0xFF){
  5311  0565  0A78               	incf	nrf24l01ISR@status,w
  5312  0566  1D03               	btfss	3,2
  5313  0567  2D6C               	goto	i1l2140
  5314                           
  5315                           ;nrf24l01.c: 280: exception(2);
  5316  0568  3002               	movlw	2
  5317  0569  3186  267B  3185   	fcall	_exception
  5318  056C                     i1l2140:	
  5319                           
  5320                           ;nrf24l01.c: 281: };nrf24l01.c: 283: if (status.TX_DS){
  5321  056C  1EF8               	btfss	nrf24l01ISR@status,5
  5322  056D  2D77               	goto	i1l2148
  5323                           
  5324                           ;nrf24l01.c: 286: nrf24l01.TXBusy = 0;
  5325  056E  0020               	movlb	0	; select bank0
  5326  056F  10CB               	bcf	_nrf24l01,1	;volatile
  5327                           
  5328                           ;nrf24l01.c: 289: if (!nrf24l01.RXMode){
  5329  0570  1DCB               	btfss	_nrf24l01,3	;volatile
  5330                           
  5331                           ;nrf24l01.c: 290: if (nrf24l01TXPacketData.ACKRequest){
  5332  0571  1C4C               	btfss	_nrf24l01TXPacketData,0
  5333  0572  2D77               	goto	i1l2148
  5334                           
  5335                           ;nrf24l01.c: 292: nrf24l01SetRXMode(1);
  5336  0573  3001               	movlw	1
  5337  0574  3184  2494  3185   	fcall	i1_nrf24l01SetRXMode
  5338  0577                     i1l2148:	
  5339                           
  5340                           ;nrf24l01.c: 293: };nrf24l01.c: 294: };nrf24l01.c: 295: };nrf24l01.c: 298: if (status.RX
      +                          _DR){
  5341  0577  1F78               	btfss	nrf24l01ISR@status,6
  5342  0578  2D7B               	goto	i1l2152
  5343                           
  5344                           ;nrf24l01.c: 300: nrf24l01.RXPending = 1;
  5345  0579  0020               	movlb	0	; select bank0
  5346  057A  154B               	bsf	_nrf24l01,2	;volatile
  5347  057B                     i1l2152:	
  5348                           
  5349                           ;nrf24l01.c: 301: };nrf24l01.c: 304: nrf24l01Send(0b00100000 | 0x07, status.byte);
  5350  057B  0878               	movf	nrf24l01ISR@status,w
  5351  057C  00F7               	movwf	??_nrf24l01ISR
  5352  057D  0877               	movf	??_nrf24l01ISR,w
  5353  057E  00F1               	movwf	i1nrf24l01Send@data
  5354  057F  3027               	movlw	39
  5355  0580  3185  25E7         	fcall	i1_nrf24l01Send
  5356  0582  0008               	return
  5357  0583                     __end_of_nrf24l01ISR:	
  5358                           
  5359                           	psect	text19
  5360  0494                     __ptext19:	
  5361 ;; *************** function i1_nrf24l01SetRXMode *****************
  5362 ;; Defined at:
  5363 ;;		line 66 in file "nrf24l01.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  rxMode          1    wreg     unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  rxMode          1    6[COMMON] unsigned char 
  5368 ;;  nrf24l01SetR    1    5[COMMON] struct .
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        3 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    2
  5385 ;; This function calls:
  5386 ;;		i1_nrf24l01Send
  5387 ;; This function is called by:
  5388 ;;		_nrf24l01ISR
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function i1_nrf24l01SetRXMode
  5394  0494                     i1_nrf24l01SetRXMode:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5398                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  5399  0494  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  5400                           
  5401                           ;nrf24l01.c: 67: n_CONFIG_t config;;nrf24l01.c: 68: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5402  0495  01F1               	clrf	i1nrf24l01Send@data
  5403  0496  3000               	movlw	0
  5404  0497  3185  25E7  3184   	fcall	i1_nrf24l01Send
  5405  049A  00F4               	movwf	??i1_nrf24l01SetRXMode
  5406  049B  0874               	movf	??i1_nrf24l01SetRXMode,w
  5407  049C  00F5               	movwf	i1nrf24l01SetRXMode@config
  5408                           
  5409                           ;nrf24l01.c: 70: if (config.PRIM_RX != rxMode){
  5410  049D  0875               	movf	i1nrf24l01SetRXMode@config,w
  5411  049E  3901               	andlw	1
  5412  049F  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  5413  04A0  1903               	skipnz
  5414  04A1  2CC2               	goto	i1l2100
  5415                           
  5416                           ;nrf24l01.c: 72: PORTAbits.RA0 = 0;
  5417  04A2  0020               	movlb	0	; select bank0
  5418  04A3  100C               	bcf	12,0	;volatile
  5419                           
  5420                           ;nrf24l01.c: 73: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5421  04A4  30A0               	movlw	160
  5422  04A5                     u205_27:	
  5423  04A5  3200               	nop2
  5424  04A6  0B89               	decfsz	9,f
  5425  04A7  2CA5               	goto	u205_27
  5426                           
  5427                           ;nrf24l01.c: 79: config.PRIM_RX = rxMode;
  5428  04A8  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5429  04A9  3901               	andlw	1
  5430  04AA  1075               	bcf	i1nrf24l01SetRXMode@config,0
  5431  04AB  1D03               	skipz
  5432  04AC  1475               	bsf	i1nrf24l01SetRXMode@config,0
  5433                           
  5434                           ;nrf24l01.c: 80: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5435  04AD  0875               	movf	i1nrf24l01SetRXMode@config,w
  5436  04AE  00F4               	movwf	??i1_nrf24l01SetRXMode
  5437  04AF  0874               	movf	??i1_nrf24l01SetRXMode,w
  5438  04B0  00F1               	movwf	i1nrf24l01Send@data
  5439  04B1  3020               	movlw	32
  5440  04B2  3185  25E7  3184   	fcall	i1_nrf24l01Send
  5441                           
  5442                           ;nrf24l01.c: 81: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5443  04B5  30A0               	movlw	160
  5444  04B6                     u206_27:	
  5445  04B6  3200               	nop2
  5446  04B7  0B89               	decfsz	9,f
  5447  04B8  2CB6               	goto	u206_27
  5448                           
  5449                           ;nrf24l01.c: 83: if (rxMode){
  5450  04B9  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5451  04BA  1903               	btfsc	3,2
  5452  04BB  2CC2               	goto	i1l2100
  5453                           
  5454                           ;nrf24l01.c: 84: PORTAbits.RA0 = 1;
  5455  04BC  0020               	movlb	0	; select bank0
  5456  04BD  140C               	bsf	12,0	;volatile
  5457                           
  5458                           ;nrf24l01.c: 85: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5459  04BE  30A0               	movlw	160
  5460  04BF                     u207_27:	
  5461  04BF  3200               	nop2
  5462  04C0  0B89               	decfsz	9,f
  5463  04C1  2CBF               	goto	u207_27
  5464  04C2                     i1l2100:	
  5465                           
  5466                           ;nrf24l01.c: 86: };nrf24l01.c: 87: };nrf24l01.c: 88: nrf24l01.RXMode = rxMode;
  5467  04C2  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5468  04C3  3901               	andlw	1
  5469  04C4  0020               	movlb	0	; select bank0
  5470  04C5  11CB               	bcf	_nrf24l01,3	;volatile
  5471  04C6  1D03               	skipz
  5472  04C7  15CB               	bsf	_nrf24l01,3	;volatile
  5473  04C8  0008               	return
  5474  04C9                     __end_ofi1_nrf24l01SetRXMode:	
  5475                           
  5476                           	psect	text20
  5477  05E7                     __ptext20:	
  5478 ;; *************** function i1_nrf24l01Send *****************
  5479 ;; Defined at:
  5480 ;;		line 18 in file "nrf24l01.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  command         1    wreg     unsigned char 
  5483 ;;  data            1    1[COMMON] unsigned char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  command         1    3[COMMON] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      unsigned char 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:        3 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    1
  5502 ;; This function calls:
  5503 ;;		_enableInterrupts
  5504 ;;		_nrf24l01SPIEnd
  5505 ;;		_nrf24l01SPISend
  5506 ;;		_nrf24l01SPIStart
  5507 ;; This function is called by:
  5508 ;;		_nrf24l01ISR
  5509 ;;		i1_nrf24l01SetRXMode
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function i1_nrf24l01Send
  5515  05E7                     i1_nrf24l01Send:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5519                           ;i1nrf24l01Send@command stored from wreg
  5520  05E7  00F3               	movwf	i1nrf24l01Send@command
  5521                           
  5522                           ;nrf24l01.c: 20: enableInterrupts(0);
  5523  05E8  3000               	movlw	0
  5524  05E9  3186  2636  3185   	fcall	_enableInterrupts
  5525                           
  5526                           ;nrf24l01.c: 22: nrf24l01SPIStart();
  5527  05EC  3186  2645  3185   	fcall	_nrf24l01SPIStart
  5528                           
  5529                           ;nrf24l01.c: 24: nrf24l01SPISend(command);
  5530  05EF  0873               	movf	i1nrf24l01Send@command,w
  5531  05F0  3186  2622  3185   	fcall	_nrf24l01SPISend
  5532                           
  5533                           ;nrf24l01.c: 25: data = nrf24l01SPISend(data);
  5534  05F3  0871               	movf	i1nrf24l01Send@data,w
  5535  05F4  3186  2622  3185   	fcall	_nrf24l01SPISend
  5536  05F7  00F2               	movwf	??i1_nrf24l01Send
  5537  05F8  0872               	movf	??i1_nrf24l01Send,w
  5538  05F9  00F1               	movwf	i1nrf24l01Send@data
  5539                           
  5540                           ;nrf24l01.c: 27: nrf24l01SPIEnd();
  5541  05FA  3186  264C  3185   	fcall	_nrf24l01SPIEnd
  5542                           
  5543                           ;nrf24l01.c: 29: enableInterrupts(1);
  5544  05FD  3001               	movlw	1
  5545  05FE  3186  2636         	fcall	_enableInterrupts
  5546                           
  5547                           ;nrf24l01.c: 31: return data;
  5548  0600  0871               	movf	i1nrf24l01Send@data,w
  5549  0601  0008               	return
  5550  0602                     __end_ofi1_nrf24l01Send:	
  5551                           
  5552                           	psect	text21
  5553  0645                     __ptext21:	
  5554 ;; *************** function _nrf24l01SPIStart *****************
  5555 ;; Defined at:
  5556 ;;		line 37 in file "interface.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    5
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_nrf24l01Send
  5581 ;;		_nrf24l01SendString
  5582 ;;		i1_nrf24l01Send
  5583 ;;		_nrf24l01SetTXAddress
  5584 ;;		_nrf24l01ReceiveString
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _nrf24l01SPIStart
  5590  0645                     _nrf24l01SPIStart:	
  5591                           
  5592                           ;interface.c: 38: PORTAbits.RA1 = 0;
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _nrf24l01SPIStart: [wreg]
  5596  0645  0020               	movlb	0	; select bank0
  5597  0646  108C               	bcf	12,1	;volatile
  5598                           
  5599                           ;interface.c: 39: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5600  0647  300D               	movlw	13
  5601  0648                     u208_27:	
  5602  0648  0B89               	decfsz	9,f
  5603  0649  2E48               	goto	u208_27
  5604  064A  0000               	nop
  5605  064B  0008               	return
  5606  064C                     __end_of_nrf24l01SPIStart:	
  5607                           
  5608                           	psect	text22
  5609  0622                     __ptext22:	
  5610 ;; *************** function _nrf24l01SPISend *****************
  5611 ;; Defined at:
  5612 ;;		line 26 in file "interface.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  data            1    wreg     unsigned char 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  data            1    0[COMMON] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    5
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_nrf24l01Send
  5637 ;;		_nrf24l01SendString
  5638 ;;		i1_nrf24l01Send
  5639 ;;		_nrf24l01SetTXAddress
  5640 ;;		_nrf24l01ReceiveString
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _nrf24l01SPISend
  5646  0622                     _nrf24l01SPISend:	
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _nrf24l01SPISend: [wreg]
  5650                           ;nrf24l01SPISend@data stored from wreg
  5651  0622  00F0               	movwf	nrf24l01SPISend@data
  5652                           
  5653                           ;interface.c: 27: SSP1BUF = data;
  5654  0623  0870               	movf	nrf24l01SPISend@data,w
  5655  0624  0024               	movlb	4	; select bank4
  5656  0625  0091               	movwf	17	;volatile
  5657  0626                     i1l52:	
  5658                           ;interface.c: 29: while (!SSP1STATbits.BF){
  5659                           
  5660  0626  0024               	movlb	4	; select bank4
  5661  0627  1814               	btfsc	20,0	;volatile
  5662  0628  2E2B               	goto	i1l1696
  5663                           
  5664                           ;interface.c: 30: __nop();
  5665  0629  0000               	nop
  5666  062A  2E26               	goto	i1l52
  5667  062B                     i1l1696:	
  5668                           
  5669                           ;interface.c: 31: };interface.c: 33: return SSP1BUF;
  5670  062B  0811               	movf	17,w	;volatile
  5671  062C  0008               	return
  5672  062D                     __end_of_nrf24l01SPISend:	
  5673                           
  5674                           	psect	text23
  5675  064C                     __ptext23:	
  5676 ;; *************** function _nrf24l01SPIEnd *****************
  5677 ;; Defined at:
  5678 ;;		line 43 in file "interface.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;Total ram usage:        0 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    5
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_nrf24l01Send
  5703 ;;		_nrf24l01SendString
  5704 ;;		i1_nrf24l01Send
  5705 ;;		_nrf24l01ReceiveString
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _nrf24l01SPIEnd
  5711  064C                     _nrf24l01SPIEnd:	
  5712                           
  5713                           ;interface.c: 44: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _nrf24l01SPIEnd: [wreg]
  5717  064C  300D               	movlw	13
  5718  064D                     u209_27:	
  5719  064D  0B89               	decfsz	9,f
  5720  064E  2E4D               	goto	u209_27
  5721  064F  0000               	nop
  5722                           
  5723                           ;interface.c: 45: PORTAbits.RA1 = 1;
  5724  0650  0020               	movlb	0	; select bank0
  5725  0651  148C               	bsf	12,1	;volatile
  5726  0652  0008               	return
  5727  0653                     __end_of_nrf24l01SPIEnd:	
  5728                           
  5729                           	psect	text24
  5730  0636                     __ptext24:	
  5731 ;; *************** function _enableInterrupts *****************
  5732 ;; Defined at:
  5733 ;;		line 49 in file "interface.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  enable          1    wreg     unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  enable          1    0[COMMON] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		wreg, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;Total ram usage:        0 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    5
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_nrf24l01Send
  5758 ;;		_nrf24l01SendString
  5759 ;;		i1_nrf24l01Send
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function _enableInterrupts
  5765  0636                     _enableInterrupts:	
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in _enableInterrupts: [wreg+status,0]
  5769                           ;enableInterrupts@enable stored from wreg
  5770  0636  00F0               	movwf	enableInterrupts@enable
  5771                           
  5772                           ;interface.c: 50: PIE0bits.INTE = enable;
  5773  0637  0C70               	rrf	enableInterrupts@enable,w
  5774  0638  0021               	movlb	1	; select bank1
  5775  0639  1C03               	skipc
  5776  063A  1010               	bcf	16,0	;volatile
  5777  063B  1803               	skipnc
  5778  063C  1410               	bsf	16,0	;volatile
  5779  063D  0008               	return
  5780  063E                     __end_of_enableInterrupts:	
  5781                           
  5782                           	psect	text25
  5783  067B                     __ptext25:	
  5784 ;; *************** function _exception *****************
  5785 ;; Defined at:
  5786 ;;		line 53 in file "interface.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  exception       1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  exception       1    0[COMMON] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_nrf24l01ISR
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _exception
  5815  067B                     _exception:	
  5816                           
  5817                           ;incstack = 0
  5818                           ; Regs used in _exception: [wreg]
  5819  067B  0008               	return
  5820  067C                     __end_of_exception:	
  5821  007E                     btemp	set	126	;btemp
  5822  007E                     int$flags	set	126
  5823  007E                     wtemp0	set	126


Data Sizes:
    Strings     35
    Constant    24
    Data        0
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     41      77
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXTopic(BANK0[8]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXTopic(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXTopic(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->i1_nrf24l01SetRXMode
    i1_nrf24l01SetRXMode->i1_nrf24l01Send

Critical Paths under _main in BANK0

    _main->_utoa
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_utoa
    _utoa->_getADCValue
    _nrf24l01SendString->_nrf24l01SetRXMode
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13590
                                             37 BANK0      4     4      0
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendString
                      _read_flashmem
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _read_flashmem                                        9     7      2     198
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    1532
                                             12 BANK0      3     3      0
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               10    10      0    1510
                                              3 BANK0      9     9      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    6317
                        _getADCValue
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    2678
                                             28 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                        _getADCValue (ARG)
                      _read_flashmem (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2    1009
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendString                                   2     2      0    1726
                                              6 BANK0      2     2      0
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1409
                                              3 BANK0      3     3      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1275
                                              0 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPIStart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPIEnd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             14 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0     675
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (7) _nrf24l01ISR                                          2     2      0     675
                                              7 COMMON     2     2      0
                          _exception
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (8) i1_nrf24l01SetRXMode                                  3     3      0     349
                                              4 COMMON     3     3      0
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01Send                                       3     2      1     215
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPIStart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01SPIEnd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (8) _exception                                            1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendString
       _enableInterrupts
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart
       _nrf24l01SetRXMode
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
           _nrf24l01SPISend
           _nrf24l01SPIStart
     _sleep
     _strcpy
     _utoa
       ___lwdiv
       ___lwmod
       _getADCValue (ARG)
         ___lldiv
         ___lmul
       _read_flashmem (ARG)
   _nrf24l01Init
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart
     _nrf24l01InterfaceInit
   _nrf24l01SendString
     _enableInterrupts
     _nrf24l01SPIEnd
     _nrf24l01SPISend
     _nrf24l01SPIStart
     _nrf24l01SetRXMode
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart
   _read_flashmem
   _sleep
   _strcpy
   _utoa
     ___lwdiv
     ___lwmod
     _getADCValue (ARG)
       ___lldiv
       ___lmul
     _read_flashmem (ARG)

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
       _nrf24l01SPISend
       _nrf24l01SPIStart
     i1_nrf24l01SetRXMode
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
         _nrf24l01SPISend
         _nrf24l01SPIStart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jun 24 15:49:53 2018

                    __CFG_CP$OFF 0000              nrf24l01Send@command 0022  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l152 0310                              l159 062D  
                            l176 0295                              l283 0112                              l279 0102  
                            l828 03BF                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            u905 0409                              u915 0415                              u835 050D  
                            u845 0514                              u945 046B                              u875 03E9  
                            u965 0475                              u895 03F5                              u975 047F  
                            u985 0487                              wreg 0009                             ?_ISR 0070  
                 ??_nrf24l01Init 002C                             l1800 0486                             l2514 05D2  
                           l1804 048F                             l1750 050C                             l1742 0458  
                           l1822 0548                             l2518 0379                             l1816 0530  
                           l2528 0397                             l2632 027A                   ??_nrf24l01Send 0021  
                           l1746 0502                             l1930 0142                             l1922 012A  
                           l1818 053C                             l1826 0551                             l1764 03E6  
                           l1916 0106                             l1774 0414                             l1766 03F4  
                           l1854 0315                             l1950 0175                             l1942 0161  
                           l1934 0149                             l1926 0137                             l1856 0309  
                           l1792 0468                             l1778 041F                             l1858 0333  
                           l1970 0194                             l1954 0180                             l1946 0168  
                           l1938 0156                             l1794 0474                             l2690 02E7  
                           l1980 01A4                             l1972 01A0                             l1978 01B0  
                           STR_1 0677                     __CFG_WDTE$ON 0000                             STR_2 0664  
                           STR_3 0669                             STR_4 0653                             STR_5 063F  
                           STR_6 066E                             STR_7 0673                             u1015 0533  
                           u1035 0542                             u1045 0549                             u2007 01B1  
                           u2017 043A                             u2027 044C                             u2037 0455  
                           u2047 0306                             u1937 026B                             u1947 0590  
                           u1957 05A2                             u1967 01C2                             u1977 010E  
                           u1987 0186                             i1l52 0626                             u1997 019C  
 __size_of_nrf24l01InterfaceInit 000E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
  __end_of_nrf24l01InterfaceInit 0622                             _main 0259                             _loop 0026  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             _utoa 0373                    __CFG_BOREN$ON 0000  
                  __CFG_BORV$LOW 0000                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_ISR 0079              nrf24l01SendString@i 0027  
           __size_of_getADCValue 0088      __size_of_nrf24l01SendString 00BB                            ?_main 0070  
                          ?_loop 0070                  __end_of___lldiv 0428                            ?_utoa 003C  
                 __CFG_DEBUG$OFF 0000                  __end_of___lwdiv 0494                            i1l147 000D  
                __end_of___lwmod 0556           enableInterrupts@enable 0070              ___lmul@multiplicand 0024  
                  __CFG_PWRTE$ON 0000                            _sleep 062D                            main@i 0048  
               _enableInterrupts 0636                            utoa@c 0043                            utoa@v 0041  
                          status 0003                            wtemp0 007E      __end_ofi1_nrf24l01SetRXMode 04C9  
              getADCValue@adcSum 0038                 _nrf24l01SPIStart 0645                  __initialization 0011  
                   __end_of_main 02EB                     __end_of_loop 00F9                     __end_of_utoa 03D5  
                         ??_main 0045                           ??_loop 0045                           ??_utoa 0040  
               ??_nrf24l01SPIEnd 0070         __size_of_nrf24l01SPISend 000B                           _ADRESH 009C  
                         _ADRESL 009B                           ?_sleep 0070                           _ANSELA 018C  
                         _ANSELC 018E                           i1l2100 04C2                           i1l2140 056C  
                         i1l2152 057B                           i1l2136 0565                           i1l2148 0577  
                         i1l1696 062B                           u205_27 04A5                           u206_27 04B6  
                         u207_27 04BF                           u208_27 0648                           u209_27 064D  
                         _PMADRH 0892                           _PMADRL 0891                           _PMDATH 0894  
                         _PMDATL 0893                           _PMCON1 0895                           _PMCON2 0896  
           __size_of_nrf24l01ISR 002D          nrf24l01SetRXMode@config 0024                           ___lmul 04F9  
        nrf24l01SetRXMode@rxMode 0025                   __CFG_STVREN$ON 0000                        ??___lldiv 0028  
                      ??___lwdiv 0024                        ??___lwmod 0024             __end_of_nrf24l01Init 05AC  
           __end_of_nrf24l01Send 05CC            _nrf24l01InitRegisters 01B4                           _strcpy 05CC  
      i1nrf24l01SetRXMode@config 0075        i1nrf24l01SetRXMode@rxMode 0076           __size_of_read_flashmem 0030  
             getADCValue@adcLoop 0037          __end_of__initialization 0022               getADCValue@channel 0036  
             getADCValue@divider 002E                   __pcstackCOMMON 0070                    __end_of_sleep 0636  
           _nrf24l01RXPacketData 0079    nrf24l01InitRegisters@enRXAddr 0028                          ??_sleep 0020  
                     __pbssBANK0 0049                       __pbssBANK1 00A0                ??_nrf24l01SPISend 0070  
             __size_of_exception 0001          __size_ofi1_nrf24l01Send 001B                    _read_flashmem 04C9  
                     __pmaintext 0259                          ?___lmul 0020                  __CFG_PPS1WAY$ON 0000  
              _nrf24l01SetRXMode 0428           ?_nrf24l01InitRegisters 0070                       __pintentry 0004  
            nrf24l01SPISend@data 0070                   ___lmul@product 0028               ?_nrf24l01SetRXMode 0070  
       __end_of_enableInterrupts 063E             _nrf24l01TXPacketData 004C              __CFG_RSTOSC$HFINT32 0000  
                        ?_strcpy 0020            __end_of_n_ADDRESS_MUL 063F              ??_nrf24l01SetRXMode 0023  
       __end_of_nrf24l01SPIStart 064C                          _SSP1BUF 0211            _nrf24l01InterfaceInit 0614  
                 ?_read_flashmem 0020                    ??_getADCValue 0032            __size_of_nrf24l01Init 0029  
          __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 045F       __end_of_nrf24l01SendString 01B4  
                __size_of___lmul 0030                          ___lldiv 03D5                          ___lwdiv 045F  
                        ___lwmod 0529                          __ptext1 04C9                          __ptext2 0583  
                        __ptext3 0614                          __ptext4 01B4                          __ptext5 0026  
                        __ptext6 0373                          __ptext7 0529                          __ptext8 045F  
                        __ptext9 05CC                __end_of_exception 067C                  __size_of_strcpy 001B  
                   __size_of_ISR 000B                          _counter 0049                          clrloop0 065A  
           end_of_initialization 0022                __end_of_romData_t 0614                     _nrf24l01Init 0583  
                   _nrf24l01Send 05AC                  ___lldiv@divisor 0020                  ___lldiv@counter 002D  
   __size_ofi1_nrf24l01SetRXMode 0035                          utoa@buf 0044                          utoa@val 003C  
          i1nrf24l01Send@command 0073              __end_of_getADCValue 0373                        _PORTAbits 000C  
                      _TRISAbits 008C                        _TRISCbits 008E                 nrf24l01Send@data 0020  
               __CFG_FEXTOSC$OFF 0000                    ??_nrf24l01ISR 0077           ?_nrf24l01InterfaceInit 0070  
                ??_read_flashmem 0022                   i1_nrf24l01Send 05E7       __size_of_nrf24l01SetRXMode 0037  
                 __end_of___lmul 0529                   __end_of_strcpy 05E7              start_initialization 0011  
                _nrf24l01SPISend 0622                      __end_of_ISR 000F                  _nrf24l01RXValue 004D  
                _nrf24l01RXTopic 0055                  _nrf24l01TXValue 005D                  _nrf24l01TXTopic 0065  
         __end_ofi1_nrf24l01Send 0602          __size_of_nrf24l01SPIEnd 0007          ??_nrf24l01InitRegisters 0023  
               __CFG_LPBOREN$OFF 0000                      _getADCValue 02EB                         ??___lmul 0028  
            __end_of_nrf24l01ISR 0583                ?_enableInterrupts 0070                         ??_strcpy 0022  
             ??_enableInterrupts 0070                      __pbssCOMMON 0079                        ___latbits 0002  
                  __pcstackBANK0 0020                ?_nrf24l01SPIStart 0070               ??_nrf24l01SPIStart 0070  
                ?i1_nrf24l01Send 0071                 ___lwdiv@dividend 0022                         ?___lldiv 0020  
                       ?___lwdiv 0020                         ?___lwmod 0020             __end_of_n_ADDRESS_P0 0664  
        __end_of_nrf24l01SPISend 062D               i1nrf24l01Send@data 0071        nrf24l01InitRegisters@enAA 0029  
             _nrf24l01SendString 00F9                        _exception 067B                 ___lwdiv@quotient 0025  
            i1_nrf24l01SetRXMode 0494                   __size_of_sleep 0009              ?_nrf24l01SendString 0070  
                    _nrf24l01ISR 0556                        clear_ram0 0659                         _PIE0bits 0090  
                      _romData_t 0602                         _PIR0bits 0010                        _sleepLoop 007A  
           ?i1_nrf24l01SetRXMode 0070             ??_nrf24l01SendString 0026                       _ADCON0bits 009D  
                     _ADCON1bits 009E                         _WPUAbits 020C                       ?_exception 0070  
              ___lmul@multiplier 0020          ??_nrf24l01InterfaceInit 0020                nrf24l01ISR@status 0078  
                 _nrf24l01SPIEnd 064C                   _nrf24l01RXName 00A0                   _nrf24l01TXName 00B0  
          ??i1_nrf24l01SetRXMode 0074             read_flashmem@address 0027                 __size_of___lldiv 0053  
               __size_of___lwdiv 0035                 __size_of___lwmod 002D                 ?_nrf24l01SPISend 0070  
                     _ANSELAbits 018C                       _ANSELCbits 018E                    _n_ADDRESS_MUL 063E  
                ___lwdiv@divisor 0020                  ___lwdiv@counter 0027                         __ptext10 062D  
                       __ptext11 00F9                         __ptext20 05E7                         __ptext12 0428  
                       __ptext21 0645                         __ptext13 05AC                         __ptext22 0622  
                       __ptext14 02EB                         __ptext23 064C                         __ptext15 04F9  
                       __ptext24 0636                         __ptext16 03D5                         __ptext25 067B  
                       __ptext18 0556                         __ptext19 0494           __end_of_nrf24l01SPIEnd 0653  
                       _nrf24l01 004B           nrf24l01Init@isReciever 002E                      _OSCCON1bits 0919  
                    _OSCCON2bits 091A                       strcpy@from 0020                    __size_of_main 0092  
                  __size_of_loop 00D3                    __size_of_utoa 0062     nrf24l01InitRegisters@feature 0026  
          __end_of_read_flashmem 04F9               exception@exception 0070     nrf24l01InitRegisters@rfSetup 0025  
                   ?_getADCValue 002E   __size_of_nrf24l01InitRegisters 00A5    __end_of_nrf24l01InitRegisters 0259  
                       int$flags 007E     nrf24l01InitRegisters@setupAW 0024                     _SSP1STATbits 0214  
                     _INTCONbits 000B                       _FVRCONbits 0117                 ??i1_nrf24l01Send 0072  
                    ??_exception 0070                   __pstringtext10 0000                  ?_nrf24l01SPIEnd 0070  
                       intlevel1 0000              read_flashmem@offset 0020                     _n_ADDRESS_P0 065F  
            read_flashmem@result 0025        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lwmod@dividend 0022                 ___lldiv@dividend 0024                __CFG_CLKOUTEN$OFF 0000  
    nrf24l01InitRegisters@config 002B        __size_of_nrf24l01SPIStart 0007      nrf24l01InitRegisters@status 0027  
                  __pstringtext1 0602                    __pstringtext2 065F                    __pstringtext3 063E  
                  __pstringtext4 0653                    __pstringtext5 0664                    __pstringtext6 0669  
                  __pstringtext7 066E                    __pstringtext8 0673                    __pstringtext9 0677  
                       utoa@base 003E       nrf24l01InitRegisters@DynPD 002A                 ___lldiv@quotient 0029  
                ___lwmod@divisor 0020                         strcpy@cp 0023                         strcpy@to 0024  
                ___lwmod@counter 0025                      _SSPCON1bits 0215                       _WDTCONbits 0097  
                  ?_nrf24l01Init 0070                    ?_nrf24l01Send 0020                       _STATUSbits 0003  
                   ?_nrf24l01ISR 0070  
