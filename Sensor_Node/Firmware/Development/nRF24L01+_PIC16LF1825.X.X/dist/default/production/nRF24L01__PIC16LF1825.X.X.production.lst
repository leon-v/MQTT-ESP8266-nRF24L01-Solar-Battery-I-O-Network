

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 13 13:13:18 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.00
    74                           ; Generated 27/05/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16LF18325 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000E                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008E                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0097                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  018C                     	;# 
   166  018E                     	;# 
   167  0199                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  019A                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  020C                     	;# 
   193  020E                     	;# 
   194  0211                     	;# 
   195  0211                     	;# 
   196  0212                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0216                     	;# 
   208  0217                     	;# 
   209  0217                     	;# 
   210  0219                     	;# 
   211  021A                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021D                     	;# 
   215  021D                     	;# 
   216  021E                     	;# 
   217  021F                     	;# 
   218  028C                     	;# 
   219  028E                     	;# 
   220  0291                     	;# 
   221  0291                     	;# 
   222  0292                     	;# 
   223  0293                     	;# 
   224  0294                     	;# 
   225  0295                     	;# 
   226  0295                     	;# 
   227  0296                     	;# 
   228  0297                     	;# 
   229  0298                     	;# 
   230  029F                     	;# 
   231  030C                     	;# 
   232  030E                     	;# 
   233  0311                     	;# 
   234  0311                     	;# 
   235  0312                     	;# 
   236  0313                     	;# 
   237  0314                     	;# 
   238  0315                     	;# 
   239  0315                     	;# 
   240  0316                     	;# 
   241  0317                     	;# 
   242  0318                     	;# 
   243  038C                     	;# 
   244  038E                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  0393                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  039A                     	;# 
   252  039C                     	;# 
   253  039D                     	;# 
   254  039E                     	;# 
   255  039F                     	;# 
   256  0411                     	;# 
   257  0411                     	;# 
   258  0412                     	;# 
   259  0413                     	;# 
   260  0414                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  0418                     	;# 
   266  0419                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  0498                     	;# 
   274  0498                     	;# 
   275  0499                     	;# 
   276  049A                     	;# 
   277  049B                     	;# 
   278  049B                     	;# 
   279  049C                     	;# 
   280  049D                     	;# 
   281  049E                     	;# 
   282  049F                     	;# 
   283  0617                     	;# 
   284  0618                     	;# 
   285  0619                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061B                     	;# 
   289  061C                     	;# 
   290  061C                     	;# 
   291  061F                     	;# 
   292  0691                     	;# 
   293  0692                     	;# 
   294  0693                     	;# 
   295  0694                     	;# 
   296  0695                     	;# 
   297  0696                     	;# 
   298  0697                     	;# 
   299  0698                     	;# 
   300  0699                     	;# 
   301  0711                     	;# 
   302  0712                     	;# 
   303  0713                     	;# 
   304  0714                     	;# 
   305  0715                     	;# 
   306  0716                     	;# 
   307  0717                     	;# 
   308  0718                     	;# 
   309  0719                     	;# 
   310  0891                     	;# 
   311  0891                     	;# 
   312  0891                     	;# 
   313  0891                     	;# 
   314  0891                     	;# 
   315  0891                     	;# 
   316  0892                     	;# 
   317  0892                     	;# 
   318  0892                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0893                     	;# 
   322  0893                     	;# 
   323  0893                     	;# 
   324  0893                     	;# 
   325  0894                     	;# 
   326  0894                     	;# 
   327  0894                     	;# 
   328  0895                     	;# 
   329  0895                     	;# 
   330  0895                     	;# 
   331  0896                     	;# 
   332  0896                     	;# 
   333  0896                     	;# 
   334  089B                     	;# 
   335  0911                     	;# 
   336  0912                     	;# 
   337  0913                     	;# 
   338  0914                     	;# 
   339  0915                     	;# 
   340  0916                     	;# 
   341  0918                     	;# 
   342  0919                     	;# 
   343  091A                     	;# 
   344  091B                     	;# 
   345  091C                     	;# 
   346  091D                     	;# 
   347  091E                     	;# 
   348  091F                     	;# 
   349  0E0F                     	;# 
   350  0E10                     	;# 
   351  0E11                     	;# 
   352  0E12                     	;# 
   353  0E13                     	;# 
   354  0E14                     	;# 
   355  0E15                     	;# 
   356  0E16                     	;# 
   357  0E17                     	;# 
   358  0E18                     	;# 
   359  0E19                     	;# 
   360  0E1A                     	;# 
   361  0E1B                     	;# 
   362  0E1C                     	;# 
   363  0E1D                     	;# 
   364  0E1E                     	;# 
   365  0E1F                     	;# 
   366  0E20                     	;# 
   367  0E21                     	;# 
   368  0E22                     	;# 
   369  0E24                     	;# 
   370  0E25                     	;# 
   371  0E28                     	;# 
   372  0E29                     	;# 
   373  0E2A                     	;# 
   374  0E2B                     	;# 
   375  0E2C                     	;# 
   376  0E2D                     	;# 
   377  0E2E                     	;# 
   378  0E2F                     	;# 
   379  0E90                     	;# 
   380  0E91                     	;# 
   381  0E92                     	;# 
   382  0E94                     	;# 
   383  0E95                     	;# 
   384  0EA0                     	;# 
   385  0EA1                     	;# 
   386  0EA2                     	;# 
   387  0EA3                     	;# 
   388  0EA4                     	;# 
   389  0EA5                     	;# 
   390  0F0F                     	;# 
   391  0F10                     	;# 
   392  0F11                     	;# 
   393  0F12                     	;# 
   394  0F13                     	;# 
   395  0F14                     	;# 
   396  0F15                     	;# 
   397  0F16                     	;# 
   398  0F17                     	;# 
   399  0F18                     	;# 
   400  0F19                     	;# 
   401  0F1A                     	;# 
   402  0F1B                     	;# 
   403  0F1C                     	;# 
   404  0F1D                     	;# 
   405  0F1E                     	;# 
   406  0F1F                     	;# 
   407  0F20                     	;# 
   408  0F21                     	;# 
   409  0F22                     	;# 
   410  0F23                     	;# 
   411  0F24                     	;# 
   412  0F25                     	;# 
   413  0F26                     	;# 
   414  0F27                     	;# 
   415  0F28                     	;# 
   416  0F29                     	;# 
   417  0F2A                     	;# 
   418  0F2B                     	;# 
   419  0F2C                     	;# 
   420  0F2D                     	;# 
   421  0F2E                     	;# 
   422  0F2F                     	;# 
   423  0F30                     	;# 
   424  0F31                     	;# 
   425  0F32                     	;# 
   426  0F33                     	;# 
   427  0F34                     	;# 
   428  0F35                     	;# 
   429  0F36                     	;# 
   430  0F37                     	;# 
   431  0FE4                     	;# 
   432  0FE5                     	;# 
   433  0FE6                     	;# 
   434  0FE7                     	;# 
   435  0FE8                     	;# 
   436  0FE9                     	;# 
   437  0FEA                     	;# 
   438  0FEB                     	;# 
   439  0FED                     	;# 
   440  0FEE                     	;# 
   441  0FEF                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000E                     	;# 
   456  0010                     	;# 
   457  0011                     	;# 
   458  0012                     	;# 
   459  0013                     	;# 
   460  0014                     	;# 
   461  0015                     	;# 
   462  0015                     	;# 
   463  0016                     	;# 
   464  0016                     	;# 
   465  0017                     	;# 
   466  0018                     	;# 
   467  0019                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  001D                     	;# 
   473  001E                     	;# 
   474  001F                     	;# 
   475  008C                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0097                     	;# 
   483  009B                     	;# 
   484  009B                     	;# 
   485  009C                     	;# 
   486  009D                     	;# 
   487  009E                     	;# 
   488  009F                     	;# 
   489  010C                     	;# 
   490  010E                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0113                     	;# 
   494  0114                     	;# 
   495  0115                     	;# 
   496  0116                     	;# 
   497  0117                     	;# 
   498  0118                     	;# 
   499  0119                     	;# 
   500  018C                     	;# 
   501  018E                     	;# 
   502  0199                     	;# 
   503  0199                     	;# 
   504  0199                     	;# 
   505  019A                     	;# 
   506  019A                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019D                     	;# 
   517  019D                     	;# 
   518  019D                     	;# 
   519  019E                     	;# 
   520  019E                     	;# 
   521  019E                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  020C                     	;# 
   528  020E                     	;# 
   529  0211                     	;# 
   530  0211                     	;# 
   531  0212                     	;# 
   532  0212                     	;# 
   533  0213                     	;# 
   534  0213                     	;# 
   535  0214                     	;# 
   536  0214                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0216                     	;# 
   542  0216                     	;# 
   543  0217                     	;# 
   544  0217                     	;# 
   545  0219                     	;# 
   546  021A                     	;# 
   547  021B                     	;# 
   548  021C                     	;# 
   549  021D                     	;# 
   550  021D                     	;# 
   551  021E                     	;# 
   552  021F                     	;# 
   553  028C                     	;# 
   554  028E                     	;# 
   555  0291                     	;# 
   556  0291                     	;# 
   557  0292                     	;# 
   558  0293                     	;# 
   559  0294                     	;# 
   560  0295                     	;# 
   561  0295                     	;# 
   562  0296                     	;# 
   563  0297                     	;# 
   564  0298                     	;# 
   565  029F                     	;# 
   566  030C                     	;# 
   567  030E                     	;# 
   568  0311                     	;# 
   569  0311                     	;# 
   570  0312                     	;# 
   571  0313                     	;# 
   572  0314                     	;# 
   573  0315                     	;# 
   574  0315                     	;# 
   575  0316                     	;# 
   576  0317                     	;# 
   577  0318                     	;# 
   578  038C                     	;# 
   579  038E                     	;# 
   580  0391                     	;# 
   581  0392                     	;# 
   582  0393                     	;# 
   583  0397                     	;# 
   584  0398                     	;# 
   585  0399                     	;# 
   586  039A                     	;# 
   587  039C                     	;# 
   588  039D                     	;# 
   589  039E                     	;# 
   590  039F                     	;# 
   591  0411                     	;# 
   592  0411                     	;# 
   593  0412                     	;# 
   594  0413                     	;# 
   595  0414                     	;# 
   596  0415                     	;# 
   597  0416                     	;# 
   598  0417                     	;# 
   599  0418                     	;# 
   600  0418                     	;# 
   601  0419                     	;# 
   602  041A                     	;# 
   603  041B                     	;# 
   604  041C                     	;# 
   605  041D                     	;# 
   606  041E                     	;# 
   607  041F                     	;# 
   608  0498                     	;# 
   609  0498                     	;# 
   610  0499                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049B                     	;# 
   614  049C                     	;# 
   615  049D                     	;# 
   616  049E                     	;# 
   617  049F                     	;# 
   618  0617                     	;# 
   619  0618                     	;# 
   620  0619                     	;# 
   621  0619                     	;# 
   622  061A                     	;# 
   623  061B                     	;# 
   624  061C                     	;# 
   625  061C                     	;# 
   626  061F                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  0695                     	;# 
   632  0696                     	;# 
   633  0697                     	;# 
   634  0698                     	;# 
   635  0699                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0715                     	;# 
   641  0716                     	;# 
   642  0717                     	;# 
   643  0718                     	;# 
   644  0719                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0892                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0894                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0895                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0896                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  089B                     	;# 
   670  0911                     	;# 
   671  0912                     	;# 
   672  0913                     	;# 
   673  0914                     	;# 
   674  0915                     	;# 
   675  0916                     	;# 
   676  0918                     	;# 
   677  0919                     	;# 
   678  091A                     	;# 
   679  091B                     	;# 
   680  091C                     	;# 
   681  091D                     	;# 
   682  091E                     	;# 
   683  091F                     	;# 
   684  0E0F                     	;# 
   685  0E10                     	;# 
   686  0E11                     	;# 
   687  0E12                     	;# 
   688  0E13                     	;# 
   689  0E14                     	;# 
   690  0E15                     	;# 
   691  0E16                     	;# 
   692  0E17                     	;# 
   693  0E18                     	;# 
   694  0E19                     	;# 
   695  0E1A                     	;# 
   696  0E1B                     	;# 
   697  0E1C                     	;# 
   698  0E1D                     	;# 
   699  0E1E                     	;# 
   700  0E1F                     	;# 
   701  0E20                     	;# 
   702  0E21                     	;# 
   703  0E22                     	;# 
   704  0E24                     	;# 
   705  0E25                     	;# 
   706  0E28                     	;# 
   707  0E29                     	;# 
   708  0E2A                     	;# 
   709  0E2B                     	;# 
   710  0E2C                     	;# 
   711  0E2D                     	;# 
   712  0E2E                     	;# 
   713  0E2F                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E94                     	;# 
   718  0E95                     	;# 
   719  0EA0                     	;# 
   720  0EA1                     	;# 
   721  0EA2                     	;# 
   722  0EA3                     	;# 
   723  0EA4                     	;# 
   724  0EA5                     	;# 
   725  0F0F                     	;# 
   726  0F10                     	;# 
   727  0F11                     	;# 
   728  0F12                     	;# 
   729  0F13                     	;# 
   730  0F14                     	;# 
   731  0F15                     	;# 
   732  0F16                     	;# 
   733  0F17                     	;# 
   734  0F18                     	;# 
   735  0F19                     	;# 
   736  0F1A                     	;# 
   737  0F1B                     	;# 
   738  0F1C                     	;# 
   739  0F1D                     	;# 
   740  0F1E                     	;# 
   741  0F1F                     	;# 
   742  0F20                     	;# 
   743  0F21                     	;# 
   744  0F22                     	;# 
   745  0F23                     	;# 
   746  0F24                     	;# 
   747  0F25                     	;# 
   748  0F26                     	;# 
   749  0F27                     	;# 
   750  0F28                     	;# 
   751  0F29                     	;# 
   752  0F2A                     	;# 
   753  0F2B                     	;# 
   754  0F2C                     	;# 
   755  0F2D                     	;# 
   756  0F2E                     	;# 
   757  0F2F                     	;# 
   758  0F30                     	;# 
   759  0F31                     	;# 
   760  0F32                     	;# 
   761  0F33                     	;# 
   762  0F34                     	;# 
   763  0F35                     	;# 
   764  0F36                     	;# 
   765  0F37                     	;# 
   766  0FE4                     	;# 
   767  0FE5                     	;# 
   768  0FE6                     	;# 
   769  0FE7                     	;# 
   770  0FE8                     	;# 
   771  0FE9                     	;# 
   772  0FEA                     	;# 
   773  0FEB                     	;# 
   774  0FED                     	;# 
   775  0FEE                     	;# 
   776  0FEF                     	;# 
   777  0000                     	;# 
   778  0001                     	;# 
   779  0002                     	;# 
   780  0003                     	;# 
   781  0004                     	;# 
   782  0005                     	;# 
   783  0006                     	;# 
   784  0007                     	;# 
   785  0008                     	;# 
   786  0009                     	;# 
   787  000A                     	;# 
   788  000B                     	;# 
   789  000C                     	;# 
   790  000E                     	;# 
   791  0010                     	;# 
   792  0011                     	;# 
   793  0012                     	;# 
   794  0013                     	;# 
   795  0014                     	;# 
   796  0015                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0016                     	;# 
   800  0017                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  001D                     	;# 
   808  001E                     	;# 
   809  001F                     	;# 
   810  008C                     	;# 
   811  008E                     	;# 
   812  0090                     	;# 
   813  0091                     	;# 
   814  0092                     	;# 
   815  0093                     	;# 
   816  0094                     	;# 
   817  0097                     	;# 
   818  009B                     	;# 
   819  009B                     	;# 
   820  009C                     	;# 
   821  009D                     	;# 
   822  009E                     	;# 
   823  009F                     	;# 
   824  010C                     	;# 
   825  010E                     	;# 
   826  0111                     	;# 
   827  0112                     	;# 
   828  0113                     	;# 
   829  0114                     	;# 
   830  0115                     	;# 
   831  0116                     	;# 
   832  0117                     	;# 
   833  0118                     	;# 
   834  0119                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0199                     	;# 
   838  0199                     	;# 
   839  0199                     	;# 
   840  019A                     	;# 
   841  019A                     	;# 
   842  019A                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019C                     	;# 
   849  019C                     	;# 
   850  019C                     	;# 
   851  019D                     	;# 
   852  019D                     	;# 
   853  019D                     	;# 
   854  019E                     	;# 
   855  019E                     	;# 
   856  019E                     	;# 
   857  019F                     	;# 
   858  019F                     	;# 
   859  019F                     	;# 
   860  019F                     	;# 
   861  019F                     	;# 
   862  020C                     	;# 
   863  020E                     	;# 
   864  0211                     	;# 
   865  0211                     	;# 
   866  0212                     	;# 
   867  0212                     	;# 
   868  0213                     	;# 
   869  0213                     	;# 
   870  0214                     	;# 
   871  0214                     	;# 
   872  0215                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0216                     	;# 
   878  0217                     	;# 
   879  0217                     	;# 
   880  0219                     	;# 
   881  021A                     	;# 
   882  021B                     	;# 
   883  021C                     	;# 
   884  021D                     	;# 
   885  021D                     	;# 
   886  021E                     	;# 
   887  021F                     	;# 
   888  028C                     	;# 
   889  028E                     	;# 
   890  0291                     	;# 
   891  0291                     	;# 
   892  0292                     	;# 
   893  0293                     	;# 
   894  0294                     	;# 
   895  0295                     	;# 
   896  0295                     	;# 
   897  0296                     	;# 
   898  0297                     	;# 
   899  0298                     	;# 
   900  029F                     	;# 
   901  030C                     	;# 
   902  030E                     	;# 
   903  0311                     	;# 
   904  0311                     	;# 
   905  0312                     	;# 
   906  0313                     	;# 
   907  0314                     	;# 
   908  0315                     	;# 
   909  0315                     	;# 
   910  0316                     	;# 
   911  0317                     	;# 
   912  0318                     	;# 
   913  038C                     	;# 
   914  038E                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  0393                     	;# 
   918  0397                     	;# 
   919  0398                     	;# 
   920  0399                     	;# 
   921  039A                     	;# 
   922  039C                     	;# 
   923  039D                     	;# 
   924  039E                     	;# 
   925  039F                     	;# 
   926  0411                     	;# 
   927  0411                     	;# 
   928  0412                     	;# 
   929  0413                     	;# 
   930  0414                     	;# 
   931  0415                     	;# 
   932  0416                     	;# 
   933  0417                     	;# 
   934  0418                     	;# 
   935  0418                     	;# 
   936  0419                     	;# 
   937  041A                     	;# 
   938  041B                     	;# 
   939  041C                     	;# 
   940  041D                     	;# 
   941  041E                     	;# 
   942  041F                     	;# 
   943  0498                     	;# 
   944  0498                     	;# 
   945  0499                     	;# 
   946  049A                     	;# 
   947  049B                     	;# 
   948  049B                     	;# 
   949  049C                     	;# 
   950  049D                     	;# 
   951  049E                     	;# 
   952  049F                     	;# 
   953  0617                     	;# 
   954  0618                     	;# 
   955  0619                     	;# 
   956  0619                     	;# 
   957  061A                     	;# 
   958  061B                     	;# 
   959  061C                     	;# 
   960  061C                     	;# 
   961  061F                     	;# 
   962  0691                     	;# 
   963  0692                     	;# 
   964  0693                     	;# 
   965  0694                     	;# 
   966  0695                     	;# 
   967  0696                     	;# 
   968  0697                     	;# 
   969  0698                     	;# 
   970  0699                     	;# 
   971  0711                     	;# 
   972  0712                     	;# 
   973  0713                     	;# 
   974  0714                     	;# 
   975  0715                     	;# 
   976  0716                     	;# 
   977  0717                     	;# 
   978  0718                     	;# 
   979  0719                     	;# 
   980  0891                     	;# 
   981  0891                     	;# 
   982  0891                     	;# 
   983  0891                     	;# 
   984  0891                     	;# 
   985  0891                     	;# 
   986  0892                     	;# 
   987  0892                     	;# 
   988  0892                     	;# 
   989  0893                     	;# 
   990  0893                     	;# 
   991  0893                     	;# 
   992  0893                     	;# 
   993  0893                     	;# 
   994  0893                     	;# 
   995  0894                     	;# 
   996  0894                     	;# 
   997  0894                     	;# 
   998  0895                     	;# 
   999  0895                     	;# 
  1000  0895                     	;# 
  1001  0896                     	;# 
  1002  0896                     	;# 
  1003  0896                     	;# 
  1004  089B                     	;# 
  1005  0911                     	;# 
  1006  0912                     	;# 
  1007  0913                     	;# 
  1008  0914                     	;# 
  1009  0915                     	;# 
  1010  0916                     	;# 
  1011  0918                     	;# 
  1012  0919                     	;# 
  1013  091A                     	;# 
  1014  091B                     	;# 
  1015  091C                     	;# 
  1016  091D                     	;# 
  1017  091E                     	;# 
  1018  091F                     	;# 
  1019  0E0F                     	;# 
  1020  0E10                     	;# 
  1021  0E11                     	;# 
  1022  0E12                     	;# 
  1023  0E13                     	;# 
  1024  0E14                     	;# 
  1025  0E15                     	;# 
  1026  0E16                     	;# 
  1027  0E17                     	;# 
  1028  0E18                     	;# 
  1029  0E19                     	;# 
  1030  0E1A                     	;# 
  1031  0E1B                     	;# 
  1032  0E1C                     	;# 
  1033  0E1D                     	;# 
  1034  0E1E                     	;# 
  1035  0E1F                     	;# 
  1036  0E20                     	;# 
  1037  0E21                     	;# 
  1038  0E22                     	;# 
  1039  0E24                     	;# 
  1040  0E25                     	;# 
  1041  0E28                     	;# 
  1042  0E29                     	;# 
  1043  0E2A                     	;# 
  1044  0E2B                     	;# 
  1045  0E2C                     	;# 
  1046  0E2D                     	;# 
  1047  0E2E                     	;# 
  1048  0E2F                     	;# 
  1049  0E90                     	;# 
  1050  0E91                     	;# 
  1051  0E92                     	;# 
  1052  0E94                     	;# 
  1053  0E95                     	;# 
  1054  0EA0                     	;# 
  1055  0EA1                     	;# 
  1056  0EA2                     	;# 
  1057  0EA3                     	;# 
  1058  0EA4                     	;# 
  1059  0EA5                     	;# 
  1060  0F0F                     	;# 
  1061  0F10                     	;# 
  1062  0F11                     	;# 
  1063  0F12                     	;# 
  1064  0F13                     	;# 
  1065  0F14                     	;# 
  1066  0F15                     	;# 
  1067  0F16                     	;# 
  1068  0F17                     	;# 
  1069  0F18                     	;# 
  1070  0F19                     	;# 
  1071  0F1A                     	;# 
  1072  0F1B                     	;# 
  1073  0F1C                     	;# 
  1074  0F1D                     	;# 
  1075  0F1E                     	;# 
  1076  0F1F                     	;# 
  1077  0F20                     	;# 
  1078  0F21                     	;# 
  1079  0F22                     	;# 
  1080  0F23                     	;# 
  1081  0F24                     	;# 
  1082  0F25                     	;# 
  1083  0F26                     	;# 
  1084  0F27                     	;# 
  1085  0F28                     	;# 
  1086  0F29                     	;# 
  1087  0F2A                     	;# 
  1088  0F2B                     	;# 
  1089  0F2C                     	;# 
  1090  0F2D                     	;# 
  1091  0F2E                     	;# 
  1092  0F2F                     	;# 
  1093  0F30                     	;# 
  1094  0F31                     	;# 
  1095  0F32                     	;# 
  1096  0F33                     	;# 
  1097  0F34                     	;# 
  1098  0F35                     	;# 
  1099  0F36                     	;# 
  1100  0F37                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000E                     	;# 
  1126  0010                     	;# 
  1127  0011                     	;# 
  1128  0012                     	;# 
  1129  0013                     	;# 
  1130  0014                     	;# 
  1131  0015                     	;# 
  1132  0015                     	;# 
  1133  0016                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  008C                     	;# 
  1146  008E                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0094                     	;# 
  1152  0097                     	;# 
  1153  009B                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  010C                     	;# 
  1160  010E                     	;# 
  1161  0111                     	;# 
  1162  0112                     	;# 
  1163  0113                     	;# 
  1164  0114                     	;# 
  1165  0115                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  0118                     	;# 
  1169  0119                     	;# 
  1170  018C                     	;# 
  1171  018E                     	;# 
  1172  0199                     	;# 
  1173  0199                     	;# 
  1174  0199                     	;# 
  1175  019A                     	;# 
  1176  019A                     	;# 
  1177  019A                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  019C                     	;# 
  1185  019C                     	;# 
  1186  019D                     	;# 
  1187  019D                     	;# 
  1188  019D                     	;# 
  1189  019E                     	;# 
  1190  019E                     	;# 
  1191  019E                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  019F                     	;# 
  1196  019F                     	;# 
  1197  020C                     	;# 
  1198  020E                     	;# 
  1199  0211                     	;# 
  1200  0211                     	;# 
  1201  0212                     	;# 
  1202  0212                     	;# 
  1203  0213                     	;# 
  1204  0213                     	;# 
  1205  0214                     	;# 
  1206  0214                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0215                     	;# 
  1211  0216                     	;# 
  1212  0216                     	;# 
  1213  0217                     	;# 
  1214  0217                     	;# 
  1215  0219                     	;# 
  1216  021A                     	;# 
  1217  021B                     	;# 
  1218  021C                     	;# 
  1219  021D                     	;# 
  1220  021D                     	;# 
  1221  021E                     	;# 
  1222  021F                     	;# 
  1223  028C                     	;# 
  1224  028E                     	;# 
  1225  0291                     	;# 
  1226  0291                     	;# 
  1227  0292                     	;# 
  1228  0293                     	;# 
  1229  0294                     	;# 
  1230  0295                     	;# 
  1231  0295                     	;# 
  1232  0296                     	;# 
  1233  0297                     	;# 
  1234  0298                     	;# 
  1235  029F                     	;# 
  1236  030C                     	;# 
  1237  030E                     	;# 
  1238  0311                     	;# 
  1239  0311                     	;# 
  1240  0312                     	;# 
  1241  0313                     	;# 
  1242  0314                     	;# 
  1243  0315                     	;# 
  1244  0315                     	;# 
  1245  0316                     	;# 
  1246  0317                     	;# 
  1247  0318                     	;# 
  1248  038C                     	;# 
  1249  038E                     	;# 
  1250  0391                     	;# 
  1251  0392                     	;# 
  1252  0393                     	;# 
  1253  0397                     	;# 
  1254  0398                     	;# 
  1255  0399                     	;# 
  1256  039A                     	;# 
  1257  039C                     	;# 
  1258  039D                     	;# 
  1259  039E                     	;# 
  1260  039F                     	;# 
  1261  0411                     	;# 
  1262  0411                     	;# 
  1263  0412                     	;# 
  1264  0413                     	;# 
  1265  0414                     	;# 
  1266  0415                     	;# 
  1267  0416                     	;# 
  1268  0417                     	;# 
  1269  0418                     	;# 
  1270  0418                     	;# 
  1271  0419                     	;# 
  1272  041A                     	;# 
  1273  041B                     	;# 
  1274  041C                     	;# 
  1275  041D                     	;# 
  1276  041E                     	;# 
  1277  041F                     	;# 
  1278  0498                     	;# 
  1279  0498                     	;# 
  1280  0499                     	;# 
  1281  049A                     	;# 
  1282  049B                     	;# 
  1283  049B                     	;# 
  1284  049C                     	;# 
  1285  049D                     	;# 
  1286  049E                     	;# 
  1287  049F                     	;# 
  1288  0617                     	;# 
  1289  0618                     	;# 
  1290  0619                     	;# 
  1291  0619                     	;# 
  1292  061A                     	;# 
  1293  061B                     	;# 
  1294  061C                     	;# 
  1295  061C                     	;# 
  1296  061F                     	;# 
  1297  0691                     	;# 
  1298  0692                     	;# 
  1299  0693                     	;# 
  1300  0694                     	;# 
  1301  0695                     	;# 
  1302  0696                     	;# 
  1303  0697                     	;# 
  1304  0698                     	;# 
  1305  0699                     	;# 
  1306  0711                     	;# 
  1307  0712                     	;# 
  1308  0713                     	;# 
  1309  0714                     	;# 
  1310  0715                     	;# 
  1311  0716                     	;# 
  1312  0717                     	;# 
  1313  0718                     	;# 
  1314  0719                     	;# 
  1315  0891                     	;# 
  1316  0891                     	;# 
  1317  0891                     	;# 
  1318  0891                     	;# 
  1319  0891                     	;# 
  1320  0891                     	;# 
  1321  0892                     	;# 
  1322  0892                     	;# 
  1323  0892                     	;# 
  1324  0893                     	;# 
  1325  0893                     	;# 
  1326  0893                     	;# 
  1327  0893                     	;# 
  1328  0893                     	;# 
  1329  0893                     	;# 
  1330  0894                     	;# 
  1331  0894                     	;# 
  1332  0894                     	;# 
  1333  0895                     	;# 
  1334  0895                     	;# 
  1335  0895                     	;# 
  1336  0896                     	;# 
  1337  0896                     	;# 
  1338  0896                     	;# 
  1339  089B                     	;# 
  1340  0911                     	;# 
  1341  0912                     	;# 
  1342  0913                     	;# 
  1343  0914                     	;# 
  1344  0915                     	;# 
  1345  0916                     	;# 
  1346  0918                     	;# 
  1347  0919                     	;# 
  1348  091A                     	;# 
  1349  091B                     	;# 
  1350  091C                     	;# 
  1351  091D                     	;# 
  1352  091E                     	;# 
  1353  091F                     	;# 
  1354  0E0F                     	;# 
  1355  0E10                     	;# 
  1356  0E11                     	;# 
  1357  0E12                     	;# 
  1358  0E13                     	;# 
  1359  0E14                     	;# 
  1360  0E15                     	;# 
  1361  0E16                     	;# 
  1362  0E17                     	;# 
  1363  0E18                     	;# 
  1364  0E19                     	;# 
  1365  0E1A                     	;# 
  1366  0E1B                     	;# 
  1367  0E1C                     	;# 
  1368  0E1D                     	;# 
  1369  0E1E                     	;# 
  1370  0E1F                     	;# 
  1371  0E20                     	;# 
  1372  0E21                     	;# 
  1373  0E22                     	;# 
  1374  0E24                     	;# 
  1375  0E25                     	;# 
  1376  0E28                     	;# 
  1377  0E29                     	;# 
  1378  0E2A                     	;# 
  1379  0E2B                     	;# 
  1380  0E2C                     	;# 
  1381  0E2D                     	;# 
  1382  0E2E                     	;# 
  1383  0E2F                     	;# 
  1384  0E90                     	;# 
  1385  0E91                     	;# 
  1386  0E92                     	;# 
  1387  0E94                     	;# 
  1388  0E95                     	;# 
  1389  0EA0                     	;# 
  1390  0EA1                     	;# 
  1391  0EA2                     	;# 
  1392  0EA3                     	;# 
  1393  0EA4                     	;# 
  1394  0EA5                     	;# 
  1395  0F0F                     	;# 
  1396  0F10                     	;# 
  1397  0F11                     	;# 
  1398  0F12                     	;# 
  1399  0F13                     	;# 
  1400  0F14                     	;# 
  1401  0F15                     	;# 
  1402  0F16                     	;# 
  1403  0F17                     	;# 
  1404  0F18                     	;# 
  1405  0F19                     	;# 
  1406  0F1A                     	;# 
  1407  0F1B                     	;# 
  1408  0F1C                     	;# 
  1409  0F1D                     	;# 
  1410  0F1E                     	;# 
  1411  0F1F                     	;# 
  1412  0F20                     	;# 
  1413  0F21                     	;# 
  1414  0F22                     	;# 
  1415  0F23                     	;# 
  1416  0F24                     	;# 
  1417  0F25                     	;# 
  1418  0F26                     	;# 
  1419  0F27                     	;# 
  1420  0F28                     	;# 
  1421  0F29                     	;# 
  1422  0F2A                     	;# 
  1423  0F2B                     	;# 
  1424  0F2C                     	;# 
  1425  0F2D                     	;# 
  1426  0F2E                     	;# 
  1427  0F2F                     	;# 
  1428  0F30                     	;# 
  1429  0F31                     	;# 
  1430  0F32                     	;# 
  1431  0F33                     	;# 
  1432  0F34                     	;# 
  1433  0F35                     	;# 
  1434  0F36                     	;# 
  1435  0F37                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447  0000                     	;# 
  1448  0001                     	;# 
  1449  0002                     	;# 
  1450  0003                     	;# 
  1451  0004                     	;# 
  1452  0005                     	;# 
  1453  0006                     	;# 
  1454  0007                     	;# 
  1455  0008                     	;# 
  1456  0009                     	;# 
  1457  000A                     	;# 
  1458  000B                     	;# 
  1459  000C                     	;# 
  1460  000E                     	;# 
  1461  0010                     	;# 
  1462  0011                     	;# 
  1463  0012                     	;# 
  1464  0013                     	;# 
  1465  0014                     	;# 
  1466  0015                     	;# 
  1467  0015                     	;# 
  1468  0016                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  0019                     	;# 
  1474  001A                     	;# 
  1475  001B                     	;# 
  1476  001C                     	;# 
  1477  001D                     	;# 
  1478  001E                     	;# 
  1479  001F                     	;# 
  1480  008C                     	;# 
  1481  008E                     	;# 
  1482  0090                     	;# 
  1483  0091                     	;# 
  1484  0092                     	;# 
  1485  0093                     	;# 
  1486  0094                     	;# 
  1487  0097                     	;# 
  1488  009B                     	;# 
  1489  009B                     	;# 
  1490  009C                     	;# 
  1491  009D                     	;# 
  1492  009E                     	;# 
  1493  009F                     	;# 
  1494  010C                     	;# 
  1495  010E                     	;# 
  1496  0111                     	;# 
  1497  0112                     	;# 
  1498  0113                     	;# 
  1499  0114                     	;# 
  1500  0115                     	;# 
  1501  0116                     	;# 
  1502  0117                     	;# 
  1503  0118                     	;# 
  1504  0119                     	;# 
  1505  018C                     	;# 
  1506  018E                     	;# 
  1507  0199                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  019A                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019C                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019D                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019E                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  020C                     	;# 
  1533  020E                     	;# 
  1534  0211                     	;# 
  1535  0211                     	;# 
  1536  0212                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0213                     	;# 
  1540  0214                     	;# 
  1541  0214                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0216                     	;# 
  1547  0216                     	;# 
  1548  0217                     	;# 
  1549  0217                     	;# 
  1550  0219                     	;# 
  1551  021A                     	;# 
  1552  021B                     	;# 
  1553  021C                     	;# 
  1554  021D                     	;# 
  1555  021D                     	;# 
  1556  021E                     	;# 
  1557  021F                     	;# 
  1558  028C                     	;# 
  1559  028E                     	;# 
  1560  0291                     	;# 
  1561  0291                     	;# 
  1562  0292                     	;# 
  1563  0293                     	;# 
  1564  0294                     	;# 
  1565  0295                     	;# 
  1566  0295                     	;# 
  1567  0296                     	;# 
  1568  0297                     	;# 
  1569  0298                     	;# 
  1570  029F                     	;# 
  1571  030C                     	;# 
  1572  030E                     	;# 
  1573  0311                     	;# 
  1574  0311                     	;# 
  1575  0312                     	;# 
  1576  0313                     	;# 
  1577  0314                     	;# 
  1578  0315                     	;# 
  1579  0315                     	;# 
  1580  0316                     	;# 
  1581  0317                     	;# 
  1582  0318                     	;# 
  1583  038C                     	;# 
  1584  038E                     	;# 
  1585  0391                     	;# 
  1586  0392                     	;# 
  1587  0393                     	;# 
  1588  0397                     	;# 
  1589  0398                     	;# 
  1590  0399                     	;# 
  1591  039A                     	;# 
  1592  039C                     	;# 
  1593  039D                     	;# 
  1594  039E                     	;# 
  1595  039F                     	;# 
  1596  0411                     	;# 
  1597  0411                     	;# 
  1598  0412                     	;# 
  1599  0413                     	;# 
  1600  0414                     	;# 
  1601  0415                     	;# 
  1602  0416                     	;# 
  1603  0417                     	;# 
  1604  0418                     	;# 
  1605  0418                     	;# 
  1606  0419                     	;# 
  1607  041A                     	;# 
  1608  041B                     	;# 
  1609  041C                     	;# 
  1610  041D                     	;# 
  1611  041E                     	;# 
  1612  041F                     	;# 
  1613  0498                     	;# 
  1614  0498                     	;# 
  1615  0499                     	;# 
  1616  049A                     	;# 
  1617  049B                     	;# 
  1618  049B                     	;# 
  1619  049C                     	;# 
  1620  049D                     	;# 
  1621  049E                     	;# 
  1622  049F                     	;# 
  1623  0617                     	;# 
  1624  0618                     	;# 
  1625  0619                     	;# 
  1626  0619                     	;# 
  1627  061A                     	;# 
  1628  061B                     	;# 
  1629  061C                     	;# 
  1630  061C                     	;# 
  1631  061F                     	;# 
  1632  0691                     	;# 
  1633  0692                     	;# 
  1634  0693                     	;# 
  1635  0694                     	;# 
  1636  0695                     	;# 
  1637  0696                     	;# 
  1638  0697                     	;# 
  1639  0698                     	;# 
  1640  0699                     	;# 
  1641  0711                     	;# 
  1642  0712                     	;# 
  1643  0713                     	;# 
  1644  0714                     	;# 
  1645  0715                     	;# 
  1646  0716                     	;# 
  1647  0717                     	;# 
  1648  0718                     	;# 
  1649  0719                     	;# 
  1650  0891                     	;# 
  1651  0891                     	;# 
  1652  0891                     	;# 
  1653  0891                     	;# 
  1654  0891                     	;# 
  1655  0891                     	;# 
  1656  0892                     	;# 
  1657  0892                     	;# 
  1658  0892                     	;# 
  1659  0893                     	;# 
  1660  0893                     	;# 
  1661  0893                     	;# 
  1662  0893                     	;# 
  1663  0893                     	;# 
  1664  0893                     	;# 
  1665  0894                     	;# 
  1666  0894                     	;# 
  1667  0894                     	;# 
  1668  0895                     	;# 
  1669  0895                     	;# 
  1670  0895                     	;# 
  1671  0896                     	;# 
  1672  0896                     	;# 
  1673  0896                     	;# 
  1674  089B                     	;# 
  1675  0911                     	;# 
  1676  0912                     	;# 
  1677  0913                     	;# 
  1678  0914                     	;# 
  1679  0915                     	;# 
  1680  0916                     	;# 
  1681  0918                     	;# 
  1682  0919                     	;# 
  1683  091A                     	;# 
  1684  091B                     	;# 
  1685  091C                     	;# 
  1686  091D                     	;# 
  1687  091E                     	;# 
  1688  091F                     	;# 
  1689  0E0F                     	;# 
  1690  0E10                     	;# 
  1691  0E11                     	;# 
  1692  0E12                     	;# 
  1693  0E13                     	;# 
  1694  0E14                     	;# 
  1695  0E15                     	;# 
  1696  0E16                     	;# 
  1697  0E17                     	;# 
  1698  0E18                     	;# 
  1699  0E19                     	;# 
  1700  0E1A                     	;# 
  1701  0E1B                     	;# 
  1702  0E1C                     	;# 
  1703  0E1D                     	;# 
  1704  0E1E                     	;# 
  1705  0E1F                     	;# 
  1706  0E20                     	;# 
  1707  0E21                     	;# 
  1708  0E22                     	;# 
  1709  0E24                     	;# 
  1710  0E25                     	;# 
  1711  0E28                     	;# 
  1712  0E29                     	;# 
  1713  0E2A                     	;# 
  1714  0E2B                     	;# 
  1715  0E2C                     	;# 
  1716  0E2D                     	;# 
  1717  0E2E                     	;# 
  1718  0E2F                     	;# 
  1719  0E90                     	;# 
  1720  0E91                     	;# 
  1721  0E92                     	;# 
  1722  0E94                     	;# 
  1723  0E95                     	;# 
  1724  0EA0                     	;# 
  1725  0EA1                     	;# 
  1726  0EA2                     	;# 
  1727  0EA3                     	;# 
  1728  0EA4                     	;# 
  1729  0EA5                     	;# 
  1730  0F0F                     	;# 
  1731  0F10                     	;# 
  1732  0F11                     	;# 
  1733  0F12                     	;# 
  1734  0F13                     	;# 
  1735  0F14                     	;# 
  1736  0F15                     	;# 
  1737  0F16                     	;# 
  1738  0F17                     	;# 
  1739  0F18                     	;# 
  1740  0F19                     	;# 
  1741  0F1A                     	;# 
  1742  0F1B                     	;# 
  1743  0F1C                     	;# 
  1744  0F1D                     	;# 
  1745  0F1E                     	;# 
  1746  0F1F                     	;# 
  1747  0F20                     	;# 
  1748  0F21                     	;# 
  1749  0F22                     	;# 
  1750  0F23                     	;# 
  1751  0F24                     	;# 
  1752  0F25                     	;# 
  1753  0F26                     	;# 
  1754  0F27                     	;# 
  1755  0F28                     	;# 
  1756  0F29                     	;# 
  1757  0F2A                     	;# 
  1758  0F2B                     	;# 
  1759  0F2C                     	;# 
  1760  0F2D                     	;# 
  1761  0F2E                     	;# 
  1762  0F2F                     	;# 
  1763  0F30                     	;# 
  1764  0F31                     	;# 
  1765  0F32                     	;# 
  1766  0F33                     	;# 
  1767  0F34                     	;# 
  1768  0F35                     	;# 
  1769  0F36                     	;# 
  1770  0F37                     	;# 
  1771  0FE4                     	;# 
  1772  0FE5                     	;# 
  1773  0FE6                     	;# 
  1774  0FE7                     	;# 
  1775  0FE8                     	;# 
  1776  0FE9                     	;# 
  1777  0FEA                     	;# 
  1778  0FEB                     	;# 
  1779  0FED                     	;# 
  1780  0FEE                     	;# 
  1781  0FEF                     	;# 
  1782  0000                     	;# 
  1783  0001                     	;# 
  1784  0002                     	;# 
  1785  0003                     	;# 
  1786  0004                     	;# 
  1787  0005                     	;# 
  1788  0006                     	;# 
  1789  0007                     	;# 
  1790  0008                     	;# 
  1791  0009                     	;# 
  1792  000A                     	;# 
  1793  000B                     	;# 
  1794  000C                     	;# 
  1795  000E                     	;# 
  1796  0010                     	;# 
  1797  0011                     	;# 
  1798  0012                     	;# 
  1799  0013                     	;# 
  1800  0014                     	;# 
  1801  0015                     	;# 
  1802  0015                     	;# 
  1803  0016                     	;# 
  1804  0016                     	;# 
  1805  0017                     	;# 
  1806  0018                     	;# 
  1807  0019                     	;# 
  1808  0019                     	;# 
  1809  001A                     	;# 
  1810  001B                     	;# 
  1811  001C                     	;# 
  1812  001D                     	;# 
  1813  001E                     	;# 
  1814  001F                     	;# 
  1815  008C                     	;# 
  1816  008E                     	;# 
  1817  0090                     	;# 
  1818  0091                     	;# 
  1819  0092                     	;# 
  1820  0093                     	;# 
  1821  0094                     	;# 
  1822  0097                     	;# 
  1823  009B                     	;# 
  1824  009B                     	;# 
  1825  009C                     	;# 
  1826  009D                     	;# 
  1827  009E                     	;# 
  1828  009F                     	;# 
  1829  010C                     	;# 
  1830  010E                     	;# 
  1831  0111                     	;# 
  1832  0112                     	;# 
  1833  0113                     	;# 
  1834  0114                     	;# 
  1835  0115                     	;# 
  1836  0116                     	;# 
  1837  0117                     	;# 
  1838  0118                     	;# 
  1839  0119                     	;# 
  1840  018C                     	;# 
  1841  018E                     	;# 
  1842  0199                     	;# 
  1843  0199                     	;# 
  1844  0199                     	;# 
  1845  019A                     	;# 
  1846  019A                     	;# 
  1847  019A                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019B                     	;# 
  1852  019B                     	;# 
  1853  019C                     	;# 
  1854  019C                     	;# 
  1855  019C                     	;# 
  1856  019D                     	;# 
  1857  019D                     	;# 
  1858  019D                     	;# 
  1859  019E                     	;# 
  1860  019E                     	;# 
  1861  019E                     	;# 
  1862  019F                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  019F                     	;# 
  1866  019F                     	;# 
  1867  020C                     	;# 
  1868  020E                     	;# 
  1869  0211                     	;# 
  1870  0211                     	;# 
  1871  0212                     	;# 
  1872  0212                     	;# 
  1873  0213                     	;# 
  1874  0213                     	;# 
  1875  0214                     	;# 
  1876  0214                     	;# 
  1877  0215                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0216                     	;# 
  1882  0216                     	;# 
  1883  0217                     	;# 
  1884  0217                     	;# 
  1885  0219                     	;# 
  1886  021A                     	;# 
  1887  021B                     	;# 
  1888  021C                     	;# 
  1889  021D                     	;# 
  1890  021D                     	;# 
  1891  021E                     	;# 
  1892  021F                     	;# 
  1893  028C                     	;# 
  1894  028E                     	;# 
  1895  0291                     	;# 
  1896  0291                     	;# 
  1897  0292                     	;# 
  1898  0293                     	;# 
  1899  0294                     	;# 
  1900  0295                     	;# 
  1901  0295                     	;# 
  1902  0296                     	;# 
  1903  0297                     	;# 
  1904  0298                     	;# 
  1905  029F                     	;# 
  1906  030C                     	;# 
  1907  030E                     	;# 
  1908  0311                     	;# 
  1909  0311                     	;# 
  1910  0312                     	;# 
  1911  0313                     	;# 
  1912  0314                     	;# 
  1913  0315                     	;# 
  1914  0315                     	;# 
  1915  0316                     	;# 
  1916  0317                     	;# 
  1917  0318                     	;# 
  1918  038C                     	;# 
  1919  038E                     	;# 
  1920  0391                     	;# 
  1921  0392                     	;# 
  1922  0393                     	;# 
  1923  0397                     	;# 
  1924  0398                     	;# 
  1925  0399                     	;# 
  1926  039A                     	;# 
  1927  039C                     	;# 
  1928  039D                     	;# 
  1929  039E                     	;# 
  1930  039F                     	;# 
  1931  0411                     	;# 
  1932  0411                     	;# 
  1933  0412                     	;# 
  1934  0413                     	;# 
  1935  0414                     	;# 
  1936  0415                     	;# 
  1937  0416                     	;# 
  1938  0417                     	;# 
  1939  0418                     	;# 
  1940  0418                     	;# 
  1941  0419                     	;# 
  1942  041A                     	;# 
  1943  041B                     	;# 
  1944  041C                     	;# 
  1945  041D                     	;# 
  1946  041E                     	;# 
  1947  041F                     	;# 
  1948  0498                     	;# 
  1949  0498                     	;# 
  1950  0499                     	;# 
  1951  049A                     	;# 
  1952  049B                     	;# 
  1953  049B                     	;# 
  1954  049C                     	;# 
  1955  049D                     	;# 
  1956  049E                     	;# 
  1957  049F                     	;# 
  1958  0617                     	;# 
  1959  0618                     	;# 
  1960  0619                     	;# 
  1961  0619                     	;# 
  1962  061A                     	;# 
  1963  061B                     	;# 
  1964  061C                     	;# 
  1965  061C                     	;# 
  1966  061F                     	;# 
  1967  0691                     	;# 
  1968  0692                     	;# 
  1969  0693                     	;# 
  1970  0694                     	;# 
  1971  0695                     	;# 
  1972  0696                     	;# 
  1973  0697                     	;# 
  1974  0698                     	;# 
  1975  0699                     	;# 
  1976  0711                     	;# 
  1977  0712                     	;# 
  1978  0713                     	;# 
  1979  0714                     	;# 
  1980  0715                     	;# 
  1981  0716                     	;# 
  1982  0717                     	;# 
  1983  0718                     	;# 
  1984  0719                     	;# 
  1985  0891                     	;# 
  1986  0891                     	;# 
  1987  0891                     	;# 
  1988  0891                     	;# 
  1989  0891                     	;# 
  1990  0891                     	;# 
  1991  0892                     	;# 
  1992  0892                     	;# 
  1993  0892                     	;# 
  1994  0893                     	;# 
  1995  0893                     	;# 
  1996  0893                     	;# 
  1997  0893                     	;# 
  1998  0893                     	;# 
  1999  0893                     	;# 
  2000  0894                     	;# 
  2001  0894                     	;# 
  2002  0894                     	;# 
  2003  0895                     	;# 
  2004  0895                     	;# 
  2005  0895                     	;# 
  2006  0896                     	;# 
  2007  0896                     	;# 
  2008  0896                     	;# 
  2009  089B                     	;# 
  2010  0911                     	;# 
  2011  0912                     	;# 
  2012  0913                     	;# 
  2013  0914                     	;# 
  2014  0915                     	;# 
  2015  0916                     	;# 
  2016  0918                     	;# 
  2017  0919                     	;# 
  2018  091A                     	;# 
  2019  091B                     	;# 
  2020  091C                     	;# 
  2021  091D                     	;# 
  2022  091E                     	;# 
  2023  091F                     	;# 
  2024  0E0F                     	;# 
  2025  0E10                     	;# 
  2026  0E11                     	;# 
  2027  0E12                     	;# 
  2028  0E13                     	;# 
  2029  0E14                     	;# 
  2030  0E15                     	;# 
  2031  0E16                     	;# 
  2032  0E17                     	;# 
  2033  0E18                     	;# 
  2034  0E19                     	;# 
  2035  0E1A                     	;# 
  2036  0E1B                     	;# 
  2037  0E1C                     	;# 
  2038  0E1D                     	;# 
  2039  0E1E                     	;# 
  2040  0E1F                     	;# 
  2041  0E20                     	;# 
  2042  0E21                     	;# 
  2043  0E22                     	;# 
  2044  0E24                     	;# 
  2045  0E25                     	;# 
  2046  0E28                     	;# 
  2047  0E29                     	;# 
  2048  0E2A                     	;# 
  2049  0E2B                     	;# 
  2050  0E2C                     	;# 
  2051  0E2D                     	;# 
  2052  0E2E                     	;# 
  2053  0E2F                     	;# 
  2054  0E90                     	;# 
  2055  0E91                     	;# 
  2056  0E92                     	;# 
  2057  0E94                     	;# 
  2058  0E95                     	;# 
  2059  0EA0                     	;# 
  2060  0EA1                     	;# 
  2061  0EA2                     	;# 
  2062  0EA3                     	;# 
  2063  0EA4                     	;# 
  2064  0EA5                     	;# 
  2065  0F0F                     	;# 
  2066  0F10                     	;# 
  2067  0F11                     	;# 
  2068  0F12                     	;# 
  2069  0F13                     	;# 
  2070  0F14                     	;# 
  2071  0F15                     	;# 
  2072  0F16                     	;# 
  2073  0F17                     	;# 
  2074  0F18                     	;# 
  2075  0F19                     	;# 
  2076  0F1A                     	;# 
  2077  0F1B                     	;# 
  2078  0F1C                     	;# 
  2079  0F1D                     	;# 
  2080  0F1E                     	;# 
  2081  0F1F                     	;# 
  2082  0F20                     	;# 
  2083  0F21                     	;# 
  2084  0F22                     	;# 
  2085  0F23                     	;# 
  2086  0F24                     	;# 
  2087  0F25                     	;# 
  2088  0F26                     	;# 
  2089  0F27                     	;# 
  2090  0F28                     	;# 
  2091  0F29                     	;# 
  2092  0F2A                     	;# 
  2093  0F2B                     	;# 
  2094  0F2C                     	;# 
  2095  0F2D                     	;# 
  2096  0F2E                     	;# 
  2097  0F2F                     	;# 
  2098  0F30                     	;# 
  2099  0F31                     	;# 
  2100  0F32                     	;# 
  2101  0F33                     	;# 
  2102  0F34                     	;# 
  2103  0F35                     	;# 
  2104  0F36                     	;# 
  2105  0F37                     	;# 
  2106  0FE4                     	;# 
  2107  0FE5                     	;# 
  2108  0FE6                     	;# 
  2109  0FE7                     	;# 
  2110  0FE8                     	;# 
  2111  0FE9                     	;# 
  2112  0FEA                     	;# 
  2113  0FEB                     	;# 
  2114  0FED                     	;# 
  2115  0FEE                     	;# 
  2116  0FEF                     	;# 
  2117  1FE0                     _romArray_absaddr	set	8160
  2118                           
  2119                           	psect	stringtext1
  2120  1000                     __pstringtext1:	
  2121  1000                     _resetRomData:	
  2122  1000  34AA               	retlw	170
  2123  1001  3455               	retlw	85
  2124  1002  346E               	retlw	110
  2125  1003  3463               	retlw	99
  2126  1004  346F               	retlw	111
  2127  1005  346E               	retlw	110
  2128  1006  3466               	retlw	102
  2129  1007  3469               	retlw	105
  2130  1008  3467               	retlw	103
  2131  1009  3475               	retlw	117
  2132  100A  3472               	retlw	114
  2133  100B  3465               	retlw	101
  2134  100C  3464               	retlw	100
  2135  100D  3400               	retlw	0
  2136  100E  3400               	retlw	0
  2137  100F  3400               	retlw	0
  2138  1010  3400               	retlw	0
  2139  1011  3400               	retlw	0
  2140  1012  3400               	retlw	0
  2141  1013                     __end_of_resetRomData:	
  2142                           
  2143                           	psect	stringtext2
  2144  1013                     __pstringtext2:	
  2145  1013                     _n_ADDRESS_P0:	
  2146  1013  34AD               	retlw	173
  2147  1014  3487               	retlw	135
  2148  1015  3466               	retlw	102
  2149  1016  34BC               	retlw	188
  2150  1017  34BB               	retlw	187
  2151  1018                     __end_of_n_ADDRESS_P0:	
  2152                           
  2153                           	psect	stringtext3
  2154  103A                     __pstringtext3:	
  2155  103A                     _n_ADDRESS_MUL:	
  2156  103A  3421               	retlw	33
  2157  103B                     __end_of_n_ADDRESS_MUL:	
  2158  1FE0                     _romArray_absaddr	set	8160
  2159                           
  2160                           	psect	_romArray_text
  2161  1FE0                     __p_romArray_text:	
  2162  1FE0                     _romArray:	
  2163  1FE0  3400               	retlw	0
  2164  1FE1  3400               	retlw	0
  2165  1FE2  3400               	retlw	0
  2166  1FE3  3400               	retlw	0
  2167  1FE4  3400               	retlw	0
  2168  1FE5  3400               	retlw	0
  2169  1FE6  3400               	retlw	0
  2170  1FE7  3400               	retlw	0
  2171  1FE8  3400               	retlw	0
  2172  1FE9  3400               	retlw	0
  2173  1FEA  3400               	retlw	0
  2174  1FEB  3400               	retlw	0
  2175  1FEC  3400               	retlw	0
  2176  1FED  3400               	retlw	0
  2177  1FEE  3400               	retlw	0
  2178  1FEF  3400               	retlw	0
  2179  1FF0  3400               	retlw	0
  2180  1FF1  3400               	retlw	0
  2181  1FF2  3400               	retlw	0
  2182  1FF3  3400               	retlw	0
  2183  1FF4  3400               	retlw	0
  2184  1FF5  3400               	retlw	0
  2185  1FF6  3400               	retlw	0
  2186  1FF7  3400               	retlw	0
  2187  1FF8  3400               	retlw	0
  2188  1FF9  3400               	retlw	0
  2189  1FFA  3400               	retlw	0
  2190  1FFB  3400               	retlw	0
  2191  1FFC  3400               	retlw	0
  2192  1FFD  3400               	retlw	0
  2193  1FFE  3400               	retlw	0
  2194  1FFF  3400               	retlw	0
  2195  2000                     __end_of_romArray:	
  2196  0003                     _STATUSbits	set	3
  2197  0010                     _PIR0bits	set	16
  2198  000E                     _PORTCbits	set	14
  2199  000C                     _PORTAbits	set	12
  2200  000B                     _INTCONbits	set	11
  2201  0097                     _WDTCONbits	set	151
  2202  009E                     _ADCON1bits	set	158
  2203  009C                     _ADRESH	set	156
  2204  009B                     _ADRESL	set	155
  2205  009D                     _ADCON0bits	set	157
  2206  0090                     _PIE0bits	set	144
  2207  008E                     _TRISCbits	set	142
  2208  008C                     _TRISAbits	set	140
  2209  0117                     _FVRCONbits	set	279
  2210  018E                     _ANSELCbits	set	398
  2211  018C                     _ANSELAbits	set	396
  2212  018E                     _ANSELC	set	398
  2213  018C                     _ANSELA	set	396
  2214  020C                     _WPUAbits	set	524
  2215  020E                     _WPUC	set	526
  2216  020C                     _WPUA	set	524
  2217  0211                     _SSP1BUF	set	529
  2218  0214                     _SSP1STATbits	set	532
  2219  0215                     _SSP1CON1bits	set	533
  2220  028E                     _ODCONC	set	654
  2221  028C                     _ODCONA	set	652
  2222  038E                     _INLVLC	set	910
  2223  038C                     _INLVLA	set	908
  2224  0894                     _PMDATH	set	2196
  2225  0893                     _PMDATL	set	2195
  2226  0896                     _PMCON2	set	2198
  2227  0895                     _PMCON1bits	set	2197
  2228  0892                     _PMADRH	set	2194
  2229  0891                     _PMADRL	set	2193
  2230  0895                     _PMCON1	set	2197
  2231  0919                     _OSCCON1bits	set	2329
  2232  0EA0                     _RC0PPSbits	set	3744
  2233  0EA2                     _RC2PPSbits	set	3746
  2234  0EA1                     _RC1PPSbits	set	3745
  2235                           
  2236                           	psect	stringtext4
  2237  1018                     __pstringtext4:	
  2238  1018                     STR_5:	
  2239  1018  3441               	retlw	65	;'A'
  2240  1019  344E               	retlw	78	;'N'
  2241  101A  3443               	retlw	67	;'C'
  2242  101B  3433               	retlw	51	;'3'
  2243  101C  3400               	retlw	0
  2244                           
  2245                           	psect	stringtext5
  2246  101D                     __pstringtext5:	
  2247  101D                     STR_7:	
  2248  101D  3454               	retlw	84	;'T'
  2249  101E  3445               	retlw	69	;'E'
  2250  101F  344D               	retlw	77	;'M'
  2251  1020  3450               	retlw	80	;'P'
  2252  1021  3400               	retlw	0
  2253                           
  2254                           	psect	stringtext6
  2255  1022                     __pstringtext6:	
  2256  1022                     STR_4:	
  2257  1022  3456               	retlw	86	;'V'
  2258  1023  3442               	retlw	66	;'B'
  2259  1024  3441               	retlw	65	;'A'
  2260  1025  3454               	retlw	84	;'T'
  2261  1026  3400               	retlw	0
  2262                           
  2263                           	psect	stringtext7
  2264  1027                     __pstringtext7:	
  2265  1027                     STR_9:	
  2266  1027  3442               	retlw	66	;'B'
  2267  1028  344F               	retlw	79	;'O'
  2268  1029  344F               	retlw	79	;'O'
  2269  102A  3454               	retlw	84	;'T'
  2270  102B  3400               	retlw	0
  2271                           
  2272                           	psect	stringtext8
  2273  102C                     __pstringtext8:	
  2274  102C                     STR_8:	
  2275  102C  3455               	retlw	85	;'U'
  2276  102D  3457               	retlw	87	;'W'
  2277  102E  3431               	retlw	49	;'1'
  2278  102F  3400               	retlw	0
  2279                           
  2280                           	psect	stringtext9
  2281  1030                     __pstringtext9:	
  2282  1030                     STR_3:	
  2283  1030  3444               	retlw	68	;'D'
  2284  1031  3442               	retlw	66	;'B'
  2285  1032  3447               	retlw	71	;'G'
  2286  1033  3400               	retlw	0
  2287                           
  2288                           	psect	stringtext10
  2289  1034                     __pstringtext10:	
  2290  1034                     STR_6:	
  2291  1034  3446               	retlw	70	;'F'
  2292  1035  3456               	retlw	86	;'V'
  2293  1036  3452               	retlw	82	;'R'
  2294  1037  3400               	retlw	0
  2295                           
  2296                           	psect	stringtext11
  2297  1038                     __pstringtext11:	
  2298  1038                     STR_1:	
  2299  1038  342F               	retlw	47	;'/'
  2300  1039  3400               	retlw	0
  2301                           
  2302                           	psect	stringtext12
  2303  0000                     __pstringtext12:	
  2304  1038                     
  2305                           ; #config settings
  2306  0000                     
  2307                           	psect	cinit
  2308  0011                     start_initialization:	
  2309  0011                     __initialization:	
  2310                           
  2311                           ; Clear objects allocated to BANK0
  2312  0011  0020               	movlb	0	; select bank0
  2313  0012  01DD               	clrf	__pbssBANK0& (0+127)
  2314  0013  01DE               	clrf	(__pbssBANK0+1)& (0+127)
  2315  0014  01DF               	clrf	(__pbssBANK0+2)& (0+127)
  2316                           
  2317                           ; Clear objects allocated to BANK1
  2318  0015  0021               	movlb	1	; select bank1
  2319  0016  01E2               	clrf	__pbssBANK1& (0+127)
  2320  0017  01E3               	clrf	(__pbssBANK1+1)& (0+127)
  2321                           
  2322                           ; Clear objects allocated to BANK2
  2323  0018  3020               	movlw	low __pbssBANK2
  2324  0019  0084               	movwf	4
  2325  001A  3001               	movlw	high __pbssBANK2
  2326  001B  0085               	movwf	5
  2327  001C  3034               	movlw	52
  2328  001D  318F  273B  3180   	fcall	clear_ram0
  2329                           
  2330                           ; Clear objects allocated to BANK3
  2331  0020  30A0               	movlw	low __pbssBANK3
  2332  0021  0084               	movwf	4
  2333  0022  3001               	movlw	high __pbssBANK3
  2334  0023  0085               	movwf	5
  2335  0024  3020               	movlw	32
  2336  0025  318F  273B         	fcall	clear_ram0
  2337  0027                     end_of_initialization:	
  2338                           ;End of C runtime variable initialization code
  2339                           
  2340  0027                     __end_of__initialization:	
  2341  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2342  0028  0020               	movlb	0
  2343  0029  3182  2A40         	ljmp	_main	;jump to C main() function
  2344                           
  2345                           	psect	bssBANK0
  2346  005D                     __pbssBANK0:	
  2347  005D                     _TXPacket:	
  2348  005D                     	ds	1
  2349  005E                     _sleepLoop:	
  2350  005E                     	ds	1
  2351  005F                     _nrf24l01:	
  2352  005F                     	ds	1
  2353                           
  2354                           	psect	bssBANK1
  2355  00E2                     __pbssBANK1:	
  2356  00E2                     _counter:	
  2357  00E2                     	ds	2
  2358                           
  2359                           	psect	bssBANK2
  2360  0120                     __pbssBANK2:	
  2361  0120                     _RXPacket:	
  2362  0120                     	ds	33
  2363  0141                     _romData:	
  2364  0141                     	ds	19
  2365                           
  2366                           	psect	bssBANK3
  2367  01A0                     __pbssBANK3:	
  2368  01A0                     _romHolder:	
  2369  01A0                     	ds	32
  2370                           
  2371                           	psect	clrtext
  2372  0F3B                     clear_ram0:	
  2373                           ;	Called with FSR0 containing the base address, and
  2374                           ;	WREG with the size to clear
  2375                           
  2376  0F3B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2377  0F3C                     clrloop0:	
  2378  0F3C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2379  0F3D  3101               	addfsr 0,1
  2380  0F3E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2381  0F3F  2F3C               	goto	clrloop0	;have we reached the end yet?
  2382  0F40  3400               	retlw	0	;all done for this memory range, return
  2383                           
  2384                           	psect	cstackBANK1
  2385  00A0                     __pcstackBANK1:	
  2386  00A0                     loop@Packet:	
  2387                           
  2388                           ; 33 bytes @ 0x0
  2389  00A0                     	ds	33
  2390  00C1                     main@Packet:	
  2391                           
  2392                           ; 33 bytes @ 0x21
  2393  00C1                     	ds	33
  2394                           
  2395                           	psect	cstackCOMMON
  2396  0070                     __pcstackCOMMON:	
  2397  0070                     ?_nrf24l01ISR:	
  2398  0070                     ?_nrf24l01SetRXMode:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ?_nrf24l01SendPacket:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_nrf24l01Init:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ?_flashRealod:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_flashUpdate:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?_nrf24l01CELow:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ??_nrf24l01CELow:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ?_nrf24l01CEHigh:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ??_nrf24l01CEHigh:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_nrf24l01CSLow:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ??_nrf24l01CSLow:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_nrf24l01CSHigh:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ??_nrf24l01CSHigh:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_nrf24l01InterfaceInit:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_nrf24l01SPISend:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ??_nrf24l01SPISend:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_nrf24l01SPIStart:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ??_nrf24l01SPIStart:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_nrf24l01SPIEnd:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ??_nrf24l01SPIEnd:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_enableInterrupts:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ??_enableInterrupts:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_exception:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_ISR:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_sleep:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ?_loop:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_main:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ?_nrf24l01CheckACK:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     ?_nrf24l01ReceivePacket:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     ?_nrf24l01InitRegisters:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     ?i1_flashWriteByte:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0070                     ?i1_flashUpdate:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0070                     ?i1_nrf24l01SetRXMode:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0070                     ?_strcmp:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?___wmul:	
  2501                           ; 2 bytes @ 0x0
  2502                           
  2503  0070                     ?i1_strlen:	
  2504                           ; 2 bytes @ 0x0
  2505                           
  2506  0070                     nrf24l01SPISend@data:	
  2507                           ; 2 bytes @ 0x0
  2508                           
  2509  0070                     enableInterrupts@enable:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     nrf24l01InitRegisters@isReciever:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     strcmp@s2:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     ___wmul@multiplier:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0070                     i1flashWriteByte@offset:	
  2522                           ; 2 bytes @ 0x0
  2523                           
  2524  0070                     i1strlen@s:	
  2525                           ; 2 bytes @ 0x0
  2526                           
  2527                           
  2528                           ; 2 bytes @ 0x0
  2529  0070                     	ds	1
  2530  0071                     ?i1_nrf24l01Send:	
  2531  0071                     i1nrf24l01Send@data:	
  2532                           ; 1 bytes @ 0x1
  2533                           
  2534                           
  2535                           ; 1 bytes @ 0x1
  2536  0071                     	ds	1
  2537  0072                     ??_strcmp:	
  2538  0072                     ??i1_nrf24l01Send:	
  2539                           ; 1 bytes @ 0x2
  2540                           
  2541  0072                     ??i1_strlen:	
  2542                           ; 1 bytes @ 0x2
  2543                           
  2544  0072                     ___wmul@multiplicand:	
  2545                           ; 1 bytes @ 0x2
  2546                           
  2547  0072                     i1flashWriteByte@data:	
  2548                           ; 2 bytes @ 0x2
  2549                           
  2550                           
  2551                           ; 2 bytes @ 0x2
  2552  0072                     	ds	1
  2553  0073                     strcmp@r:	
  2554  0073                     i1nrf24l01Send@command:	
  2555                           ; 1 bytes @ 0x3
  2556                           
  2557                           
  2558                           ; 1 bytes @ 0x3
  2559  0073                     	ds	1
  2560  0074                     ??___wmul:	
  2561  0074                     ??i1_flashWriteByte:	
  2562                           ; 1 bytes @ 0x4
  2563                           
  2564  0074                     ??i1_nrf24l01SetRXMode:	
  2565                           ; 1 bytes @ 0x4
  2566                           
  2567  0074                     strcmp@s1:	
  2568                           ; 1 bytes @ 0x4
  2569                           
  2570  0074                     ___wmul@product:	
  2571                           ; 1 bytes @ 0x4
  2572                           
  2573  0074                     i1flashWriteByte@address:	
  2574                           ; 2 bytes @ 0x4
  2575                           
  2576  0074                     i1strlen@cp:	
  2577                           ; 2 bytes @ 0x4
  2578                           
  2579                           
  2580                           ; 2 bytes @ 0x4
  2581  0074                     	ds	1
  2582  0075                     i1nrf24l01SetRXMode@config:	
  2583                           
  2584                           ; 1 bytes @ 0x5
  2585  0075                     	ds	1
  2586  0076                     ??i1_flashUpdate:	
  2587  0076                     ?i1_memset:	
  2588                           ; 1 bytes @ 0x6
  2589                           
  2590  0076                     i1nrf24l01SetRXMode@rxMode:	
  2591                           ; 1 bytes @ 0x6
  2592                           
  2593  0076                     i1memset@p1:	
  2594                           ; 1 bytes @ 0x6
  2595                           
  2596                           
  2597                           ; 2 bytes @ 0x6
  2598  0076                     	ds	1
  2599  0077                     ??_nrf24l01CheckACK:	
  2600                           
  2601                           ; 1 bytes @ 0x7
  2602  0077                     	ds	1
  2603  0078                     i1flashUpdate@i:	
  2604  0078                     i1memset@c:	
  2605                           ; 2 bytes @ 0x8
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x8
  2609  0078                     	ds	2
  2610  007A                     ??_exception:	
  2611  007A                     i1memset@n:	
  2612                           ; 1 bytes @ 0xA
  2613                           
  2614                           
  2615                           ; 2 bytes @ 0xA
  2616  007A                     	ds	2
  2617  007C                     ??i1_memset:	
  2618  007C                     exception@exception:	
  2619                           ; 1 bytes @ 0xC
  2620                           
  2621  007C                     i1memset@p:	
  2622                           ; 1 bytes @ 0xC
  2623                           
  2624                           
  2625                           ; 2 bytes @ 0xC
  2626  007C                     	ds	2
  2627  007E                     ??_ISR:	
  2628                           
  2629                           	psect	cstackBANK0
  2630  0020                     __pcstackBANK0:	
  2631                           ; 1 bytes @ 0xE
  2632                           
  2633  0020                     ??_nrf24l01ReceivePacket:	
  2634                           
  2635                           ; 1 bytes @ 0x0
  2636  0020                     	ds	1
  2637  0021                     nrf24l01ReceivePacket@width:	
  2638                           
  2639                           ; 1 bytes @ 0x1
  2640  0021                     	ds	1
  2641  0022                     nrf24l01ReceivePacket@i:	
  2642                           
  2643                           ; 1 bytes @ 0x2
  2644  0022                     	ds	1
  2645  0023                     ??_nrf24l01ISR:	
  2646                           
  2647                           ; 1 bytes @ 0x3
  2648  0023                     	ds	1
  2649  0024                     nrf24l01ISR@status:	
  2650                           
  2651                           ; 1 bytes @ 0x4
  2652  0024                     	ds	1
  2653  0025                     ?_strcat:	
  2654  0025                     ?_strcpy:	
  2655                           ; 1 bytes @ 0x5
  2656                           
  2657  0025                     ?_flashWriteByte:	
  2658                           ; 1 bytes @ 0x5
  2659                           
  2660  0025                     ??_nrf24l01InterfaceInit:	
  2661                           ; 1 bytes @ 0x5
  2662                           
  2663  0025                     ??_sleep:	
  2664                           ; 1 bytes @ 0x5
  2665                           
  2666  0025                     ?_nrf24l01Send:	
  2667                           ; 1 bytes @ 0x5
  2668                           
  2669  0025                     ?_memset:	
  2670                           ; 1 bytes @ 0x5
  2671                           
  2672  0025                     ?_strlen:	
  2673                           ; 2 bytes @ 0x5
  2674                           
  2675  0025                     ?_flashReadByte:	
  2676                           ; 2 bytes @ 0x5
  2677                           
  2678  0025                     ?___lwdiv:	
  2679                           ; 2 bytes @ 0x5
  2680                           
  2681  0025                     ?___lwmod:	
  2682                           ; 2 bytes @ 0x5
  2683                           
  2684  0025                     ?___lmul:	
  2685                           ; 2 bytes @ 0x5
  2686                           
  2687  0025                     ?___lldiv:	
  2688                           ; 4 bytes @ 0x5
  2689                           
  2690  0025                     nrf24l01Send@data:	
  2691                           ; 4 bytes @ 0x5
  2692                           
  2693  0025                     flashWriteByte@offset:	
  2694                           ; 1 bytes @ 0x5
  2695                           
  2696  0025                     flashReadByte@offset:	
  2697                           ; 2 bytes @ 0x5
  2698                           
  2699  0025                     ___lwdiv@divisor:	
  2700                           ; 2 bytes @ 0x5
  2701                           
  2702  0025                     ___lwmod@divisor:	
  2703                           ; 2 bytes @ 0x5
  2704                           
  2705  0025                     memset@p1:	
  2706                           ; 2 bytes @ 0x5
  2707                           
  2708  0025                     strcat@from:	
  2709                           ; 2 bytes @ 0x5
  2710                           
  2711  0025                     strcpy@from:	
  2712                           ; 2 bytes @ 0x5
  2713                           
  2714  0025                     strlen@s:	
  2715                           ; 2 bytes @ 0x5
  2716                           
  2717  0025                     ___lmul@multiplier:	
  2718                           ; 2 bytes @ 0x5
  2719                           
  2720  0025                     ___lldiv@divisor:	
  2721                           ; 4 bytes @ 0x5
  2722                           
  2723                           
  2724                           ; 4 bytes @ 0x5
  2725  0025                     	ds	1
  2726  0026                     ??_nrf24l01Send:	
  2727                           
  2728                           ; 1 bytes @ 0x6
  2729  0026                     	ds	1
  2730  0027                     ??_strcat:	
  2731  0027                     ??_strcpy:	
  2732                           ; 1 bytes @ 0x7
  2733                           
  2734  0027                     ??_strlen:	
  2735                           ; 1 bytes @ 0x7
  2736                           
  2737  0027                     ??_flashReadByte:	
  2738                           ; 1 bytes @ 0x7
  2739                           
  2740  0027                     nrf24l01Send@command:	
  2741                           ; 1 bytes @ 0x7
  2742                           
  2743  0027                     flashWriteByte@data:	
  2744                           ; 1 bytes @ 0x7
  2745                           
  2746  0027                     ___lwdiv@dividend:	
  2747                           ; 2 bytes @ 0x7
  2748                           
  2749  0027                     ___lwmod@dividend:	
  2750                           ; 2 bytes @ 0x7
  2751                           
  2752  0027                     memset@c:	
  2753                           ; 2 bytes @ 0x7
  2754                           
  2755                           
  2756                           ; 2 bytes @ 0x7
  2757  0027                     	ds	1
  2758  0028                     ??_nrf24l01SetRXMode:	
  2759  0028                     ??_nrf24l01InitRegisters:	
  2760                           ; 1 bytes @ 0x8
  2761                           
  2762  0028                     strcat@cp:	
  2763                           ; 1 bytes @ 0x8
  2764                           
  2765  0028                     strcpy@to:	
  2766                           ; 1 bytes @ 0x8
  2767                           
  2768                           
  2769                           ; 1 bytes @ 0x8
  2770  0028                     	ds	1
  2771  0029                     ??_flashWriteByte:	
  2772  0029                     ??___lwdiv:	
  2773                           ; 1 bytes @ 0x9
  2774                           
  2775  0029                     ??___lwmod:	
  2776                           ; 1 bytes @ 0x9
  2777                           
  2778  0029                     nrf24l01SetRXMode@config:	
  2779                           ; 1 bytes @ 0x9
  2780                           
  2781  0029                     nrf24l01InitRegisters@channel:	
  2782                           ; 1 bytes @ 0x9
  2783                           
  2784  0029                     strcat@to:	
  2785                           ; 1 bytes @ 0x9
  2786                           
  2787  0029                     strcpy@cp:	
  2788                           ; 1 bytes @ 0x9
  2789                           
  2790  0029                     flashWriteByte@address:	
  2791                           ; 1 bytes @ 0x9
  2792                           
  2793  0029                     memset@n:	
  2794                           ; 2 bytes @ 0x9
  2795                           
  2796  0029                     strlen@cp:	
  2797                           ; 2 bytes @ 0x9
  2798                           
  2799  0029                     ___lmul@multiplicand:	
  2800                           ; 2 bytes @ 0x9
  2801                           
  2802  0029                     ___lldiv@dividend:	
  2803                           ; 4 bytes @ 0x9
  2804                           
  2805                           
  2806                           ; 4 bytes @ 0x9
  2807  0029                     	ds	1
  2808  002A                     nrf24l01SetRXMode@rxMode:	
  2809  002A                     nrf24l01InitRegisters@setupAW:	
  2810                           ; 1 bytes @ 0xA
  2811                           
  2812  002A                     ___lwmod@counter:	
  2813                           ; 1 bytes @ 0xA
  2814                           
  2815  002A                     flashReadByte@result:	
  2816                           ; 1 bytes @ 0xA
  2817                           
  2818  002A                     ___lwdiv@quotient:	
  2819                           ; 2 bytes @ 0xA
  2820                           
  2821                           
  2822                           ; 2 bytes @ 0xA
  2823  002A                     	ds	1
  2824  002B                     ??_memset:	
  2825  002B                     ??_nrf24l01SendPacket:	
  2826                           ; 1 bytes @ 0xB
  2827                           
  2828  002B                     ??_flashUpdate:	
  2829                           ; 1 bytes @ 0xB
  2830                           
  2831  002B                     nrf24l01InitRegisters@feature:	
  2832                           ; 1 bytes @ 0xB
  2833                           
  2834  002B                     memset@p:	
  2835                           ; 1 bytes @ 0xB
  2836                           
  2837                           
  2838                           ; 2 bytes @ 0xB
  2839  002B                     	ds	1
  2840  002C                     nrf24l01InitRegisters@rfSetup:	
  2841  002C                     ___lwdiv@counter:	
  2842                           ; 1 bytes @ 0xC
  2843                           
  2844  002C                     flashReadByte@address:	
  2845                           ; 1 bytes @ 0xC
  2846                           
  2847                           
  2848                           ; 2 bytes @ 0xC
  2849  002C                     	ds	1
  2850  002D                     ?_utoa:	
  2851  002D                     ??___lmul:	
  2852                           ; 1 bytes @ 0xD
  2853                           
  2854  002D                     ??___lldiv:	
  2855                           ; 1 bytes @ 0xD
  2856                           
  2857  002D                     nrf24l01SendPacket@Packet:	
  2858                           ; 1 bytes @ 0xD
  2859                           
  2860  002D                     nrf24l01InitRegisters@status:	
  2861                           ; 1 bytes @ 0xD
  2862                           
  2863  002D                     flashUpdate@i:	
  2864                           ; 1 bytes @ 0xD
  2865                           
  2866  002D                     utoa@val:	
  2867                           ; 2 bytes @ 0xD
  2868                           
  2869  002D                     ___lmul@product:	
  2870                           ; 2 bytes @ 0xD
  2871                           
  2872                           
  2873                           ; 4 bytes @ 0xD
  2874  002D                     	ds	1
  2875  002E                     ??_flashRealod:	
  2876  002E                     nrf24l01SendPacket@i:	
  2877                           ; 1 bytes @ 0xE
  2878                           
  2879  002E                     nrf24l01InitRegisters@enRXAddr:	
  2880                           ; 1 bytes @ 0xE
  2881                           
  2882  002E                     ___lldiv@quotient:	
  2883                           ; 1 bytes @ 0xE
  2884                           
  2885                           
  2886                           ; 4 bytes @ 0xE
  2887  002E                     	ds	1
  2888  002F                     nrf24l01InitRegisters@enAA:	
  2889  002F                     flashRealod@i:	
  2890                           ; 1 bytes @ 0xF
  2891                           
  2892  002F                     utoa@base:	
  2893                           ; 2 bytes @ 0xF
  2894                           
  2895                           
  2896                           ; 2 bytes @ 0xF
  2897  002F                     	ds	1
  2898  0030                     nrf24l01InitRegisters@DynPD:	
  2899                           
  2900                           ; 1 bytes @ 0x10
  2901  0030                     	ds	1
  2902  0031                     ??_utoa:	
  2903  0031                     nrf24l01InitRegisters@config:	
  2904                           ; 1 bytes @ 0x11
  2905                           
  2906                           
  2907                           ; 1 bytes @ 0x11
  2908  0031                     	ds	1
  2909  0032                     ??_nrf24l01Init:	
  2910  0032                     ___lldiv@counter:	
  2911                           ; 1 bytes @ 0x12
  2912                           
  2913  0032                     utoa@v:	
  2914                           ; 1 bytes @ 0x12
  2915                           
  2916                           
  2917                           ; 2 bytes @ 0x12
  2918  0032                     	ds	1
  2919  0033                     ?_getADCValue:	
  2920  0033                     getADCValue@divider:	
  2921                           ; 4 bytes @ 0x13
  2922                           
  2923                           
  2924                           ; 4 bytes @ 0x13
  2925  0033                     	ds	1
  2926  0034                     nrf24l01Init@isReciever:	
  2927  0034                     utoa@c:	
  2928                           ; 1 bytes @ 0x14
  2929                           
  2930                           
  2931                           ; 1 bytes @ 0x14
  2932  0034                     	ds	1
  2933  0035                     utoa@buf:	
  2934                           
  2935                           ; 1 bytes @ 0x15
  2936  0035                     	ds	2
  2937  0037                     ??_getADCValue:	
  2938                           
  2939                           ; 1 bytes @ 0x17
  2940  0037                     	ds	4
  2941  003B                     getADCValue@channel:	
  2942                           
  2943                           ; 1 bytes @ 0x1B
  2944  003B                     	ds	1
  2945  003C                     getADCValue@adcLoop:	
  2946                           
  2947                           ; 1 bytes @ 0x1C
  2948  003C                     	ds	1
  2949  003D                     getADCValue@adcSum:	
  2950                           
  2951                           ; 4 bytes @ 0x1D
  2952  003D                     	ds	4
  2953  0041                     ?_setMessage:	
  2954  0041                     setMessage@topic:	
  2955                           ; 1 bytes @ 0x21
  2956                           
  2957                           
  2958                           ; 2 bytes @ 0x21
  2959  0041                     	ds	2
  2960  0043                     setMessage@value:	
  2961                           
  2962                           ; 4 bytes @ 0x23
  2963  0043                     	ds	4
  2964  0047                     ??_setMessage:	
  2965  0047                     setMessage@tempString:	
  2966                           ; 1 bytes @ 0x27
  2967                           
  2968                           
  2969                           ; 16 bytes @ 0x27
  2970  0047                     	ds	16
  2971  0057                     setMessage@message:	
  2972                           
  2973                           ; 1 bytes @ 0x37
  2974  0057                     	ds	1
  2975  0058                     ??_loop:	
  2976                           
  2977                           ; 1 bytes @ 0x38
  2978  0058                     	ds	4
  2979  005C                     ??_main:	
  2980                           
  2981                           ; 1 bytes @ 0x3C
  2982  005C                     	ds	1
  2983                           
  2984                           	psect	maintext
  2985  0240                     __pmaintext:	
  2986 ;;
  2987 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2988 ;;
  2989 ;; *************** function _main *****************
  2990 ;; Defined at:
  2991 ;;		line 131 in file "main.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  Packet         33   33[BANK1 ] struct .
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : B1F/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       1      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:       34 bytes
  3010 ;; Hardware stack levels required when called:   13
  3011 ;; This function calls:
  3012 ;;		_flashRealod
  3013 ;;		_flashUpdate
  3014 ;;		_loop
  3015 ;;		_nrf24l01Init
  3016 ;;		_nrf24l01SendPacket
  3017 ;;		_setMessage
  3018 ;;		_sleep
  3019 ;;		_strcpy
  3020 ;; This function is called by:
  3021 ;;		Startup code after reset
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _main
  3027  0240                     _main:	
  3028                           
  3029                           ;main.c: 134: ANSELA = 0x00;
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3033  0240  0023               	movlb	3	; select bank3
  3034  0241  018C               	clrf	12	;volatile
  3035                           
  3036                           ;main.c: 135: ANSELC = 0x00;
  3037  0242  018E               	clrf	14	;volatile
  3038                           
  3039                           ;main.c: 137: ODCONA = 0x00;
  3040  0243  0025               	movlb	5	; select bank5
  3041  0244  018C               	clrf	12	;volatile
  3042                           
  3043                           ;main.c: 138: ODCONC = 0x00;
  3044  0245  018E               	clrf	14	;volatile
  3045                           
  3046                           ;main.c: 143: INLVLA = 0x00;
  3047  0246  0027               	movlb	7	; select bank7
  3048  0247  018C               	clrf	12	;volatile
  3049                           
  3050                           ;main.c: 144: INLVLC = 0x00;
  3051  0248  018E               	clrf	14	;volatile
  3052                           
  3053                           ;main.c: 146: WPUA = 0x00;
  3054  0249  0024               	movlb	4	; select bank4
  3055  024A  018C               	clrf	12	;volatile
  3056                           
  3057                           ;main.c: 147: WPUC = 0x00;
  3058  024B  018E               	clrf	14	;volatile
  3059                           
  3060                           ;main.c: 149: TRISCbits.TRISC5 = 0;
  3061  024C  0021               	movlb	1	; select bank1
  3062  024D  128E               	bcf	14,5	;volatile
  3063                           
  3064                           ;main.c: 150: TRISCbits.TRISC4 = 0;
  3065  024E  120E               	bcf	14,4	;volatile
  3066                           
  3067                           ;main.c: 152: PORTCbits.RC4 = 0;
  3068  024F  0020               	movlb	0	; select bank0
  3069  0250  120E               	bcf	14,4	;volatile
  3070                           
  3071                           ;main.c: 159: INTCONbits.PEIE = 0;
  3072  0251  130B               	bcf	11,6	;volatile
  3073                           
  3074                           ;main.c: 160: INTCONbits.GIE = 0;
  3075  0252  138B               	bcf	11,7	;volatile
  3076                           
  3077                           ;main.c: 162: OSCCON1bits.NOSC = 0b000;
  3078  0253  308F               	movlw	-113
  3079  0254  0032               	movlb	18	; select bank18
  3080  0255  0599               	andwf	25,f	;volatile
  3081                           
  3082                           ;main.c: 163: OSCCON1bits.NDIV = 0b000;
  3083  0256  30F0               	movlw	-16
  3084  0257  0599               	andwf	25,f	;volatile
  3085                           
  3086                           ;main.c: 165: _delay((unsigned long)((10)*(16000000/4000.0)));
  3087  0258  3034               	movlw	52
  3088  0259  0020               	movlb	0	; select bank0
  3089  025A  00DC               	movwf	??_main
  3090  025B  30F1               	movlw	241
  3091  025C                     u1727:	
  3092  025C  0B89               	decfsz	9,f
  3093  025D  2A5C               	goto	u1727
  3094  025E  0BDC               	decfsz	??_main,f
  3095  025F  2A5C               	goto	u1727
  3096  0260  3200               	nop2
  3097                           
  3098                           ;main.c: 167: flashRealod();
  3099  0261  3187  275C  3182   	fcall	_flashRealod
  3100                           
  3101                           ;main.c: 171: if (romData.check != 0x05){
  3102  0264  3005               	movlw	5
  3103  0265  0022               	movlb	2	; select bank2
  3104  0266  0641               	xorwf	_romData^(0+256),w
  3105  0267  1903               	btfsc	3,2
  3106  0268  2A7E               	goto	l2979
  3107                           
  3108                           ;main.c: 172: romData.check = 0x05;
  3109  0269  3005               	movlw	5
  3110  026A  0020               	movlb	0	; select bank0
  3111  026B  00DC               	movwf	??_main
  3112  026C  085C               	movf	??_main,w
  3113  026D  0022               	movlb	2	; select bank2
  3114  026E  00C1               	movwf	_romData^(0+256)
  3115                           
  3116                           ;main.c: 173: strcpy(romData.name, "UW1");
  3117  026F  302C               	movlw	low (STR_8| (0+32768))
  3118  0270  0020               	movlb	0	; select bank0
  3119  0271  00A5               	movwf	strcpy@from
  3120  0272  3090               	movlw	high (STR_8| (0+32768))
  3121  0273  00A6               	movwf	strcpy@from+1
  3122  0274  3042               	movlw	(low ((_romData| (0+256)+1)))& (0+255)
  3123  0275  3187  27D9  3182   	fcall	_strcpy
  3124                           
  3125                           ;main.c: 174: romData.bootMode = 0x00;
  3126  0278  0022               	movlb	2	; select bank2
  3127  0279  01D2               	clrf	(_romData^(0+256)+17)
  3128  027A  01D3               	clrf	((_romData+1)^(0+256)+17)
  3129                           
  3130                           ;main.c: 175: flashUpdate();
  3131  027B  3186  26F8  3182   	fcall	_flashUpdate
  3132  027E                     l2979:	
  3133                           
  3134                           ;main.c: 176: };main.c: 178: nrf24l01Init(0);
  3135  027E  3000               	movlw	0
  3136  027F  3186  2682  3182   	fcall	_nrf24l01Init
  3137                           
  3138                           ;main.c: 185: ADCON0bits.ADON = 0;
  3139  0282  0021               	movlb	1	; select bank1
  3140  0283  101D               	bcf	29,0	;volatile
  3141                           
  3142                           ;main.c: 188: ANSELAbits.ANSA4 = 1;
  3143  0284  0023               	movlb	3	; select bank3
  3144  0285  160C               	bsf	12,4	;volatile
  3145                           
  3146                           ;main.c: 189: TRISAbits.TRISA4 = 1;
  3147  0286  0021               	movlb	1	; select bank1
  3148  0287  160C               	bsf	12,4	;volatile
  3149                           
  3150                           ;main.c: 190: WPUAbits.WPUA4 = 0;
  3151  0288  0024               	movlb	4	; select bank4
  3152  0289  120C               	bcf	12,4	;volatile
  3153                           
  3154                           ;main.c: 193: ANSELCbits.ANSC3 = 1;
  3155  028A  0023               	movlb	3	; select bank3
  3156  028B  158E               	bsf	14,3	;volatile
  3157                           
  3158                           ;main.c: 194: TRISCbits.TRISC3 = 1;
  3159  028C  0021               	movlb	1	; select bank1
  3160  028D  158E               	bsf	14,3	;volatile
  3161                           
  3162                           ;main.c: 197: FVRCONbits.TSEN = 0;
  3163  028E  0022               	movlb	2	; select bank2
  3164  028F  1297               	bcf	23,5	;volatile
  3165                           
  3166                           ;main.c: 198: FVRCONbits.TSRNG = 0;
  3167  0290  1217               	bcf	23,4	;volatile
  3168                           
  3169                           ;main.c: 199: FVRCONbits.TSEN = 1;
  3170  0291  1697               	bsf	23,5	;volatile
  3171                           
  3172                           ;main.c: 202: FVRCONbits.FVREN = 0;
  3173  0292  1397               	bcf	23,7	;volatile
  3174                           
  3175                           ;main.c: 203: FVRCONbits.ADFVR = 1;
  3176  0293  0817               	movf	23,w	;volatile
  3177  0294  39FC               	andlw	-4
  3178  0295  3801               	iorlw	1
  3179  0296  0097               	movwf	23	;volatile
  3180                           
  3181                           ;main.c: 204: FVRCONbits.FVREN = 1;
  3182  0297  1797               	bsf	23,7	;volatile
  3183                           
  3184                           ;main.c: 206: ADCON1bits.ADCS = 0b111;
  3185  0298  3070               	movlw	112
  3186  0299  0021               	movlb	1	; select bank1
  3187  029A  049E               	iorwf	30,f	;volatile
  3188                           
  3189                           ;main.c: 207: ADCON1bits.ADFM = 1;
  3190  029B  179E               	bsf	30,7	;volatile
  3191                           
  3192                           ;main.c: 208: ADCON1bits.ADPREF = 0b00;
  3193  029C  30FC               	movlw	-4
  3194  029D  059E               	andwf	30,f	;volatile
  3195                           
  3196                           ;main.c: 210: ADCON0bits.CHS = 3;
  3197  029E  081D               	movf	29,w	;volatile
  3198  029F  3903               	andlw	-253
  3199  02A0  380C               	iorlw	12
  3200  02A1  009D               	movwf	29	;volatile
  3201                           
  3202                           ;main.c: 211: ADCON0bits.ADON = 1;
  3203  02A2  141D               	bsf	29,0	;volatile
  3204                           
  3205                           ;main.c: 216: TRISAbits.TRISA2 = 1;
  3206  02A3  150C               	bsf	12,2	;volatile
  3207                           
  3208                           ;main.c: 217: PIE0bits.INTE = 1;
  3209  02A4  1410               	bsf	16,0	;volatile
  3210                           
  3211                           ;main.c: 218: INTCONbits.INTEDG = 0;
  3212  02A5  100B               	bcf	11,0	;volatile
  3213                           
  3214                           ;main.c: 222: WDTCONbits.WDTPS = 10;
  3215  02A6  0817               	movf	23,w	;volatile
  3216  02A7  39C1               	andlw	-63
  3217  02A8  3814               	iorlw	20
  3218  02A9  0097               	movwf	23	;volatile
  3219                           
  3220                           ;main.c: 225: TRISAbits.TRISA5 = 0;
  3221  02AA  128C               	bcf	12,5	;volatile
  3222                           
  3223                           ;main.c: 226: PORTAbits.RA5 = 0;
  3224  02AB  0020               	movlb	0	; select bank0
  3225  02AC  128C               	bcf	12,5	;volatile
  3226                           
  3227                           ;main.c: 229: INTCONbits.PEIE = 1;
  3228  02AD  170B               	bsf	11,6	;volatile
  3229                           
  3230                           ;main.c: 230: INTCONbits.GIE = 1;
  3231  02AE  178B               	bsf	11,7	;volatile
  3232                           
  3233                           ;main.c: 232: nrf24l01Packet_t Packet;;main.c: 234: setMessage(Packet.Message, "BOOT", r
      +                          omData.bootMode);
  3234  02AF  3027               	movlw	low (STR_9| (0+32768))
  3235  02B0  00C1               	movwf	setMessage@topic
  3236  02B1  3090               	movlw	high (STR_9| (0+32768))
  3237  02B2  00C2               	movwf	setMessage@topic+1
  3238  02B3  0022               	movlb	2	; select bank2
  3239  02B4  0852               	movf	(_romData^(0+256)+17),w
  3240  02B5  0020               	movlb	0	; select bank0
  3241  02B6  00C3               	movwf	setMessage@value
  3242  02B7  0022               	movlb	2	; select bank2
  3243  02B8  0853               	movf	((_romData+1)^(0+256)+17),w
  3244  02B9  0020               	movlb	0	; select bank0
  3245  02BA  00C4               	movwf	setMessage@value+1
  3246  02BB  01C5               	clrf	setMessage@value+2
  3247  02BC  01C6               	clrf	setMessage@value+3
  3248  02BD  30C2               	movlw	(low ((main@Packet| 0+1)))& (0+255)
  3249  02BE  3184  2464  3182   	fcall	_setMessage
  3250                           
  3251                           ;main.c: 235: Packet.packetData.byte = 0;
  3252  02C1  0021               	movlb	1	; select bank1
  3253  02C2  01C1               	clrf	main@Packet^(0+128)
  3254                           
  3255                           ;main.c: 236: Packet.packetData.ACKRequest = 0;
  3256  02C3  1041               	bcf	main@Packet^(0+128),0
  3257                           
  3258                           ;main.c: 237: nrf24l01SendPacket(&Packet);
  3259  02C4  30C1               	movlw	(low (main@Packet| 0))& (0+255)
  3260  02C5  3181  21A6  3182   	fcall	_nrf24l01SendPacket
  3261                           
  3262                           ;main.c: 238: sleep();
  3263  02C8  3187  27F5  3182   	fcall	_sleep
  3264  02CB                     l3041:	
  3265                           ;main.c: 240: while(1){
  3266                           
  3267                           
  3268                           ;main.c: 241: loop();
  3269  02CB  3180  202B  3182   	fcall	_loop
  3270  02CE  2ACB               	goto	l3041
  3271  02CF                     __end_of_main:	
  3272                           ;main.c: 242: };main.c: 244: return;
  3273                           
  3274                           
  3275                           	psect	text1
  3276  07D9                     __ptext1:	
  3277 ;; *************** function _strcpy *****************
  3278 ;; Defined at:
  3279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  to              1    wreg     PTR unsigned char 
  3282 ;;		 -> romData(19), 
  3283 ;;  from            2    5[BANK0 ] PTR const unsigned char 
  3284 ;;		 -> STR_8(4), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  to              1    8[BANK0 ] PTR unsigned char 
  3287 ;;		 -> romData(19), 
  3288 ;;  cp              1    9[BANK0 ] PTR unsigned char 
  3289 ;;		 -> romData(19), 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      PTR unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;Total ram usage:        5 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    7
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _strcpy
  3315  07D9                     _strcpy:	
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  3319                           ;strcpy@to stored from wreg
  3320  07D9  0020               	movlb	0	; select bank0
  3321  07DA  00A8               	movwf	strcpy@to
  3322  07DB  0828               	movf	strcpy@to,w
  3323  07DC  00A7               	movwf	??_strcpy
  3324  07DD  0827               	movf	??_strcpy,w
  3325  07DE  00A9               	movwf	strcpy@cp
  3326  07DF                     l2615:	
  3327  07DF  0829               	movf	strcpy@cp,w
  3328  07E0  0086               	movwf	6
  3329  07E1  3001               	movlw	1	; select bank2/3
  3330  07E2  0087               	movwf	7
  3331  07E3  0825               	movf	strcpy@from,w
  3332  07E4  0084               	movwf	4
  3333  07E5  0826               	movf	strcpy@from+1,w
  3334  07E6  0085               	movwf	5
  3335  07E7  0800               	movf	0,w	;code access
  3336  07E8  3FC0               	movwi [0]fsr1
  3337  07E9  0889               	movf	9,f
  3338  07EA  1903               	btfsc	3,2
  3339  07EB  0008               	return
  3340  07EC  3001               	movlw	1
  3341  07ED  00A7               	movwf	??_strcpy
  3342  07EE  0827               	movf	??_strcpy,w
  3343  07EF  07A9               	addwf	strcpy@cp,f
  3344  07F0  3001               	movlw	1
  3345  07F1  07A5               	addwf	strcpy@from,f
  3346  07F2  3000               	movlw	0
  3347  07F3  3DA6               	addwfc	strcpy@from+1,f
  3348  07F4  2FDF               	goto	l2615
  3349  07F5                     __end_of_strcpy:	
  3350                           ;	Return value of _strcpy is never used
  3351                           
  3352                           
  3353                           	psect	text2
  3354  0682                     __ptext2:	
  3355 ;; *************** function _nrf24l01Init *****************
  3356 ;; Defined at:
  3357 ;;		line 361 in file "nrf24l01.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  isReciever      1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  isReciever      1   20[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;Total ram usage:        3 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:   11
  3378 ;; This function calls:
  3379 ;;		_nrf24l01CEHigh
  3380 ;;		_nrf24l01CELow
  3381 ;;		_nrf24l01InitRegisters
  3382 ;;		_nrf24l01InterfaceInit
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _nrf24l01Init
  3390  0682                     _nrf24l01Init:	
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3394                           ;nrf24l01Init@isReciever stored from wreg
  3395  0682  0020               	movlb	0	; select bank0
  3396  0683  00B4               	movwf	nrf24l01Init@isReciever
  3397                           
  3398                           ;nrf24l01.c: 364: nrf24l01InterfaceInit();
  3399  0684  318F  27E4  3186   	fcall	_nrf24l01InterfaceInit
  3400                           
  3401                           ;nrf24l01.c: 369: nrf24l01CELow();
  3402  0687  318F  2732  3186   	fcall	_nrf24l01CELow
  3403                           
  3404                           ;nrf24l01.c: 371: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3405  068A  3002               	movlw	2
  3406  068B  0020               	movlb	0	; select bank0
  3407  068C  00B3               	movwf	??_nrf24l01Init+1
  3408  068D  3004               	movlw	4
  3409  068E  00B2               	movwf	??_nrf24l01Init
  3410  068F  30BA               	movlw	186
  3411  0690                     u1737:	
  3412  0690  0B89               	decfsz	9,f
  3413  0691  2E90               	goto	u1737
  3414  0692  0BB2               	decfsz	??_nrf24l01Init,f
  3415  0693  2E90               	goto	u1737
  3416  0694  0BB3               	decfsz	??_nrf24l01Init+1,f
  3417  0695  2E90               	goto	u1737
  3418  0696  0000               	nop
  3419                           
  3420                           ;nrf24l01.c: 373: nrf24l01InitRegisters(isReciever);
  3421  0697  0020               	movlb	0	; select bank0
  3422  0698  0834               	movf	nrf24l01Init@isReciever,w
  3423  0699  3180  20FC  3186   	fcall	_nrf24l01InitRegisters
  3424                           
  3425                           ;nrf24l01.c: 375: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3426  069C  3002               	movlw	2
  3427  069D  0020               	movlb	0	; select bank0
  3428  069E  00B3               	movwf	??_nrf24l01Init+1
  3429  069F  3004               	movlw	4
  3430  06A0  00B2               	movwf	??_nrf24l01Init
  3431  06A1  30BA               	movlw	186
  3432  06A2                     u1747:	
  3433  06A2  0B89               	decfsz	9,f
  3434  06A3  2EA2               	goto	u1747
  3435  06A4  0BB2               	decfsz	??_nrf24l01Init,f
  3436  06A5  2EA2               	goto	u1747
  3437  06A6  0BB3               	decfsz	??_nrf24l01Init+1,f
  3438  06A7  2EA2               	goto	u1747
  3439  06A8  0000               	nop
  3440                           
  3441                           ;nrf24l01.c: 377: nrf24l01CEHigh();
  3442  06A9  318F  272F         	fcall	_nrf24l01CEHigh
  3443  06AB  0008               	return
  3444  06AC                     __end_of_nrf24l01Init:	
  3445                           
  3446                           	psect	text3
  3447  0FE4                     __ptext3:	
  3448 ;; *************** function _nrf24l01InterfaceInit *****************
  3449 ;; Defined at:
  3450 ;;		line 28 in file "interface.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    7
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_nrf24l01Init
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _nrf24l01InterfaceInit
  3480  0FE4                     _nrf24l01InterfaceInit:	
  3481                           
  3482                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3483                           
  3484                           ;incstack = 0
  3485                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3486  0FE4  0021               	movlb	1	; select bank1
  3487  0FE5  100C               	bcf	12,0	;volatile
  3488                           
  3489                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3490  0FE6  108C               	bcf	12,1	;volatile
  3491                           
  3492                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3493  0FE7  148E               	bsf	14,1	;volatile
  3494                           
  3495                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3496  0FE8  110E               	bcf	14,2	;volatile
  3497                           
  3498                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3499  0FE9  100E               	bcf	14,0	;volatile
  3500                           
  3501                           ;interface.c: 37: SSP1CON1bits.SSPEN = 0;
  3502  0FEA  0024               	movlb	4	; select bank4
  3503  0FEB  1295               	bcf	21,5	;volatile
  3504                           
  3505                           ;interface.c: 39: RC1PPSbits.RC1PPS = 0b10001;
  3506  0FEC  003D               	movlb	29	; select bank29
  3507  0FED  0821               	movf	33,w	;volatile
  3508  0FEE  39E0               	andlw	-32
  3509  0FEF  3811               	iorlw	17
  3510  0FF0  00A1               	movwf	33	;volatile
  3511                           
  3512                           ;interface.c: 40: RC2PPSbits.RC2PPS = 0b11001;
  3513  0FF1  0822               	movf	34,w	;volatile
  3514  0FF2  39E0               	andlw	-32
  3515  0FF3  3819               	iorlw	25
  3516  0FF4  00A2               	movwf	34	;volatile
  3517                           
  3518                           ;interface.c: 41: RC0PPSbits.RC0PPS = 0b11000;
  3519  0FF5  0820               	movf	32,w	;volatile
  3520  0FF6  39E0               	andlw	-32
  3521  0FF7  3818               	iorlw	24
  3522  0FF8  00A0               	movwf	32	;volatile
  3523                           
  3524                           ;interface.c: 43: SSP1CON1bits.CKP = 0;
  3525  0FF9  0024               	movlb	4	; select bank4
  3526  0FFA  1215               	bcf	21,4	;volatile
  3527                           
  3528                           ;interface.c: 44: SSP1STATbits.CKE = 1;
  3529  0FFB  1714               	bsf	20,6	;volatile
  3530                           
  3531                           ;interface.c: 45: SSP1CON1bits.SSPM = 0b0000;
  3532  0FFC  30F0               	movlw	-16
  3533  0FFD  0595               	andwf	21,f	;volatile
  3534                           
  3535                           ;interface.c: 47: SSP1CON1bits.SSPEN = 1;
  3536  0FFE  1695               	bsf	21,5	;volatile
  3537  0FFF  0008               	return
  3538  1000                     __end_of_nrf24l01InterfaceInit:	
  3539                           
  3540                           	psect	text4
  3541  00FC                     __ptext4:	
  3542 ;; *************** function _nrf24l01InitRegisters *****************
  3543 ;; Defined at:
  3544 ;;		line 276 in file "nrf24l01.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  isReciever      1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  isReciever      1    0[COMMON] unsigned char 
  3549 ;;  config          1   17[BANK0 ] struct .
  3550 ;;  DynPD           1   16[BANK0 ] struct .
  3551 ;;  enAA            1   15[BANK0 ] struct .
  3552 ;;  enRXAddr        1   14[BANK0 ] struct .
  3553 ;;  status          1   13[BANK0 ] struct .
  3554 ;;  rfSetup         1   12[BANK0 ] struct .
  3555 ;;  feature         1   11[BANK0 ] struct .
  3556 ;;  setupAW         1   10[BANK0 ] struct .
  3557 ;;  channel         1    9[BANK0 ] struct .
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;Total ram usage:       10 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:   10
  3574 ;; This function calls:
  3575 ;;		_nrf24l01Send
  3576 ;; This function is called by:
  3577 ;;		_nrf24l01Init
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _nrf24l01InitRegisters
  3583  00FC                     _nrf24l01InitRegisters:	
  3584                           
  3585                           ;nrf24l01.c: 278: n_CONFIG_t config;;nrf24l01.c: 280: config.PWR_UP = 0;
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3589  00FC  0020               	movlb	0	; select bank0
  3590  00FD  10B1               	bcf	nrf24l01InitRegisters@config,1
  3591                           
  3592                           ;nrf24l01.c: 281: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3593  00FE  0831               	movf	nrf24l01InitRegisters@config,w
  3594  00FF  00A8               	movwf	??_nrf24l01InitRegisters
  3595  0100  0828               	movf	??_nrf24l01InitRegisters,w
  3596  0101  00A5               	movwf	nrf24l01Send@data
  3597  0102  3020               	movlw	32
  3598  0103  3187  273C  3180   	fcall	_nrf24l01Send
  3599                           
  3600                           ;nrf24l01.c: 283: n_SETUP_AW_t setupAW;;nrf24l01.c: 284: setupAW.byte = 0x00;
  3601  0106  0020               	movlb	0	; select bank0
  3602  0107  01AA               	clrf	nrf24l01InitRegisters@setupAW
  3603                           
  3604                           ;nrf24l01.c: 285: setupAW.AW = 0b11;
  3605  0108  3003               	movlw	3
  3606  0109  04AA               	iorwf	nrf24l01InitRegisters@setupAW,f
  3607                           
  3608                           ;nrf24l01.c: 286: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3609  010A  082A               	movf	nrf24l01InitRegisters@setupAW,w
  3610  010B  00A8               	movwf	??_nrf24l01InitRegisters
  3611  010C  0828               	movf	??_nrf24l01InitRegisters,w
  3612  010D  00A5               	movwf	nrf24l01Send@data
  3613  010E  3022               	movlw	34
  3614  010F  3187  273C  3180   	fcall	_nrf24l01Send
  3615                           
  3616                           ;nrf24l01.c: 289: n_RF_CH_t channel;;nrf24l01.c: 290: channel.RF_CH = 2;
  3617  0112  0020               	movlb	0	; select bank0
  3618  0113  0829               	movf	nrf24l01InitRegisters@channel,w
  3619  0114  3980               	andlw	-128
  3620  0115  3802               	iorlw	2
  3621  0116  00A9               	movwf	nrf24l01InitRegisters@channel
  3622                           
  3623                           ;nrf24l01.c: 291: nrf24l01Send(0b00100000 | 0x05, channel.byte);
  3624  0117  0829               	movf	nrf24l01InitRegisters@channel,w
  3625  0118  00A8               	movwf	??_nrf24l01InitRegisters
  3626  0119  0828               	movf	??_nrf24l01InitRegisters,w
  3627  011A  00A5               	movwf	nrf24l01Send@data
  3628  011B  3025               	movlw	37
  3629  011C  3187  273C  3180   	fcall	_nrf24l01Send
  3630                           
  3631                           ;nrf24l01.c: 294: n_RF_SETUP_t rfSetup;;nrf24l01.c: 295: rfSetup.byte = 0x00;
  3632  011F  0020               	movlb	0	; select bank0
  3633  0120  01AC               	clrf	nrf24l01InitRegisters@rfSetup
  3634                           
  3635                           ;nrf24l01.c: 296: rfSetup.RF_DR_LOW = 0;
  3636  0121  12AC               	bcf	nrf24l01InitRegisters@rfSetup,5
  3637                           
  3638                           ;nrf24l01.c: 297: rfSetup.RF_DR_HIGH = 1;
  3639  0122  15AC               	bsf	nrf24l01InitRegisters@rfSetup,3
  3640                           
  3641                           ;nrf24l01.c: 298: rfSetup.RF_PWR = 3;
  3642  0123  3006               	movlw	6
  3643  0124  04AC               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3644                           
  3645                           ;nrf24l01.c: 299: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3646  0125  082C               	movf	nrf24l01InitRegisters@rfSetup,w
  3647  0126  00A8               	movwf	??_nrf24l01InitRegisters
  3648  0127  0828               	movf	??_nrf24l01InitRegisters,w
  3649  0128  00A5               	movwf	nrf24l01Send@data
  3650  0129  3026               	movlw	38
  3651  012A  3187  273C  3180   	fcall	_nrf24l01Send
  3652                           
  3653                           ;nrf24l01.c: 302: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 303: enRXAddr.ERX_P0 = 1;
  3654  012D  0020               	movlb	0	; select bank0
  3655  012E  142E               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3656                           
  3657                           ;nrf24l01.c: 304: enRXAddr.ERX_P1 = 1;
  3658  012F  14AE               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3659                           
  3660                           ;nrf24l01.c: 305: enRXAddr.ERX_P2 = 1;
  3661  0130  152E               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3662                           
  3663                           ;nrf24l01.c: 306: enRXAddr.ERX_P3 = 1;
  3664  0131  15AE               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3665                           
  3666                           ;nrf24l01.c: 307: enRXAddr.ERX_P4 = 1;
  3667  0132  162E               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3668                           
  3669                           ;nrf24l01.c: 308: enRXAddr.ERX_P5 = 1;
  3670  0133  16AE               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3671                           
  3672                           ;nrf24l01.c: 309: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3673  0134  082E               	movf	nrf24l01InitRegisters@enRXAddr,w
  3674  0135  00A8               	movwf	??_nrf24l01InitRegisters
  3675  0136  0828               	movf	??_nrf24l01InitRegisters,w
  3676  0137  00A5               	movwf	nrf24l01Send@data
  3677  0138  3022               	movlw	34
  3678  0139  3187  273C  3180   	fcall	_nrf24l01Send
  3679                           
  3680                           ;nrf24l01.c: 312: n_EN_AA_t enAA;;nrf24l01.c: 313: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3681  013C  0020               	movlb	0	; select bank0
  3682  013D  01A5               	clrf	nrf24l01Send@data
  3683  013E  3001               	movlw	1
  3684  013F  3187  273C  3180   	fcall	_nrf24l01Send
  3685  0142  0020               	movlb	0	; select bank0
  3686  0143  00A8               	movwf	??_nrf24l01InitRegisters
  3687  0144  0828               	movf	??_nrf24l01InitRegisters,w
  3688  0145  00AF               	movwf	nrf24l01InitRegisters@enAA
  3689                           
  3690                           ;nrf24l01.c: 314: enAA.ENAA_P0 = 0;
  3691  0146  102F               	bcf	nrf24l01InitRegisters@enAA,0
  3692                           
  3693                           ;nrf24l01.c: 315: enAA.ENAA_P1 = 0;
  3694  0147  10AF               	bcf	nrf24l01InitRegisters@enAA,1
  3695                           
  3696                           ;nrf24l01.c: 316: enAA.ENAA_P2 = 0;
  3697  0148  112F               	bcf	nrf24l01InitRegisters@enAA,2
  3698                           
  3699                           ;nrf24l01.c: 317: enAA.ENAA_P3 = 0;
  3700  0149  11AF               	bcf	nrf24l01InitRegisters@enAA,3
  3701                           
  3702                           ;nrf24l01.c: 318: enAA.ENAA_P4 = 0;
  3703  014A  122F               	bcf	nrf24l01InitRegisters@enAA,4
  3704                           
  3705                           ;nrf24l01.c: 319: enAA.ENAA_P5 = 0;
  3706  014B  12AF               	bcf	nrf24l01InitRegisters@enAA,5
  3707                           
  3708                           ;nrf24l01.c: 320: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3709  014C  082F               	movf	nrf24l01InitRegisters@enAA,w
  3710  014D  00A8               	movwf	??_nrf24l01InitRegisters
  3711  014E  0828               	movf	??_nrf24l01InitRegisters,w
  3712  014F  00A5               	movwf	nrf24l01Send@data
  3713  0150  3021               	movlw	33
  3714  0151  3187  273C  3180   	fcall	_nrf24l01Send
  3715                           
  3716                           ;nrf24l01.c: 324: n_FEATURE_t feature;;nrf24l01.c: 325: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3717  0154  0020               	movlb	0	; select bank0
  3718  0155  01A5               	clrf	nrf24l01Send@data
  3719  0156  301D               	movlw	29
  3720  0157  3187  273C  3180   	fcall	_nrf24l01Send
  3721  015A  0020               	movlb	0	; select bank0
  3722  015B  00A8               	movwf	??_nrf24l01InitRegisters
  3723  015C  0828               	movf	??_nrf24l01InitRegisters,w
  3724  015D  00AB               	movwf	nrf24l01InitRegisters@feature
  3725                           
  3726                           ;nrf24l01.c: 326: feature.EN_DPL = 1;
  3727  015E  152B               	bsf	nrf24l01InitRegisters@feature,2
  3728                           
  3729                           ;nrf24l01.c: 327: feature.EN_DYN_ACK = 1;
  3730  015F  142B               	bsf	nrf24l01InitRegisters@feature,0
  3731                           
  3732                           ;nrf24l01.c: 328: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3733  0160  082B               	movf	nrf24l01InitRegisters@feature,w
  3734  0161  00A8               	movwf	??_nrf24l01InitRegisters
  3735  0162  0828               	movf	??_nrf24l01InitRegisters,w
  3736  0163  00A5               	movwf	nrf24l01Send@data
  3737  0164  303D               	movlw	61
  3738  0165  3187  273C  3180   	fcall	_nrf24l01Send
  3739                           
  3740                           ;nrf24l01.c: 330: n_DYNPD_t DynPD;;nrf24l01.c: 331: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3741  0168  0020               	movlb	0	; select bank0
  3742  0169  01A5               	clrf	nrf24l01Send@data
  3743  016A  301C               	movlw	28
  3744  016B  3187  273C  3180   	fcall	_nrf24l01Send
  3745  016E  0020               	movlb	0	; select bank0
  3746  016F  00A8               	movwf	??_nrf24l01InitRegisters
  3747  0170  0828               	movf	??_nrf24l01InitRegisters,w
  3748  0171  00B0               	movwf	nrf24l01InitRegisters@DynPD
  3749                           
  3750                           ;nrf24l01.c: 332: DynPD.DPL_P0 = 1;
  3751  0172  1430               	bsf	nrf24l01InitRegisters@DynPD,0
  3752                           
  3753                           ;nrf24l01.c: 333: DynPD.DPL_P1 = 1;
  3754  0173  14B0               	bsf	nrf24l01InitRegisters@DynPD,1
  3755                           
  3756                           ;nrf24l01.c: 334: DynPD.DPL_P2 = 1;
  3757  0174  1530               	bsf	nrf24l01InitRegisters@DynPD,2
  3758                           
  3759                           ;nrf24l01.c: 335: DynPD.DPL_P3 = 1;
  3760  0175  15B0               	bsf	nrf24l01InitRegisters@DynPD,3
  3761                           
  3762                           ;nrf24l01.c: 336: DynPD.DPL_P4 = 1;
  3763  0176  1630               	bsf	nrf24l01InitRegisters@DynPD,4
  3764                           
  3765                           ;nrf24l01.c: 337: DynPD.DPL_P5 = 1;
  3766  0177  16B0               	bsf	nrf24l01InitRegisters@DynPD,5
  3767                           
  3768                           ;nrf24l01.c: 338: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3769  0178  0830               	movf	nrf24l01InitRegisters@DynPD,w
  3770  0179  00A8               	movwf	??_nrf24l01InitRegisters
  3771  017A  0828               	movf	??_nrf24l01InitRegisters,w
  3772  017B  00A5               	movwf	nrf24l01Send@data
  3773  017C  303C               	movlw	60
  3774  017D  3187  273C  3180   	fcall	_nrf24l01Send
  3775                           
  3776                           ;nrf24l01.c: 341: n_STATUS_t status;;nrf24l01.c: 342: status.byte = 0x00;
  3777  0180  0020               	movlb	0	; select bank0
  3778  0181  01AD               	clrf	nrf24l01InitRegisters@status
  3779                           
  3780                           ;nrf24l01.c: 343: status.RX_DR = 1;
  3781  0182  172D               	bsf	nrf24l01InitRegisters@status,6
  3782                           
  3783                           ;nrf24l01.c: 344: status.TX_DS = 1;
  3784  0183  16AD               	bsf	nrf24l01InitRegisters@status,5
  3785                           
  3786                           ;nrf24l01.c: 345: status.MAX_RT = 1;
  3787  0184  162D               	bsf	nrf24l01InitRegisters@status,4
  3788                           
  3789                           ;nrf24l01.c: 346: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3790  0185  082D               	movf	nrf24l01InitRegisters@status,w
  3791  0186  00A8               	movwf	??_nrf24l01InitRegisters
  3792  0187  0828               	movf	??_nrf24l01InitRegisters,w
  3793  0188  00A5               	movwf	nrf24l01Send@data
  3794  0189  3027               	movlw	39
  3795  018A  3187  273C  3180   	fcall	_nrf24l01Send
  3796                           
  3797                           ;nrf24l01.c: 349: nrf24l01Send(0b11100001, 0);
  3798  018D  0020               	movlb	0	; select bank0
  3799  018E  01A5               	clrf	nrf24l01Send@data
  3800  018F  30E1               	movlw	225
  3801  0190  3187  273C  3180   	fcall	_nrf24l01Send
  3802                           
  3803                           ;nrf24l01.c: 350: nrf24l01Send(0b11100010, 0);
  3804  0193  0020               	movlb	0	; select bank0
  3805  0194  01A5               	clrf	nrf24l01Send@data
  3806  0195  30E2               	movlw	226
  3807  0196  3187  273C  3180   	fcall	_nrf24l01Send
  3808                           
  3809                           ;nrf24l01.c: 353: config.PRIM_RX = 1;
  3810  0199  0020               	movlb	0	; select bank0
  3811  019A  1431               	bsf	nrf24l01InitRegisters@config,0
  3812                           
  3813                           ;nrf24l01.c: 354: config.EN_CRC = 1;
  3814  019B  15B1               	bsf	nrf24l01InitRegisters@config,3
  3815                           
  3816                           ;nrf24l01.c: 355: config.CRCO = 1;
  3817  019C  1531               	bsf	nrf24l01InitRegisters@config,2
  3818                           
  3819                           ;nrf24l01.c: 356: config.PWR_UP = 1;
  3820  019D  14B1               	bsf	nrf24l01InitRegisters@config,1
  3821                           
  3822                           ;nrf24l01.c: 357: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3823  019E  0831               	movf	nrf24l01InitRegisters@config,w
  3824  019F  00A8               	movwf	??_nrf24l01InitRegisters
  3825  01A0  0828               	movf	??_nrf24l01InitRegisters,w
  3826  01A1  00A5               	movwf	nrf24l01Send@data
  3827  01A2  3020               	movlw	32
  3828  01A3  3187  273C         	fcall	_nrf24l01Send
  3829  01A5  0008               	return
  3830  01A6                     __end_of_nrf24l01InitRegisters:	
  3831                           
  3832                           	psect	text5
  3833  002B                     __ptext5:	
  3834 ;; *************** function _loop *****************
  3835 ;; Defined at:
  3836 ;;		line 89 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  Packet         33    0[BANK1 ] struct .
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Totals:         0       4      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;Total ram usage:       37 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:   12
  3857 ;; This function calls:
  3858 ;;		_getADCValue
  3859 ;;		_nrf24l01SendPacket
  3860 ;;		_setMessage
  3861 ;;		_sleep
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _loop
  3869  002B                     _loop:	
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3873  002B  0064               	clrwdt	;# 
  3874                           
  3875                           ;main.c: 94: nrf24l01Packet_t Packet;;main.c: 96: setMessage(Packet.Message, "DBG", coun
      +                          ter);
  3876  002C  3030               	movlw	low (STR_3| (0+32768))
  3877  002D  0020               	movlb	0	; select bank0
  3878  002E  00C1               	movwf	setMessage@topic
  3879  002F  3090               	movlw	high (STR_3| (0+32768))
  3880  0030  00C2               	movwf	setMessage@topic+1
  3881  0031  0021               	movlb	1	; select bank1
  3882  0032  0862               	movf	_counter^(0+128),w
  3883  0033  0020               	movlb	0	; select bank0
  3884  0034  00C3               	movwf	setMessage@value
  3885  0035  0021               	movlb	1	; select bank1
  3886  0036  0863               	movf	(_counter+1)^(0+128),w
  3887  0037  0020               	movlb	0	; select bank0
  3888  0038  00C4               	movwf	setMessage@value+1
  3889  0039  01C5               	clrf	setMessage@value+2
  3890  003A  01C6               	clrf	setMessage@value+3
  3891  003B  30A1               	movlw	(low ((loop@Packet| 0+1)))& (0+255)
  3892  003C  3184  2464  3180   	fcall	_setMessage
  3893                           
  3894                           ;main.c: 97: Packet.packetData.byte = 0;
  3895  003F  0021               	movlb	1	; select bank1
  3896  0040  01A0               	clrf	loop@Packet^(0+128)
  3897                           
  3898                           ;main.c: 98: Packet.packetData.ACKRequest = 0;
  3899  0041  1020               	bcf	loop@Packet^(0+128),0
  3900                           
  3901                           ;main.c: 99: nrf24l01SendPacket(&Packet);
  3902  0042  30A0               	movlw	(low (loop@Packet| 0))& (0+255)
  3903  0043  3181  21A6  3180   	fcall	_nrf24l01SendPacket
  3904                           
  3905                           ;main.c: 100: counter = 0;
  3906  0046  0021               	movlb	1	; select bank1
  3907  0047  01E2               	clrf	_counter^(0+128)
  3908  0048  01E3               	clrf	(_counter+1)^(0+128)
  3909                           
  3910                           ;main.c: 101: sleep();
  3911  0049  3187  27F5  3180   	fcall	_sleep
  3912                           
  3913                           ;main.c: 103: setMessage(Packet.Message, "VBAT", getADCValue(0b000100, 2505));
  3914  004C  3022               	movlw	low (STR_4| (0+32768))
  3915  004D  0020               	movlb	0	; select bank0
  3916  004E  00C1               	movwf	setMessage@topic
  3917  004F  3090               	movlw	high (STR_4| (0+32768))
  3918  0050  00C2               	movwf	setMessage@topic+1
  3919  0051  3000               	movlw	0
  3920  0052  00B6               	movwf	getADCValue@divider+3
  3921  0053  3000               	movlw	0
  3922  0054  00B5               	movwf	getADCValue@divider+2
  3923  0055  3009               	movlw	9
  3924  0056  00B4               	movwf	getADCValue@divider+1
  3925  0057  30C9               	movlw	201
  3926  0058  00B3               	movwf	getADCValue@divider
  3927  0059  3004               	movlw	4
  3928  005A  3182  22CF  3180   	fcall	_getADCValue
  3929  005D  0020               	movlb	0	; select bank0
  3930  005E  0836               	movf	?_getADCValue+3,w
  3931  005F  00C6               	movwf	setMessage@value+3
  3932  0060  0835               	movf	?_getADCValue+2,w
  3933  0061  00C5               	movwf	setMessage@value+2
  3934  0062  0834               	movf	?_getADCValue+1,w
  3935  0063  00C4               	movwf	setMessage@value+1
  3936  0064  0833               	movf	?_getADCValue,w
  3937  0065  00C3               	movwf	setMessage@value
  3938  0066  30A1               	movlw	(low ((loop@Packet| 0+1)))& (0+255)
  3939  0067  3184  2464  3180   	fcall	_setMessage
  3940                           
  3941                           ;main.c: 104: Packet.packetData.byte = 0;
  3942  006A  0021               	movlb	1	; select bank1
  3943  006B  01A0               	clrf	loop@Packet^(0+128)
  3944                           
  3945                           ;main.c: 105: Packet.packetData.ACKRequest = 1;
  3946  006C  1420               	bsf	loop@Packet^(0+128),0
  3947                           
  3948                           ;main.c: 106: nrf24l01SendPacket(&Packet);
  3949  006D  30A0               	movlw	(low (loop@Packet| 0))& (0+255)
  3950  006E  3181  21A6  3180   	fcall	_nrf24l01SendPacket
  3951                           
  3952                           ;main.c: 107: sleep();
  3953  0071  3187  27F5  3180   	fcall	_sleep
  3954                           
  3955                           ;main.c: 110: setMessage(Packet.Message, "ANC3", getADCValue(0b010011, 2500));
  3956  0074  3018               	movlw	low (STR_5| (0+32768))
  3957  0075  0020               	movlb	0	; select bank0
  3958  0076  00C1               	movwf	setMessage@topic
  3959  0077  3090               	movlw	high (STR_5| (0+32768))
  3960  0078  00C2               	movwf	setMessage@topic+1
  3961  0079  3000               	movlw	0
  3962  007A  00B6               	movwf	getADCValue@divider+3
  3963  007B  3000               	movlw	0
  3964  007C  00B5               	movwf	getADCValue@divider+2
  3965  007D  3009               	movlw	9
  3966  007E  00B4               	movwf	getADCValue@divider+1
  3967  007F  30C4               	movlw	196
  3968  0080  00B3               	movwf	getADCValue@divider
  3969  0081  3013               	movlw	19
  3970  0082  3182  22CF  3180   	fcall	_getADCValue
  3971  0085  0020               	movlb	0	; select bank0
  3972  0086  0836               	movf	?_getADCValue+3,w
  3973  0087  00C6               	movwf	setMessage@value+3
  3974  0088  0835               	movf	?_getADCValue+2,w
  3975  0089  00C5               	movwf	setMessage@value+2
  3976  008A  0834               	movf	?_getADCValue+1,w
  3977  008B  00C4               	movwf	setMessage@value+1
  3978  008C  0833               	movf	?_getADCValue,w
  3979  008D  00C3               	movwf	setMessage@value
  3980  008E  30A1               	movlw	(low ((loop@Packet| 0+1)))& (0+255)
  3981  008F  3184  2464  3180   	fcall	_setMessage
  3982                           
  3983                           ;main.c: 111: Packet.packetData.byte = 0;
  3984  0092  0021               	movlb	1	; select bank1
  3985  0093  01A0               	clrf	loop@Packet^(0+128)
  3986                           
  3987                           ;main.c: 112: Packet.packetData.ACKRequest = 0;
  3988  0094  1020               	bcf	loop@Packet^(0+128),0
  3989                           
  3990                           ;main.c: 113: nrf24l01SendPacket(&Packet);
  3991  0095  30A0               	movlw	(low (loop@Packet| 0))& (0+255)
  3992  0096  3181  21A6  3180   	fcall	_nrf24l01SendPacket
  3993                           
  3994                           ;main.c: 114: sleep();
  3995  0099  3187  27F5  3180   	fcall	_sleep
  3996                           
  3997                           ;main.c: 116: setMessage(Packet.Message, "FVR", getADCValue(0b111111, 208900) - 40);
  3998  009C  3034               	movlw	low (STR_6| (0+32768))
  3999  009D  0020               	movlb	0	; select bank0
  4000  009E  00C1               	movwf	setMessage@topic
  4001  009F  3090               	movlw	high (STR_6| (0+32768))
  4002  00A0  00C2               	movwf	setMessage@topic+1
  4003  00A1  30D8               	movlw	216
  4004  00A2  00D8               	movwf	??_loop
  4005  00A3  30FF               	movlw	255
  4006  00A4  00D9               	movwf	??_loop+1
  4007  00A5  30FF               	movlw	255
  4008  00A6  00DA               	movwf	??_loop+2
  4009  00A7  30FF               	movlw	255
  4010  00A8  00DB               	movwf	??_loop+3
  4011  00A9  3000               	movlw	0
  4012  00AA  00B6               	movwf	getADCValue@divider+3
  4013  00AB  3003               	movlw	3
  4014  00AC  00B5               	movwf	getADCValue@divider+2
  4015  00AD  3030               	movlw	48
  4016  00AE  00B4               	movwf	getADCValue@divider+1
  4017  00AF  3004               	movlw	4
  4018  00B0  00B3               	movwf	getADCValue@divider
  4019  00B1  303F               	movlw	63
  4020  00B2  3182  22CF  3180   	fcall	_getADCValue
  4021  00B5  0020               	movlb	0	; select bank0
  4022  00B6  0833               	movf	?_getADCValue,w
  4023  00B7  07D8               	addwf	??_loop,f
  4024  00B8  0834               	movf	?_getADCValue+1,w
  4025  00B9  3DD9               	addwfc	??_loop+1,f
  4026  00BA  0835               	movf	?_getADCValue+2,w
  4027  00BB  3DDA               	addwfc	??_loop+2,f
  4028  00BC  0836               	movf	?_getADCValue+3,w
  4029  00BD  3DDB               	addwfc	??_loop+3,f
  4030  00BE  085B               	movf	??_loop+3,w
  4031  00BF  00C6               	movwf	setMessage@value+3
  4032  00C0  085A               	movf	??_loop+2,w
  4033  00C1  00C5               	movwf	setMessage@value+2
  4034  00C2  0859               	movf	??_loop+1,w
  4035  00C3  00C4               	movwf	setMessage@value+1
  4036  00C4  0858               	movf	??_loop,w
  4037  00C5  00C3               	movwf	setMessage@value
  4038  00C6  30A1               	movlw	(low ((loop@Packet| 0+1)))& (0+255)
  4039  00C7  3184  2464  3180   	fcall	_setMessage
  4040                           
  4041                           ;main.c: 117: Packet.packetData.byte = 0;
  4042  00CA  0021               	movlb	1	; select bank1
  4043  00CB  01A0               	clrf	loop@Packet^(0+128)
  4044                           
  4045                           ;main.c: 118: Packet.packetData.ACKRequest = 0;
  4046  00CC  1020               	bcf	loop@Packet^(0+128),0
  4047                           
  4048                           ;main.c: 119: nrf24l01SendPacket(&Packet);
  4049  00CD  30A0               	movlw	(low (loop@Packet| 0))& (0+255)
  4050  00CE  3181  21A6  3180   	fcall	_nrf24l01SendPacket
  4051                           
  4052                           ;main.c: 120: sleep();
  4053  00D1  3187  27F5  3180   	fcall	_sleep
  4054                           
  4055                           ;main.c: 122: setMessage(Packet.Message, "TEMP", getADCValue(0b111101, 2475));
  4056  00D4  301D               	movlw	low (STR_7| (0+32768))
  4057  00D5  0020               	movlb	0	; select bank0
  4058  00D6  00C1               	movwf	setMessage@topic
  4059  00D7  3090               	movlw	high (STR_7| (0+32768))
  4060  00D8  00C2               	movwf	setMessage@topic+1
  4061  00D9  3000               	movlw	0
  4062  00DA  00B6               	movwf	getADCValue@divider+3
  4063  00DB  3000               	movlw	0
  4064  00DC  00B5               	movwf	getADCValue@divider+2
  4065  00DD  3009               	movlw	9
  4066  00DE  00B4               	movwf	getADCValue@divider+1
  4067  00DF  30AB               	movlw	171
  4068  00E0  00B3               	movwf	getADCValue@divider
  4069  00E1  303D               	movlw	61
  4070  00E2  3182  22CF  3180   	fcall	_getADCValue
  4071  00E5  0020               	movlb	0	; select bank0
  4072  00E6  0836               	movf	?_getADCValue+3,w
  4073  00E7  00C6               	movwf	setMessage@value+3
  4074  00E8  0835               	movf	?_getADCValue+2,w
  4075  00E9  00C5               	movwf	setMessage@value+2
  4076  00EA  0834               	movf	?_getADCValue+1,w
  4077  00EB  00C4               	movwf	setMessage@value+1
  4078  00EC  0833               	movf	?_getADCValue,w
  4079  00ED  00C3               	movwf	setMessage@value
  4080  00EE  30A1               	movlw	(low ((loop@Packet| 0+1)))& (0+255)
  4081  00EF  3184  2464  3180   	fcall	_setMessage
  4082                           
  4083                           ;main.c: 123: Packet.packetData.byte = 0;
  4084  00F2  0021               	movlb	1	; select bank1
  4085  00F3  01A0               	clrf	loop@Packet^(0+128)
  4086                           
  4087                           ;main.c: 124: Packet.packetData.ACKRequest = 0;
  4088  00F4  1020               	bcf	loop@Packet^(0+128),0
  4089                           
  4090                           ;main.c: 125: nrf24l01SendPacket(&Packet);
  4091  00F5  30A0               	movlw	(low (loop@Packet| 0))& (0+255)
  4092  00F6  3181  21A6  3180   	fcall	_nrf24l01SendPacket
  4093                           
  4094                           ;main.c: 126: sleep();
  4095  00F9  3187  27F5         	fcall	_sleep
  4096  00FB  0008               	return
  4097  00FC                     __end_of_loop:	
  4098                           
  4099                           	psect	text6
  4100  07F5                     __ptext6:	
  4101 ;; *************** function _sleep *****************
  4102 ;; Defined at:
  4103 ;;		line 49 in file "main.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		None
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    7
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_loop
  4128 ;;		_main
  4129 ;;		_checkRxData
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _sleep
  4135  07F5                     _sleep:	
  4136  07F5                     l215:	
  4137                           ;incstack = 0
  4138                           ; Regs used in _sleep: []
  4139                           ;main.c: 50: while (1){
  4140                           
  4141  07F5  0063               	sleep	;# 
  4142                           
  4143                           ;main.c: 53: __nop();
  4144  07F6  0000               	nop
  4145                           
  4146                           ;main.c: 54: __nop();
  4147  07F7  0000               	nop
  4148                           
  4149                           ;main.c: 56: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4150  07F8  0020               	movlb	0	; select bank0
  4151  07F9  1A03               	btfsc	3,4	;volatile
  4152  07FA  2FF5               	goto	l215
  4153  07FB  1D83               	btfss	3,3	;volatile
  4154  07FC  0008               	return
  4155  07FD  2FF5               	goto	l215
  4156  07FE                     __end_of_sleep:	
  4157                           ;main.c: 57: return;
  4158                           
  4159                           
  4160                           	psect	text7
  4161  0464                     __ptext7:	
  4162 ;; *************** function _setMessage *****************
  4163 ;; Defined at:
  4164 ;;		line 74 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  message         1    wreg     PTR unsigned char 
  4167 ;;		 -> main@Packet(33), loop@Packet(33), 
  4168 ;;  topic           2   33[BANK0 ] PTR const unsigned char 
  4169 ;;		 -> STR_9(5), STR_7(5), STR_6(4), STR_5(5), 
  4170 ;;		 -> STR_4(5), STR_3(4), 
  4171 ;;  value           4   35[BANK0 ] unsigned long 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  message         1   55[BANK0 ] PTR unsigned char 
  4174 ;;		 -> main@Packet(33), loop@Packet(33), 
  4175 ;;  tempString     16   39[BANK0 ] unsigned char [16]
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4185 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;Total ram usage:       23 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    9
  4192 ;; This function calls:
  4193 ;;		_memset
  4194 ;;		_strcat
  4195 ;;		_utoa
  4196 ;; This function is called by:
  4197 ;;		_loop
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _setMessage
  4204  0464                     _setMessage:	
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _setMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4208                           ;setMessage@message stored from wreg
  4209  0464  0020               	movlb	0	; select bank0
  4210  0465  00D7               	movwf	setMessage@message
  4211                           
  4212                           ;main.c: 75: memset(message, 0, sizeof(message));
  4213  0466  0857               	movf	setMessage@message,w
  4214  0467  00A5               	movwf	memset@p1
  4215  0468  3000               	movlw	0
  4216  0469  00A6               	movwf	memset@p1+1
  4217  046A  3000               	movlw	0
  4218  046B  00A7               	movwf	memset@c
  4219  046C  00A8               	movwf	memset@c+1
  4220  046D  3001               	movlw	1
  4221  046E  00A9               	movwf	memset@n
  4222  046F  3000               	movlw	0
  4223  0470  00AA               	movwf	memset@n+1
  4224  0471  318F  2795  3184   	fcall	_memset
  4225                           
  4226                           ;main.c: 77: strcat(message, romData.name);
  4227  0474  3042               	movlw	low (_romData+1)
  4228  0475  0020               	movlb	0	; select bank0
  4229  0476  00A5               	movwf	strcat@from
  4230  0477  3001               	movlw	high (_romData+1)
  4231  0478  00A6               	movwf	strcat@from+1
  4232  0479  0857               	movf	setMessage@message,w
  4233  047A  3186  26AC  3184   	fcall	_strcat
  4234                           
  4235                           ;main.c: 79: strcat(message, "/");
  4236  047D  3038               	movlw	low (STR_1| (0+32768))
  4237  047E  0020               	movlb	0	; select bank0
  4238  047F  00A5               	movwf	strcat@from
  4239  0480  3090               	movlw	high (STR_1| (0+32768))
  4240  0481  00A6               	movwf	strcat@from+1
  4241  0482  0857               	movf	setMessage@message,w
  4242  0483  3186  26AC  3184   	fcall	_strcat
  4243                           
  4244                           ;main.c: 80: strcat(message, topic);
  4245  0486  0020               	movlb	0	; select bank0
  4246  0487  0842               	movf	setMessage@topic+1,w
  4247  0488  00A6               	movwf	strcat@from+1
  4248  0489  0841               	movf	setMessage@topic,w
  4249  048A  00A5               	movwf	strcat@from
  4250  048B  0857               	movf	setMessage@message,w
  4251  048C  3186  26AC  3184   	fcall	_strcat
  4252                           
  4253                           ;main.c: 82: char tempString[16];;main.c: 83: utoa(tempString, value, 10);
  4254  048F  0020               	movlb	0	; select bank0
  4255  0490  0844               	movf	setMessage@value+1,w
  4256  0491  00AE               	movwf	utoa@val+1
  4257  0492  0843               	movf	setMessage@value,w
  4258  0493  00AD               	movwf	utoa@val
  4259  0494  300A               	movlw	10
  4260  0495  00AF               	movwf	utoa@base
  4261  0496  3000               	movlw	0
  4262  0497  00B0               	movwf	utoa@base+1
  4263  0498  3047               	movlw	(low (setMessage@tempString| 0))& (0+255)
  4264  0499  3183  2357  3184   	fcall	_utoa
  4265                           
  4266                           ;main.c: 85: strcat(message, "/");
  4267  049C  3038               	movlw	low (STR_1| (0+32768))
  4268  049D  0020               	movlb	0	; select bank0
  4269  049E  00A5               	movwf	strcat@from
  4270  049F  3090               	movlw	high (STR_1| (0+32768))
  4271  04A0  00A6               	movwf	strcat@from+1
  4272  04A1  0857               	movf	setMessage@message,w
  4273  04A2  3186  26AC  3184   	fcall	_strcat
  4274                           
  4275                           ;main.c: 86: strcat(message, tempString);
  4276  04A5  3047               	movlw	low setMessage@tempString
  4277  04A6  0020               	movlb	0	; select bank0
  4278  04A7  00A5               	movwf	strcat@from
  4279  04A8  3000               	movlw	high setMessage@tempString
  4280  04A9  00A6               	movwf	strcat@from+1
  4281  04AA  0857               	movf	setMessage@message,w
  4282  04AB  3186  26AC         	fcall	_strcat
  4283  04AD  0008               	return
  4284  04AE                     __end_of_setMessage:	
  4285                           
  4286                           	psect	text8
  4287  0357                     __ptext8:	
  4288 ;; *************** function _utoa *****************
  4289 ;; Defined at:
  4290 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  buf             1    wreg     PTR unsigned char 
  4293 ;;		 -> setMessage@tempString(16), 
  4294 ;;  val             2   13[BANK0 ] unsigned int 
  4295 ;;  base            2   15[BANK0 ] int 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  buf             1   21[BANK0 ] PTR unsigned char 
  4298 ;;		 -> setMessage@tempString(16), 
  4299 ;;  v               2   18[BANK0 ] unsigned int 
  4300 ;;  c               1   20[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      PTR unsigned char 
  4303 ;; Registers used:
  4304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;Total ram usage:        9 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    8
  4317 ;; This function calls:
  4318 ;;		___lwdiv
  4319 ;;		___lwmod
  4320 ;; This function is called by:
  4321 ;;		_setMessage
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function _utoa
  4327  0357                     _utoa:	
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4331                           ;utoa@buf stored from wreg
  4332  0357  0020               	movlb	0	; select bank0
  4333  0358  00B5               	movwf	utoa@buf
  4334  0359  082E               	movf	utoa@val+1,w
  4335  035A  00B3               	movwf	utoa@v+1
  4336  035B  082D               	movf	utoa@val,w
  4337  035C  00B2               	movwf	utoa@v
  4338  035D                     l2019:	
  4339  035D  0830               	movf	utoa@base+1,w
  4340  035E  00A6               	movwf	___lwdiv@divisor+1
  4341  035F  082F               	movf	utoa@base,w
  4342  0360  00A5               	movwf	___lwdiv@divisor
  4343  0361  0833               	movf	utoa@v+1,w
  4344  0362  00A8               	movwf	___lwdiv@dividend+1
  4345  0363  0832               	movf	utoa@v,w
  4346  0364  00A7               	movwf	___lwdiv@dividend
  4347  0365  3185  255C  3183   	fcall	___lwdiv
  4348  0368  0020               	movlb	0	; select bank0
  4349  0369  0826               	movf	?___lwdiv+1,w
  4350  036A  00B3               	movwf	utoa@v+1
  4351  036B  0825               	movf	?___lwdiv,w
  4352  036C  00B2               	movwf	utoa@v
  4353  036D  3001               	movlw	1
  4354  036E  00B1               	movwf	??_utoa
  4355  036F  0831               	movf	??_utoa,w
  4356  0370  07B5               	addwf	utoa@buf,f
  4357  0371  0832               	movf	utoa@v,w
  4358  0372  0433               	iorwf	utoa@v+1,w
  4359  0373  1D03               	btfss	3,2
  4360  0374  2B5D               	goto	l2019
  4361  0375  0835               	movf	utoa@buf,w
  4362  0376  0086               	movwf	6
  4363  0377  0187               	clrf	7
  4364  0378  0181               	clrf	1
  4365  0379  3001               	movlw	1
  4366  037A  02B5               	subwf	utoa@buf,f
  4367  037B                     l2029:	
  4368  037B  0830               	movf	utoa@base+1,w
  4369  037C  00A6               	movwf	___lwmod@divisor+1
  4370  037D  082F               	movf	utoa@base,w
  4371  037E  00A5               	movwf	___lwmod@divisor
  4372  037F  082E               	movf	utoa@val+1,w
  4373  0380  00A8               	movwf	___lwmod@dividend+1
  4374  0381  082D               	movf	utoa@val,w
  4375  0382  00A7               	movwf	___lwmod@dividend
  4376  0383  3186  2655  3183   	fcall	___lwmod
  4377  0386  0020               	movlb	0	; select bank0
  4378  0387  0825               	movf	?___lwmod,w
  4379  0388  00B1               	movwf	??_utoa
  4380  0389  0831               	movf	??_utoa,w
  4381  038A  00B4               	movwf	utoa@c
  4382  038B  0830               	movf	utoa@base+1,w
  4383  038C  00A6               	movwf	___lwdiv@divisor+1
  4384  038D  082F               	movf	utoa@base,w
  4385  038E  00A5               	movwf	___lwdiv@divisor
  4386  038F  082E               	movf	utoa@val+1,w
  4387  0390  00A8               	movwf	___lwdiv@dividend+1
  4388  0391  082D               	movf	utoa@val,w
  4389  0392  00A7               	movwf	___lwdiv@dividend
  4390  0393  3185  255C  3183   	fcall	___lwdiv
  4391  0396  0020               	movlb	0	; select bank0
  4392  0397  0826               	movf	?___lwdiv+1,w
  4393  0398  00AE               	movwf	utoa@val+1
  4394  0399  0825               	movf	?___lwdiv,w
  4395  039A  00AD               	movwf	utoa@val
  4396  039B  300A               	movlw	10
  4397  039C  0234               	subwf	utoa@c,w
  4398  039D  1C03               	skipc
  4399  039E  2BA3               	goto	l840
  4400  039F  3007               	movlw	7
  4401  03A0  00B1               	movwf	??_utoa
  4402  03A1  0831               	movf	??_utoa,w
  4403  03A2  07B4               	addwf	utoa@c,f
  4404  03A3                     l840:	
  4405  03A3  3030               	movlw	48
  4406  03A4  00B1               	movwf	??_utoa
  4407  03A5  0831               	movf	??_utoa,w
  4408  03A6  07B4               	addwf	utoa@c,f
  4409  03A7  0834               	movf	utoa@c,w
  4410  03A8  00B1               	movwf	??_utoa
  4411  03A9  0835               	movf	utoa@buf,w
  4412  03AA  0086               	movwf	6
  4413  03AB  0187               	clrf	7
  4414  03AC  0831               	movf	??_utoa,w
  4415  03AD  0081               	movwf	1
  4416  03AE  3001               	movlw	1
  4417  03AF  02B5               	subwf	utoa@buf,f
  4418  03B0  082D               	movf	utoa@val,w
  4419  03B1  042E               	iorwf	utoa@val+1,w
  4420  03B2  1D03               	btfss	3,2
  4421  03B3  2B7B               	goto	l2029
  4422                           
  4423                           ;	Return value of _utoa is never used
  4424  03B4  3001               	movlw	1
  4425  03B5  00B1               	movwf	??_utoa
  4426  03B6  0831               	movf	??_utoa,w
  4427  03B7  07B5               	addwf	utoa@buf,f
  4428  03B8  0008               	return
  4429  03B9                     __end_of_utoa:	
  4430                           
  4431                           	psect	text9
  4432  0655                     __ptext9:	
  4433 ;; *************** function ___lwmod *****************
  4434 ;; Defined at:
  4435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  divisor         2    5[BANK0 ] unsigned int 
  4438 ;;  dividend        2    7[BANK0 ] unsigned int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  counter         1   10[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    5[BANK0 ] unsigned int 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;Total ram usage:        6 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    7
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_utoa
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function ___lwmod
  4466  0655                     ___lwmod:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4470  0655  0020               	movlb	0	; select bank0
  4471  0656  0825               	movf	___lwmod@divisor,w
  4472  0657  0426               	iorwf	___lwmod@divisor+1,w
  4473  0658  1903               	btfsc	3,2
  4474  0659  2E7D               	goto	l1901
  4475  065A  01AA               	clrf	___lwmod@counter
  4476  065B  0AAA               	incf	___lwmod@counter,f
  4477  065C                     l1891:	
  4478  065C  1BA6               	btfsc	___lwmod@divisor+1,7
  4479  065D  2E68               	goto	l1893
  4480  065E  3001               	movlw	1
  4481  065F                     u855:	
  4482  065F  35A5               	lslf	___lwmod@divisor,f
  4483  0660  0DA6               	rlf	___lwmod@divisor+1,f
  4484  0661  0B89               	decfsz	9,f
  4485  0662  2E5F               	goto	u855
  4486  0663  3001               	movlw	1
  4487  0664  00A9               	movwf	??___lwmod
  4488  0665  0829               	movf	??___lwmod,w
  4489  0666  07AA               	addwf	___lwmod@counter,f
  4490  0667  2E5C               	goto	l1891
  4491  0668                     l1893:	
  4492  0668  0826               	movf	___lwmod@divisor+1,w
  4493  0669  0228               	subwf	___lwmod@dividend+1,w
  4494  066A  1D03               	skipz
  4495  066B  2E6E               	goto	u875
  4496  066C  0825               	movf	___lwmod@divisor,w
  4497  066D  0227               	subwf	___lwmod@dividend,w
  4498  066E                     u875:	
  4499  066E  1C03               	skipc
  4500  066F  2E74               	goto	l1897
  4501  0670  0825               	movf	___lwmod@divisor,w
  4502  0671  02A7               	subwf	___lwmod@dividend,f
  4503  0672  0826               	movf	___lwmod@divisor+1,w
  4504  0673  3BA8               	subwfb	___lwmod@dividend+1,f
  4505  0674                     l1897:	
  4506  0674  3001               	movlw	1
  4507  0675                     u885:	
  4508  0675  36A6               	lsrf	___lwmod@divisor+1,f
  4509  0676  0CA5               	rrf	___lwmod@divisor,f
  4510  0677  0B89               	decfsz	9,f
  4511  0678  2E75               	goto	u885
  4512  0679  3001               	movlw	1
  4513  067A  02AA               	subwf	___lwmod@counter,f
  4514  067B  1D03               	btfss	3,2
  4515  067C  2E68               	goto	l1893
  4516  067D                     l1901:	
  4517  067D  0828               	movf	___lwmod@dividend+1,w
  4518  067E  00A6               	movwf	?___lwmod+1
  4519  067F  0827               	movf	___lwmod@dividend,w
  4520  0680  00A5               	movwf	?___lwmod
  4521  0681  0008               	return
  4522  0682                     __end_of___lwmod:	
  4523                           
  4524                           	psect	text10
  4525  055C                     __ptext10:	
  4526 ;; *************** function ___lwdiv *****************
  4527 ;; Defined at:
  4528 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  divisor         2    5[BANK0 ] unsigned int 
  4531 ;;  dividend        2    7[BANK0 ] unsigned int 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  quotient        2   10[BANK0 ] unsigned int 
  4534 ;;  counter         1   12[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2    5[BANK0 ] unsigned int 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        8 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    7
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_utoa
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function ___lwdiv
  4560  055C                     ___lwdiv:	
  4561                           
  4562                           ;incstack = 0
  4563                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4564  055C  0020               	movlb	0	; select bank0
  4565  055D  01AA               	clrf	___lwdiv@quotient
  4566  055E  01AB               	clrf	___lwdiv@quotient+1
  4567  055F  0825               	movf	___lwdiv@divisor,w
  4568  0560  0426               	iorwf	___lwdiv@divisor+1,w
  4569  0561  1903               	btfsc	3,2
  4570  0562  2D8C               	goto	l1879
  4571  0563  01AC               	clrf	___lwdiv@counter
  4572  0564  0AAC               	incf	___lwdiv@counter,f
  4573  0565                     l1867:	
  4574  0565  1BA6               	btfsc	___lwdiv@divisor+1,7
  4575  0566  2D71               	goto	l1869
  4576  0567  3001               	movlw	1
  4577  0568                     u785:	
  4578  0568  35A5               	lslf	___lwdiv@divisor,f
  4579  0569  0DA6               	rlf	___lwdiv@divisor+1,f
  4580  056A  0B89               	decfsz	9,f
  4581  056B  2D68               	goto	u785
  4582  056C  3001               	movlw	1
  4583  056D  00A9               	movwf	??___lwdiv
  4584  056E  0829               	movf	??___lwdiv,w
  4585  056F  07AC               	addwf	___lwdiv@counter,f
  4586  0570  2D65               	goto	l1867
  4587  0571                     l1869:	
  4588  0571  3001               	movlw	1
  4589  0572                     u805:	
  4590  0572  35AA               	lslf	___lwdiv@quotient,f
  4591  0573  0DAB               	rlf	___lwdiv@quotient+1,f
  4592  0574  0B89               	decfsz	9,f
  4593  0575  2D72               	goto	u805
  4594  0576  0826               	movf	___lwdiv@divisor+1,w
  4595  0577  0228               	subwf	___lwdiv@dividend+1,w
  4596  0578  1D03               	skipz
  4597  0579  2D7C               	goto	u815
  4598  057A  0825               	movf	___lwdiv@divisor,w
  4599  057B  0227               	subwf	___lwdiv@dividend,w
  4600  057C                     u815:	
  4601  057C  1C03               	skipc
  4602  057D  2D83               	goto	l1875
  4603  057E  0825               	movf	___lwdiv@divisor,w
  4604  057F  02A7               	subwf	___lwdiv@dividend,f
  4605  0580  0826               	movf	___lwdiv@divisor+1,w
  4606  0581  3BA8               	subwfb	___lwdiv@dividend+1,f
  4607  0582  142A               	bsf	___lwdiv@quotient,0
  4608  0583                     l1875:	
  4609  0583  3001               	movlw	1
  4610  0584                     u825:	
  4611  0584  36A6               	lsrf	___lwdiv@divisor+1,f
  4612  0585  0CA5               	rrf	___lwdiv@divisor,f
  4613  0586  0B89               	decfsz	9,f
  4614  0587  2D84               	goto	u825
  4615  0588  3001               	movlw	1
  4616  0589  02AC               	subwf	___lwdiv@counter,f
  4617  058A  1D03               	btfss	3,2
  4618  058B  2D71               	goto	l1869
  4619  058C                     l1879:	
  4620  058C  082B               	movf	___lwdiv@quotient+1,w
  4621  058D  00A6               	movwf	?___lwdiv+1
  4622  058E  082A               	movf	___lwdiv@quotient,w
  4623  058F  00A5               	movwf	?___lwdiv
  4624  0590  0008               	return
  4625  0591                     __end_of___lwdiv:	
  4626                           
  4627                           	psect	text11
  4628  06AC                     __ptext11:	
  4629 ;; *************** function _strcat *****************
  4630 ;; Defined at:
  4631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcat.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  to              1    wreg     PTR unsigned char 
  4634 ;;		 -> main@Packet(33), loop@Packet(33), 
  4635 ;;  from            2    5[BANK0 ] PTR const unsigned char 
  4636 ;;		 -> STR_9(5), STR_7(5), STR_6(4), STR_5(5), 
  4637 ;;		 -> STR_4(5), STR_3(4), STR_2(2), setMessage@tempString(16), 
  4638 ;;		 -> STR_1(2), romData.name(16), romData(19), 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  to              1    9[BANK0 ] PTR unsigned char 
  4641 ;;		 -> main@Packet(33), loop@Packet(33), 
  4642 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  4643 ;;		 -> main@Packet(33), loop@Packet(33), 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      PTR unsigned char 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;Total ram usage:        5 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    7
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_setMessage
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _strcat
  4669  06AC                     _strcat:	
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  4673                           ;strcat@to stored from wreg
  4674  06AC  0020               	movlb	0	; select bank0
  4675  06AD  00A9               	movwf	strcat@to
  4676  06AE  0829               	movf	strcat@to,w
  4677  06AF  00A7               	movwf	??_strcat
  4678  06B0  0827               	movf	??_strcat,w
  4679  06B1  00A8               	movwf	strcat@cp
  4680  06B2                     l2009:	
  4681  06B2  0828               	movf	strcat@cp,w
  4682  06B3  0086               	movwf	6
  4683  06B4  0187               	clrf	7
  4684  06B5  0801               	movf	1,w
  4685  06B6  1903               	btfsc	3,2
  4686  06B7  2EC5               	goto	l2015
  4687  06B8  3001               	movlw	1
  4688  06B9  00A7               	movwf	??_strcat
  4689  06BA  0827               	movf	??_strcat,w
  4690  06BB  07A8               	addwf	strcat@cp,f
  4691  06BC  2EB2               	goto	l2009
  4692  06BD                     l2011:	
  4693  06BD  3001               	movlw	1
  4694  06BE  00A7               	movwf	??_strcat
  4695  06BF  0827               	movf	??_strcat,w
  4696  06C0  07A8               	addwf	strcat@cp,f
  4697  06C1  3001               	movlw	1
  4698  06C2  07A5               	addwf	strcat@from,f
  4699  06C3  3000               	movlw	0
  4700  06C4  3DA6               	addwfc	strcat@from+1,f
  4701  06C5                     l2015:	
  4702  06C5  0828               	movf	strcat@cp,w
  4703  06C6  0086               	movwf	6
  4704  06C7  0187               	clrf	7
  4705  06C8  0825               	movf	strcat@from,w
  4706  06C9  0084               	movwf	4
  4707  06CA  0826               	movf	strcat@from+1,w
  4708  06CB  0085               	movwf	5
  4709  06CC  0800               	movf	0,w	;code access
  4710  06CD  3FC0               	movwi [0]fsr1
  4711  06CE  0889               	movf	9,f
  4712  06CF  1903               	btfsc	3,2
  4713  06D0  0008               	return
  4714  06D1  2EBD               	goto	l2011
  4715  06D2                     __end_of_strcat:	
  4716                           ;	Return value of _strcat is never used
  4717                           
  4718                           
  4719                           	psect	text12
  4720  0F95                     __ptext12:	
  4721 ;; *************** function _memset *****************
  4722 ;; Defined at:
  4723 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  p1              2    5[BANK0 ] PTR void 
  4726 ;;		 -> RXPacket(33), main@Packet(33), loop@Packet(33), 
  4727 ;;  c               2    7[BANK0 ] int 
  4728 ;;  n               2    9[BANK0 ] unsigned int 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  p               2   11[BANK0 ] PTR unsigned char 
  4731 ;;		 -> RXPacket(33), main@Packet(33), loop@Packet(33), 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  2    5[BANK0 ] PTR void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        8 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    7
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_setMessage
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _memset
  4757  0F95                     _memset:	
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4761  0F95  0020               	movlb	0	; select bank0
  4762  0F96  0826               	movf	memset@p1+1,w
  4763  0F97  00AC               	movwf	memset@p+1
  4764  0F98  0825               	movf	memset@p1,w
  4765  0F99  00AB               	movwf	memset@p
  4766  0F9A                     l2741:	
  4767  0F9A  3001               	movlw	1
  4768  0F9B  02A9               	subwf	memset@n,f
  4769  0F9C  3000               	movlw	0
  4770  0F9D  3BAA               	subwfb	memset@n+1,f
  4771  0F9E  0A29               	incf	memset@n,w
  4772  0F9F  1903               	btfsc	3,2
  4773  0FA0  0A2A               	incf	memset@n+1,w
  4774  0FA1  1903               	btfsc	3,2
  4775  0FA2  0008               	return
  4776  0FA3  082B               	movf	memset@p,w
  4777  0FA4  0086               	movwf	6
  4778  0FA5  082C               	movf	memset@p+1,w
  4779  0FA6  0087               	movwf	7
  4780  0FA7  0827               	movf	memset@c,w
  4781  0FA8  0081               	movwf	1
  4782  0FA9  3001               	movlw	1
  4783  0FAA  07AB               	addwf	memset@p,f
  4784  0FAB  3000               	movlw	0
  4785  0FAC  3DAC               	addwfc	memset@p+1,f
  4786  0FAD  2F9A               	goto	l2741
  4787  0FAE                     __end_of_memset:	
  4788                           ;	Return value of _memset is never used
  4789                           
  4790                           
  4791                           	psect	text13
  4792  01A6                     __ptext13:	
  4793 ;; *************** function _nrf24l01SendPacket *****************
  4794 ;; Defined at:
  4795 ;;		line 160 in file "nrf24l01.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  Packet          1    wreg     PTR struct .
  4798 ;;		 -> main@Packet(33), loop@Packet(33), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  Packet          1   13[BANK0 ] PTR struct .
  4801 ;;		 -> main@Packet(33), loop@Packet(33), 
  4802 ;;  i               1   14[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        4 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:   11
  4819 ;; This function calls:
  4820 ;;		_enableInterrupts
  4821 ;;		_nrf24l01CEHigh
  4822 ;;		_nrf24l01CELow
  4823 ;;		_nrf24l01SPIEnd
  4824 ;;		_nrf24l01SPISend
  4825 ;;		_nrf24l01SPIStart
  4826 ;;		_nrf24l01SetRXMode
  4827 ;;		_strlen
  4828 ;; This function is called by:
  4829 ;;		_loop
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function _nrf24l01SendPacket
  4836  01A6                     _nrf24l01SendPacket:	
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in _nrf24l01SendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4840                           ;nrf24l01SendPacket@Packet stored from wreg
  4841  01A6  0020               	movlb	0	; select bank0
  4842  01A7  00AD               	movwf	nrf24l01SendPacket@Packet
  4843                           
  4844                           ;nrf24l01.c: 162: TXPacket = Packet;
  4845  01A8  082D               	movf	nrf24l01SendPacket@Packet,w
  4846  01A9  00AB               	movwf	??_nrf24l01SendPacket
  4847  01AA  082B               	movf	??_nrf24l01SendPacket,w
  4848  01AB  00DD               	movwf	_TXPacket
  4849  01AC                     l301:	
  4850                           ;nrf24l01.c: 165: unsigned char i;;nrf24l01.c: 169: RESEND:
  4851                           
  4852                           
  4853                           ;nrf24l01.c: 172: i = 0xFF;
  4854  01AC  30FF               	movlw	255
  4855  01AD  00AB               	movwf	??_nrf24l01SendPacket
  4856  01AE  082B               	movf	??_nrf24l01SendPacket,w
  4857  01AF  00AE               	movwf	nrf24l01SendPacket@i
  4858  01B0                     l2789:	
  4859                           ;nrf24l01.c: 173: while (nrf24l01.TXBusy){
  4860                           
  4861  01B0  0020               	movlb	0	; select bank0
  4862  01B1  1C5F               	btfss	_nrf24l01,0	;volatile
  4863  01B2  29BC               	goto	l305
  4864                           
  4865                           ;nrf24l01.c: 174: if (!--i) {
  4866  01B3  3001               	movlw	1
  4867  01B4  02AE               	subwf	nrf24l01SendPacket@i,f
  4868  01B5  1903               	btfsc	3,2
  4869  01B6  29AC               	goto	l301
  4870                           
  4871                           ;nrf24l01.c: 176: };nrf24l01.c: 177: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4872                           
  4873                           ;nrf24l01.c: 175: goto RESEND;
  4874  01B7  3042               	movlw	66
  4875  01B8                     u1757:	
  4876  01B8  0B89               	decfsz	9,f
  4877  01B9  29B8               	goto	u1757
  4878  01BA  3200               	nop2
  4879  01BB  29B0               	goto	l2789
  4880  01BC                     l305:	
  4881                           
  4882                           ;nrf24l01.c: 178: };nrf24l01.c: 181: nrf24l01.TXBusy = 1;
  4883  01BC  145F               	bsf	_nrf24l01,0	;volatile
  4884                           
  4885                           ;nrf24l01.c: 184: enableInterrupts(0);
  4886  01BD  3000               	movlw	0
  4887  01BE  318F  2748  3181   	fcall	_enableInterrupts
  4888                           
  4889                           ;nrf24l01.c: 187: nrf24l01SetRXMode(0);
  4890  01C1  3000               	movlw	0
  4891  01C2  3184  24EA  3181   	fcall	_nrf24l01SetRXMode
  4892                           
  4893                           ;nrf24l01.c: 190: nrf24l01SPIStart();
  4894  01C5  318F  2750  3181   	fcall	_nrf24l01SPIStart
  4895                           
  4896                           ;nrf24l01.c: 193: nrf24l01SPISend(0b10110000);
  4897  01C8  30B0               	movlw	176
  4898  01C9  318F  2758  3181   	fcall	_nrf24l01SPISend
  4899                           
  4900                           ;nrf24l01.c: 195: nrf24l01SPISend(TXPacket->packetData.byte);
  4901  01CC  0020               	movlb	0	; select bank0
  4902  01CD  085D               	movf	_TXPacket,w
  4903  01CE  0086               	movwf	6
  4904  01CF  0187               	clrf	7
  4905  01D0  0801               	movf	1,w
  4906  01D1  318F  2758  3181   	fcall	_nrf24l01SPISend
  4907                           
  4908                           ;nrf24l01.c: 198: for (i = 0; (i < strlen(TXPacket->Message)) && (i < sizeof(TXPacket->M
      +                          essage)); i++){
  4909  01D4  0020               	movlb	0	; select bank0
  4910  01D5  01AE               	clrf	nrf24l01SendPacket@i
  4911  01D6  29E7               	goto	l2801
  4912  01D7                     l2797:	
  4913                           
  4914                           ;nrf24l01.c: 199: nrf24l01SPISend(TXPacket->Message[i]);
  4915  01D7  082E               	movf	nrf24l01SendPacket@i,w
  4916  01D8  3E01               	addlw	1
  4917  01D9  075D               	addwf	_TXPacket,w
  4918  01DA  00AB               	movwf	??_nrf24l01SendPacket
  4919  01DB  082B               	movf	??_nrf24l01SendPacket,w
  4920  01DC  0086               	movwf	6
  4921  01DD  0187               	clrf	7
  4922  01DE  0801               	movf	1,w
  4923  01DF  318F  2758  3181   	fcall	_nrf24l01SPISend
  4924  01E2  3001               	movlw	1
  4925  01E3  0020               	movlb	0	; select bank0
  4926  01E4  00AB               	movwf	??_nrf24l01SendPacket
  4927  01E5  082B               	movf	??_nrf24l01SendPacket,w
  4928  01E6  07AE               	addwf	nrf24l01SendPacket@i,f
  4929  01E7                     l2801:	
  4930  01E7  085D               	movf	_TXPacket,w
  4931  01E8  3E01               	addlw	1
  4932  01E9  00A5               	movwf	strlen@s
  4933  01EA  39FF               	andlw	255
  4934  01EB  1D03               	skipz
  4935  01EC  3000               	movlw	0
  4936  01ED  00A6               	movwf	strlen@s+1
  4937  01EE  3187  279C  3181   	fcall	_strlen
  4938  01F1  0020               	movlb	0	; select bank0
  4939  01F2  082E               	movf	nrf24l01SendPacket@i,w
  4940  01F3  00AB               	movwf	??_nrf24l01SendPacket
  4941  01F4  01AC               	clrf	??_nrf24l01SendPacket+1
  4942  01F5  0826               	movf	?_strlen+1,w
  4943  01F6  022C               	subwf	??_nrf24l01SendPacket+1,w
  4944  01F7  1D03               	skipz
  4945  01F8  29FB               	goto	u1575
  4946  01F9  0825               	movf	?_strlen,w
  4947  01FA  022B               	subwf	??_nrf24l01SendPacket,w
  4948  01FB                     u1575:	
  4949  01FB  1803               	skipnc
  4950  01FC  2A01               	goto	l2805
  4951  01FD  3020               	movlw	32
  4952  01FE  022E               	subwf	nrf24l01SendPacket@i,w
  4953  01FF  1C03               	skipc
  4954  0200  29D7               	goto	l2797
  4955  0201                     l2805:	
  4956                           
  4957                           ;nrf24l01.c: 200: };nrf24l01.c: 203: nrf24l01SPIEnd();
  4958  0201  318F  2741  3181   	fcall	_nrf24l01SPIEnd
  4959                           
  4960                           ;nrf24l01.c: 206: nrf24l01CEHigh();
  4961  0204  318F  272F  3181   	fcall	_nrf24l01CEHigh
  4962                           
  4963                           ;nrf24l01.c: 207: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4964  0207  301A               	movlw	26
  4965  0208                     u1767:	
  4966  0208  0B89               	decfsz	9,f
  4967  0209  2A08               	goto	u1767
  4968  020A  3200               	nop2
  4969                           
  4970                           ;nrf24l01.c: 208: nrf24l01CELow();
  4971  020B  318F  2732  3181   	fcall	_nrf24l01CELow
  4972                           
  4973                           ;nrf24l01.c: 211: enableInterrupts(1);
  4974  020E  3001               	movlw	1
  4975  020F  318F  2748  3181   	fcall	_enableInterrupts
  4976                           
  4977                           ;nrf24l01.c: 214: i = 0xFF;
  4978  0212  30FF               	movlw	255
  4979  0213  0020               	movlb	0	; select bank0
  4980  0214  00AB               	movwf	??_nrf24l01SendPacket
  4981  0215  082B               	movf	??_nrf24l01SendPacket,w
  4982  0216  00AE               	movwf	nrf24l01SendPacket@i
  4983  0217                     l2819:	
  4984                           ;nrf24l01.c: 215: while (nrf24l01.TXBusy){
  4985                           
  4986  0217  0020               	movlb	0	; select bank0
  4987  0218  1C5F               	btfss	_nrf24l01,0	;volatile
  4988  0219  2A23               	goto	l2821
  4989                           
  4990                           ;nrf24l01.c: 216: if (!--i) {
  4991  021A  3001               	movlw	1
  4992  021B  02AE               	subwf	nrf24l01SendPacket@i,f
  4993  021C  1903               	btfsc	3,2
  4994  021D  29AC               	goto	l301
  4995                           
  4996                           ;nrf24l01.c: 218: };nrf24l01.c: 219: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4997                           
  4998                           ;nrf24l01.c: 217: goto RESEND;
  4999  021E  301A               	movlw	26
  5000  021F                     u1777:	
  5001  021F  0B89               	decfsz	9,f
  5002  0220  2A1F               	goto	u1777
  5003  0221  3200               	nop2
  5004  0222  2A17               	goto	l2819
  5005  0223                     l2821:	
  5006                           
  5007                           ;nrf24l01.c: 220: };nrf24l01.c: 224: i = 0xFF;
  5008  0223  30FF               	movlw	255
  5009  0224  00AB               	movwf	??_nrf24l01SendPacket
  5010  0225  082B               	movf	??_nrf24l01SendPacket,w
  5011  0226  00AE               	movwf	nrf24l01SendPacket@i
  5012  0227                     l2829:	
  5013                           ;nrf24l01.c: 225: while (TXPacket->packetData.ACKRequest){
  5014                           
  5015  0227  0020               	movlb	0	; select bank0
  5016  0228  085D               	movf	_TXPacket,w
  5017  0229  0086               	movwf	6
  5018  022A  0187               	clrf	7
  5019  022B  1C01               	btfss	1,0
  5020  022C  0008               	return
  5021                           
  5022                           ;nrf24l01.c: 226: if (!--i) {
  5023  022D  3001               	movlw	1
  5024  022E  02AE               	subwf	nrf24l01SendPacket@i,f
  5025  022F  1903               	btfsc	3,2
  5026  0230  29AC               	goto	l301
  5027                           
  5028                           ;nrf24l01.c: 228: };nrf24l01.c: 229: counter++;
  5029                           
  5030                           ;nrf24l01.c: 227: goto RESEND;
  5031  0231  3001               	movlw	1
  5032  0232  0021               	movlb	1	; select bank1
  5033  0233  07E2               	addwf	_counter^(0+128),f
  5034  0234  3000               	movlw	0
  5035  0235  3DE3               	addwfc	(_counter+1)^(0+128),f
  5036                           
  5037                           ;nrf24l01.c: 230: _delay((unsigned long)((500)*(16000000/4000000.0)));
  5038  0236  3003               	movlw	3
  5039  0237  0020               	movlb	0	; select bank0
  5040  0238  00AB               	movwf	??_nrf24l01SendPacket
  5041  0239  3097               	movlw	151
  5042  023A                     u1787:	
  5043  023A  0B89               	decfsz	9,f
  5044  023B  2A3A               	goto	u1787
  5045  023C  0BAB               	decfsz	??_nrf24l01SendPacket,f
  5046  023D  2A3A               	goto	u1787
  5047  023E  3200               	nop2
  5048  023F  2A27               	goto	l2829
  5049  0240                     __end_of_nrf24l01SendPacket:	
  5050                           
  5051                           	psect	text14
  5052  079C                     __ptext14:	
  5053 ;; *************** function _strlen *****************
  5054 ;; Defined at:
  5055 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  5058 ;;		 -> NULL(0), RXPacket(33), Packet.Message(32), main@Packet(33), 
  5059 ;;		 -> Packet.Message(32), loop@Packet(33), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  cp              2    9[BANK0 ] PTR const unsigned char 
  5062 ;;		 -> NULL(0), RXPacket(33), Packet.Message(32), main@Packet(33), 
  5063 ;;		 -> Packet.Message(32), loop@Packet(33), 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    5[BANK0 ] unsigned int 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        6 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    7
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_nrf24l01SendPacket
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _strlen
  5089  079C                     _strlen:	
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5093  079C  0020               	movlb	0	; select bank0
  5094  079D  0826               	movf	strlen@s+1,w
  5095  079E  00AA               	movwf	strlen@cp+1
  5096  079F  0825               	movf	strlen@s,w
  5097  07A0  00A9               	movwf	strlen@cp
  5098  07A1                     l2747:	
  5099  07A1  0829               	movf	strlen@cp,w
  5100  07A2  0086               	movwf	6
  5101  07A3  082A               	movf	strlen@cp+1,w
  5102  07A4  0087               	movwf	7
  5103  07A5  0801               	movf	1,w
  5104  07A6  1903               	btfsc	3,2
  5105  07A7  2FAD               	goto	l2749
  5106  07A8  3001               	movlw	1
  5107  07A9  07A9               	addwf	strlen@cp,f
  5108  07AA  3000               	movlw	0
  5109  07AB  3DAA               	addwfc	strlen@cp+1,f
  5110  07AC  2FA1               	goto	l2747
  5111  07AD                     l2749:	
  5112  07AD  0925               	comf	strlen@s,w
  5113  07AE  00A7               	movwf	??_strlen
  5114  07AF  0926               	comf	strlen@s+1,w
  5115  07B0  00A8               	movwf	??_strlen+1
  5116  07B1  0AA7               	incf	??_strlen,f
  5117  07B2  1903               	skipnz
  5118  07B3  0AA8               	incf	??_strlen+1,f
  5119  07B4  0829               	movf	strlen@cp,w
  5120  07B5  0727               	addwf	??_strlen,w
  5121  07B6  00A5               	movwf	?_strlen
  5122  07B7  082A               	movf	strlen@cp+1,w
  5123  07B8  3D28               	addwfc	??_strlen+1,w
  5124  07B9  00A6               	movwf	?_strlen+1
  5125  07BA  0008               	return
  5126  07BB                     __end_of_strlen:	
  5127                           
  5128                           	psect	text15
  5129  04EA                     __ptext15:	
  5130 ;; *************** function _nrf24l01SetRXMode *****************
  5131 ;; Defined at:
  5132 ;;		line 37 in file "nrf24l01.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  rxMode          1    wreg     unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  rxMode          1   10[BANK0 ] unsigned char 
  5137 ;;  config          1    9[BANK0 ] struct .
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        3 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:   10
  5154 ;; This function calls:
  5155 ;;		_nrf24l01CEHigh
  5156 ;;		_nrf24l01CELow
  5157 ;;		_nrf24l01Send
  5158 ;; This function is called by:
  5159 ;;		_nrf24l01SendPacket
  5160 ;;		_checkRxData
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _nrf24l01SetRXMode
  5166  04EA                     _nrf24l01SetRXMode:	
  5167                           
  5168                           ;incstack = 0
  5169                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5170                           ;nrf24l01SetRXMode@rxMode stored from wreg
  5171  04EA  0020               	movlb	0	; select bank0
  5172  04EB  00AA               	movwf	nrf24l01SetRXMode@rxMode
  5173                           
  5174                           ;nrf24l01.c: 39: n_CONFIG_t config;;nrf24l01.c: 42: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5175  04EC  01A5               	clrf	nrf24l01Send@data
  5176  04ED  3000               	movlw	0
  5177  04EE  3187  273C  3184   	fcall	_nrf24l01Send
  5178  04F1  0020               	movlb	0	; select bank0
  5179  04F2  00A8               	movwf	??_nrf24l01SetRXMode
  5180  04F3  0828               	movf	??_nrf24l01SetRXMode,w
  5181  04F4  00A9               	movwf	nrf24l01SetRXMode@config
  5182                           
  5183                           ;nrf24l01.c: 45: if (config.PRIM_RX != rxMode){
  5184  04F5  0829               	movf	nrf24l01SetRXMode@config,w
  5185  04F6  3901               	andlw	1
  5186  04F7  062A               	xorwf	nrf24l01SetRXMode@rxMode,w
  5187  04F8  1903               	skipnz
  5188  04F9  2D1E               	goto	l1995
  5189                           
  5190                           ;nrf24l01.c: 48: nrf24l01CELow();
  5191  04FA  318F  2732  3184   	fcall	_nrf24l01CELow
  5192                           
  5193                           ;nrf24l01.c: 49: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5194  04FD  30A0               	movlw	160
  5195  04FE                     u1797:	
  5196  04FE  3200               	nop2
  5197  04FF  0B89               	decfsz	9,f
  5198  0500  2CFE               	goto	u1797
  5199                           
  5200                           ;nrf24l01.c: 56: config.PRIM_RX = rxMode;
  5201  0501  0020               	movlb	0	; select bank0
  5202  0502  082A               	movf	nrf24l01SetRXMode@rxMode,w
  5203  0503  3901               	andlw	1
  5204  0504  1029               	bcf	nrf24l01SetRXMode@config,0
  5205  0505  1D03               	skipz
  5206  0506  1429               	bsf	nrf24l01SetRXMode@config,0
  5207                           
  5208                           ;nrf24l01.c: 57: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5209  0507  0829               	movf	nrf24l01SetRXMode@config,w
  5210  0508  00A8               	movwf	??_nrf24l01SetRXMode
  5211  0509  0828               	movf	??_nrf24l01SetRXMode,w
  5212  050A  00A5               	movwf	nrf24l01Send@data
  5213  050B  3020               	movlw	32
  5214  050C  3187  273C  3184   	fcall	_nrf24l01Send
  5215                           
  5216                           ;nrf24l01.c: 60: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5217  050F  30A0               	movlw	160
  5218  0510                     u1807:	
  5219  0510  3200               	nop2
  5220  0511  0B89               	decfsz	9,f
  5221  0512  2D10               	goto	u1807
  5222                           
  5223                           ;nrf24l01.c: 63: if (rxMode){
  5224  0513  0020               	movlb	0	; select bank0
  5225  0514  082A               	movf	nrf24l01SetRXMode@rxMode,w
  5226  0515  1903               	btfsc	3,2
  5227  0516  2D1E               	goto	l1995
  5228                           
  5229                           ;nrf24l01.c: 64: nrf24l01CEHigh();
  5230  0517  318F  272F  3184   	fcall	_nrf24l01CEHigh
  5231                           
  5232                           ;nrf24l01.c: 65: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5233  051A  30A0               	movlw	160
  5234  051B                     u1817:	
  5235  051B  3200               	nop2
  5236  051C  0B89               	decfsz	9,f
  5237  051D  2D1B               	goto	u1817
  5238  051E                     l1995:	
  5239                           
  5240                           ;nrf24l01.c: 66: };nrf24l01.c: 67: };nrf24l01.c: 70: nrf24l01.RXMode = rxMode;
  5241  051E  0020               	movlb	0	; select bank0
  5242  051F  082A               	movf	nrf24l01SetRXMode@rxMode,w
  5243  0520  3901               	andlw	1
  5244  0521  115F               	bcf	_nrf24l01,2	;volatile
  5245  0522  1D03               	skipz
  5246  0523  155F               	bsf	_nrf24l01,2	;volatile
  5247  0524  0008               	return
  5248  0525                     __end_of_nrf24l01SetRXMode:	
  5249                           
  5250                           	psect	text16
  5251  073C                     __ptext16:	
  5252 ;; *************** function _nrf24l01Send *****************
  5253 ;; Defined at:
  5254 ;;		line 11 in file "nrf24l01.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  command         1    wreg     unsigned char 
  5257 ;;  data            1    5[BANK0 ] unsigned char 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  command         1    7[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      unsigned char 
  5262 ;; Registers used:
  5263 ;;		wreg, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        3 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    9
  5276 ;; This function calls:
  5277 ;;		_enableInterrupts
  5278 ;;		_nrf24l01SPIEnd
  5279 ;;		_nrf24l01SPISend
  5280 ;;		_nrf24l01SPIStart
  5281 ;; This function is called by:
  5282 ;;		_nrf24l01SetRXMode
  5283 ;;		_nrf24l01InitRegisters
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _nrf24l01Send
  5289  073C                     _nrf24l01Send:	
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5293                           ;nrf24l01Send@command stored from wreg
  5294  073C  0020               	movlb	0	; select bank0
  5295  073D  00A7               	movwf	nrf24l01Send@command
  5296                           
  5297                           ;nrf24l01.c: 14: enableInterrupts(0);
  5298  073E  3000               	movlw	0
  5299  073F  318F  2748  3187   	fcall	_enableInterrupts
  5300                           
  5301                           ;nrf24l01.c: 17: nrf24l01SPIStart();
  5302  0742  318F  2750  3187   	fcall	_nrf24l01SPIStart
  5303                           
  5304                           ;nrf24l01.c: 20: nrf24l01SPISend(command);
  5305  0745  0020               	movlb	0	; select bank0
  5306  0746  0827               	movf	nrf24l01Send@command,w
  5307  0747  318F  2758  3187   	fcall	_nrf24l01SPISend
  5308                           
  5309                           ;nrf24l01.c: 23: data = nrf24l01SPISend(data);
  5310  074A  0020               	movlb	0	; select bank0
  5311  074B  0825               	movf	nrf24l01Send@data,w
  5312  074C  318F  2758  3187   	fcall	_nrf24l01SPISend
  5313  074F  0020               	movlb	0	; select bank0
  5314  0750  00A6               	movwf	??_nrf24l01Send
  5315  0751  0826               	movf	??_nrf24l01Send,w
  5316  0752  00A5               	movwf	nrf24l01Send@data
  5317                           
  5318                           ;nrf24l01.c: 26: nrf24l01SPIEnd();
  5319  0753  318F  2741  3187   	fcall	_nrf24l01SPIEnd
  5320                           
  5321                           ;nrf24l01.c: 29: enableInterrupts(1);
  5322  0756  3001               	movlw	1
  5323  0757  318F  2748         	fcall	_enableInterrupts
  5324                           
  5325                           ;nrf24l01.c: 31: return data;
  5326  0759  0020               	movlb	0	; select bank0
  5327  075A  0825               	movf	nrf24l01Send@data,w
  5328  075B  0008               	return
  5329  075C                     __end_of_nrf24l01Send:	
  5330                           
  5331                           	psect	text17
  5332  02CF                     __ptext17:	
  5333 ;; *************** function _getADCValue *****************
  5334 ;; Defined at:
  5335 ;;		line 22 in file "main.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  channel         1    wreg     unsigned char 
  5338 ;;  divider         4   19[BANK0 ] unsigned long 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  channel         1   27[BANK0 ] unsigned char 
  5341 ;;  adcSum          4   29[BANK0 ] unsigned long 
  5342 ;;  adcLoop         1   28[BANK0 ] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4   19[BANK0 ] unsigned long 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0, pclath, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:       14 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    8
  5359 ;; This function calls:
  5360 ;;		___lldiv
  5361 ;;		___lmul
  5362 ;; This function is called by:
  5363 ;;		_loop
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _getADCValue
  5369  02CF                     _getADCValue:	
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  5373                           ;getADCValue@channel stored from wreg
  5374  02CF  0020               	movlb	0	; select bank0
  5375  02D0  00BB               	movwf	getADCValue@channel
  5376                           
  5377                           ;main.c: 24: unsigned long adcSum = 0;
  5378  02D1  3000               	movlw	0
  5379  02D2  00C0               	movwf	getADCValue@adcSum+3
  5380  02D3  3000               	movlw	0
  5381  02D4  00BF               	movwf	getADCValue@adcSum+2
  5382  02D5  3000               	movlw	0
  5383  02D6  00BE               	movwf	getADCValue@adcSum+1
  5384  02D7  3000               	movlw	0
  5385  02D8  00BD               	movwf	getADCValue@adcSum
  5386                           
  5387                           ;main.c: 25: unsigned char adcLoop = 255;
  5388  02D9  30FF               	movlw	255
  5389  02DA  00B7               	movwf	??_getADCValue
  5390  02DB  0837               	movf	??_getADCValue,w
  5391  02DC  00BC               	movwf	getADCValue@adcLoop
  5392                           
  5393                           ;main.c: 27: ADCON0bits.CHS = channel;
  5394  02DD  083B               	movf	getADCValue@channel,w
  5395  02DE  00B7               	movwf	??_getADCValue
  5396  02DF  0DB7               	rlf	??_getADCValue,f
  5397  02E0  0DB7               	rlf	??_getADCValue,f
  5398  02E1  0021               	movlb	1	; select bank1
  5399  02E2  081D               	movf	29,w	;volatile
  5400  02E3  0020               	movlb	0	; select bank0
  5401  02E4  0637               	xorwf	??_getADCValue,w
  5402  02E5  3903               	andlw	-253
  5403  02E6  0637               	xorwf	??_getADCValue,w
  5404  02E7  0021               	movlb	1	; select bank1
  5405  02E8  009D               	movwf	29	;volatile
  5406                           
  5407                           ;main.c: 28: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5408  02E9  30A0               	movlw	160
  5409  02EA                     u1827:	
  5410  02EA  3200               	nop2
  5411  02EB  0B89               	decfsz	9,f
  5412  02EC  2AEA               	goto	u1827
  5413  02ED                     l2283:	
  5414                           ;main.c: 30: while (--adcLoop){
  5415                           
  5416  02ED  3001               	movlw	1
  5417  02EE  0020               	movlb	0	; select bank0
  5418  02EF  02BC               	subwf	getADCValue@adcLoop,f
  5419  02F0  1903               	btfsc	3,2
  5420  02F1  2B17               	goto	l2285
  5421                           
  5422                           ;main.c: 32: ADCON0bits.ADGO = 1;
  5423  02F2  0021               	movlb	1	; select bank1
  5424  02F3  149D               	bsf	29,1	;volatile
  5425  02F4                     l208:	
  5426                           ;main.c: 34: while (ADCON0bits.ADGO){
  5427                           
  5428  02F4  0021               	movlb	1	; select bank1
  5429  02F5  1C9D               	btfss	29,1	;volatile
  5430  02F6  2AF9               	goto	l2281
  5431                           
  5432                           ;main.c: 35: __nop();
  5433  02F7  0000               	nop
  5434  02F8  2AF4               	goto	l208
  5435  02F9                     l2281:	
  5436                           
  5437                           ;main.c: 36: };main.c: 38: adcSum+= ADRESL;
  5438  02F9  081B               	movf	27,w	;volatile
  5439  02FA  0020               	movlb	0	; select bank0
  5440  02FB  00B7               	movwf	??_getADCValue
  5441  02FC  01B8               	clrf	??_getADCValue+1
  5442  02FD  01B9               	clrf	??_getADCValue+2
  5443  02FE  01BA               	clrf	??_getADCValue+3
  5444  02FF  0837               	movf	??_getADCValue,w
  5445  0300  07BD               	addwf	getADCValue@adcSum,f
  5446  0301  0838               	movf	??_getADCValue+1,w
  5447  0302  3DBE               	addwfc	getADCValue@adcSum+1,f
  5448  0303  0839               	movf	??_getADCValue+2,w
  5449  0304  3DBF               	addwfc	getADCValue@adcSum+2,f
  5450  0305  083A               	movf	??_getADCValue+3,w
  5451  0306  3DC0               	addwfc	getADCValue@adcSum+3,f
  5452                           
  5453                           ;main.c: 39: adcSum+= (unsigned) (ADRESH << 8);
  5454  0307  0021               	movlb	1	; select bank1
  5455  0308  081C               	movf	28,w	;volatile
  5456  0309  0020               	movlb	0	; select bank0
  5457  030A  00B7               	movwf	??_getADCValue
  5458  030B  01B8               	clrf	??_getADCValue+1
  5459  030C  0837               	movf	??_getADCValue,w
  5460  030D  00B8               	movwf	??_getADCValue+1
  5461  030E  01B7               	clrf	??_getADCValue
  5462  030F  0837               	movf	??_getADCValue,w
  5463  0310  07BD               	addwf	getADCValue@adcSum,f
  5464  0311  0838               	movf	??_getADCValue+1,w
  5465  0312  3DBE               	addwfc	getADCValue@adcSum+1,f
  5466  0313  3000               	movlw	0
  5467  0314  3DBF               	addwfc	getADCValue@adcSum+2,f
  5468  0315  3DC0               	addwfc	getADCValue@adcSum+3,f
  5469  0316  2AED               	goto	l2283
  5470  0317                     l2285:	
  5471                           
  5472                           ;main.c: 40: };main.c: 43: adcSum*= 100;
  5473  0317  3000               	movlw	0
  5474  0318  00A8               	movwf	___lmul@multiplier+3
  5475  0319  3000               	movlw	0
  5476  031A  00A7               	movwf	___lmul@multiplier+2
  5477  031B  3000               	movlw	0
  5478  031C  00A6               	movwf	___lmul@multiplier+1
  5479  031D  3064               	movlw	100
  5480  031E  00A5               	movwf	___lmul@multiplier
  5481  031F  0840               	movf	getADCValue@adcSum+3,w
  5482  0320  00AC               	movwf	___lmul@multiplicand+3
  5483  0321  083F               	movf	getADCValue@adcSum+2,w
  5484  0322  00AB               	movwf	___lmul@multiplicand+2
  5485  0323  083E               	movf	getADCValue@adcSum+1,w
  5486  0324  00AA               	movwf	___lmul@multiplicand+1
  5487  0325  083D               	movf	getADCValue@adcSum,w
  5488  0326  00A9               	movwf	___lmul@multiplicand
  5489  0327  3185  25F5  3182   	fcall	___lmul
  5490  032A  0020               	movlb	0	; select bank0
  5491  032B  0828               	movf	?___lmul+3,w
  5492  032C  00C0               	movwf	getADCValue@adcSum+3
  5493  032D  0827               	movf	?___lmul+2,w
  5494  032E  00BF               	movwf	getADCValue@adcSum+2
  5495  032F  0826               	movf	?___lmul+1,w
  5496  0330  00BE               	movwf	getADCValue@adcSum+1
  5497  0331  0825               	movf	?___lmul,w
  5498  0332  00BD               	movwf	getADCValue@adcSum
  5499                           
  5500                           ;main.c: 44: adcSum/= divider;
  5501  0333  0836               	movf	getADCValue@divider+3,w
  5502  0334  00A8               	movwf	___lldiv@divisor+3
  5503  0335  0835               	movf	getADCValue@divider+2,w
  5504  0336  00A7               	movwf	___lldiv@divisor+2
  5505  0337  0834               	movf	getADCValue@divider+1,w
  5506  0338  00A6               	movwf	___lldiv@divisor+1
  5507  0339  0833               	movf	getADCValue@divider,w
  5508  033A  00A5               	movwf	___lldiv@divisor
  5509  033B  0840               	movf	getADCValue@adcSum+3,w
  5510  033C  00AC               	movwf	___lldiv@dividend+3
  5511  033D  083F               	movf	getADCValue@adcSum+2,w
  5512  033E  00AB               	movwf	___lldiv@dividend+2
  5513  033F  083E               	movf	getADCValue@adcSum+1,w
  5514  0340  00AA               	movwf	___lldiv@dividend+1
  5515  0341  083D               	movf	getADCValue@adcSum,w
  5516  0342  00A9               	movwf	___lldiv@dividend
  5517  0343  3184  2411         	fcall	___lldiv
  5518  0345  0020               	movlb	0	; select bank0
  5519  0346  0828               	movf	?___lldiv+3,w
  5520  0347  00C0               	movwf	getADCValue@adcSum+3
  5521  0348  0827               	movf	?___lldiv+2,w
  5522  0349  00BF               	movwf	getADCValue@adcSum+2
  5523  034A  0826               	movf	?___lldiv+1,w
  5524  034B  00BE               	movwf	getADCValue@adcSum+1
  5525  034C  0825               	movf	?___lldiv,w
  5526  034D  00BD               	movwf	getADCValue@adcSum
  5527                           
  5528                           ;main.c: 46: return adcSum;
  5529  034E  0840               	movf	getADCValue@adcSum+3,w
  5530  034F  00B6               	movwf	?_getADCValue+3
  5531  0350  083F               	movf	getADCValue@adcSum+2,w
  5532  0351  00B5               	movwf	?_getADCValue+2
  5533  0352  083E               	movf	getADCValue@adcSum+1,w
  5534  0353  00B4               	movwf	?_getADCValue+1
  5535  0354  083D               	movf	getADCValue@adcSum,w
  5536  0355  00B3               	movwf	?_getADCValue
  5537  0356  0008               	return
  5538  0357                     __end_of_getADCValue:	
  5539                           
  5540                           	psect	text18
  5541  05F5                     __ptext18:	
  5542 ;; *************** function ___lmul *****************
  5543 ;; Defined at:
  5544 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  multiplier      4    5[BANK0 ] unsigned long 
  5547 ;;  multiplicand    4    9[BANK0 ] unsigned long 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  product         4   13[BANK0 ] unsigned long 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  4    5[BANK0 ] unsigned long 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5559 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;Total ram usage:       12 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    7
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_getADCValue
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function ___lmul
  5575  05F5                     ___lmul:	
  5576                           
  5577                           ;incstack = 0
  5578                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5579  05F5  3000               	movlw	0
  5580  05F6  0020               	movlb	0	; select bank0
  5581  05F7  00B0               	movwf	___lmul@product+3
  5582  05F8  3000               	movlw	0
  5583  05F9  00AF               	movwf	___lmul@product+2
  5584  05FA  3000               	movlw	0
  5585  05FB  00AE               	movwf	___lmul@product+1
  5586  05FC  3000               	movlw	0
  5587  05FD  00AD               	movwf	___lmul@product
  5588  05FE                     l2087:	
  5589  05FE  1C25               	btfss	___lmul@multiplier,0
  5590  05FF  2E08               	goto	l2091
  5591  0600  0829               	movf	___lmul@multiplicand,w
  5592  0601  07AD               	addwf	___lmul@product,f
  5593  0602  082A               	movf	___lmul@multiplicand+1,w
  5594  0603  3DAE               	addwfc	___lmul@product+1,f
  5595  0604  082B               	movf	___lmul@multiplicand+2,w
  5596  0605  3DAF               	addwfc	___lmul@product+2,f
  5597  0606  082C               	movf	___lmul@multiplicand+3,w
  5598  0607  3DB0               	addwfc	___lmul@product+3,f
  5599  0608                     l2091:	
  5600  0608  3001               	movlw	1
  5601  0609                     u1065:	
  5602  0609  35A9               	lslf	___lmul@multiplicand,f
  5603  060A  0DAA               	rlf	___lmul@multiplicand+1,f
  5604  060B  0DAB               	rlf	___lmul@multiplicand+2,f
  5605  060C  0DAC               	rlf	___lmul@multiplicand+3,f
  5606  060D  0B89               	decfsz	9,f
  5607  060E  2E09               	goto	u1065
  5608  060F  3001               	movlw	1
  5609  0610                     u1075:	
  5610  0610  36A8               	lsrf	___lmul@multiplier+3,f
  5611  0611  0CA7               	rrf	___lmul@multiplier+2,f
  5612  0612  0CA6               	rrf	___lmul@multiplier+1,f
  5613  0613  0CA5               	rrf	___lmul@multiplier,f
  5614  0614  0B89               	decfsz	9,f
  5615  0615  2E10               	goto	u1075
  5616  0616  0828               	movf	___lmul@multiplier+3,w
  5617  0617  0427               	iorwf	___lmul@multiplier+2,w
  5618  0618  0426               	iorwf	___lmul@multiplier+1,w
  5619  0619  0425               	iorwf	___lmul@multiplier,w
  5620  061A  1D03               	skipz
  5621  061B  2DFE               	goto	l2087
  5622  061C  0830               	movf	___lmul@product+3,w
  5623  061D  00A8               	movwf	?___lmul+3
  5624  061E  082F               	movf	___lmul@product+2,w
  5625  061F  00A7               	movwf	?___lmul+2
  5626  0620  082E               	movf	___lmul@product+1,w
  5627  0621  00A6               	movwf	?___lmul+1
  5628  0622  082D               	movf	___lmul@product,w
  5629  0623  00A5               	movwf	?___lmul
  5630  0624  0008               	return
  5631  0625                     __end_of___lmul:	
  5632                           
  5633                           	psect	text19
  5634  0411                     __ptext19:	
  5635 ;; *************** function ___lldiv *****************
  5636 ;; Defined at:
  5637 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  divisor         4    5[BANK0 ] unsigned long 
  5640 ;;  dividend        4    9[BANK0 ] unsigned long 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  quotient        4   14[BANK0 ] unsigned long 
  5643 ;;  counter         1   18[BANK0 ] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  4    5[BANK0 ] unsigned long 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5653 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;Total ram usage:       14 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    7
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_getADCValue
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function ___lldiv
  5669  0411                     ___lldiv:	
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5673  0411  3000               	movlw	0
  5674  0412  0020               	movlb	0	; select bank0
  5675  0413  00B1               	movwf	___lldiv@quotient+3
  5676  0414  3000               	movlw	0
  5677  0415  00B0               	movwf	___lldiv@quotient+2
  5678  0416  3000               	movlw	0
  5679  0417  00AF               	movwf	___lldiv@quotient+1
  5680  0418  3000               	movlw	0
  5681  0419  00AE               	movwf	___lldiv@quotient
  5682  041A  0828               	movf	___lldiv@divisor+3,w
  5683  041B  0427               	iorwf	___lldiv@divisor+2,w
  5684  041C  0426               	iorwf	___lldiv@divisor+1,w
  5685  041D  0425               	iorwf	___lldiv@divisor,w
  5686  041E  1903               	skipnz
  5687  041F  2C5B               	goto	l2119
  5688  0420  01B2               	clrf	___lldiv@counter
  5689  0421  0AB2               	incf	___lldiv@counter,f
  5690  0422                     l2105:	
  5691  0422  1BA8               	btfsc	___lldiv@divisor+3,7
  5692  0423  2C30               	goto	l2107
  5693  0424  3001               	movlw	1
  5694  0425                     u1105:	
  5695  0425  35A5               	lslf	___lldiv@divisor,f
  5696  0426  0DA6               	rlf	___lldiv@divisor+1,f
  5697  0427  0DA7               	rlf	___lldiv@divisor+2,f
  5698  0428  0DA8               	rlf	___lldiv@divisor+3,f
  5699  0429  0B89               	decfsz	9,f
  5700  042A  2C25               	goto	u1105
  5701  042B  3001               	movlw	1
  5702  042C  00AD               	movwf	??___lldiv
  5703  042D  082D               	movf	??___lldiv,w
  5704  042E  07B2               	addwf	___lldiv@counter,f
  5705  042F  2C22               	goto	l2105
  5706  0430                     l2107:	
  5707  0430  3001               	movlw	1
  5708  0431                     u1125:	
  5709  0431  35AE               	lslf	___lldiv@quotient,f
  5710  0432  0DAF               	rlf	___lldiv@quotient+1,f
  5711  0433  0DB0               	rlf	___lldiv@quotient+2,f
  5712  0434  0DB1               	rlf	___lldiv@quotient+3,f
  5713  0435  0B89               	decfsz	9,f
  5714  0436  2C31               	goto	u1125
  5715  0437  0828               	movf	___lldiv@divisor+3,w
  5716  0438  022C               	subwf	___lldiv@dividend+3,w
  5717  0439  1D03               	skipz
  5718  043A  2C45               	goto	u1135
  5719  043B  0827               	movf	___lldiv@divisor+2,w
  5720  043C  022B               	subwf	___lldiv@dividend+2,w
  5721  043D  1D03               	skipz
  5722  043E  2C45               	goto	u1135
  5723  043F  0826               	movf	___lldiv@divisor+1,w
  5724  0440  022A               	subwf	___lldiv@dividend+1,w
  5725  0441  1D03               	skipz
  5726  0442  2C45               	goto	u1135
  5727  0443  0825               	movf	___lldiv@divisor,w
  5728  0444  0229               	subwf	___lldiv@dividend,w
  5729  0445                     u1135:	
  5730  0445  1C03               	skipc
  5731  0446  2C50               	goto	l2115
  5732  0447  0825               	movf	___lldiv@divisor,w
  5733  0448  02A9               	subwf	___lldiv@dividend,f
  5734  0449  0826               	movf	___lldiv@divisor+1,w
  5735  044A  3BAA               	subwfb	___lldiv@dividend+1,f
  5736  044B  0827               	movf	___lldiv@divisor+2,w
  5737  044C  3BAB               	subwfb	___lldiv@dividend+2,f
  5738  044D  0828               	movf	___lldiv@divisor+3,w
  5739  044E  3BAC               	subwfb	___lldiv@dividend+3,f
  5740  044F  142E               	bsf	___lldiv@quotient,0
  5741  0450                     l2115:	
  5742  0450  3001               	movlw	1
  5743  0451                     u1145:	
  5744  0451  36A8               	lsrf	___lldiv@divisor+3,f
  5745  0452  0CA7               	rrf	___lldiv@divisor+2,f
  5746  0453  0CA6               	rrf	___lldiv@divisor+1,f
  5747  0454  0CA5               	rrf	___lldiv@divisor,f
  5748  0455  0B89               	decfsz	9,f
  5749  0456  2C51               	goto	u1145
  5750  0457  3001               	movlw	1
  5751  0458  02B2               	subwf	___lldiv@counter,f
  5752  0459  1D03               	btfss	3,2
  5753  045A  2C30               	goto	l2107
  5754  045B                     l2119:	
  5755  045B  0831               	movf	___lldiv@quotient+3,w
  5756  045C  00A8               	movwf	?___lldiv+3
  5757  045D  0830               	movf	___lldiv@quotient+2,w
  5758  045E  00A7               	movwf	?___lldiv+2
  5759  045F  082F               	movf	___lldiv@quotient+1,w
  5760  0460  00A6               	movwf	?___lldiv+1
  5761  0461  082E               	movf	___lldiv@quotient,w
  5762  0462  00A5               	movwf	?___lldiv
  5763  0463  0008               	return
  5764  0464                     __end_of___lldiv:	
  5765                           
  5766                           	psect	text20
  5767  06F8                     __ptext20:	
  5768 ;; *************** function _flashUpdate *****************
  5769 ;; Defined at:
  5770 ;;		line 97 in file "flash.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  i               2   13[BANK0 ] unsigned int 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;Total ram usage:        4 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    8
  5791 ;; This function calls:
  5792 ;;		_flashWriteByte
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _flashUpdate
  5800  06F8                     _flashUpdate:	
  5801                           
  5802                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5806  06F8  0020               	movlb	0	; select bank0
  5807  06F9  01AD               	clrf	flashUpdate@i
  5808  06FA  01AE               	clrf	flashUpdate@i+1
  5809  06FB                     L1:	
  5810  06FB  3000               	movlw	0
  5811  06FC  022E               	subwf	flashUpdate@i+1,w
  5812  06FD  3020               	movlw	32
  5813  06FE  1903               	skipnz
  5814  06FF  022D               	subwf	flashUpdate@i,w
  5815  0700  1803               	btfsc	3,0
  5816  0701  0008               	return
  5817                           
  5818                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  5819  0702  082E               	movf	flashUpdate@i+1,w
  5820  0703  00A6               	movwf	flashWriteByte@offset+1
  5821  0704  082D               	movf	flashUpdate@i,w
  5822  0705  00A5               	movwf	flashWriteByte@offset
  5823  0706  082D               	movf	flashUpdate@i,w
  5824  0707  3EA0               	addlw	(low (_romHolder| (0+256)))& (0+255)
  5825  0708  0086               	movwf	6
  5826  0709  3001               	movlw	1	; select bank3/4
  5827  070A  0087               	movwf	7
  5828  070B  0801               	movf	1,w
  5829  070C  00AB               	movwf	??_flashUpdate
  5830  070D  01AC               	clrf	??_flashUpdate+1
  5831  070E  082B               	movf	??_flashUpdate,w
  5832  070F  00A7               	movwf	flashWriteByte@data
  5833  0710  082C               	movf	??_flashUpdate+1,w
  5834  0711  00A8               	movwf	flashWriteByte@data+1
  5835  0712  3184  24AE  3186   	fcall	_flashWriteByte
  5836  0715  3001               	movlw	1
  5837  0716  0020               	movlb	0	; select bank0
  5838  0717  07AD               	addwf	flashUpdate@i,f
  5839  0718  3000               	movlw	0
  5840  0719  3DAE               	addwfc	flashUpdate@i+1,f
  5841  071A  2EFB               	goto	L1
  5842  071B                     __end_of_flashUpdate:	
  5843                           
  5844                           	psect	text21
  5845  04AE                     __ptext21:	
  5846 ;; *************** function _flashWriteByte *****************
  5847 ;; Defined at:
  5848 ;;		line 8 in file "flash.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  offset          2    5[BANK0 ] unsigned int 
  5851 ;;  data            2    7[BANK0 ] unsigned int 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  address         2    9[BANK0 ] unsigned int 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        6 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    7
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_flashUpdate
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _flashWriteByte
  5879  04AE                     _flashWriteByte:	
  5880                           
  5881                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  5885  04AE  138B               	bcf	11,7	;volatile
  5886                           
  5887                           ;flash.c: 15: PMCON1 = 0x00;
  5888  04AF  0031               	movlb	17	; select bank17
  5889  04B0  0195               	clrf	21	;volsfr
  5890                           
  5891                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  5892  04B1  0020               	movlb	0	; select bank0
  5893  04B2  0825               	movf	flashWriteByte@offset,w
  5894  04B3  3EE0               	addlw	224
  5895  04B4  00A9               	movwf	flashWriteByte@address
  5896  04B5  301F               	movlw	31
  5897  04B6  3D26               	addwfc	flashWriteByte@offset+1,w
  5898  04B7  00AA               	movwf	flashWriteByte@address+1
  5899                           
  5900                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  5901  04B8  0829               	movf	flashWriteByte@address,w
  5902  04B9  0031               	movlb	17	; select bank17
  5903  04BA  0091               	movwf	17	;volatile
  5904                           
  5905                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  5906  04BB  0020               	movlb	0	; select bank0
  5907  04BC  082A               	movf	flashWriteByte@address+1,w
  5908  04BD  0031               	movlb	17	; select bank17
  5909  04BE  0092               	movwf	18	;volatile
  5910                           
  5911                           ;flash.c: 21: PMCON1bits.FREE = 1;
  5912  04BF  1615               	bsf	21,4	;volsfr
  5913                           
  5914                           ;flash.c: 22: PMCON1bits.WREN = 1;
  5915  04C0  1515               	bsf	21,2	;volsfr
  5916                           
  5917                           ;flash.c: 24: PMCON2 = 0x55;
  5918  04C1  3055               	movlw	85
  5919  04C2  0096               	movwf	22	;volsfr
  5920                           
  5921                           ;flash.c: 25: PMCON2 = 0xAA;
  5922  04C3  30AA               	movlw	170
  5923  04C4  0096               	movwf	22	;volsfr
  5924                           
  5925                           ;flash.c: 27: PMCON1bits.WR = 1;
  5926  04C5  1495               	bsf	21,1	;volsfr
  5927                           
  5928                           ;flash.c: 29: __nop();
  5929  04C6  0000               	nop
  5930                           
  5931                           ;flash.c: 30: __nop();
  5932  04C7  0000               	nop
  5933                           
  5934                           ;flash.c: 32: PMCON1bits.WREN = 0;
  5935  04C8  0031               	movlb	17	; select bank17
  5936  04C9  1115               	bcf	21,2	;volsfr
  5937                           
  5938                           ;flash.c: 36: PMCON1 = 0x00;
  5939  04CA  0195               	clrf	21	;volsfr
  5940                           
  5941                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  5942  04CB  0020               	movlb	0	; select bank0
  5943  04CC  0829               	movf	flashWriteByte@address,w
  5944  04CD  0031               	movlb	17	; select bank17
  5945  04CE  0091               	movwf	17	;volatile
  5946                           
  5947                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  5948  04CF  0020               	movlb	0	; select bank0
  5949  04D0  082A               	movf	flashWriteByte@address+1,w
  5950  04D1  0031               	movlb	17	; select bank17
  5951  04D2  0092               	movwf	18	;volatile
  5952                           
  5953                           ;flash.c: 41: PMCON1bits.FREE = 0;
  5954  04D3  1215               	bcf	21,4	;volsfr
  5955                           
  5956                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  5957  04D4  1695               	bsf	21,5	;volsfr
  5958                           
  5959                           ;flash.c: 43: PMCON1bits.WREN = 1;
  5960  04D5  1515               	bsf	21,2	;volsfr
  5961                           
  5962                           ;flash.c: 45: PMDATL = (data >> 0);
  5963  04D6  0020               	movlb	0	; select bank0
  5964  04D7  0827               	movf	flashWriteByte@data,w
  5965  04D8  0031               	movlb	17	; select bank17
  5966  04D9  0093               	movwf	19	;volatile
  5967                           
  5968                           ;flash.c: 46: PMDATH = (data >> 8);
  5969  04DA  0020               	movlb	0	; select bank0
  5970  04DB  0828               	movf	flashWriteByte@data+1,w
  5971  04DC  0031               	movlb	17	; select bank17
  5972  04DD  0094               	movwf	20	;volatile
  5973                           
  5974                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  5975  04DE  1295               	bcf	21,5	;volsfr
  5976                           
  5977                           ;flash.c: 50: PMCON2 = 0x55;
  5978  04DF  3055               	movlw	85
  5979  04E0  0096               	movwf	22	;volsfr
  5980                           
  5981                           ;flash.c: 51: PMCON2 = 0xAA;
  5982  04E1  30AA               	movlw	170
  5983  04E2  0096               	movwf	22	;volsfr
  5984                           
  5985                           ;flash.c: 53: PMCON1bits.WR = 1;
  5986  04E3  1495               	bsf	21,1	;volsfr
  5987                           
  5988                           ;flash.c: 55: __nop();
  5989  04E4  0000               	nop
  5990                           
  5991                           ;flash.c: 56: __nop();
  5992  04E5  0000               	nop
  5993                           
  5994                           ;flash.c: 58: PMCON1bits.WREN = 0;
  5995  04E6  0031               	movlb	17	; select bank17
  5996  04E7  1115               	bcf	21,2	;volsfr
  5997                           
  5998                           ;flash.c: 61: INTCONbits.GIE = 1;
  5999  04E8  178B               	bsf	11,7	;volatile
  6000  04E9  0008               	return
  6001  04EA                     __end_of_flashWriteByte:	
  6002                           
  6003                           	psect	text22
  6004  075C                     __ptext22:	
  6005 ;; *************** function _flashRealod *****************
  6006 ;; Defined at:
  6007 ;;		line 90 in file "flash.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;		None
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  i               2   15[BANK0 ] unsigned int 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;Total ram usage:        3 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    8
  6028 ;; This function calls:
  6029 ;;		_flashReadByte
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _flashRealod
  6037  075C                     _flashRealod:	
  6038                           
  6039                           ;flash.c: 92: for (unsigned int i = 0; i < 32; i++){
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _flashRealod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6043  075C  0020               	movlb	0	; select bank0
  6044  075D  01AF               	clrf	flashRealod@i
  6045  075E  01B0               	clrf	flashRealod@i+1
  6046  075F                     L2:	
  6047  075F  3000               	movlw	0
  6048  0760  0230               	subwf	flashRealod@i+1,w
  6049  0761  3020               	movlw	32
  6050  0762  1903               	skipnz
  6051  0763  022F               	subwf	flashRealod@i,w
  6052  0764  1803               	btfsc	3,0
  6053  0765  0008               	return
  6054                           
  6055                           ;flash.c: 93: romHolder.array[i] = flashReadByte(i);
  6056  0766  0830               	movf	flashRealod@i+1,w
  6057  0767  00A6               	movwf	flashReadByte@offset+1
  6058  0768  082F               	movf	flashRealod@i,w
  6059  0769  00A5               	movwf	flashReadByte@offset
  6060  076A  3185  2591  3187   	fcall	_flashReadByte
  6061  076D  0020               	movlb	0	; select bank0
  6062  076E  0825               	movf	?_flashReadByte,w
  6063  076F  00AE               	movwf	??_flashRealod
  6064  0770  082F               	movf	flashRealod@i,w
  6065  0771  3EA0               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6066  0772  0086               	movwf	6
  6067  0773  3001               	movlw	1	; select bank3/4
  6068  0774  0087               	movwf	7
  6069  0775  082E               	movf	??_flashRealod,w
  6070  0776  0081               	movwf	1
  6071  0777  3001               	movlw	1
  6072  0778  07AF               	addwf	flashRealod@i,f
  6073  0779  3000               	movlw	0
  6074  077A  3DB0               	addwfc	flashRealod@i+1,f
  6075  077B  2F5F               	goto	L2
  6076  077C                     __end_of_flashRealod:	
  6077                           
  6078                           	psect	text23
  6079  0591                     __ptext23:	
  6080 ;; *************** function _flashReadByte *****************
  6081 ;; Defined at:
  6082 ;;		line 64 in file "flash.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  offset          2    5[BANK0 ] unsigned int 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  address         2   12[BANK0 ] unsigned int 
  6087 ;;  result          2   10[BANK0 ] unsigned int 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  2    5[BANK0 ] unsigned int 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        9 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    7
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_flashRealod
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           
  6112                           ;psect for function _flashReadByte
  6113  0591                     _flashReadByte:	
  6114                           
  6115                           ;flash.c: 66: unsigned int address;;flash.c: 68: INTCONbits.GIE = 0;
  6116                           
  6117                           ;incstack = 0
  6118                           ; Regs used in _flashReadByte: [wreg+status,2+status,0]
  6119  0591  138B               	bcf	11,7	;volatile
  6120                           
  6121                           ;flash.c: 70: PMCON1 = 0x00;
  6122  0592  0031               	movlb	17	; select bank17
  6123  0593  0195               	clrf	21	;volsfr
  6124                           
  6125                           ;flash.c: 72: address = (0x2000U - 32) + offset;
  6126  0594  0020               	movlb	0	; select bank0
  6127  0595  0825               	movf	flashReadByte@offset,w
  6128  0596  3EE0               	addlw	224
  6129  0597  00AC               	movwf	flashReadByte@address
  6130  0598  301F               	movlw	31
  6131  0599  3D26               	addwfc	flashReadByte@offset+1,w
  6132  059A  00AD               	movwf	flashReadByte@address+1
  6133                           
  6134                           ;flash.c: 73: PMADRL = (char) (address >> 0);
  6135  059B  082C               	movf	flashReadByte@address,w
  6136  059C  0031               	movlb	17	; select bank17
  6137  059D  0091               	movwf	17	;volatile
  6138                           
  6139                           ;flash.c: 74: PMADRH = (char) (address >> 8);
  6140  059E  0020               	movlb	0	; select bank0
  6141  059F  082D               	movf	flashReadByte@address+1,w
  6142  05A0  0031               	movlb	17	; select bank17
  6143  05A1  0092               	movwf	18	;volatile
  6144                           
  6145                           ;flash.c: 76: PMCON1bits.RD = 1;
  6146  05A2  1415               	bsf	21,0	;volsfr
  6147                           
  6148                           ;flash.c: 78: __nop();
  6149  05A3  0000               	nop
  6150                           
  6151                           ;flash.c: 79: __nop();
  6152  05A4  0000               	nop
  6153                           
  6154                           ;flash.c: 81: unsigned int result = 0;
  6155  05A5  0020               	movlb	0	; select bank0
  6156  05A6  01AA               	clrf	flashReadByte@result
  6157  05A7  01AB               	clrf	flashReadByte@result+1
  6158                           
  6159                           ;flash.c: 82: result = PMDATL;
  6160  05A8  0031               	movlb	17	; select bank17
  6161  05A9  0813               	movf	19,w	;volatile
  6162  05AA  0020               	movlb	0	; select bank0
  6163  05AB  00A7               	movwf	??_flashReadByte
  6164  05AC  01A8               	clrf	??_flashReadByte+1
  6165  05AD  0827               	movf	??_flashReadByte,w
  6166  05AE  00AA               	movwf	flashReadByte@result
  6167  05AF  0828               	movf	??_flashReadByte+1,w
  6168  05B0  00AB               	movwf	flashReadByte@result+1
  6169                           
  6170                           ;flash.c: 83: result|= ( (unsigned) (PMDATH) << 8);
  6171  05B1  0031               	movlb	17	; select bank17
  6172  05B2  0814               	movf	20,w	;volatile
  6173  05B3  0020               	movlb	0	; select bank0
  6174  05B4  00A7               	movwf	??_flashReadByte
  6175  05B5  01A8               	clrf	??_flashReadByte+1
  6176  05B6  0827               	movf	??_flashReadByte,w
  6177  05B7  00A8               	movwf	??_flashReadByte+1
  6178  05B8  01A7               	clrf	??_flashReadByte
  6179  05B9  0827               	movf	??_flashReadByte,w
  6180  05BA  04AA               	iorwf	flashReadByte@result,f
  6181  05BB  0828               	movf	??_flashReadByte+1,w
  6182  05BC  04AB               	iorwf	flashReadByte@result+1,f
  6183                           
  6184                           ;flash.c: 85: INTCONbits.GIE = 1;
  6185  05BD  178B               	bsf	11,7	;volatile
  6186                           
  6187                           ;flash.c: 87: return result;
  6188  05BE  082B               	movf	flashReadByte@result+1,w
  6189  05BF  00A6               	movwf	?_flashReadByte+1
  6190  05C0  082A               	movf	flashReadByte@result,w
  6191  05C1  00A5               	movwf	?_flashReadByte
  6192  05C2  0008               	return
  6193  05C3                     __end_of_flashReadByte:	
  6194                           
  6195                           	psect	intentry
  6196  0004                     __pintentry:	
  6197 ;; *************** function _ISR *****************
  6198 ;; Defined at:
  6199 ;;		line 14 in file "main.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    6
  6220 ;; This function calls:
  6221 ;;		_nrf24l01ISR
  6222 ;; This function is called by:
  6223 ;;		Interrupt level 1
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227  0004                     _ISR:	
  6228                           
  6229                           ;incstack = 0
  6230  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6231                           
  6232                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6233  0005  3180               	pagesel	$
  6234                           
  6235                           ;main.c: 16: if (PIR0bits.INTF){
  6236  0006  0020               	movlb	0	; select bank0
  6237  0007  1C10               	btfss	16,0	;volatile
  6238  0008  280D               	goto	i1l203
  6239                           
  6240                           ;main.c: 17: nrf24l01ISR();
  6241  0009  3185  25C3         	fcall	_nrf24l01ISR
  6242                           
  6243                           ;main.c: 18: PIR0bits.INTF = 0;
  6244  000B  0020               	movlb	0	; select bank0
  6245  000C  1010               	bcf	16,0	;volatile
  6246  000D                     i1l203:	
  6247  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6248  000E  0009               	retfie
  6249  000F                     __end_of_ISR:	
  6250                           
  6251                           	psect	text25
  6252  05C3                     __ptext25:	
  6253 ;; *************** function _nrf24l01ISR *****************
  6254 ;; Defined at:
  6255 ;;		line 234 in file "nrf24l01.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  status          1    4[BANK0 ] struct .
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;Total ram usage:        2 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    5
  6276 ;; This function calls:
  6277 ;;		_exception
  6278 ;;		_nrf24l01CheckACK
  6279 ;;		_nrf24l01ReceivePacket
  6280 ;;		i1_nrf24l01Send
  6281 ;;		i1_nrf24l01SetRXMode
  6282 ;; This function is called by:
  6283 ;;		_ISR
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _nrf24l01ISR
  6289  05C3                     _nrf24l01ISR:	
  6290                           
  6291                           ;nrf24l01.c: 236: n_STATUS_t status;;nrf24l01.c: 237: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  6292                           
  6293                           ;incstack = 0
  6294                           ; Regs used in _nrf24l01ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6295  05C3  01F1               	clrf	i1nrf24l01Send@data
  6296  05C4  3007               	movlw	7
  6297  05C5  318F  27C9  3185   	fcall	i1_nrf24l01Send
  6298  05C8  0020               	movlb	0	; select bank0
  6299  05C9  00A3               	movwf	??_nrf24l01ISR
  6300  05CA  0823               	movf	??_nrf24l01ISR,w
  6301  05CB  00A4               	movwf	nrf24l01ISR@status
  6302                           
  6303                           ;nrf24l01.c: 242: };nrf24l01.c: 245: if (status.byte == 0xFF){
  6304  05CC  0A24               	incf	nrf24l01ISR@status,w
  6305  05CD  1D03               	btfss	3,2
  6306  05CE  2DD3               	goto	i1l2871
  6307                           
  6308                           ;nrf24l01.c: 246: exception(2);
  6309  05CF  3002               	movlw	2
  6310  05D0  318F  2765  3185   	fcall	_exception
  6311  05D3                     i1l2871:	
  6312                           
  6313                           ;nrf24l01.c: 247: };nrf24l01.c: 249: if (status.TX_DS){
  6314  05D3  0020               	movlb	0	; select bank0
  6315  05D4  1EA4               	btfss	nrf24l01ISR@status,5
  6316  05D5  2DE2               	goto	i1l2879
  6317                           
  6318                           ;nrf24l01.c: 252: nrf24l01.TXBusy = 0;
  6319  05D6  105F               	bcf	_nrf24l01,0	;volatile
  6320                           
  6321                           ;nrf24l01.c: 255: if (!nrf24l01.RXMode){
  6322  05D7  195F               	btfsc	_nrf24l01,2	;volatile
  6323  05D8  2DE2               	goto	i1l2879
  6324                           
  6325                           ;nrf24l01.c: 256: if (TXPacket->packetData.ACKRequest){
  6326  05D9  085D               	movf	_TXPacket,w
  6327  05DA  0086               	movwf	6
  6328  05DB  0187               	clrf	7
  6329  05DC  1C01               	btfss	1,0
  6330  05DD  2DE2               	goto	i1l2879
  6331                           
  6332                           ;nrf24l01.c: 258: nrf24l01SetRXMode(1);
  6333  05DE  3001               	movlw	1
  6334  05DF  3185  2525  3185   	fcall	i1_nrf24l01SetRXMode
  6335  05E2                     i1l2879:	
  6336                           
  6337                           ;nrf24l01.c: 259: };nrf24l01.c: 260: };nrf24l01.c: 261: };nrf24l01.c: 264: if (status.RX
      +                          _DR){
  6338  05E2  0020               	movlb	0	; select bank0
  6339  05E3  1F24               	btfss	nrf24l01ISR@status,6
  6340  05E4  2DEC               	goto	i1l2887
  6341                           
  6342                           ;nrf24l01.c: 266: nrf24l01.RXPending = 1;
  6343  05E5  14DF               	bsf	_nrf24l01,1	;volatile
  6344                           
  6345                           ;nrf24l01.c: 267: nrf24l01ReceivePacket();
  6346  05E6  3183  23B9  3185   	fcall	_nrf24l01ReceivePacket
  6347                           
  6348                           ;nrf24l01.c: 268: nrf24l01CheckACK();
  6349  05E9  3187  277C  3185   	fcall	_nrf24l01CheckACK
  6350  05EC                     i1l2887:	
  6351                           
  6352                           ;nrf24l01.c: 269: };nrf24l01.c: 272: nrf24l01Send(0b00100000 | 0x07, status.byte);
  6353  05EC  0020               	movlb	0	; select bank0
  6354  05ED  0824               	movf	nrf24l01ISR@status,w
  6355  05EE  00A3               	movwf	??_nrf24l01ISR
  6356  05EF  0823               	movf	??_nrf24l01ISR,w
  6357  05F0  00F1               	movwf	i1nrf24l01Send@data
  6358  05F1  3027               	movlw	39
  6359  05F2  318F  27C9         	fcall	i1_nrf24l01Send
  6360  05F4  0008               	return
  6361  05F5                     __end_of_nrf24l01ISR:	
  6362                           
  6363                           	psect	text26
  6364  03B9                     __ptext26:	
  6365 ;; *************** function _nrf24l01ReceivePacket *****************
  6366 ;; Defined at:
  6367 ;;		line 103 in file "nrf24l01.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  i               1    2[BANK0 ] unsigned char 
  6372 ;;  width           1    1[BANK0 ] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        3 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    3
  6389 ;; This function calls:
  6390 ;;		_nrf24l01CEHigh
  6391 ;;		_nrf24l01CELow
  6392 ;;		_nrf24l01SPIEnd
  6393 ;;		_nrf24l01SPISend
  6394 ;;		_nrf24l01SPIStart
  6395 ;;		i1_memset
  6396 ;;		i1_nrf24l01Send
  6397 ;;		i1_strlen
  6398 ;; This function is called by:
  6399 ;;		_nrf24l01ISR
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function _nrf24l01ReceivePacket
  6405  03B9                     _nrf24l01ReceivePacket:	
  6406                           
  6407                           ;nrf24l01.c: 106: memset(RXPacket.Message, 0 ,strlen(RXPacket.Message));
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _nrf24l01ReceivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6411  03B9  3021               	movlw	low (_RXPacket+1)
  6412  03BA  00F6               	movwf	i1memset@p1
  6413  03BB  3001               	movlw	high (_RXPacket+1)
  6414  03BC  00F7               	movwf	i1memset@p1+1
  6415  03BD  3000               	movlw	0
  6416  03BE  00F8               	movwf	i1memset@c
  6417  03BF  00F9               	movwf	i1memset@c+1
  6418  03C0  3021               	movlw	low (_RXPacket+1)
  6419  03C1  00F0               	movwf	i1strlen@s
  6420  03C2  3001               	movlw	high (_RXPacket+1)
  6421  03C3  00F1               	movwf	i1strlen@s+1
  6422  03C4  3187  27BB  3183   	fcall	i1_strlen
  6423  03C7  0871               	movf	?i1_strlen+1,w
  6424  03C8  00FB               	movwf	i1memset@n+1
  6425  03C9  0870               	movf	?i1_strlen,w
  6426  03CA  00FA               	movwf	i1memset@n
  6427  03CB  318F  277D  3183   	fcall	i1_memset
  6428                           
  6429                           ;nrf24l01.c: 107: RXPacket.packetData.byte = 0x00;
  6430  03CE  0022               	movlb	2	; select bank2
  6431  03CF  01A0               	clrf	_RXPacket^(0+256)
  6432                           
  6433                           ;nrf24l01.c: 110: unsigned char width = nrf24l01Send(0b01100000, 0);
  6434  03D0  01F1               	clrf	i1nrf24l01Send@data
  6435  03D1  3060               	movlw	96
  6436  03D2  318F  27C9  3183   	fcall	i1_nrf24l01Send
  6437  03D5  0020               	movlb	0	; select bank0
  6438  03D6  00A0               	movwf	??_nrf24l01ReceivePacket
  6439  03D7  0820               	movf	??_nrf24l01ReceivePacket,w
  6440  03D8  00A1               	movwf	nrf24l01ReceivePacket@width
  6441                           
  6442                           ;nrf24l01.c: 111: unsigned char i = 0;
  6443  03D9  01A2               	clrf	nrf24l01ReceivePacket@i
  6444                           
  6445                           ;nrf24l01.c: 114: nrf24l01CELow();
  6446  03DA  318F  2732  3183   	fcall	_nrf24l01CELow
  6447                           
  6448                           ;nrf24l01.c: 117: nrf24l01SPIStart();
  6449  03DD  318F  2750  3183   	fcall	_nrf24l01SPIStart
  6450                           
  6451                           ;nrf24l01.c: 120: nrf24l01SPISend(0b01100001);
  6452  03E0  3061               	movlw	97
  6453  03E1  318F  2758  3183   	fcall	_nrf24l01SPISend
  6454                           
  6455                           ;nrf24l01.c: 123: RXPacket.packetData.byte = nrf24l01SPISend(0);
  6456  03E4  3000               	movlw	0
  6457  03E5  318F  2758  3183   	fcall	_nrf24l01SPISend
  6458  03E8  0020               	movlb	0	; select bank0
  6459  03E9  00A0               	movwf	??_nrf24l01ReceivePacket
  6460  03EA  0820               	movf	??_nrf24l01ReceivePacket,w
  6461  03EB  0022               	movlb	2	; select bank2
  6462  03EC  00A0               	movwf	_RXPacket^(0+256)
  6463                           
  6464                           ;nrf24l01.c: 124: width--;
  6465  03ED  3001               	movlw	1
  6466  03EE  0020               	movlb	0	; select bank0
  6467  03EF  02A1               	subwf	nrf24l01ReceivePacket@width,f
  6468                           
  6469                           ;nrf24l01.c: 126: for (i = 0; (i < width) && (i < sizeof(RXPacket.Message)); i++){
  6470  03F0  01A2               	clrf	nrf24l01ReceivePacket@i
  6471  03F1  2C03               	goto	i1l2855
  6472  03F2                     i1l2851:	
  6473                           
  6474                           ;nrf24l01.c: 128: RXPacket.Message[i] = nrf24l01SPISend(0);
  6475  03F2  3000               	movlw	0
  6476  03F3  318F  2758  3183   	fcall	_nrf24l01SPISend
  6477  03F6  0020               	movlb	0	; select bank0
  6478  03F7  00A0               	movwf	??_nrf24l01ReceivePacket
  6479  03F8  0822               	movf	nrf24l01ReceivePacket@i,w
  6480  03F9  3E21               	addlw	(low ((_RXPacket| (0+256)+1)))& (0+255)
  6481  03FA  0086               	movwf	6
  6482  03FB  3001               	movlw	1	; select bank2/3
  6483  03FC  0087               	movwf	7
  6484  03FD  0820               	movf	??_nrf24l01ReceivePacket,w
  6485  03FE  0081               	movwf	1
  6486  03FF  3001               	movlw	1
  6487  0400  00A0               	movwf	??_nrf24l01ReceivePacket
  6488  0401  0820               	movf	??_nrf24l01ReceivePacket,w
  6489  0402  07A2               	addwf	nrf24l01ReceivePacket@i,f
  6490  0403                     i1l2855:	
  6491  0403  0821               	movf	nrf24l01ReceivePacket@width,w
  6492  0404  0222               	subwf	nrf24l01ReceivePacket@i,w
  6493  0405  1803               	skipnc
  6494  0406  2C0B               	goto	i1l2859
  6495  0407  3020               	movlw	32
  6496  0408  0222               	subwf	nrf24l01ReceivePacket@i,w
  6497  0409  1C03               	skipc
  6498  040A  2BF2               	goto	i1l2851
  6499  040B                     i1l2859:	
  6500                           
  6501                           ;nrf24l01.c: 129: };nrf24l01.c: 132: nrf24l01SPIEnd();
  6502  040B  318F  2741  3183   	fcall	_nrf24l01SPIEnd
  6503                           
  6504                           ;nrf24l01.c: 135: nrf24l01CEHigh();
  6505  040E  318F  272F         	fcall	_nrf24l01CEHigh
  6506  0410  0008               	return
  6507  0411                     __end_of_nrf24l01ReceivePacket:	
  6508                           
  6509                           	psect	text27
  6510  07BB                     __ptext27:	
  6511 ;; *************** function i1_strlen *****************
  6512 ;; Defined at:
  6513 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  s               2    0[COMMON] PTR const unsigned char 
  6516 ;;		 -> NULL(0), RXPacket.Message(32), RXPacket(33), main@Packet(33), 
  6517 ;;		 -> loop@Packet(33), 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  strlen          2    4[COMMON] PTR const unsigned char 
  6520 ;;		 -> NULL(0), RXPacket.Message(32), RXPacket(33), main@Packet(33), 
  6521 ;;		 -> loop@Packet(33), 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  2    0[COMMON] unsigned int 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;Total ram usage:        6 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_nrf24l01ReceivePacket
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function i1_strlen
  6546  07BB                     i1_strlen:	
  6547                           
  6548                           ;incstack = 0
  6549                           ; Regs used in i1_strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6550  07BB  0871               	movf	i1strlen@s+1,w
  6551  07BC  00F5               	movwf	i1strlen@cp+1
  6552  07BD  0870               	movf	i1strlen@s,w
  6553  07BE  00F4               	movwf	i1strlen@cp
  6554  07BF                     i1l2765:	
  6555  07BF  0874               	movf	i1strlen@cp,w
  6556  07C0  0086               	movwf	6
  6557  07C1  0875               	movf	i1strlen@cp+1,w
  6558  07C2  0087               	movwf	7
  6559  07C3  0801               	movf	1,w
  6560  07C4  1903               	btfsc	3,2
  6561  07C5  2FCB               	goto	i1l2767
  6562  07C6  3001               	movlw	1
  6563  07C7  07F4               	addwf	i1strlen@cp,f
  6564  07C8  3000               	movlw	0
  6565  07C9  3DF5               	addwfc	i1strlen@cp+1,f
  6566  07CA  2FBF               	goto	i1l2765
  6567  07CB                     i1l2767:	
  6568  07CB  0970               	comf	i1strlen@s,w
  6569  07CC  00F2               	movwf	??i1_strlen
  6570  07CD  0971               	comf	i1strlen@s+1,w
  6571  07CE  00F3               	movwf	??i1_strlen+1
  6572  07CF  0AF2               	incf	??i1_strlen,f
  6573  07D0  1903               	skipnz
  6574  07D1  0AF3               	incf	??i1_strlen+1,f
  6575  07D2  0874               	movf	i1strlen@cp,w
  6576  07D3  0772               	addwf	??i1_strlen,w
  6577  07D4  00F0               	movwf	?i1_strlen
  6578  07D5  0875               	movf	i1strlen@cp+1,w
  6579  07D6  3D73               	addwfc	??i1_strlen+1,w
  6580  07D7  00F1               	movwf	?i1_strlen+1
  6581  07D8  0008               	return
  6582  07D9                     __end_ofi1_strlen:	
  6583                           
  6584                           	psect	text28
  6585  0F7D                     __ptext28:	
  6586 ;; *************** function i1_memset *****************
  6587 ;; Defined at:
  6588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  p1              2    6[COMMON] PTR void 
  6591 ;;		 -> RXPacket(33), main@Packet(33), loop@Packet(33), 
  6592 ;;  c               2    8[COMMON] int 
  6593 ;;  n               2   10[COMMON] unsigned int 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  memset          2   12[COMMON] PTR unsigned char 
  6596 ;;		 -> RXPacket(33), main@Packet(33), loop@Packet(33), 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      PTR void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;Total ram usage:        8 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_nrf24l01ReceivePacket
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           
  6620                           ;psect for function i1_memset
  6621  0F7D                     i1_memset:	
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6625  0F7D  0877               	movf	i1memset@p1+1,w
  6626  0F7E  00FD               	movwf	i1memset@p+1
  6627  0F7F  0876               	movf	i1memset@p1,w
  6628  0F80  00FC               	movwf	i1memset@p
  6629  0F81                     i1l2759:	
  6630  0F81  3001               	movlw	1
  6631  0F82  02FA               	subwf	i1memset@n,f
  6632  0F83  3000               	movlw	0
  6633  0F84  3BFB               	subwfb	i1memset@n+1,f
  6634  0F85  0A7A               	incf	i1memset@n,w
  6635  0F86  1903               	btfsc	3,2
  6636  0F87  0A7B               	incf	i1memset@n+1,w
  6637  0F88  1903               	btfsc	3,2
  6638  0F89  0008               	return
  6639  0F8A  087C               	movf	i1memset@p,w
  6640  0F8B  0086               	movwf	6
  6641  0F8C  087D               	movf	i1memset@p+1,w
  6642  0F8D  0087               	movwf	7
  6643  0F8E  0878               	movf	i1memset@c,w
  6644  0F8F  0081               	movwf	1
  6645  0F90  3001               	movlw	1
  6646  0F91  07FC               	addwf	i1memset@p,f
  6647  0F92  3000               	movlw	0
  6648  0F93  3DFD               	addwfc	i1memset@p+1,f
  6649  0F94  2F81               	goto	i1l2759
  6650  0F95                     __end_ofi1_memset:	
  6651                           ;	Return value of i1_memset is never used
  6652                           
  6653                           
  6654                           	psect	text29
  6655  077C                     __ptext29:	
  6656 ;; *************** function _nrf24l01CheckACK *****************
  6657 ;; Defined at:
  6658 ;;		line 73 in file "nrf24l01.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;Total ram usage:        1 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    4
  6679 ;; This function calls:
  6680 ;;		_strcmp
  6681 ;;		i1_nrf24l01SetRXMode
  6682 ;; This function is called by:
  6683 ;;		_nrf24l01ISR
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _nrf24l01CheckACK
  6689  077C                     _nrf24l01CheckACK:	
  6690                           
  6691                           ;nrf24l01.c: 76: if (!RXPacket.packetData.IsACK){
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _nrf24l01CheckACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6695  077C  0022               	movlb	2	; select bank2
  6696  077D  1CA0               	btfss	_RXPacket^(0+256),1
  6697  077E  0008               	return
  6698                           
  6699                           ;nrf24l01.c: 78: };nrf24l01.c: 81: nrf24l01.RXPending = 0;
  6700                           
  6701                           ;nrf24l01.c: 77: return;
  6702  077F  0020               	movlb	0	; select bank0
  6703  0780  10DF               	bcf	_nrf24l01,1	;volatile
  6704                           
  6705                           ;nrf24l01.c: 84: if (!TXPacket->packetData.ACKRequest){
  6706  0781  085D               	movf	_TXPacket,w
  6707  0782  0086               	movwf	6
  6708  0783  0187               	clrf	7
  6709  0784  1C01               	btfss	1,0
  6710  0785  0008               	return
  6711                           
  6712                           ;nrf24l01.c: 86: };nrf24l01.c: 89: if (strcmp(TXPacket->Message, RXPacket.Message) != 0)
      +                          {
  6713                           
  6714                           ;nrf24l01.c: 85: return;
  6715  0786  3021               	movlw	(low ((_RXPacket| (0+256)+1)))& (0+255)
  6716  0787  00F7               	movwf	??_nrf24l01CheckACK
  6717  0788  0877               	movf	??_nrf24l01CheckACK,w
  6718  0789  00F0               	movwf	strcmp@s2
  6719  078A  085D               	movf	_TXPacket,w
  6720  078B  3E01               	addlw	1
  6721  078C  3186  26D2  3187   	fcall	_strcmp
  6722  078F  0870               	movf	?_strcmp,w
  6723  0790  0471               	iorwf	?_strcmp+1,w
  6724  0791  1D03               	btfss	3,2
  6725  0792  0008               	return
  6726                           
  6727                           ;nrf24l01.c: 91: };nrf24l01.c: 96: TXPacket->packetData.ACKRequest = 0;
  6728                           
  6729                           ;nrf24l01.c: 90: return;
  6730  0793  0020               	movlb	0	; select bank0
  6731  0794  085D               	movf	_TXPacket,w
  6732  0795  0086               	movwf	6
  6733  0796  0187               	clrf	7
  6734  0797  1001               	bcf	1,0
  6735                           
  6736                           ;nrf24l01.c: 99: nrf24l01SetRXMode(0);
  6737  0798  3000               	movlw	0
  6738  0799  3185  2525         	fcall	i1_nrf24l01SetRXMode
  6739  079B  0008               	return
  6740  079C                     __end_of_nrf24l01CheckACK:	
  6741                           
  6742                           	psect	text30
  6743  0525                     __ptext30:	
  6744 ;; *************** function i1_nrf24l01SetRXMode *****************
  6745 ;; Defined at:
  6746 ;;		line 37 in file "nrf24l01.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  rxMode          1    wreg     unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  rxMode          1    6[COMMON] unsigned char 
  6751 ;;  nrf24l01SetR    1    5[COMMON] struct .
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0, pclath, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;Total ram usage:        3 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    3
  6768 ;; This function calls:
  6769 ;;		_nrf24l01CEHigh
  6770 ;;		_nrf24l01CELow
  6771 ;;		i1_nrf24l01Send
  6772 ;; This function is called by:
  6773 ;;		_nrf24l01CheckACK
  6774 ;;		_nrf24l01ISR
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function i1_nrf24l01SetRXMode
  6780  0525                     i1_nrf24l01SetRXMode:	
  6781                           
  6782                           ;incstack = 0
  6783                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  6784                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  6785  0525  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  6786                           
  6787                           ;nrf24l01.c: 39: n_CONFIG_t config;;nrf24l01.c: 42: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  6788  0526  01F1               	clrf	i1nrf24l01Send@data
  6789  0527  3000               	movlw	0
  6790  0528  318F  27C9  3185   	fcall	i1_nrf24l01Send
  6791  052B  00F4               	movwf	??i1_nrf24l01SetRXMode
  6792  052C  0874               	movf	??i1_nrf24l01SetRXMode,w
  6793  052D  00F5               	movwf	i1nrf24l01SetRXMode@config
  6794                           
  6795                           ;nrf24l01.c: 45: if (config.PRIM_RX != rxMode){
  6796  052E  0875               	movf	i1nrf24l01SetRXMode@config,w
  6797  052F  3901               	andlw	1
  6798  0530  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  6799  0531  1903               	skipnz
  6800  0532  2D55               	goto	i1l2155
  6801                           
  6802                           ;nrf24l01.c: 48: nrf24l01CELow();
  6803  0533  318F  2732  3185   	fcall	_nrf24l01CELow
  6804                           
  6805                           ;nrf24l01.c: 49: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6806  0536  30A0               	movlw	160
  6807  0537                     u183_27:	
  6808  0537  3200               	nop2
  6809  0538  0B89               	decfsz	9,f
  6810  0539  2D37               	goto	u183_27
  6811                           
  6812                           ;nrf24l01.c: 56: config.PRIM_RX = rxMode;
  6813  053A  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6814  053B  3901               	andlw	1
  6815  053C  1075               	bcf	i1nrf24l01SetRXMode@config,0
  6816  053D  1D03               	skipz
  6817  053E  1475               	bsf	i1nrf24l01SetRXMode@config,0
  6818                           
  6819                           ;nrf24l01.c: 57: nrf24l01Send(0b00100000 | 0x00, config.byte);
  6820  053F  0875               	movf	i1nrf24l01SetRXMode@config,w
  6821  0540  00F4               	movwf	??i1_nrf24l01SetRXMode
  6822  0541  0874               	movf	??i1_nrf24l01SetRXMode,w
  6823  0542  00F1               	movwf	i1nrf24l01Send@data
  6824  0543  3020               	movlw	32
  6825  0544  318F  27C9  3185   	fcall	i1_nrf24l01Send
  6826                           
  6827                           ;nrf24l01.c: 60: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6828  0547  30A0               	movlw	160
  6829  0548                     u184_27:	
  6830  0548  3200               	nop2
  6831  0549  0B89               	decfsz	9,f
  6832  054A  2D48               	goto	u184_27
  6833                           
  6834                           ;nrf24l01.c: 63: if (rxMode){
  6835  054B  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6836  054C  1903               	btfsc	3,2
  6837  054D  2D55               	goto	i1l2155
  6838                           
  6839                           ;nrf24l01.c: 64: nrf24l01CEHigh();
  6840  054E  318F  272F  3185   	fcall	_nrf24l01CEHigh
  6841                           
  6842                           ;nrf24l01.c: 65: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6843  0551  30A0               	movlw	160
  6844  0552                     u185_27:	
  6845  0552  3200               	nop2
  6846  0553  0B89               	decfsz	9,f
  6847  0554  2D52               	goto	u185_27
  6848  0555                     i1l2155:	
  6849                           
  6850                           ;nrf24l01.c: 66: };nrf24l01.c: 67: };nrf24l01.c: 70: nrf24l01.RXMode = rxMode;
  6851  0555  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6852  0556  3901               	andlw	1
  6853  0557  0020               	movlb	0	; select bank0
  6854  0558  115F               	bcf	_nrf24l01,2	;volatile
  6855  0559  1D03               	skipz
  6856  055A  155F               	bsf	_nrf24l01,2	;volatile
  6857  055B  0008               	return
  6858  055C                     __end_ofi1_nrf24l01SetRXMode:	
  6859                           
  6860                           	psect	text31
  6861  0FC9                     __ptext31:	
  6862 ;; *************** function i1_nrf24l01Send *****************
  6863 ;; Defined at:
  6864 ;;		line 11 in file "nrf24l01.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  command         1    wreg     unsigned char 
  6867 ;;  data            1    1[COMMON] unsigned char 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  command         1    3[COMMON] unsigned char 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      unsigned char 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6879 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;Total ram usage:        3 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    2
  6886 ;; This function calls:
  6887 ;;		_enableInterrupts
  6888 ;;		_nrf24l01SPIEnd
  6889 ;;		_nrf24l01SPISend
  6890 ;;		_nrf24l01SPIStart
  6891 ;; This function is called by:
  6892 ;;		_nrf24l01ReceivePacket
  6893 ;;		_nrf24l01ISR
  6894 ;;		i1_nrf24l01SetRXMode
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           
  6899                           ;psect for function i1_nrf24l01Send
  6900  0FC9                     i1_nrf24l01Send:	
  6901                           
  6902                           ;incstack = 0
  6903                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  6904                           ;i1nrf24l01Send@command stored from wreg
  6905  0FC9  00F3               	movwf	i1nrf24l01Send@command
  6906                           
  6907                           ;nrf24l01.c: 14: enableInterrupts(0);
  6908  0FCA  3000               	movlw	0
  6909  0FCB  318F  2748  318F   	fcall	_enableInterrupts
  6910                           
  6911                           ;nrf24l01.c: 17: nrf24l01SPIStart();
  6912  0FCE  318F  2750  318F   	fcall	_nrf24l01SPIStart
  6913                           
  6914                           ;nrf24l01.c: 20: nrf24l01SPISend(command);
  6915  0FD1  0873               	movf	i1nrf24l01Send@command,w
  6916  0FD2  318F  2758  318F   	fcall	_nrf24l01SPISend
  6917                           
  6918                           ;nrf24l01.c: 23: data = nrf24l01SPISend(data);
  6919  0FD5  0871               	movf	i1nrf24l01Send@data,w
  6920  0FD6  318F  2758  318F   	fcall	_nrf24l01SPISend
  6921  0FD9  00F2               	movwf	??i1_nrf24l01Send
  6922  0FDA  0872               	movf	??i1_nrf24l01Send,w
  6923  0FDB  00F1               	movwf	i1nrf24l01Send@data
  6924                           
  6925                           ;nrf24l01.c: 26: nrf24l01SPIEnd();
  6926  0FDC  318F  2741  318F   	fcall	_nrf24l01SPIEnd
  6927                           
  6928                           ;nrf24l01.c: 29: enableInterrupts(1);
  6929  0FDF  3001               	movlw	1
  6930  0FE0  318F  2748         	fcall	_enableInterrupts
  6931                           
  6932                           ;nrf24l01.c: 31: return data;
  6933  0FE2  0871               	movf	i1nrf24l01Send@data,w
  6934  0FE3  0008               	return
  6935  0FE4                     __end_ofi1_nrf24l01Send:	
  6936                           
  6937                           	psect	text32
  6938  0F50                     __ptext32:	
  6939 ;; *************** function _nrf24l01SPIStart *****************
  6940 ;; Defined at:
  6941 ;;		line 65 in file "interface.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, pclath, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    8
  6962 ;; This function calls:
  6963 ;;		_nrf24l01CSLow
  6964 ;; This function is called by:
  6965 ;;		_nrf24l01Send
  6966 ;;		_nrf24l01ReceivePacket
  6967 ;;		_nrf24l01SendPacket
  6968 ;;		i1_nrf24l01Send
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _nrf24l01SPIStart
  6974  0F50                     _nrf24l01SPIStart:	
  6975                           
  6976                           ;interface.c: 66: nrf24l01CSLow();
  6977                           
  6978                           ;incstack = 0
  6979 ;; hardware stack exceeded
  6980                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  6981  0F50  318F  2738  318F   	fcall	_nrf24l01CSLow
  6982                           
  6983                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6984  0F53  300D               	movlw	13
  6985  0F54                     u186_27:	
  6986  0F54  0B89               	decfsz	9,f
  6987  0F55  2F54               	goto	u186_27
  6988  0F56  0000               	nop
  6989  0F57  0008               	return
  6990  0F58                     __end_of_nrf24l01SPIStart:	
  6991                           
  6992                           	psect	text33
  6993  0F38                     __ptext33:	
  6994 ;; *************** function _nrf24l01CSLow *****************
  6995 ;; Defined at:
  6996 ;;		line 18 in file "interface.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		None
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;Total ram usage:        0 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    7
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_nrf24l01SPIStart
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           
  7025                           ;psect for function _nrf24l01CSLow
  7026  0F38                     _nrf24l01CSLow:	
  7027                           
  7028                           ;interface.c: 19: PORTAbits.RA1 = 0;
  7029                           
  7030                           ;incstack = 0
  7031 ;; hardware stack exceeded
  7032                           ; Regs used in _nrf24l01CSLow: []
  7033  0F38  0020               	movlb	0	; select bank0
  7034  0F39  108C               	bcf	12,1	;volatile
  7035  0F3A  0008               	return
  7036  0F3B                     __end_of_nrf24l01CSLow:	
  7037                           
  7038                           	psect	text34
  7039  0F58                     __ptext34:	
  7040 ;; *************** function _nrf24l01SPISend *****************
  7041 ;; Defined at:
  7042 ;;		line 52 in file "interface.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  data            1    wreg     unsigned char 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  data            1    0[COMMON] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      unsigned char 
  7049 ;; Registers used:
  7050 ;;		wreg
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    7
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_nrf24l01Send
  7067 ;;		_nrf24l01ReceivePacket
  7068 ;;		_nrf24l01SendPacket
  7069 ;;		i1_nrf24l01Send
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _nrf24l01SPISend
  7075  0F58                     _nrf24l01SPISend:	
  7076                           
  7077                           ;incstack = 0
  7078 ;; hardware stack exceeded
  7079                           ; Regs used in _nrf24l01SPISend: [wreg]
  7080                           ;nrf24l01SPISend@data stored from wreg
  7081  0F58  00F0               	movwf	nrf24l01SPISend@data
  7082                           
  7083                           ;interface.c: 53: SSP1BUF = data;
  7084  0F59  0870               	movf	nrf24l01SPISend@data,w
  7085  0F5A  0024               	movlb	4	; select bank4
  7086  0F5B  0091               	movwf	17	;volatile
  7087                           
  7088                           ;interface.c: 55: PORTCbits.RC4 = 1;
  7089  0F5C  0020               	movlb	0	; select bank0
  7090  0F5D  160E               	bsf	14,4	;volatile
  7091  0F5E                     i1l94:	
  7092                           ;interface.c: 57: while (!SSP1STATbits.BF){
  7093                           
  7094  0F5E  0024               	movlb	4	; select bank4
  7095  0F5F  1814               	btfsc	20,0	;volatile
  7096  0F60  2F63               	goto	i1l1827
  7097                           
  7098                           ;interface.c: 58: __nop();
  7099  0F61  0000               	nop
  7100  0F62  2F5E               	goto	i1l94
  7101  0F63                     i1l1827:	
  7102                           
  7103                           ;interface.c: 59: };interface.c: 61: return SSP1BUF;
  7104  0F63  0811               	movf	17,w	;volatile
  7105  0F64  0008               	return
  7106  0F65                     __end_of_nrf24l01SPISend:	
  7107                           
  7108                           	psect	text35
  7109  0F41                     __ptext35:	
  7110 ;; *************** function _nrf24l01SPIEnd *****************
  7111 ;; Defined at:
  7112 ;;		line 71 in file "interface.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    8
  7133 ;; This function calls:
  7134 ;;		_nrf24l01CSHigh
  7135 ;; This function is called by:
  7136 ;;		_nrf24l01Send
  7137 ;;		_nrf24l01ReceivePacket
  7138 ;;		_nrf24l01SendPacket
  7139 ;;		i1_nrf24l01Send
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           
  7144                           ;psect for function _nrf24l01SPIEnd
  7145  0F41                     _nrf24l01SPIEnd:	
  7146                           
  7147                           ;interface.c: 72: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7148                           
  7149                           ;incstack = 0
  7150 ;; hardware stack exceeded
  7151                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  7152  0F41  300D               	movlw	13
  7153  0F42                     u187_27:	
  7154  0F42  0B89               	decfsz	9,f
  7155  0F43  2F42               	goto	u187_27
  7156  0F44  0000               	nop
  7157                           
  7158                           ;interface.c: 73: nrf24l01CSHigh();
  7159  0F45  318F  2735         	fcall	_nrf24l01CSHigh
  7160  0F47  0008               	return
  7161  0F48                     __end_of_nrf24l01SPIEnd:	
  7162                           
  7163                           	psect	text36
  7164  0F35                     __ptext36:	
  7165 ;; *************** function _nrf24l01CSHigh *****************
  7166 ;; Defined at:
  7167 ;;		line 23 in file "interface.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		None
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;Total ram usage:        0 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    7
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_nrf24l01SPIEnd
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _nrf24l01CSHigh
  7197  0F35                     _nrf24l01CSHigh:	
  7198                           
  7199                           ;interface.c: 24: PORTAbits.RA1 = 1;
  7200                           
  7201                           ;incstack = 0
  7202 ;; hardware stack exceeded
  7203                           ; Regs used in _nrf24l01CSHigh: []
  7204  0F35  0020               	movlb	0	; select bank0
  7205  0F36  148C               	bsf	12,1	;volatile
  7206  0F37  0008               	return
  7207  0F38                     __end_of_nrf24l01CSHigh:	
  7208                           
  7209                           	psect	text37
  7210  0F48                     __ptext37:	
  7211 ;; *************** function _enableInterrupts *****************
  7212 ;; Defined at:
  7213 ;;		line 77 in file "interface.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  enable          1    wreg     unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  enable          1    0[COMMON] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1    wreg      void 
  7220 ;; Registers used:
  7221 ;;		wreg, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    7
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_nrf24l01Send
  7238 ;;		_nrf24l01SendPacket
  7239 ;;		i1_nrf24l01Send
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _enableInterrupts
  7245  0F48                     _enableInterrupts:	
  7246                           
  7247                           ;incstack = 0
  7248 ;; hardware stack exceeded
  7249                           ; Regs used in _enableInterrupts: [wreg+status,0]
  7250                           ;enableInterrupts@enable stored from wreg
  7251  0F48  00F0               	movwf	enableInterrupts@enable
  7252                           
  7253                           ;interface.c: 78: PIE0bits.INTE = enable;
  7254  0F49  0C70               	rrf	enableInterrupts@enable,w
  7255  0F4A  0021               	movlb	1	; select bank1
  7256  0F4B  1C03               	skipc
  7257  0F4C  1010               	bcf	16,0	;volatile
  7258  0F4D  1803               	skipnc
  7259  0F4E  1410               	bsf	16,0	;volatile
  7260  0F4F  0008               	return
  7261  0F50                     __end_of_enableInterrupts:	
  7262                           
  7263                           	psect	text38
  7264  0F32                     __ptext38:	
  7265 ;; *************** function _nrf24l01CELow *****************
  7266 ;; Defined at:
  7267 ;;		line 8 in file "interface.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		None
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;Total ram usage:        0 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    7
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_nrf24l01SetRXMode
  7292 ;;		_nrf24l01ReceivePacket
  7293 ;;		_nrf24l01SendPacket
  7294 ;;		_nrf24l01Init
  7295 ;;		i1_nrf24l01SetRXMode
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _nrf24l01CELow
  7301  0F32                     _nrf24l01CELow:	
  7302                           
  7303                           ;interface.c: 9: PORTAbits.RA0 = 0;
  7304                           
  7305                           ;incstack = 0
  7306 ;; hardware stack exceeded
  7307                           ; Regs used in _nrf24l01CELow: []
  7308  0F32  0020               	movlb	0	; select bank0
  7309  0F33  100C               	bcf	12,0	;volatile
  7310  0F34  0008               	return
  7311  0F35                     __end_of_nrf24l01CELow:	
  7312                           
  7313                           	psect	text39
  7314  0F2F                     __ptext39:	
  7315 ;; *************** function _nrf24l01CEHigh *****************
  7316 ;; Defined at:
  7317 ;;		line 13 in file "interface.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		None
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    7
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_nrf24l01SetRXMode
  7342 ;;		_nrf24l01ReceivePacket
  7343 ;;		_nrf24l01SendPacket
  7344 ;;		_nrf24l01Init
  7345 ;;		i1_nrf24l01SetRXMode
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function _nrf24l01CEHigh
  7351  0F2F                     _nrf24l01CEHigh:	
  7352                           
  7353                           ;interface.c: 14: PORTAbits.RA0 = 1;
  7354                           
  7355                           ;incstack = 0
  7356 ;; hardware stack exceeded
  7357                           ; Regs used in _nrf24l01CEHigh: []
  7358  0F2F  0020               	movlb	0	; select bank0
  7359  0F30  140C               	bsf	12,0	;volatile
  7360  0F31  0008               	return
  7361  0F32                     __end_of_nrf24l01CEHigh:	
  7362                           
  7363                           	psect	text40
  7364  06D2                     __ptext40:	
  7365 ;; *************** function _strcmp *****************
  7366 ;; Defined at:
  7367 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcmp.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  s1              1    wreg     PTR const unsigned char 
  7370 ;;		 -> NULL(0), Packet.Message(32), main@Packet(33), Packet.Message(32), 
  7371 ;;		 -> loop@Packet(33), 
  7372 ;;  s2              1    0[COMMON] PTR const unsigned char 
  7373 ;;		 -> RXPacket.Message(32), RXPacket(33), 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;  s1              1    4[COMMON] PTR const unsigned char 
  7376 ;;		 -> NULL(0), Packet.Message(32), main@Packet(33), Packet.Message(32), 
  7377 ;;		 -> loop@Packet(33), 
  7378 ;;  r               1    3[COMMON] char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  2    0[COMMON] int 
  7381 ;; Registers used:
  7382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;Total ram usage:        5 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_nrf24l01CheckACK
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           
  7402                           ;psect for function _strcmp
  7403  06D2                     _strcmp:	
  7404                           
  7405                           ;incstack = 0
  7406                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
  7407                           ;strcmp@s1 stored from wreg
  7408  06D2  00F4               	movwf	strcmp@s1
  7409  06D3  2EDC               	goto	i1l2053
  7410  06D4                     i1l2049:	
  7411  06D4  3001               	movlw	1
  7412  06D5  00F2               	movwf	??_strcmp
  7413  06D6  0872               	movf	??_strcmp,w
  7414  06D7  07F4               	addwf	strcmp@s1,f
  7415  06D8  3001               	movlw	1
  7416  06D9  00F2               	movwf	??_strcmp
  7417  06DA  0872               	movf	??_strcmp,w
  7418  06DB  07F0               	addwf	strcmp@s2,f
  7419  06DC                     i1l2053:	
  7420  06DC  0874               	movf	strcmp@s1,w
  7421  06DD  0086               	movwf	6
  7422  06DE  0187               	clrf	7
  7423  06DF  0870               	movf	strcmp@s2,w
  7424  06E0  0084               	movwf	4
  7425  06E1  3001               	movlw	1	; select bank2/3
  7426  06E2  0085               	movwf	5
  7427  06E3  0300               	decf	0,w
  7428  06E4  3AFF               	xorlw	255
  7429  06E5  0701               	addwf	1,w
  7430  06E6  00F2               	movwf	??_strcmp
  7431  06E7  0872               	movf	??_strcmp,w
  7432  06E8  00F3               	movwf	strcmp@r
  7433  06E9  0873               	movf	strcmp@r,w
  7434  06EA  1D03               	btfss	3,2
  7435  06EB  2EF2               	goto	i1l2057
  7436  06EC  0874               	movf	strcmp@s1,w
  7437  06ED  0086               	movwf	6
  7438  06EE  0187               	clrf	7
  7439  06EF  0801               	movf	1,w
  7440  06F0  1D03               	btfss	3,2
  7441  06F1  2ED4               	goto	i1l2049
  7442  06F2                     i1l2057:	
  7443  06F2  0873               	movf	strcmp@r,w
  7444  06F3  00F0               	movwf	?_strcmp
  7445  06F4  01F1               	clrf	?_strcmp+1
  7446  06F5  1BF0               	btfsc	?_strcmp,7
  7447  06F6  03F1               	decf	?_strcmp+1,f
  7448  06F7  0008               	return
  7449  06F8                     __end_of_strcmp:	
  7450                           
  7451                           	psect	text41
  7452  0F65                     __ptext41:	
  7453 ;; *************** function _exception *****************
  7454 ;; Defined at:
  7455 ;;		line 81 in file "interface.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  exception       1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  exception       1   12[COMMON] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:        3 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    2
  7476 ;; This function calls:
  7477 ;;		___wmul
  7478 ;;		i1_flashUpdate
  7479 ;; This function is called by:
  7480 ;;		_nrf24l01ISR
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function _exception
  7486  0F65                     _exception:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7490                           ;exception@exception stored from wreg
  7491  0F65  00FC               	movwf	exception@exception
  7492                           
  7493                           ;interface.c: 82: romData.bootMode = (unsigned) (exception * 10);
  7494  0F66  087C               	movf	exception@exception,w
  7495  0F67  00FA               	movwf	??_exception
  7496  0F68  01FB               	clrf	??_exception+1
  7497  0F69  087A               	movf	??_exception,w
  7498  0F6A  00F0               	movwf	___wmul@multiplier
  7499  0F6B  087B               	movf	??_exception+1,w
  7500  0F6C  00F1               	movwf	___wmul@multiplier+1
  7501  0F6D  300A               	movlw	10
  7502  0F6E  00F2               	movwf	___wmul@multiplicand
  7503  0F6F  3000               	movlw	0
  7504  0F70  00F3               	movwf	___wmul@multiplicand+1
  7505  0F71  318F  27AE  318F   	fcall	___wmul
  7506  0F74  0871               	movf	?___wmul+1,w
  7507  0F75  0022               	movlb	2	; select bank2
  7508  0F76  00D3               	movwf	((_romData+1)^(0+256)+17)
  7509  0F77  0870               	movf	?___wmul,w
  7510  0F78  00D2               	movwf	(_romData^(0+256)+17)
  7511                           
  7512                           ;interface.c: 83: flashUpdate();
  7513  0F79  3187  271B         	fcall	i1_flashUpdate
  7514  0F7B  0001               	reset	;# 
  7515  0F7C  0008               	return
  7516  0F7D                     __end_of_exception:	
  7517                           
  7518                           	psect	text42
  7519  071B                     __ptext42:	
  7520 ;; *************** function i1_flashUpdate *****************
  7521 ;; Defined at:
  7522 ;;		line 97 in file "flash.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  flashUpdate     2    8[COMMON] unsigned int 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:        4 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    1
  7543 ;; This function calls:
  7544 ;;		i1_flashWriteByte
  7545 ;; This function is called by:
  7546 ;;		_exception
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function i1_flashUpdate
  7552  071B                     i1_flashUpdate:	
  7553                           
  7554                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  7555                           
  7556                           ;incstack = 0
  7557                           ; Regs used in i1_flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7558  071B  01F8               	clrf	i1flashUpdate@i
  7559  071C  01F9               	clrf	i1flashUpdate@i+1
  7560  071D                     L3:	
  7561  071D  3000               	movlw	0
  7562  071E  0279               	subwf	i1flashUpdate@i+1,w
  7563  071F  3020               	movlw	32
  7564  0720  1903               	skipnz
  7565  0721  0278               	subwf	i1flashUpdate@i,w
  7566  0722  1803               	btfsc	3,0
  7567  0723  0008               	return
  7568                           
  7569                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  7570  0724  0879               	movf	i1flashUpdate@i+1,w
  7571  0725  00F1               	movwf	i1flashWriteByte@offset+1
  7572  0726  0878               	movf	i1flashUpdate@i,w
  7573  0727  00F0               	movwf	i1flashWriteByte@offset
  7574  0728  0878               	movf	i1flashUpdate@i,w
  7575  0729  3EA0               	addlw	(low (_romHolder| (0+256)))& (0+255)
  7576  072A  0086               	movwf	6
  7577  072B  3001               	movlw	1	; select bank3/4
  7578  072C  0087               	movwf	7
  7579  072D  0801               	movf	1,w
  7580  072E  00F6               	movwf	??i1_flashUpdate
  7581  072F  01F7               	clrf	??i1_flashUpdate+1
  7582  0730  0876               	movf	??i1_flashUpdate,w
  7583  0731  00F2               	movwf	i1flashWriteByte@data
  7584  0732  0877               	movf	??i1_flashUpdate+1,w
  7585  0733  00F3               	movwf	i1flashWriteByte@data+1
  7586  0734  3186  2625  3187   	fcall	i1_flashWriteByte
  7587  0737  3001               	movlw	1
  7588  0738  07F8               	addwf	i1flashUpdate@i,f
  7589  0739  3000               	movlw	0
  7590  073A  3DF9               	addwfc	i1flashUpdate@i+1,f
  7591  073B  2F1D               	goto	L3
  7592  073C                     __end_ofi1_flashUpdate:	
  7593                           
  7594                           	psect	text43
  7595  0625                     __ptext43:	
  7596 ;; *************** function i1_flashWriteByte *****************
  7597 ;; Defined at:
  7598 ;;		line 8 in file "flash.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  offset          2    0[COMMON] unsigned int 
  7601 ;;  data            2    2[COMMON] unsigned int 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  flashWriteBy    2    4[COMMON] unsigned int 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;Total ram usage:        6 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		i1_flashUpdate
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           
  7627                           ;psect for function i1_flashWriteByte
  7628  0625                     i1_flashWriteByte:	
  7629                           
  7630                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in i1_flashWriteByte: [wreg+status,2+status,0]
  7634  0625  138B               	bcf	11,7	;volatile
  7635                           
  7636                           ;flash.c: 15: PMCON1 = 0x00;
  7637  0626  0031               	movlb	17	; select bank17
  7638  0627  0195               	clrf	21	;volsfr
  7639                           
  7640                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  7641  0628  0870               	movf	i1flashWriteByte@offset,w
  7642  0629  3EE0               	addlw	224
  7643  062A  00F4               	movwf	i1flashWriteByte@address
  7644  062B  301F               	movlw	31
  7645  062C  3D71               	addwfc	i1flashWriteByte@offset+1,w
  7646  062D  00F5               	movwf	i1flashWriteByte@address+1
  7647                           
  7648                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  7649  062E  0874               	movf	i1flashWriteByte@address,w
  7650  062F  0091               	movwf	17	;volatile
  7651                           
  7652                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  7653  0630  0875               	movf	i1flashWriteByte@address+1,w
  7654  0631  0092               	movwf	18	;volatile
  7655                           
  7656                           ;flash.c: 21: PMCON1bits.FREE = 1;
  7657  0632  1615               	bsf	21,4	;volsfr
  7658                           
  7659                           ;flash.c: 22: PMCON1bits.WREN = 1;
  7660  0633  1515               	bsf	21,2	;volsfr
  7661                           
  7662                           ;flash.c: 24: PMCON2 = 0x55;
  7663  0634  3055               	movlw	85
  7664  0635  0096               	movwf	22	;volsfr
  7665                           
  7666                           ;flash.c: 25: PMCON2 = 0xAA;
  7667  0636  30AA               	movlw	170
  7668  0637  0096               	movwf	22	;volsfr
  7669                           
  7670                           ;flash.c: 27: PMCON1bits.WR = 1;
  7671  0638  1495               	bsf	21,1	;volsfr
  7672                           
  7673                           ;flash.c: 29: __nop();
  7674  0639  0000               	nop
  7675                           
  7676                           ;flash.c: 30: __nop();
  7677  063A  0000               	nop
  7678                           
  7679                           ;flash.c: 32: PMCON1bits.WREN = 0;
  7680  063B  0031               	movlb	17	; select bank17
  7681  063C  1115               	bcf	21,2	;volsfr
  7682                           
  7683                           ;flash.c: 36: PMCON1 = 0x00;
  7684  063D  0195               	clrf	21	;volsfr
  7685                           
  7686                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  7687  063E  0874               	movf	i1flashWriteByte@address,w
  7688  063F  0091               	movwf	17	;volatile
  7689                           
  7690                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  7691  0640  0875               	movf	i1flashWriteByte@address+1,w
  7692  0641  0092               	movwf	18	;volatile
  7693                           
  7694                           ;flash.c: 41: PMCON1bits.FREE = 0;
  7695  0642  1215               	bcf	21,4	;volsfr
  7696                           
  7697                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  7698  0643  1695               	bsf	21,5	;volsfr
  7699                           
  7700                           ;flash.c: 43: PMCON1bits.WREN = 1;
  7701  0644  1515               	bsf	21,2	;volsfr
  7702                           
  7703                           ;flash.c: 45: PMDATL = (data >> 0);
  7704  0645  0872               	movf	i1flashWriteByte@data,w
  7705  0646  0093               	movwf	19	;volatile
  7706                           
  7707                           ;flash.c: 46: PMDATH = (data >> 8);
  7708  0647  0873               	movf	i1flashWriteByte@data+1,w
  7709  0648  0094               	movwf	20	;volatile
  7710                           
  7711                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  7712  0649  1295               	bcf	21,5	;volsfr
  7713                           
  7714                           ;flash.c: 50: PMCON2 = 0x55;
  7715  064A  3055               	movlw	85
  7716  064B  0096               	movwf	22	;volsfr
  7717                           
  7718                           ;flash.c: 51: PMCON2 = 0xAA;
  7719  064C  30AA               	movlw	170
  7720  064D  0096               	movwf	22	;volsfr
  7721                           
  7722                           ;flash.c: 53: PMCON1bits.WR = 1;
  7723  064E  1495               	bsf	21,1	;volsfr
  7724                           
  7725                           ;flash.c: 55: __nop();
  7726  064F  0000               	nop
  7727                           
  7728                           ;flash.c: 56: __nop();
  7729  0650  0000               	nop
  7730                           
  7731                           ;flash.c: 58: PMCON1bits.WREN = 0;
  7732  0651  0031               	movlb	17	; select bank17
  7733  0652  1115               	bcf	21,2	;volsfr
  7734                           
  7735                           ;flash.c: 61: INTCONbits.GIE = 1;
  7736  0653  178B               	bsf	11,7	;volatile
  7737  0654  0008               	return
  7738  0655                     __end_ofi1_flashWriteByte:	
  7739                           
  7740                           	psect	text44
  7741  0FAE                     __ptext44:	
  7742 ;; *************** function ___wmul *****************
  7743 ;; Defined at:
  7744 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  multiplier      2    0[COMMON] unsigned int 
  7747 ;;  multiplicand    2    2[COMMON] unsigned int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  product         2    4[COMMON] unsigned int 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  2    0[COMMON] unsigned int 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;Total ram usage:        6 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_exception
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           
  7773                           ;psect for function ___wmul
  7774  0FAE                     ___wmul:	
  7775                           
  7776                           ;incstack = 0
  7777                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7778  0FAE  01F4               	clrf	___wmul@product
  7779  0FAF  01F5               	clrf	___wmul@product+1
  7780  0FB0                     i1l2073:	
  7781  0FB0  1C70               	btfss	___wmul@multiplier,0
  7782  0FB1  2FB6               	goto	i1l422
  7783  0FB2  0872               	movf	___wmul@multiplicand,w
  7784  0FB3  07F4               	addwf	___wmul@product,f
  7785  0FB4  0873               	movf	___wmul@multiplicand+1,w
  7786  0FB5  3DF5               	addwfc	___wmul@product+1,f
  7787  0FB6                     i1l422:	
  7788  0FB6  3001               	movlw	1
  7789  0FB7                     u102_25:	
  7790  0FB7  35F2               	lslf	___wmul@multiplicand,f
  7791  0FB8  0DF3               	rlf	___wmul@multiplicand+1,f
  7792  0FB9  0B89               	decfsz	9,f
  7793  0FBA  2FB7               	goto	u102_25
  7794  0FBB  3001               	movlw	1
  7795  0FBC                     u103_25:	
  7796  0FBC  36F1               	lsrf	___wmul@multiplier+1,f
  7797  0FBD  0CF0               	rrf	___wmul@multiplier,f
  7798  0FBE  0B89               	decfsz	9,f
  7799  0FBF  2FBC               	goto	u103_25
  7800  0FC0  0870               	movf	___wmul@multiplier,w
  7801  0FC1  0471               	iorwf	___wmul@multiplier+1,w
  7802  0FC2  1D03               	btfss	3,2
  7803  0FC3  2FB0               	goto	i1l2073
  7804  0FC4  0875               	movf	___wmul@product+1,w
  7805  0FC5  00F1               	movwf	?___wmul+1
  7806  0FC6  0874               	movf	___wmul@product,w
  7807  0FC7  00F0               	movwf	?___wmul
  7808  0FC8  0008               	return
  7809  0FC9                     __end_of___wmul:	
  7810  007E                     btemp	set	126	;btemp
  7811  007E                     int$flags	set	126
  7812  007E                     wtemp0	set	126


Data Sizes:
    Strings     34
    Constant    25
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      64
    BANK1            80     66      68
    BANK2            80      0      52
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RXPacket(BANK2[33]), Packet.Message(BANK0[32]), main@Packet(BANK1[33]), 
		 -> Packet.Message(BANK0[32]), loop@Packet(BANK1[33]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RXPacket(BANK2[33]), Packet.Message(BANK0[32]), main@Packet(BANK1[33]), 
		 -> Packet.Message(BANK0[32]), loop@Packet(BANK1[33]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK2[19]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK2[19]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 33
		 -> RXPacket.Message(BANK2[32]), RXPacket(BANK2[33]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 33
		 -> NULL(NULL[0]), Packet.Message(BANK0[32]), main@Packet(BANK1[33]), Packet.Message(BANK0[32]), 
		 -> loop@Packet(BANK1[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_9(CODE[5]), STR_7(CODE[5]), STR_6(CODE[4]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[2]), setMessage@tempString(BANK0[16]), 
		 -> STR_1(CODE[2]), romData.name(BANK2[16]), romData(BANK2[19]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 33
		 -> main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 33
		 -> main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    memset@p1	PTR void  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> setMessage@tempString(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    nrf24l01SendPacket@Packet	PTR struct . size(1) Largest target is 33
		 -> main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    TXPacket	PTR struct . size(1) Largest target is 33
		 -> NULL(NULL[0]), main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK2[19]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> setMessage@tempString(BANK0[16]), 

    setMessage@topic	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[5]), STR_7(CODE[5]), STR_6(CODE[4]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 33
		 -> main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 

    setMessage@message	PTR unsigned char  size(1) Largest target is 33
		 -> main@Packet(BANK1[33]), loop@Packet(BANK1[33]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _nrf24l01ReceivePacket->i1_memset
    i1_memset->i1_strlen
    _nrf24l01CheckACK->i1_nrf24l01SetRXMode
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->i1_flashUpdate
    i1_flashUpdate->i1_flashWriteByte

Critical Paths under _main in BANK0

    _main->_loop
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_setMessage
    _setMessage->_getADCValue
    _utoa->___lwdiv
    _nrf24l01SendPacket->_nrf24l01SetRXMode
    _nrf24l01SendPacket->_strlen
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv
    _flashUpdate->_flashWriteByte
    _flashRealod->_flashReadByte

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_nrf24l01ReceivePacket

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   15552
                                             60 BANK0      1     1      0
                                             33 BANK1     33    33      0
                        _flashRealod
                        _flashUpdate
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendPacket
                         _setMessage
                              _sleep
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2     169
                                              5 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    1594
                                             18 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               11    11      0    1572
                                              8 BANK0     10    10      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                37    37      0    7173
                                             56 BANK0      4     4      0
                                              0 BANK1     33    33      0
                        _getADCValue
                 _nrf24l01SendPacket
                         _setMessage
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setMessage                                          23    17      6    3757
                                             33 BANK0     23    17      6
                        _getADCValue (ARG)
                             _memset
                             _strcat
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1297
                                             13 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     418
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     568
                                              5 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     445
                                              5 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendPacket                                   4     4      0    2121
                                             11 BANK0      4     4      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     200
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1447
                                              8 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1313
                                              5 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             19 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              5 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _flashUpdate                                          4     4      0     373
                                             11 BANK0      4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (2) _flashWriteByte                                       6     2      4     283
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _flashRealod                                          3     3      0     246
                                             14 BANK0      3     3      0
                      _flashReadByte
 ---------------------------------------------------------------------------------
 (2) _flashReadByte                                        9     7      2     156
                                              5 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    2620
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    2620
                                              3 BANK0      2     2      0
                          _exception
                   _nrf24l01CheckACK
              _nrf24l01ReceivePacket
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) _nrf24l01ReceivePacket                                3     3      0     747
                                              0 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                           i1_memset
                     i1_nrf24l01Send
                           i1_strlen
 ---------------------------------------------------------------------------------
 (10) i1_strlen                                            6     4      2     134
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (10) i1_memset                                            8     2      6     211
                                              6 COMMON     8     2      6
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (9) _nrf24l01CheckACK                                     1     1      0     560
                                              7 COMMON     1     1      0
                             _strcmp
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     375
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     241
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              5     3      2     185
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     539
                                             10 COMMON     3     3      0
                             ___wmul
                      i1_flashUpdate
 ---------------------------------------------------------------------------------
 (10) i1_flashUpdate                                       4     4      0     297
                                              6 COMMON     4     4      0
                   i1_flashWriteByte
 ---------------------------------------------------------------------------------
 (11) i1_flashWriteByte                                    6     2      4     207
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flashRealod
     _flashReadByte
   _flashUpdate
     _flashWriteByte
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendPacket
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
       _strlen
     _setMessage
       _getADCValue (ARG)
         ___lldiv
         ___lmul
       _memset (ARG)
       _strcat (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
     _sleep
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendPacket
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _strlen
   _setMessage
     _getADCValue (ARG)
       ___lldiv
       ___lmul
     _memset (ARG)
     _strcat (ARG)
     _utoa (ARG)
       ___lwdiv
       ___lwmod
   _sleep
   _strcpy

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       ___wmul
       i1_flashUpdate
         i1_flashWriteByte
     _nrf24l01CheckACK
       _strcmp
       i1_nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         i1_nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _nrf24l01ReceivePacket
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       i1_memset
         i1_strlen (ARG)
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
       i1_strlen
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      34       9       65.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 13 13:13:18 2018

            flashReadByte@result 002A                     flashRealod@i 002F                      __CFG_CP$OFF 0000  
            ___wmul@multiplicand 0072              nrf24l01Send@command 0027  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l301 01AC                              l215 07F5  
                            l208 02F4                              l305 01BC                              l840 03A3  
                   flashUpdate@i 002D                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            u805 0572                              u815 057C                              u825 0584  
                            u855 065F                              u785 0568                              u875 066E  
                            u885 0675                              wreg 0009              nrf24l01SendPacket@i 002E  
                           ?_ISR 0070                   ??_nrf24l01Init 0032                             l2011 06BD  
                           l2015 06C5                             l2105 0422                             l2009 06B2  
                           l2115 0450                             l2107 0430                             l2019 035D  
                           l2029 037B                             l2119 045B                             l3041 02CB  
                           l2091 0608                             l2087 05FE                             l2281 02F9  
                           l2283 02ED                             l2285 0317                             l1901 067D  
                           l2615 07DF                             l2801 01E7                   ??_nrf24l01Send 0026  
                           l2821 0223                             l2805 0201                             l2741 0F9A  
                           l2747 07A1                             l2819 0217                             l1875 0583  
                           l1867 0565                             l1891 065C                             l2749 07AD  
                           l2829 0227                             l1869 0571                             l1893 0668  
                           l1879 058C                             l1897 0674                             l1995 051E  
                           l2797 01D7                             l2789 01B0                             l2979 027E  
                           STR_1 1038                     __CFG_WDTE$ON 0000                             STR_2 1038  
                           STR_3 1030                             STR_4 1022                             STR_5 1018  
                           STR_6 1034                             STR_7 101D                             STR_8 102C  
                           STR_9 1027                             u1105 0425                             u1125 0431  
                           u1135 0445                             u1145 0451                             u1065 0609  
                           u1075 0610                             u1807 0510                             u1575 01FB  
                           u1727 025C                             u1817 051B                             u1737 0690  
                           u1827 02EA                             u1747 06A2                             u1757 01B8  
                           u1767 0208                             u1777 021F                             u1787 023A  
                           u1797 04FE                             i1l94 0F5E                             _WPUA 020C  
                           _WPUC 020E   __size_of_nrf24l01InterfaceInit 001C                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 1000                             _main 0240  
                           _loop 002B                  ??_flashReadByte 0027                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           _utoa 0357   __size_of_nrf24l01ReceivePacket 0058                    __CFG_BORV$LOW 0000  
  __end_of_nrf24l01ReceivePacket 0411                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000      __size_of_nrf24l01SendPacket 009A                            ??_ISR 007E  
           __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070                  ??_nrf24l01CSLow 0070  
                          ?_main 0070                            ?_loop 0070                  __end_of___lldiv 0464  
                          ?_utoa 002D                   __CFG_DEBUG$OFF 0000                  __end_of___lwdiv 0591  
                          i1l203 000D                            i1l422 0FB6                  __end_of___lwmod 0682  
         enableInterrupts@enable 0070                 i1_flashWriteByte 0625                       i1memset@p1 0076  
                 i1flashUpdate@i 0078              ___lmul@multiplicand 0029                    __CFG_PWRTE$ON 0000  
                          _sleep 07F5                   __CFG_BOREN$OFF 0000                 _enableInterrupts 0F48  
                          utoa@c 0034                            utoa@v 0032                            status 0003  
                          wtemp0 007E      __end_ofi1_nrf24l01SetRXMode 055C                 __end_ofi1_memset 0F95  
              getADCValue@adcSum 003D                 __end_ofi1_strlen 07D9                 _nrf24l01SPIStart 0F50  
                __initialization 0011                 _nrf24l01CheckACK 077C                     __end_of_main 02CF  
                   __end_of_loop 00FC                     __end_of_utoa 03B9                 ??_nrf24l01CEHigh 0070  
                         ??_main 005C                           ??_loop 0058                 ??_nrf24l01CSHigh 0070  
                     i1strlen@cp 0074                           ??_utoa 0031                 ??_nrf24l01SPIEnd 0070  
         __size_ofi1_flashUpdate 0021         __size_of_nrf24l01SPISend 000D                           _ADRESH 009C  
                         _ADRESL 009B                           ?_sleep 0070                           _ANSELA 018C  
                         _ANSELC 018E                 ??_flashWriteByte 0029                           u102_25 0FB7  
                         u103_25 0FBC                           i1l2053 06DC                           i1l2073 0FB0  
                         i1l2057 06F2                           i1l2049 06D4                           _ODCONA 028C  
                         i1l2155 0555                           _ODCONC 028E                           i1l1827 0F63  
                         i1l2851 03F2                           i1l2765 07BF                           i1l2759 0F81  
                         i1l2767 07CB                           i1l2855 0403                           i1l2871 05D3  
                         i1l2859 040B                           i1l2887 05EC                           i1l2879 05E2  
                         _INLVLA 038C                           _INLVLC 038E                           u183_27 0537  
                         _PMADRH 0892                           u184_27 0548                           _PMADRL 0891  
                         u185_27 0552                           _PMDATH 0894                           u186_27 0F54  
                         _PMDATL 0893                           u187_27 0F42                           _PMCON1 0895  
                         _PMCON2 0896             __size_of_flashRealod 0020               flashWriteByte@data 0027  
           __size_of_flashUpdate 0023             __size_of_nrf24l01ISR 0032          nrf24l01SetRXMode@config 0029  
                         ___lmul 05F5          nrf24l01SetRXMode@rxMode 002A                           ___wmul 0FAE  
                 __CFG_STVREN$ON 0000                        ??___lldiv 002D                        ??___lwdiv 0029  
                      ??___lwmod 0029             __end_of_nrf24l01Init 06AC             __end_of_nrf24l01Send 075C  
                         _memset 0F95            _nrf24l01InitRegisters 00FC                           _strcat 06AC  
                         _strcmp 06D2                           _strcpy 07D9                           _strlen 079C  
      i1nrf24l01SetRXMode@config 0075                 __end_of_romArray 2000        i1nrf24l01SetRXMode@rxMode 0076  
             getADCValue@adcLoop 003C          __end_of__initialization 0027         nrf24l01SendPacket@Packet 002D  
             getADCValue@channel 003B                    i1_flashUpdate 071B               getADCValue@divider 0033  
                 __pcstackCOMMON 0070                    __end_of_sleep 07FE    nrf24l01InitRegisters@enRXAddr 002E  
                      ?i1_memset 0076                        ?i1_strlen 0070                          ??_sleep 0025  
                     __pbssBANK0 005D                       __pbssBANK1 00E2                       __pbssBANK2 0120  
                     __pbssBANK3 01A0                ??_nrf24l01SPISend 0070               __size_of_exception 0018  
                 ?i1_flashUpdate 0070          __size_ofi1_nrf24l01Send 001B         __end_ofi1_flashWriteByte 0655  
                     __pmaintext 0240                          ?___lmul 0025                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000                _nrf24l01SetRXMode 04EA           ?_nrf24l01InitRegisters 0070  
                     __pintentry 0004              nrf24l01SPISend@data 0070                          ?_memset 0025  
                 ___lmul@product 002D               ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 0F50  
            __CFG_RSTOSC$HFINT32 0000                          ?_strcat 0025                          ?_strcmp 0070  
                        ?_strcpy 0025                          ?_strlen 0025            __end_of_n_ADDRESS_MUL 103B  
                     ??i1_memset 007C              ??_nrf24l01SetRXMode 0028         __end_of_nrf24l01SPIStart 0F58  
                     ??i1_strlen 0072                          _SSP1BUF 0211         __end_of_nrf24l01CheckACK 079C  
          _nrf24l01InterfaceInit 0FE4            __end_of_flashReadByte 05C3                 __p_romArray_text 1FE0  
     __end_of_nrf24l01SendPacket 0240                    ??_getADCValue 0037            __size_of_nrf24l01Init 002A  
          __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 0525            _nrf24l01ReceivePacket 03B9  
                __size_of___lmul 0030                          ___lldiv 0411                  __size_of___wmul 001B  
                        ___lwdiv 055C                          ___lwmod 0655            __end_of_nrf24l01CELow 0F35  
                __size_of_memset 0019            __end_of_nrf24l01CSLow 0F3B                          __ptext1 07D9  
                        __ptext2 0682                          __ptext3 0FE4                          __ptext4 00FC  
                        __ptext5 002B                          __ptext6 07F5                          __ptext7 0464  
                        __ptext8 0357                          __ptext9 0655                  __size_of_strcat 0026  
                __size_of_strcmp 0026                __end_of_exception 0F7D                  __size_of_strcpy 001C  
                __size_of_strlen 001F                     __size_of_ISR 000B                          _counter 00E2  
        i1flashWriteByte@address 0074                 _romArray_absaddr 1FE0                          _romData 0141  
                        clrloop0 0F3C             end_of_initialization 0027                     _nrf24l01Init 0682  
                     _setMessage 0464                  ??i1_flashUpdate 0076                     _nrf24l01Send 073C  
                        memset@c 0027                          memset@n 0029                          memset@p 002B  
                ___lldiv@divisor 0025                  ___lldiv@counter 0032     __size_ofi1_nrf24l01SetRXMode 0037  
                        utoa@buf 0035                          utoa@val 002D                          strcmp@r 0073  
          i1nrf24l01Send@command 0073                          strlen@s 0025              __end_of_getADCValue 0357  
                      _PORTAbits 000C                        _PORTCbits 000E                        _TRISAbits 008C  
                      _TRISCbits 008E                 nrf24l01Send@data 0025                       main@Packet 00C1  
               __CFG_FEXTOSC$OFF 0000                    ??_flashRealod 002E                    ??_flashUpdate 002B  
                  ??_nrf24l01ISR 0023           ?_nrf24l01InterfaceInit 0070                   i1_nrf24l01Send 0FC9  
         ?_nrf24l01ReceivePacket 0070       __size_of_nrf24l01SetRXMode 003B                   __end_of___lmul 0625  
                 __end_of___wmul 0FC9                        i1memset@c 0078                        i1memset@n 007A  
                      i1memset@p 007C                   __end_of_memset 0FAE                   __end_of_strcat 06D2  
                 __end_of_strcmp 06F8                   __end_of_strcpy 07F5                   __end_of_strlen 07BB  
            start_initialization 0011                  _nrf24l01SPISend 0F58                      __end_of_ISR 000F  
          flashWriteByte@address 0029                __size_ofi1_memset 0018          __size_of_nrf24l01CEHigh 0003  
                      i1strlen@s 0070                __size_ofi1_strlen 001E          __size_of_nrf24l01CSHigh 0003  
                    ?_setMessage 0041           __end_ofi1_nrf24l01Send 0FE4          __size_of_nrf24l01SPIEnd 0007  
        ??_nrf24l01InitRegisters 0028                 __CFG_LPBOREN$OFF 0000                ?i1_flashWriteByte 0070  
            __end_of_flashRealod 077C                      _getADCValue 02CF          __size_of_flashWriteByte 003C  
            __end_of_flashUpdate 071B                         ??___lmul 002D              __end_of_nrf24l01ISR 05F5  
           setMessage@tempString 0047                         ??___wmul 0074               ??i1_flashWriteByte 0074  
           __end_of_resetRomData 1013                         ??_memset 002B                ?_enableInterrupts 0070  
                       ??_strcat 0027                         ??_strcmp 0072                         ??_strcpy 0027  
                       ??_strlen 0027               ??_enableInterrupts 0070                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                ?_nrf24l01SPIStart 0070  
                     loop@Packet 00A0                ?_nrf24l01CheckACK 0070               ??_nrf24l01SPIStart 0070  
             ??_nrf24l01CheckACK 0077                  ?i1_nrf24l01Send 0071                 ___lwdiv@dividend 0027  
                       ?___lldiv 0025                         ?___lwdiv 0025                         ?___lwmod 0025  
           __end_of_n_ADDRESS_P0 1018          __end_of_nrf24l01SPISend 0F65               i1nrf24l01Send@data 0071  
      nrf24l01InitRegisters@enAA 002F              __size_of_setMessage 004A               _nrf24l01SendPacket 01A6  
                      _exception 0F65              ?_nrf24l01SendPacket 0070                 ___lwdiv@quotient 002A  
            i1_nrf24l01SetRXMode 0525                   __size_of_sleep 0009                      _flashRealod 075C  
                 ___wmul@product 0074           i1flashWriteByte@offset 0070                      _flashUpdate 06F8  
                    _nrf24l01ISR 05C3                        clear_ram0 0F3B                         _PIE0bits 0090  
                       _PIR0bits 0010                        _romHolder 01A0                        _sleepLoop 005E  
           ??_nrf24l01SendPacket 002B                  setMessage@value 0043                  setMessage@topic 0041  
           ?i1_nrf24l01SetRXMode 0070                       _ADCON0bits 009D                       _ADCON1bits 009E  
              ___wmul@multiplier 0070                         _WPUAbits 020C                         i1_memset 0F7D  
                       _RXPacket 0120           __size_of_flashReadByte 0032                         _TXPacket 005D  
                     ?_exception 0070                         i1_strlen 07BB                   _nrf24l01CEHigh 0F2F  
              ___lmul@multiplier 0025          ??_nrf24l01InterfaceInit 0025                   _nrf24l01CSHigh 0F35  
              nrf24l01ISR@status 0024                   _nrf24l01SPIEnd 0F41          ??_nrf24l01ReceivePacket 0020  
         __size_of_nrf24l01CELow 0003            __end_ofi1_flashUpdate 073C           __size_of_nrf24l01CSLow 0003  
           flashWriteByte@offset 0025                   _flashWriteByte 04AE            ??i1_nrf24l01SetRXMode 0074  
               __size_of___lldiv 0053                 __size_of___lwdiv 0035                 __size_of___lwmod 002D  
               ?_nrf24l01SPISend 0070                       _ANSELAbits 018C                       _ANSELCbits 018E  
                  _n_ADDRESS_MUL 103A                       strcat@from 0025           __end_of_nrf24l01CEHigh 0F32  
                ___lwdiv@divisor 0025           __end_of_nrf24l01CSHigh 0F38                  ___lwdiv@counter 002C  
                       __ptext10 055C                         __ptext11 06AC                         __ptext20 06F8  
                       __ptext12 0F95                         __ptext21 04AE                         __ptext13 01A6  
                       __ptext30 0525                         __ptext22 075C                         __ptext14 079C  
                       __ptext31 0FC9                         __ptext23 0591                         __ptext15 04EA  
                       __ptext40 06D2                         __ptext32 0F50                         __ptext16 073C  
                       __ptext41 0F65                         __ptext33 0F38                         __ptext25 05C3  
                       __ptext17 02CF                         __ptext42 071B                         __ptext34 0F58  
                       __ptext26 03B9                         __ptext18 05F5                         __ptext43 0625  
                       __ptext35 0F41                         __ptext27 07BB                         __ptext19 0411  
                       __ptext44 0FAE                         __ptext36 0F35                         __ptext28 0F7D  
                       __ptext37 0F48                         __ptext29 077C                         __ptext38 0F32  
                       __ptext39 0F2F                     _SSP1CON1bits 0215           __end_of_nrf24l01SPIEnd 0F48  
                       _nrf24l01 005F                     _resetRomData 1000           nrf24l01Init@isReciever 0034  
                    _OSCCON1bits 0919                     ??_setMessage 0047                       strcpy@from 0025  
                  __size_of_main 008F                    __size_of_loop 00D1     nrf24l01InitRegisters@channel 0029  
                  __size_of_utoa 0062           __end_of_flashWriteByte 04EA     nrf24l01InitRegisters@feature 002B  
             exception@exception 007C                       _RC0PPSbits 0EA0                         _romArray 1FE0  
                  _flashReadByte 0591     nrf24l01InitRegisters@rfSetup 002C                       _RC1PPSbits 0EA1  
                   ?_getADCValue 0033                       _RC2PPSbits 0EA2   __size_of_nrf24l01InitRegisters 00AA  
  __end_of_nrf24l01InitRegisters 01A6                         int$flags 007E     nrf24l01InitRegisters@setupAW 002A  
                   _SSP1STATbits 0214           nrf24l01ReceivePacket@i 0022                    _nrf24l01CELow 0F32  
                  _nrf24l01CSLow 0F38               __end_of_setMessage 04AE                       _INTCONbits 000B  
      __size_ofi1_flashWriteByte 0030                  ?_nrf24l01CEHigh 0070                       _FVRCONbits 0117  
               ??i1_nrf24l01Send 0072                      ??_exception 007A                  ?_nrf24l01CSHigh 0070  
                 __pstringtext10 1034                   __pstringtext11 1038                   __pstringtext12 0000  
                       memset@p1 0025                  ?_nrf24l01SPIEnd 0070                         intlevel1 0000  
                   _n_ADDRESS_P0 1013        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lwmod@dividend 0027                 ___lldiv@dividend 0029                __CFG_CLKOUTEN$OFF 0000  
                ?_flashWriteByte 0025                   ?_flashReadByte 0025             i1flashWriteByte@data 0072  
    nrf24l01InitRegisters@config 0031        __size_of_nrf24l01SPIStart 0008        __size_of_nrf24l01CheckACK 0020  
    nrf24l01InitRegisters@status 002D       nrf24l01ReceivePacket@width 0021                setMessage@message 0057  
                 ?_nrf24l01CELow 0070                    __pstringtext1 1000                    __pstringtext2 1013  
                  __pstringtext3 103A                    __pstringtext4 1018                    __pstringtext5 101D  
                  __pstringtext6 1022                    __pstringtext7 1027                    __pstringtext8 102C  
                  __pstringtext9 1030                   ?_nrf24l01CSLow 0070                         utoa@base 002F  
     nrf24l01InitRegisters@DynPD 0030                         strcat@cp 0028                         strcat@to 0029  
                       strcmp@s1 0074                         strcmp@s2 0070                 ___lldiv@quotient 002E  
                ___lwmod@divisor 0025                         strcpy@cp 0029                         strlen@cp 0029  
                       strcpy@to 0028                  ___lwmod@counter 002A                       _WDTCONbits 0097  
                  ?_nrf24l01Init 0070                    ?_nrf24l01Send 0025                     ?_flashRealod 0070  
                     _STATUSbits 0003             flashReadByte@address 002C                     ?_flashUpdate 0070  
                   ?_nrf24l01ISR 0070              flashReadByte@offset 0025  
