

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jun 30 11:57:21 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.00
    57                           ; Generated 27/05/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16LF18325 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0097                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  018C                     	;# 
   149  018E                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  028C                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030E                     	;# 
   216  0311                     	;# 
   217  0311                     	;# 
   218  0312                     	;# 
   219  0313                     	;# 
   220  0314                     	;# 
   221  0315                     	;# 
   222  0315                     	;# 
   223  0316                     	;# 
   224  0317                     	;# 
   225  0318                     	;# 
   226  038C                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0411                     	;# 
   240  0411                     	;# 
   241  0412                     	;# 
   242  0413                     	;# 
   243  0414                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  0418                     	;# 
   248  0418                     	;# 
   249  0419                     	;# 
   250  041A                     	;# 
   251  041B                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  041F                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049D                     	;# 
   264  049E                     	;# 
   265  049F                     	;# 
   266  0617                     	;# 
   267  0618                     	;# 
   268  0619                     	;# 
   269  0619                     	;# 
   270  061A                     	;# 
   271  061B                     	;# 
   272  061C                     	;# 
   273  061C                     	;# 
   274  061F                     	;# 
   275  0691                     	;# 
   276  0692                     	;# 
   277  0693                     	;# 
   278  0694                     	;# 
   279  0695                     	;# 
   280  0696                     	;# 
   281  0697                     	;# 
   282  0698                     	;# 
   283  0699                     	;# 
   284  0711                     	;# 
   285  0712                     	;# 
   286  0713                     	;# 
   287  0714                     	;# 
   288  0715                     	;# 
   289  0716                     	;# 
   290  0717                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0892                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0894                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0895                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  0896                     	;# 
   317  089B                     	;# 
   318  0911                     	;# 
   319  0912                     	;# 
   320  0913                     	;# 
   321  0914                     	;# 
   322  0915                     	;# 
   323  0916                     	;# 
   324  0918                     	;# 
   325  0919                     	;# 
   326  091A                     	;# 
   327  091B                     	;# 
   328  091C                     	;# 
   329  091D                     	;# 
   330  091E                     	;# 
   331  091F                     	;# 
   332  0E0F                     	;# 
   333  0E10                     	;# 
   334  0E11                     	;# 
   335  0E12                     	;# 
   336  0E13                     	;# 
   337  0E14                     	;# 
   338  0E15                     	;# 
   339  0E16                     	;# 
   340  0E17                     	;# 
   341  0E18                     	;# 
   342  0E19                     	;# 
   343  0E1A                     	;# 
   344  0E1B                     	;# 
   345  0E1C                     	;# 
   346  0E1D                     	;# 
   347  0E1E                     	;# 
   348  0E1F                     	;# 
   349  0E20                     	;# 
   350  0E21                     	;# 
   351  0E22                     	;# 
   352  0E24                     	;# 
   353  0E25                     	;# 
   354  0E28                     	;# 
   355  0E29                     	;# 
   356  0E2A                     	;# 
   357  0E2B                     	;# 
   358  0E2C                     	;# 
   359  0E2D                     	;# 
   360  0E2E                     	;# 
   361  0E2F                     	;# 
   362  0E90                     	;# 
   363  0E91                     	;# 
   364  0E92                     	;# 
   365  0E94                     	;# 
   366  0E95                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0F0F                     	;# 
   374  0F10                     	;# 
   375  0F11                     	;# 
   376  0F12                     	;# 
   377  0F13                     	;# 
   378  0F14                     	;# 
   379  0F15                     	;# 
   380  0F16                     	;# 
   381  0F17                     	;# 
   382  0F18                     	;# 
   383  0F19                     	;# 
   384  0F1A                     	;# 
   385  0F1B                     	;# 
   386  0F1C                     	;# 
   387  0F1D                     	;# 
   388  0F1E                     	;# 
   389  0F1F                     	;# 
   390  0F20                     	;# 
   391  0F21                     	;# 
   392  0F22                     	;# 
   393  0F23                     	;# 
   394  0F24                     	;# 
   395  0F25                     	;# 
   396  0F26                     	;# 
   397  0F27                     	;# 
   398  0F28                     	;# 
   399  0F29                     	;# 
   400  0F2A                     	;# 
   401  0F2B                     	;# 
   402  0F2C                     	;# 
   403  0F2D                     	;# 
   404  0F2E                     	;# 
   405  0F2F                     	;# 
   406  0F30                     	;# 
   407  0F31                     	;# 
   408  0F32                     	;# 
   409  0F33                     	;# 
   410  0F34                     	;# 
   411  0F35                     	;# 
   412  0F36                     	;# 
   413  0F37                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000E                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001D                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008E                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0097                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  009F                     	;# 
   472  010C                     	;# 
   473  010E                     	;# 
   474  0111                     	;# 
   475  0112                     	;# 
   476  0113                     	;# 
   477  0114                     	;# 
   478  0115                     	;# 
   479  0116                     	;# 
   480  0117                     	;# 
   481  0118                     	;# 
   482  0119                     	;# 
   483  018C                     	;# 
   484  018E                     	;# 
   485  0199                     	;# 
   486  0199                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019A                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019C                     	;# 
   497  019C                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019D                     	;# 
   501  019D                     	;# 
   502  019E                     	;# 
   503  019E                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  019F                     	;# 
   508  019F                     	;# 
   509  019F                     	;# 
   510  020C                     	;# 
   511  020E                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0215                     	;# 
   524  0216                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0217                     	;# 
   528  0219                     	;# 
   529  021A                     	;# 
   530  021B                     	;# 
   531  021C                     	;# 
   532  021D                     	;# 
   533  021D                     	;# 
   534  021E                     	;# 
   535  021F                     	;# 
   536  028C                     	;# 
   537  028E                     	;# 
   538  0291                     	;# 
   539  0291                     	;# 
   540  0292                     	;# 
   541  0293                     	;# 
   542  0294                     	;# 
   543  0295                     	;# 
   544  0295                     	;# 
   545  0296                     	;# 
   546  0297                     	;# 
   547  0298                     	;# 
   548  029F                     	;# 
   549  030C                     	;# 
   550  030E                     	;# 
   551  0311                     	;# 
   552  0311                     	;# 
   553  0312                     	;# 
   554  0313                     	;# 
   555  0314                     	;# 
   556  0315                     	;# 
   557  0315                     	;# 
   558  0316                     	;# 
   559  0317                     	;# 
   560  0318                     	;# 
   561  038C                     	;# 
   562  038E                     	;# 
   563  0391                     	;# 
   564  0392                     	;# 
   565  0393                     	;# 
   566  0397                     	;# 
   567  0398                     	;# 
   568  0399                     	;# 
   569  039A                     	;# 
   570  039C                     	;# 
   571  039D                     	;# 
   572  039E                     	;# 
   573  039F                     	;# 
   574  0411                     	;# 
   575  0411                     	;# 
   576  0412                     	;# 
   577  0413                     	;# 
   578  0414                     	;# 
   579  0415                     	;# 
   580  0416                     	;# 
   581  0417                     	;# 
   582  0418                     	;# 
   583  0418                     	;# 
   584  0419                     	;# 
   585  041A                     	;# 
   586  041B                     	;# 
   587  041C                     	;# 
   588  041D                     	;# 
   589  041E                     	;# 
   590  041F                     	;# 
   591  0498                     	;# 
   592  0498                     	;# 
   593  0499                     	;# 
   594  049A                     	;# 
   595  049B                     	;# 
   596  049B                     	;# 
   597  049C                     	;# 
   598  049D                     	;# 
   599  049E                     	;# 
   600  049F                     	;# 
   601  0617                     	;# 
   602  0618                     	;# 
   603  0619                     	;# 
   604  0619                     	;# 
   605  061A                     	;# 
   606  061B                     	;# 
   607  061C                     	;# 
   608  061C                     	;# 
   609  061F                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0696                     	;# 
   616  0697                     	;# 
   617  0698                     	;# 
   618  0699                     	;# 
   619  0711                     	;# 
   620  0712                     	;# 
   621  0713                     	;# 
   622  0714                     	;# 
   623  0715                     	;# 
   624  0716                     	;# 
   625  0717                     	;# 
   626  0718                     	;# 
   627  0719                     	;# 
   628  0891                     	;# 
   629  0891                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0891                     	;# 
   633  0891                     	;# 
   634  0892                     	;# 
   635  0892                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0893                     	;# 
   642  0893                     	;# 
   643  0894                     	;# 
   644  0894                     	;# 
   645  0894                     	;# 
   646  0895                     	;# 
   647  0895                     	;# 
   648  0895                     	;# 
   649  0896                     	;# 
   650  0896                     	;# 
   651  0896                     	;# 
   652  089B                     	;# 
   653  0911                     	;# 
   654  0912                     	;# 
   655  0913                     	;# 
   656  0914                     	;# 
   657  0915                     	;# 
   658  0916                     	;# 
   659  0918                     	;# 
   660  0919                     	;# 
   661  091A                     	;# 
   662  091B                     	;# 
   663  091C                     	;# 
   664  091D                     	;# 
   665  091E                     	;# 
   666  091F                     	;# 
   667  0E0F                     	;# 
   668  0E10                     	;# 
   669  0E11                     	;# 
   670  0E12                     	;# 
   671  0E13                     	;# 
   672  0E14                     	;# 
   673  0E15                     	;# 
   674  0E16                     	;# 
   675  0E17                     	;# 
   676  0E18                     	;# 
   677  0E19                     	;# 
   678  0E1A                     	;# 
   679  0E1B                     	;# 
   680  0E1C                     	;# 
   681  0E1D                     	;# 
   682  0E1E                     	;# 
   683  0E1F                     	;# 
   684  0E20                     	;# 
   685  0E21                     	;# 
   686  0E22                     	;# 
   687  0E24                     	;# 
   688  0E25                     	;# 
   689  0E28                     	;# 
   690  0E29                     	;# 
   691  0E2A                     	;# 
   692  0E2B                     	;# 
   693  0E2C                     	;# 
   694  0E2D                     	;# 
   695  0E2E                     	;# 
   696  0E2F                     	;# 
   697  0E90                     	;# 
   698  0E91                     	;# 
   699  0E92                     	;# 
   700  0E94                     	;# 
   701  0E95                     	;# 
   702  0EA0                     	;# 
   703  0EA1                     	;# 
   704  0EA2                     	;# 
   705  0EA3                     	;# 
   706  0EA4                     	;# 
   707  0EA5                     	;# 
   708  0F0F                     	;# 
   709  0F10                     	;# 
   710  0F11                     	;# 
   711  0F12                     	;# 
   712  0F13                     	;# 
   713  0F14                     	;# 
   714  0F15                     	;# 
   715  0F16                     	;# 
   716  0F17                     	;# 
   717  0F18                     	;# 
   718  0F19                     	;# 
   719  0F1A                     	;# 
   720  0F1B                     	;# 
   721  0F1C                     	;# 
   722  0F1D                     	;# 
   723  0F1E                     	;# 
   724  0F1F                     	;# 
   725  0F20                     	;# 
   726  0F21                     	;# 
   727  0F22                     	;# 
   728  0F23                     	;# 
   729  0F24                     	;# 
   730  0F25                     	;# 
   731  0F26                     	;# 
   732  0F27                     	;# 
   733  0F28                     	;# 
   734  0F29                     	;# 
   735  0F2A                     	;# 
   736  0F2B                     	;# 
   737  0F2C                     	;# 
   738  0F2D                     	;# 
   739  0F2E                     	;# 
   740  0F2F                     	;# 
   741  0F30                     	;# 
   742  0F31                     	;# 
   743  0F32                     	;# 
   744  0F33                     	;# 
   745  0F34                     	;# 
   746  0F35                     	;# 
   747  0F36                     	;# 
   748  0F37                     	;# 
   749  0FE4                     	;# 
   750  0FE5                     	;# 
   751  0FE6                     	;# 
   752  0FE7                     	;# 
   753  0FE8                     	;# 
   754  0FE9                     	;# 
   755  0FEA                     	;# 
   756  0FEB                     	;# 
   757  0FED                     	;# 
   758  0FEE                     	;# 
   759  0FEF                     	;# 
   760  0000                     	;# 
   761  0001                     	;# 
   762  0002                     	;# 
   763  0003                     	;# 
   764  0004                     	;# 
   765  0005                     	;# 
   766  0006                     	;# 
   767  0007                     	;# 
   768  0008                     	;# 
   769  0009                     	;# 
   770  000A                     	;# 
   771  000B                     	;# 
   772  000C                     	;# 
   773  000E                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  0019                     	;# 
   787  001A                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001D                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  008C                     	;# 
   794  008E                     	;# 
   795  0090                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0093                     	;# 
   799  0094                     	;# 
   800  0097                     	;# 
   801  009B                     	;# 
   802  009B                     	;# 
   803  009C                     	;# 
   804  009D                     	;# 
   805  009E                     	;# 
   806  009F                     	;# 
   807  010C                     	;# 
   808  010E                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0113                     	;# 
   812  0114                     	;# 
   813  0115                     	;# 
   814  0116                     	;# 
   815  0117                     	;# 
   816  0118                     	;# 
   817  0119                     	;# 
   818  018C                     	;# 
   819  018E                     	;# 
   820  0199                     	;# 
   821  0199                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019A                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019B                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019C                     	;# 
   834  019D                     	;# 
   835  019D                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019E                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  019F                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0216                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0217                     	;# 
   863  0219                     	;# 
   864  021A                     	;# 
   865  021B                     	;# 
   866  021C                     	;# 
   867  021D                     	;# 
   868  021D                     	;# 
   869  021E                     	;# 
   870  021F                     	;# 
   871  028C                     	;# 
   872  028E                     	;# 
   873  0291                     	;# 
   874  0291                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0294                     	;# 
   878  0295                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0297                     	;# 
   882  0298                     	;# 
   883  029F                     	;# 
   884  030C                     	;# 
   885  030E                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  038C                     	;# 
   897  038E                     	;# 
   898  0391                     	;# 
   899  0392                     	;# 
   900  0393                     	;# 
   901  0397                     	;# 
   902  0398                     	;# 
   903  0399                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0411                     	;# 
   910  0411                     	;# 
   911  0412                     	;# 
   912  0413                     	;# 
   913  0414                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041D                     	;# 
   924  041E                     	;# 
   925  041F                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  061F                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  0695                     	;# 
   950  0696                     	;# 
   951  0697                     	;# 
   952  0698                     	;# 
   953  0699                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0715                     	;# 
   959  0716                     	;# 
   960  0717                     	;# 
   961  0718                     	;# 
   962  0719                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0891                     	;# 
   966  0891                     	;# 
   967  0891                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0892                     	;# 
   971  0892                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0893                     	;# 
   975  0893                     	;# 
   976  0893                     	;# 
   977  0893                     	;# 
   978  0894                     	;# 
   979  0894                     	;# 
   980  0894                     	;# 
   981  0895                     	;# 
   982  0895                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0896                     	;# 
   986  0896                     	;# 
   987  089B                     	;# 
   988  0911                     	;# 
   989  0912                     	;# 
   990  0913                     	;# 
   991  0914                     	;# 
   992  0915                     	;# 
   993  0916                     	;# 
   994  0918                     	;# 
   995  0919                     	;# 
   996  091A                     	;# 
   997  091B                     	;# 
   998  091C                     	;# 
   999  091D                     	;# 
  1000  091E                     	;# 
  1001  091F                     	;# 
  1002  0E0F                     	;# 
  1003  0E10                     	;# 
  1004  0E11                     	;# 
  1005  0E12                     	;# 
  1006  0E13                     	;# 
  1007  0E14                     	;# 
  1008  0E15                     	;# 
  1009  0E16                     	;# 
  1010  0E17                     	;# 
  1011  0E18                     	;# 
  1012  0E19                     	;# 
  1013  0E1A                     	;# 
  1014  0E1B                     	;# 
  1015  0E1C                     	;# 
  1016  0E1D                     	;# 
  1017  0E1E                     	;# 
  1018  0E1F                     	;# 
  1019  0E20                     	;# 
  1020  0E21                     	;# 
  1021  0E22                     	;# 
  1022  0E24                     	;# 
  1023  0E25                     	;# 
  1024  0E28                     	;# 
  1025  0E29                     	;# 
  1026  0E2A                     	;# 
  1027  0E2B                     	;# 
  1028  0E2C                     	;# 
  1029  0E2D                     	;# 
  1030  0E2E                     	;# 
  1031  0E2F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0EA0                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0F2E                     	;# 
  1075  0F2F                     	;# 
  1076  0F30                     	;# 
  1077  0F31                     	;# 
  1078  0F32                     	;# 
  1079  0F33                     	;# 
  1080  0F34                     	;# 
  1081  0F35                     	;# 
  1082  0F36                     	;# 
  1083  0F37                     	;# 
  1084  0FE4                     	;# 
  1085  0FE5                     	;# 
  1086  0FE6                     	;# 
  1087  0FE7                     	;# 
  1088  0FE8                     	;# 
  1089  0FE9                     	;# 
  1090  0FEA                     	;# 
  1091  0FEB                     	;# 
  1092  0FED                     	;# 
  1093  0FEE                     	;# 
  1094  0FEF                     	;# 
  1095  0000                     	;# 
  1096  0001                     	;# 
  1097  0002                     	;# 
  1098  0003                     	;# 
  1099  0004                     	;# 
  1100  0005                     	;# 
  1101  0006                     	;# 
  1102  0007                     	;# 
  1103  0008                     	;# 
  1104  0009                     	;# 
  1105  000A                     	;# 
  1106  000B                     	;# 
  1107  000C                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0014                     	;# 
  1114  0015                     	;# 
  1115  0015                     	;# 
  1116  0016                     	;# 
  1117  0016                     	;# 
  1118  0017                     	;# 
  1119  0018                     	;# 
  1120  0019                     	;# 
  1121  0019                     	;# 
  1122  001A                     	;# 
  1123  001B                     	;# 
  1124  001C                     	;# 
  1125  001D                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0090                     	;# 
  1131  0091                     	;# 
  1132  0092                     	;# 
  1133  0093                     	;# 
  1134  0094                     	;# 
  1135  0097                     	;# 
  1136  009B                     	;# 
  1137  009B                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010E                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  018C                     	;# 
  1154  018E                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021B                     	;# 
  1201  021C                     	;# 
  1202  021D                     	;# 
  1203  021D                     	;# 
  1204  021E                     	;# 
  1205  021F                     	;# 
  1206  028C                     	;# 
  1207  028E                     	;# 
  1208  0291                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0294                     	;# 
  1213  0295                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0297                     	;# 
  1217  0298                     	;# 
  1218  029F                     	;# 
  1219  030C                     	;# 
  1220  030E                     	;# 
  1221  0311                     	;# 
  1222  0311                     	;# 
  1223  0312                     	;# 
  1224  0313                     	;# 
  1225  0314                     	;# 
  1226  0315                     	;# 
  1227  0315                     	;# 
  1228  0316                     	;# 
  1229  0317                     	;# 
  1230  0318                     	;# 
  1231  038C                     	;# 
  1232  038E                     	;# 
  1233  0391                     	;# 
  1234  0392                     	;# 
  1235  0393                     	;# 
  1236  0397                     	;# 
  1237  0398                     	;# 
  1238  0399                     	;# 
  1239  039A                     	;# 
  1240  039C                     	;# 
  1241  039D                     	;# 
  1242  039E                     	;# 
  1243  039F                     	;# 
  1244  0411                     	;# 
  1245  0411                     	;# 
  1246  0412                     	;# 
  1247  0413                     	;# 
  1248  0414                     	;# 
  1249  0415                     	;# 
  1250  0416                     	;# 
  1251  0417                     	;# 
  1252  0418                     	;# 
  1253  0418                     	;# 
  1254  0419                     	;# 
  1255  041A                     	;# 
  1256  041B                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  041F                     	;# 
  1261  0498                     	;# 
  1262  0498                     	;# 
  1263  0499                     	;# 
  1264  049A                     	;# 
  1265  049B                     	;# 
  1266  049B                     	;# 
  1267  049C                     	;# 
  1268  049D                     	;# 
  1269  049E                     	;# 
  1270  049F                     	;# 
  1271  0617                     	;# 
  1272  0618                     	;# 
  1273  0619                     	;# 
  1274  0619                     	;# 
  1275  061A                     	;# 
  1276  061B                     	;# 
  1277  061C                     	;# 
  1278  061C                     	;# 
  1279  061F                     	;# 
  1280  0691                     	;# 
  1281  0692                     	;# 
  1282  0693                     	;# 
  1283  0694                     	;# 
  1284  0695                     	;# 
  1285  0696                     	;# 
  1286  0697                     	;# 
  1287  0698                     	;# 
  1288  0699                     	;# 
  1289  0711                     	;# 
  1290  0712                     	;# 
  1291  0713                     	;# 
  1292  0714                     	;# 
  1293  0715                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  0891                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0891                     	;# 
  1302  0891                     	;# 
  1303  0891                     	;# 
  1304  0892                     	;# 
  1305  0892                     	;# 
  1306  0892                     	;# 
  1307  0893                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0893                     	;# 
  1311  0893                     	;# 
  1312  0893                     	;# 
  1313  0894                     	;# 
  1314  0894                     	;# 
  1315  0894                     	;# 
  1316  0895                     	;# 
  1317  0895                     	;# 
  1318  0895                     	;# 
  1319  0896                     	;# 
  1320  0896                     	;# 
  1321  0896                     	;# 
  1322  089B                     	;# 
  1323  0911                     	;# 
  1324  0912                     	;# 
  1325  0913                     	;# 
  1326  0914                     	;# 
  1327  0915                     	;# 
  1328  0916                     	;# 
  1329  0918                     	;# 
  1330  0919                     	;# 
  1331  091A                     	;# 
  1332  091B                     	;# 
  1333  091C                     	;# 
  1334  091D                     	;# 
  1335  091E                     	;# 
  1336  091F                     	;# 
  1337  0E0F                     	;# 
  1338  0E10                     	;# 
  1339  0E11                     	;# 
  1340  0E12                     	;# 
  1341  0E13                     	;# 
  1342  0E14                     	;# 
  1343  0E15                     	;# 
  1344  0E16                     	;# 
  1345  0E17                     	;# 
  1346  0E18                     	;# 
  1347  0E19                     	;# 
  1348  0E1A                     	;# 
  1349  0E1B                     	;# 
  1350  0E1C                     	;# 
  1351  0E1D                     	;# 
  1352  0E1E                     	;# 
  1353  0E1F                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E2F                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0EA0                     	;# 
  1373  0EA1                     	;# 
  1374  0EA2                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0097                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010E                     	;# 
  1479  0111                     	;# 
  1480  0112                     	;# 
  1481  0113                     	;# 
  1482  0114                     	;# 
  1483  0115                     	;# 
  1484  0116                     	;# 
  1485  0117                     	;# 
  1486  0118                     	;# 
  1487  0119                     	;# 
  1488  018C                     	;# 
  1489  018E                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020E                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0216                     	;# 
  1530  0216                     	;# 
  1531  0217                     	;# 
  1532  0217                     	;# 
  1533  0219                     	;# 
  1534  021A                     	;# 
  1535  021B                     	;# 
  1536  021C                     	;# 
  1537  021D                     	;# 
  1538  021D                     	;# 
  1539  021E                     	;# 
  1540  021F                     	;# 
  1541  028C                     	;# 
  1542  028E                     	;# 
  1543  0291                     	;# 
  1544  0291                     	;# 
  1545  0292                     	;# 
  1546  0293                     	;# 
  1547  0294                     	;# 
  1548  0295                     	;# 
  1549  0295                     	;# 
  1550  0296                     	;# 
  1551  0297                     	;# 
  1552  0298                     	;# 
  1553  029F                     	;# 
  1554  030C                     	;# 
  1555  030E                     	;# 
  1556  0311                     	;# 
  1557  0311                     	;# 
  1558  0312                     	;# 
  1559  0313                     	;# 
  1560  0314                     	;# 
  1561  0315                     	;# 
  1562  0315                     	;# 
  1563  0316                     	;# 
  1564  0317                     	;# 
  1565  0318                     	;# 
  1566  038C                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0397                     	;# 
  1572  0398                     	;# 
  1573  0399                     	;# 
  1574  039A                     	;# 
  1575  039C                     	;# 
  1576  039D                     	;# 
  1577  039E                     	;# 
  1578  039F                     	;# 
  1579  0411                     	;# 
  1580  0411                     	;# 
  1581  0412                     	;# 
  1582  0413                     	;# 
  1583  0414                     	;# 
  1584  0415                     	;# 
  1585  0416                     	;# 
  1586  0417                     	;# 
  1587  0418                     	;# 
  1588  0418                     	;# 
  1589  0419                     	;# 
  1590  041A                     	;# 
  1591  041B                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  041F                     	;# 
  1596  0498                     	;# 
  1597  0498                     	;# 
  1598  0499                     	;# 
  1599  049A                     	;# 
  1600  049B                     	;# 
  1601  049B                     	;# 
  1602  049C                     	;# 
  1603  049D                     	;# 
  1604  049E                     	;# 
  1605  049F                     	;# 
  1606  0617                     	;# 
  1607  0618                     	;# 
  1608  0619                     	;# 
  1609  0619                     	;# 
  1610  061A                     	;# 
  1611  061B                     	;# 
  1612  061C                     	;# 
  1613  061C                     	;# 
  1614  061F                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  0711                     	;# 
  1625  0712                     	;# 
  1626  0713                     	;# 
  1627  0714                     	;# 
  1628  0715                     	;# 
  1629  0716                     	;# 
  1630  0717                     	;# 
  1631  0718                     	;# 
  1632  0719                     	;# 
  1633  0891                     	;# 
  1634  0891                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0891                     	;# 
  1638  0891                     	;# 
  1639  0892                     	;# 
  1640  0892                     	;# 
  1641  0892                     	;# 
  1642  0893                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0893                     	;# 
  1647  0893                     	;# 
  1648  0894                     	;# 
  1649  0894                     	;# 
  1650  0894                     	;# 
  1651  0895                     	;# 
  1652  0895                     	;# 
  1653  0895                     	;# 
  1654  0896                     	;# 
  1655  0896                     	;# 
  1656  0896                     	;# 
  1657  089B                     	;# 
  1658  0911                     	;# 
  1659  0912                     	;# 
  1660  0913                     	;# 
  1661  0914                     	;# 
  1662  0915                     	;# 
  1663  0916                     	;# 
  1664  0918                     	;# 
  1665  0919                     	;# 
  1666  091A                     	;# 
  1667  091B                     	;# 
  1668  091C                     	;# 
  1669  091D                     	;# 
  1670  091E                     	;# 
  1671  091F                     	;# 
  1672  0E0F                     	;# 
  1673  0E10                     	;# 
  1674  0E11                     	;# 
  1675  0E12                     	;# 
  1676  0E13                     	;# 
  1677  0E14                     	;# 
  1678  0E15                     	;# 
  1679  0E16                     	;# 
  1680  0E17                     	;# 
  1681  0E18                     	;# 
  1682  0E19                     	;# 
  1683  0E1A                     	;# 
  1684  0E1B                     	;# 
  1685  0E1C                     	;# 
  1686  0E1D                     	;# 
  1687  0E1E                     	;# 
  1688  0E1F                     	;# 
  1689  0E20                     	;# 
  1690  0E21                     	;# 
  1691  0E22                     	;# 
  1692  0E24                     	;# 
  1693  0E25                     	;# 
  1694  0E28                     	;# 
  1695  0E29                     	;# 
  1696  0E2A                     	;# 
  1697  0E2B                     	;# 
  1698  0E2C                     	;# 
  1699  0E2D                     	;# 
  1700  0E2E                     	;# 
  1701  0E2F                     	;# 
  1702  0E90                     	;# 
  1703  0E91                     	;# 
  1704  0E92                     	;# 
  1705  0E94                     	;# 
  1706  0E95                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA2                     	;# 
  1710  0EA3                     	;# 
  1711  0EA4                     	;# 
  1712  0EA5                     	;# 
  1713  0F0F                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F33                     	;# 
  1750  0F34                     	;# 
  1751  0F35                     	;# 
  1752  0F36                     	;# 
  1753  0F37                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000E                     	;# 
  1779  0010                     	;# 
  1780  0011                     	;# 
  1781  0012                     	;# 
  1782  0013                     	;# 
  1783  0014                     	;# 
  1784  0015                     	;# 
  1785  0015                     	;# 
  1786  0016                     	;# 
  1787  0016                     	;# 
  1788  0017                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  0019                     	;# 
  1792  001A                     	;# 
  1793  001B                     	;# 
  1794  001C                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008E                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0092                     	;# 
  1803  0093                     	;# 
  1804  0094                     	;# 
  1805  0097                     	;# 
  1806  009B                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  009F                     	;# 
  1812  010C                     	;# 
  1813  010E                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0117                     	;# 
  1821  0118                     	;# 
  1822  0119                     	;# 
  1823  018C                     	;# 
  1824  018E                     	;# 
  1825  0199                     	;# 
  1826  0199                     	;# 
  1827  0199                     	;# 
  1828  019A                     	;# 
  1829  019A                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019C                     	;# 
  1839  019D                     	;# 
  1840  019D                     	;# 
  1841  019D                     	;# 
  1842  019E                     	;# 
  1843  019E                     	;# 
  1844  019E                     	;# 
  1845  019F                     	;# 
  1846  019F                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  020C                     	;# 
  1851  020E                     	;# 
  1852  0211                     	;# 
  1853  0211                     	;# 
  1854  0212                     	;# 
  1855  0212                     	;# 
  1856  0213                     	;# 
  1857  0213                     	;# 
  1858  0214                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0215                     	;# 
  1864  0216                     	;# 
  1865  0216                     	;# 
  1866  0217                     	;# 
  1867  0217                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021C                     	;# 
  1872  021D                     	;# 
  1873  021D                     	;# 
  1874  021E                     	;# 
  1875  021F                     	;# 
  1876  028C                     	;# 
  1877  028E                     	;# 
  1878  0291                     	;# 
  1879  0291                     	;# 
  1880  0292                     	;# 
  1881  0293                     	;# 
  1882  0294                     	;# 
  1883  0295                     	;# 
  1884  0295                     	;# 
  1885  0296                     	;# 
  1886  0297                     	;# 
  1887  0298                     	;# 
  1888  029F                     	;# 
  1889  030C                     	;# 
  1890  030E                     	;# 
  1891  0311                     	;# 
  1892  0311                     	;# 
  1893  0312                     	;# 
  1894  0313                     	;# 
  1895  0314                     	;# 
  1896  0315                     	;# 
  1897  0315                     	;# 
  1898  0316                     	;# 
  1899  0317                     	;# 
  1900  0318                     	;# 
  1901  038C                     	;# 
  1902  038E                     	;# 
  1903  0391                     	;# 
  1904  0392                     	;# 
  1905  0393                     	;# 
  1906  0397                     	;# 
  1907  0398                     	;# 
  1908  0399                     	;# 
  1909  039A                     	;# 
  1910  039C                     	;# 
  1911  039D                     	;# 
  1912  039E                     	;# 
  1913  039F                     	;# 
  1914  0411                     	;# 
  1915  0411                     	;# 
  1916  0412                     	;# 
  1917  0413                     	;# 
  1918  0414                     	;# 
  1919  0415                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041B                     	;# 
  1927  041C                     	;# 
  1928  041D                     	;# 
  1929  041E                     	;# 
  1930  041F                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0617                     	;# 
  1942  0618                     	;# 
  1943  0619                     	;# 
  1944  0619                     	;# 
  1945  061A                     	;# 
  1946  061B                     	;# 
  1947  061C                     	;# 
  1948  061C                     	;# 
  1949  061F                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  0695                     	;# 
  1955  0696                     	;# 
  1956  0697                     	;# 
  1957  0698                     	;# 
  1958  0699                     	;# 
  1959  0711                     	;# 
  1960  0712                     	;# 
  1961  0713                     	;# 
  1962  0714                     	;# 
  1963  0715                     	;# 
  1964  0716                     	;# 
  1965  0717                     	;# 
  1966  0718                     	;# 
  1967  0719                     	;# 
  1968  0891                     	;# 
  1969  0891                     	;# 
  1970  0891                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0891                     	;# 
  1974  0892                     	;# 
  1975  0892                     	;# 
  1976  0892                     	;# 
  1977  0893                     	;# 
  1978  0893                     	;# 
  1979  0893                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0893                     	;# 
  1983  0894                     	;# 
  1984  0894                     	;# 
  1985  0894                     	;# 
  1986  0895                     	;# 
  1987  0895                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0896                     	;# 
  1991  0896                     	;# 
  1992  089B                     	;# 
  1993  0911                     	;# 
  1994  0912                     	;# 
  1995  0913                     	;# 
  1996  0914                     	;# 
  1997  0915                     	;# 
  1998  0916                     	;# 
  1999  0918                     	;# 
  2000  0919                     	;# 
  2001  091A                     	;# 
  2002  091B                     	;# 
  2003  091C                     	;# 
  2004  091D                     	;# 
  2005  091E                     	;# 
  2006  091F                     	;# 
  2007  0E0F                     	;# 
  2008  0E10                     	;# 
  2009  0E11                     	;# 
  2010  0E12                     	;# 
  2011  0E13                     	;# 
  2012  0E14                     	;# 
  2013  0E15                     	;# 
  2014  0E16                     	;# 
  2015  0E17                     	;# 
  2016  0E18                     	;# 
  2017  0E19                     	;# 
  2018  0E1A                     	;# 
  2019  0E1B                     	;# 
  2020  0E1C                     	;# 
  2021  0E1D                     	;# 
  2022  0E1E                     	;# 
  2023  0E1F                     	;# 
  2024  0E20                     	;# 
  2025  0E21                     	;# 
  2026  0E22                     	;# 
  2027  0E24                     	;# 
  2028  0E25                     	;# 
  2029  0E28                     	;# 
  2030  0E29                     	;# 
  2031  0E2A                     	;# 
  2032  0E2B                     	;# 
  2033  0E2C                     	;# 
  2034  0E2D                     	;# 
  2035  0E2E                     	;# 
  2036  0E2F                     	;# 
  2037  0E90                     	;# 
  2038  0E91                     	;# 
  2039  0E92                     	;# 
  2040  0E94                     	;# 
  2041  0E95                     	;# 
  2042  0EA0                     	;# 
  2043  0EA1                     	;# 
  2044  0EA2                     	;# 
  2045  0EA3                     	;# 
  2046  0EA4                     	;# 
  2047  0EA5                     	;# 
  2048  0F0F                     	;# 
  2049  0F10                     	;# 
  2050  0F11                     	;# 
  2051  0F12                     	;# 
  2052  0F13                     	;# 
  2053  0F14                     	;# 
  2054  0F15                     	;# 
  2055  0F16                     	;# 
  2056  0F17                     	;# 
  2057  0F18                     	;# 
  2058  0F19                     	;# 
  2059  0F1A                     	;# 
  2060  0F1B                     	;# 
  2061  0F1C                     	;# 
  2062  0F1D                     	;# 
  2063  0F1E                     	;# 
  2064  0F1F                     	;# 
  2065  0F20                     	;# 
  2066  0F21                     	;# 
  2067  0F22                     	;# 
  2068  0F23                     	;# 
  2069  0F24                     	;# 
  2070  0F25                     	;# 
  2071  0F26                     	;# 
  2072  0F27                     	;# 
  2073  0F28                     	;# 
  2074  0F29                     	;# 
  2075  0F2A                     	;# 
  2076  0F2B                     	;# 
  2077  0F2C                     	;# 
  2078  0F2D                     	;# 
  2079  0F2E                     	;# 
  2080  0F2F                     	;# 
  2081  0F30                     	;# 
  2082  0F31                     	;# 
  2083  0F32                     	;# 
  2084  0F33                     	;# 
  2085  0F34                     	;# 
  2086  0F35                     	;# 
  2087  0F36                     	;# 
  2088  0F37                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEF                     	;# 
  2100  1FE0                     _romArray_absaddr	set	8160
  2101                           
  2102                           	psect	stringtext1
  2103  0625                     __pstringtext1:	
  2104  0625                     _resetRomData:	
  2105  0625  34AA               	retlw	170
  2106  0626  3455               	retlw	85
  2107  0627  346E               	retlw	110
  2108  0628  3463               	retlw	99
  2109  0629  346F               	retlw	111
  2110  062A  346E               	retlw	110
  2111  062B  3466               	retlw	102
  2112  062C  3469               	retlw	105
  2113  062D  3467               	retlw	103
  2114  062E  3475               	retlw	117
  2115  062F  3472               	retlw	114
  2116  0630  3465               	retlw	101
  2117  0631  3464               	retlw	100
  2118  0632  3400               	retlw	0
  2119  0633  3400               	retlw	0
  2120  0634  3400               	retlw	0
  2121  0635  3400               	retlw	0
  2122  0636  3400               	retlw	0
  2123  0637  3400               	retlw	0
  2124  0638                     __end_of_resetRomData:	
  2125                           
  2126                           	psect	stringtext2
  2127  0691                     __pstringtext2:	
  2128  0691                     _n_ADDRESS_P0:	
  2129  0691  34AD               	retlw	173
  2130  0692  3487               	retlw	135
  2131  0693  3466               	retlw	102
  2132  0694  34BC               	retlw	188
  2133  0695  34BB               	retlw	187
  2134  0696                     __end_of_n_ADDRESS_P0:	
  2135                           
  2136                           	psect	stringtext3
  2137  06B5                     __pstringtext3:	
  2138  06B5                     _n_ADDRESS_MUL:	
  2139  06B5  3421               	retlw	33
  2140  06B6                     __end_of_n_ADDRESS_MUL:	
  2141  1FE0                     _romArray_absaddr	set	8160
  2142                           
  2143                           	psect	_romArray_text
  2144  1FE0                     __p_romArray_text:	
  2145  1FE0                     _romArray:	
  2146  1FE0  3400               	retlw	0
  2147  1FE1  3400               	retlw	0
  2148  1FE2  3400               	retlw	0
  2149  1FE3  3400               	retlw	0
  2150  1FE4  3400               	retlw	0
  2151  1FE5  3400               	retlw	0
  2152  1FE6  3400               	retlw	0
  2153  1FE7  3400               	retlw	0
  2154  1FE8  3400               	retlw	0
  2155  1FE9  3400               	retlw	0
  2156  1FEA  3400               	retlw	0
  2157  1FEB  3400               	retlw	0
  2158  1FEC  3400               	retlw	0
  2159  1FED  3400               	retlw	0
  2160  1FEE  3400               	retlw	0
  2161  1FEF  3400               	retlw	0
  2162  1FF0  3400               	retlw	0
  2163  1FF1  3400               	retlw	0
  2164  1FF2  3400               	retlw	0
  2165  1FF3  3400               	retlw	0
  2166  1FF4  3400               	retlw	0
  2167  1FF5  3400               	retlw	0
  2168  1FF6  3400               	retlw	0
  2169  1FF7  3400               	retlw	0
  2170  1FF8  3400               	retlw	0
  2171  1FF9  3400               	retlw	0
  2172  1FFA  3400               	retlw	0
  2173  1FFB  3400               	retlw	0
  2174  1FFC  3400               	retlw	0
  2175  1FFD  3400               	retlw	0
  2176  1FFE  3400               	retlw	0
  2177  1FFF  3400               	retlw	0
  2178  2000                     __end_of_romArray:	
  2179  0003                     _STATUSbits	set	3
  2180  0010                     _PIR0bits	set	16
  2181  000E                     _PORTCbits	set	14
  2182  000C                     _PORTAbits	set	12
  2183  000B                     _INTCONbits	set	11
  2184  0097                     _WDTCONbits	set	151
  2185  009E                     _ADCON1bits	set	158
  2186  009C                     _ADRESH	set	156
  2187  009B                     _ADRESL	set	155
  2188  009D                     _ADCON0bits	set	157
  2189  0090                     _PIE0bits	set	144
  2190  008E                     _TRISCbits	set	142
  2191  008C                     _TRISAbits	set	140
  2192  0117                     _FVRCONbits	set	279
  2193  018E                     _ANSELCbits	set	398
  2194  018C                     _ANSELAbits	set	396
  2195  018E                     _ANSELC	set	398
  2196  018C                     _ANSELA	set	396
  2197  020C                     _WPUAbits	set	524
  2198  0211                     _SSP1BUF	set	529
  2199  0214                     _SSP1STATbits	set	532
  2200  0215                     _SSP1CON1bits	set	533
  2201  028E                     _ODCONC	set	654
  2202  028C                     _ODCONA	set	652
  2203  030E                     _SLRCONC	set	782
  2204  030C                     _SLRCONA	set	780
  2205  038E                     _INLVLC	set	910
  2206  038C                     _INLVLA	set	908
  2207  0894                     _PMDATH	set	2196
  2208  0893                     _PMDATL	set	2195
  2209  0896                     _PMCON2	set	2198
  2210  0895                     _PMCON1bits	set	2197
  2211  0892                     _PMADRH	set	2194
  2212  0891                     _PMADRL	set	2193
  2213  0895                     _PMCON1	set	2197
  2214  0E92                     _RA2PPSbits	set	3730
  2215  0EA0                     _RC0PPSbits	set	3744
  2216  0EA2                     _RC2PPSbits	set	3746
  2217  0EA1                     _RC1PPSbits	set	3745
  2218                           
  2219                           	psect	stringtext4
  2220  0638                     __pstringtext4:	
  2221  0638                     STR_6:	
  2222  0638  3455               	retlw	85	;'U'
  2223  0639  346E               	retlw	110	;'n'
  2224  063A  3463               	retlw	99	;'c'
  2225  063B  346F               	retlw	111	;'o'
  2226  063C  346E               	retlw	110	;'n'
  2227  063D  3466               	retlw	102	;'f'
  2228  063E  3469               	retlw	105	;'i'
  2229  063F  3467               	retlw	103	;'g'
  2230  0640  3475               	retlw	117	;'u'
  2231  0641  3472               	retlw	114	;'r'
  2232  0642  3465               	retlw	101	;'e'
  2233  0643  3464               	retlw	100	;'d'
  2234  0644  3448               	retlw	72	;'H'
  2235  0645  3400               	retlw	0
  2236                           
  2237                           	psect	stringtext5
  2238  067F                     __pstringtext5:	
  2239  067F                     STR_5:	
  2240  067F  3441               	retlw	65	;'A'
  2241  0680  3444               	retlw	68	;'D'
  2242  0681  3443               	retlw	67	;'C'
  2243  0682  3433               	retlw	51	;'3'
  2244  0683  3431               	retlw	49	;'1'
  2245  0684  3400               	retlw	0
  2246                           
  2247                           	psect	stringtext6
  2248  0685                     __pstringtext6:	
  2249  0685                     STR_4:	
  2250  0685  3441               	retlw	65	;'A'
  2251  0686  3444               	retlw	68	;'D'
  2252  0687  3443               	retlw	67	;'C'
  2253  0688  3432               	retlw	50	;'2'
  2254  0689  3439               	retlw	57	;'9'
  2255  068A  3400               	retlw	0
  2256                           
  2257                           	psect	stringtext7
  2258  0696                     __pstringtext7:	
  2259  0696                     STR_2:	
  2260  0696  3441               	retlw	65	;'A'
  2261  0697  3444               	retlw	68	;'D'
  2262  0698  3443               	retlw	67	;'C'
  2263  0699  3433               	retlw	51	;'3'
  2264  069A  3400               	retlw	0
  2265                           
  2266                           	psect	stringtext8
  2267  069B                     __pstringtext8:	
  2268  069B                     STR_3:	
  2269  069B  3441               	retlw	65	;'A'
  2270  069C  3444               	retlw	68	;'D'
  2271  069D  3443               	retlw	67	;'C'
  2272  069E  3437               	retlw	55	;'7'
  2273  069F  3400               	retlw	0
  2274                           
  2275                           	psect	stringtext9
  2276  06A0                     __pstringtext9:	
  2277  06A0                     STR_7:	
  2278  06A0  3442               	retlw	66	;'B'
  2279  06A1  344F               	retlw	79	;'O'
  2280  06A2  344F               	retlw	79	;'O'
  2281  06A3  3454               	retlw	84	;'T'
  2282  06A4  3400               	retlw	0
  2283                           
  2284                           	psect	stringtext10
  2285  06A5                     __pstringtext10:	
  2286  06A5                     STR_1:	
  2287  06A5  3444               	retlw	68	;'D'
  2288  06A6  3442               	retlw	66	;'B'
  2289  06A7  3447               	retlw	71	;'G'
  2290  06A8  3400               	retlw	0
  2291                           
  2292                           	psect	stringtext11
  2293  0000                     __pstringtext11:	
  2294                           
  2295                           ; #config settings
  2296  0000                     
  2297                           	psect	cinit
  2298  0011                     start_initialization:	
  2299  0011                     __initialization:	
  2300                           
  2301                           ; Clear objects allocated to BANK0
  2302  0011  3047               	movlw	low __pbssBANK0
  2303  0012  0084               	movwf	4
  2304  0013  3000               	movlw	high __pbssBANK0
  2305  0014  0085               	movwf	5
  2306  0015  3026               	movlw	38
  2307  0016  3186  268B  3180   	fcall	clear_ram0
  2308                           
  2309                           ; Clear objects allocated to BANK1
  2310  0019  30A0               	movlw	low __pbssBANK1
  2311  001A  0084               	movwf	4
  2312  001B  3000               	movlw	high __pbssBANK1
  2313  001C  0085               	movwf	5
  2314  001D  3033               	movlw	51
  2315  001E  3186  268B  3180   	fcall	clear_ram0
  2316                           
  2317                           ; Clear objects allocated to BANK2
  2318  0021  3020               	movlw	low __pbssBANK2
  2319  0022  0084               	movwf	4
  2320  0023  3001               	movlw	high __pbssBANK2
  2321  0024  0085               	movwf	5
  2322  0025  3020               	movlw	32
  2323  0026  3186  268B         	fcall	clear_ram0
  2324  0028                     end_of_initialization:	
  2325                           ;End of C runtime variable initialization code
  2326                           
  2327  0028                     __end_of__initialization:	
  2328  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2329  0029  0020               	movlb	0
  2330  002A  3182  2ACF         	ljmp	_main	;jump to C main() function
  2331                           
  2332                           	psect	bssBANK0
  2333  0047                     __pbssBANK0:	
  2334  0047                     _counter:	
  2335  0047                     	ds	2
  2336  0049                     _nrf24l01RXPacketData:	
  2337  0049                     	ds	1
  2338  004A                     _sleepLoop:	
  2339  004A                     	ds	1
  2340  004B                     _nrf24l01:	
  2341  004B                     	ds	1
  2342  004C                     _nrf24l01TXPacketData:	
  2343  004C                     	ds	1
  2344  004D                     _nrf24l01RXValue:	
  2345  004D                     	ds	8
  2346  0055                     _nrf24l01RXTopic:	
  2347  0055                     	ds	8
  2348  005D                     _nrf24l01TXValue:	
  2349  005D                     	ds	8
  2350  0065                     _nrf24l01TXTopic:	
  2351  0065                     	ds	8
  2352                           
  2353                           	psect	bssBANK1
  2354  00A0                     __pbssBANK1:	
  2355  00A0                     _romData:	
  2356  00A0                     	ds	19
  2357  00B3                     _nrf24l01RXName:	
  2358  00B3                     	ds	16
  2359  00C3                     _nrf24l01TXName:	
  2360  00C3                     	ds	16
  2361                           
  2362                           	psect	bssBANK2
  2363  0120                     __pbssBANK2:	
  2364  0120                     _romHolder:	
  2365  0120                     	ds	32
  2366                           
  2367                           	psect	clrtext
  2368  068B                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  068B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  068C                     clrloop0:	
  2374  068C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  068D  3101               	addfsr 0,1
  2376  068E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  068F  2E8C               	goto	clrloop0	;have we reached the end yet?
  2378  0690  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0070                     __pcstackCOMMON:	
  2382  0070                     ?_nrf24l01ISR:	
  2383  0070                     ?_nrf24l01SetRXMode:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_nrf24l01SendString:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_nrf24l01Init:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_flashWriteByte:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_flashUpdate:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_nrf24l01CELow:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ??_nrf24l01CELow:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_nrf24l01CEHigh:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ??_nrf24l01CEHigh:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_nrf24l01CSLow:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ??_nrf24l01CSLow:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_nrf24l01CSHigh:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ??_nrf24l01CSHigh:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_nrf24l01InterfaceInit:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_nrf24l01SPISend:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ??_nrf24l01SPISend:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_nrf24l01SPIStart:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ??_nrf24l01SPIStart:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_nrf24l01SPIEnd:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ??_nrf24l01SPIEnd:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_enableInterrupts:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ??_enableInterrupts:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_exception:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_sleep:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_loop:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_main:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_nrf24l01InitRegisters:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?i1_nrf24l01SetRXMode:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     nrf24l01SPISend@data:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     enableInterrupts@enable:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     nrf24l01InitRegisters@isReciever:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     flashWriteByte@offset:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482                           
  2483                           ; 2 bytes @ 0x0
  2484  0070                     	ds	1
  2485  0071                     ?i1_nrf24l01Send:	
  2486  0071                     i1nrf24l01Send@data:	
  2487                           ; 1 bytes @ 0x1
  2488                           
  2489                           
  2490                           ; 1 bytes @ 0x1
  2491  0071                     	ds	1
  2492  0072                     ??i1_nrf24l01Send:	
  2493  0072                     flashWriteByte@data:	
  2494                           ; 1 bytes @ 0x2
  2495                           
  2496                           
  2497                           ; 2 bytes @ 0x2
  2498  0072                     	ds	1
  2499  0073                     i1nrf24l01Send@command:	
  2500                           
  2501                           ; 1 bytes @ 0x3
  2502  0073                     	ds	1
  2503  0074                     ??_flashWriteByte:	
  2504  0074                     ??i1_nrf24l01SetRXMode:	
  2505                           ; 1 bytes @ 0x4
  2506                           
  2507  0074                     flashWriteByte@address:	
  2508                           ; 1 bytes @ 0x4
  2509                           
  2510                           
  2511                           ; 2 bytes @ 0x4
  2512  0074                     	ds	1
  2513  0075                     i1nrf24l01SetRXMode@config:	
  2514                           
  2515                           ; 1 bytes @ 0x5
  2516  0075                     	ds	1
  2517  0076                     ??_flashUpdate:	
  2518  0076                     i1nrf24l01SetRXMode@rxMode:	
  2519                           ; 1 bytes @ 0x6
  2520                           
  2521                           
  2522                           ; 1 bytes @ 0x6
  2523  0076                     	ds	2
  2524  0078                     flashUpdate@i:	
  2525                           
  2526                           ; 2 bytes @ 0x8
  2527  0078                     	ds	2
  2528  007A                     ??_exception:	
  2529                           
  2530                           ; 1 bytes @ 0xA
  2531  007A                     	ds	2
  2532  007C                     exception@exception:	
  2533                           
  2534                           ; 1 bytes @ 0xC
  2535  007C                     	ds	1
  2536  007D                     ??_nrf24l01ISR:	
  2537                           
  2538                           ; 1 bytes @ 0xD
  2539  007D                     	ds	1
  2540  007E                     ??_ISR:	
  2541                           
  2542                           	psect	cstackBANK0
  2543  0020                     __pcstackBANK0:	
  2544                           ; 1 bytes @ 0xE
  2545                           
  2546  0020                     nrf24l01ISR@status:	
  2547                           
  2548                           ; 1 bytes @ 0x0
  2549  0020                     	ds	1
  2550  0021                     ?_strcpy:	
  2551  0021                     ??_nrf24l01InterfaceInit:	
  2552                           ; 1 bytes @ 0x1
  2553                           
  2554  0021                     ??_sleep:	
  2555                           ; 1 bytes @ 0x1
  2556                           
  2557  0021                     ?_nrf24l01Send:	
  2558                           ; 1 bytes @ 0x1
  2559                           
  2560  0021                     ?___lwdiv:	
  2561                           ; 1 bytes @ 0x1
  2562                           
  2563  0021                     ?___lwmod:	
  2564                           ; 2 bytes @ 0x1
  2565                           
  2566  0021                     ?___lmul:	
  2567                           ; 2 bytes @ 0x1
  2568                           
  2569  0021                     ?___lldiv:	
  2570                           ; 4 bytes @ 0x1
  2571                           
  2572  0021                     nrf24l01Send@data:	
  2573                           ; 4 bytes @ 0x1
  2574                           
  2575  0021                     ___lwdiv@divisor:	
  2576                           ; 1 bytes @ 0x1
  2577                           
  2578  0021                     ___lwmod@divisor:	
  2579                           ; 2 bytes @ 0x1
  2580                           
  2581  0021                     strcpy@from:	
  2582                           ; 2 bytes @ 0x1
  2583                           
  2584  0021                     ___lmul@multiplier:	
  2585                           ; 2 bytes @ 0x1
  2586                           
  2587  0021                     ___lldiv@divisor:	
  2588                           ; 4 bytes @ 0x1
  2589                           
  2590                           
  2591                           ; 4 bytes @ 0x1
  2592  0021                     	ds	1
  2593  0022                     ??_nrf24l01Send:	
  2594                           
  2595                           ; 1 bytes @ 0x2
  2596  0022                     	ds	1
  2597  0023                     ??_strcpy:	
  2598  0023                     nrf24l01Send@command:	
  2599                           ; 1 bytes @ 0x3
  2600                           
  2601  0023                     ___lwdiv@dividend:	
  2602                           ; 1 bytes @ 0x3
  2603                           
  2604  0023                     ___lwmod@dividend:	
  2605                           ; 2 bytes @ 0x3
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x3
  2609  0023                     	ds	1
  2610  0024                     ??_nrf24l01SetRXMode:	
  2611  0024                     ??_nrf24l01InitRegisters:	
  2612                           ; 1 bytes @ 0x4
  2613                           
  2614  0024                     strcpy@cp:	
  2615                           ; 1 bytes @ 0x4
  2616                           
  2617                           
  2618                           ; 1 bytes @ 0x4
  2619  0024                     	ds	1
  2620  0025                     ??___lwdiv:	
  2621  0025                     ??___lwmod:	
  2622                           ; 1 bytes @ 0x5
  2623                           
  2624  0025                     nrf24l01SetRXMode@config:	
  2625                           ; 1 bytes @ 0x5
  2626                           
  2627  0025                     nrf24l01InitRegisters@setupAW:	
  2628                           ; 1 bytes @ 0x5
  2629                           
  2630  0025                     strcpy@to:	
  2631                           ; 1 bytes @ 0x5
  2632                           
  2633  0025                     ___lmul@multiplicand:	
  2634                           ; 1 bytes @ 0x5
  2635                           
  2636  0025                     ___lldiv@dividend:	
  2637                           ; 4 bytes @ 0x5
  2638                           
  2639                           
  2640                           ; 4 bytes @ 0x5
  2641  0025                     	ds	1
  2642  0026                     nrf24l01SetRXMode@rxMode:	
  2643  0026                     nrf24l01InitRegisters@rfSetup:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0026                     ___lwmod@counter:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649  0026                     ___lwdiv@quotient:	
  2650                           ; 1 bytes @ 0x6
  2651                           
  2652                           
  2653                           ; 2 bytes @ 0x6
  2654  0026                     	ds	1
  2655  0027                     ??_nrf24l01SendString:	
  2656  0027                     nrf24l01InitRegisters@feature:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659                           
  2660                           ; 1 bytes @ 0x7
  2661  0027                     	ds	1
  2662  0028                     nrf24l01InitRegisters@status:	
  2663  0028                     ___lwdiv@counter:	
  2664                           ; 1 bytes @ 0x8
  2665                           
  2666                           
  2667                           ; 1 bytes @ 0x8
  2668  0028                     	ds	1
  2669  0029                     ??___lmul:	
  2670  0029                     ??___lldiv:	
  2671                           ; 1 bytes @ 0x9
  2672                           
  2673  0029                     nrf24l01SendString@i:	
  2674                           ; 1 bytes @ 0x9
  2675                           
  2676  0029                     nrf24l01InitRegisters@enRXAddr:	
  2677                           ; 1 bytes @ 0x9
  2678                           
  2679  0029                     ___lmul@product:	
  2680                           ; 1 bytes @ 0x9
  2681                           
  2682                           
  2683                           ; 4 bytes @ 0x9
  2684  0029                     	ds	1
  2685  002A                     nrf24l01InitRegisters@enAA:	
  2686  002A                     ___lldiv@quotient:	
  2687                           ; 1 bytes @ 0xA
  2688                           
  2689                           
  2690                           ; 4 bytes @ 0xA
  2691  002A                     	ds	1
  2692  002B                     nrf24l01InitRegisters@DynPD:	
  2693                           
  2694                           ; 1 bytes @ 0xB
  2695  002B                     	ds	1
  2696  002C                     nrf24l01InitRegisters@config:	
  2697                           
  2698                           ; 1 bytes @ 0xC
  2699  002C                     	ds	1
  2700  002D                     ??_nrf24l01Init:	
  2701                           
  2702                           ; 1 bytes @ 0xD
  2703  002D                     	ds	1
  2704  002E                     ___lldiv@counter:	
  2705                           
  2706                           ; 1 bytes @ 0xE
  2707  002E                     	ds	1
  2708  002F                     ?_getADCValue:	
  2709  002F                     nrf24l01Init@isReciever:	
  2710                           ; 4 bytes @ 0xF
  2711                           
  2712  002F                     getADCValue@divider:	
  2713                           ; 1 bytes @ 0xF
  2714                           
  2715                           
  2716                           ; 4 bytes @ 0xF
  2717  002F                     	ds	4
  2718  0033                     ??_getADCValue:	
  2719                           
  2720                           ; 1 bytes @ 0x13
  2721  0033                     	ds	4
  2722  0037                     getADCValue@channel:	
  2723                           
  2724                           ; 1 bytes @ 0x17
  2725  0037                     	ds	1
  2726  0038                     getADCValue@adcLoop:	
  2727                           
  2728                           ; 1 bytes @ 0x18
  2729  0038                     	ds	1
  2730  0039                     getADCValue@adcSum:	
  2731                           
  2732                           ; 4 bytes @ 0x19
  2733  0039                     	ds	4
  2734  003D                     ?_utoa:	
  2735  003D                     utoa@val:	
  2736                           ; 1 bytes @ 0x1D
  2737                           
  2738                           
  2739                           ; 2 bytes @ 0x1D
  2740  003D                     	ds	2
  2741  003F                     utoa@base:	
  2742                           
  2743                           ; 2 bytes @ 0x1F
  2744  003F                     	ds	2
  2745  0041                     ??_utoa:	
  2746                           
  2747                           ; 1 bytes @ 0x21
  2748  0041                     	ds	1
  2749  0042                     utoa@v:	
  2750                           
  2751                           ; 2 bytes @ 0x22
  2752  0042                     	ds	2
  2753  0044                     utoa@c:	
  2754                           
  2755                           ; 1 bytes @ 0x24
  2756  0044                     	ds	1
  2757  0045                     utoa@buf:	
  2758                           
  2759                           ; 1 bytes @ 0x25
  2760  0045                     	ds	1
  2761  0046                     ??_loop:	
  2762  0046                     ??_main:	
  2763                           ; 1 bytes @ 0x26
  2764                           
  2765                           
  2766                           ; 1 bytes @ 0x26
  2767  0046                     	ds	1
  2768                           
  2769                           	psect	maintext
  2770  02CF                     __pmaintext:	
  2771 ;;
  2772 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2773 ;;
  2774 ;; *************** function _main *****************
  2775 ;; Defined at:
  2776 ;;		line 115 in file "main.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : B1F/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels required when called:   12
  2796 ;; This function calls:
  2797 ;;		_loop
  2798 ;;		_nrf24l01Init
  2799 ;;		_nrf24l01SendString
  2800 ;;		_sleep
  2801 ;;		_strcpy
  2802 ;;		_utoa
  2803 ;; This function is called by:
  2804 ;;		Startup code after reset
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _main
  2810  02CF                     _main:	
  2811                           
  2812                           ;main.c: 118: ANSELA = 0x00;
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2816  02CF  0023               	movlb	3	; select bank3
  2817  02D0  018C               	clrf	12	;volatile
  2818                           
  2819                           ;main.c: 119: ANSELC = 0x00;
  2820  02D1  018E               	clrf	14	;volatile
  2821                           
  2822                           ;main.c: 121: ODCONA = 0x00;
  2823  02D2  0025               	movlb	5	; select bank5
  2824  02D3  018C               	clrf	12	;volatile
  2825                           
  2826                           ;main.c: 122: ODCONC = 0x00;
  2827  02D4  018E               	clrf	14	;volatile
  2828                           
  2829                           ;main.c: 124: SLRCONA = 0x00;
  2830  02D5  0026               	movlb	6	; select bank6
  2831  02D6  018C               	clrf	12	;volatile
  2832                           
  2833                           ;main.c: 125: SLRCONC = 0x00;
  2834  02D7  018E               	clrf	14	;volatile
  2835                           
  2836                           ;main.c: 127: INLVLA = 0x00;
  2837  02D8  0027               	movlb	7	; select bank7
  2838  02D9  018C               	clrf	12	;volatile
  2839                           
  2840                           ;main.c: 128: INLVLC = 0x00;
  2841  02DA  018E               	clrf	14	;volatile
  2842                           
  2843                           ;main.c: 130: TRISCbits.TRISC5 = 0;
  2844  02DB  0021               	movlb	1	; select bank1
  2845  02DC  128E               	bcf	14,5	;volatile
  2846                           
  2847                           ;main.c: 131: TRISCbits.TRISC4 = 0;
  2848  02DD  120E               	bcf	14,4	;volatile
  2849                           
  2850                           ;main.c: 133: PORTCbits.RC4 = 0;
  2851  02DE  0020               	movlb	0	; select bank0
  2852  02DF  120E               	bcf	14,4	;volatile
  2853                           
  2854                           ;main.c: 140: INTCONbits.PEIE = 0;
  2855  02E0  130B               	bcf	11,6	;volatile
  2856                           
  2857                           ;main.c: 141: INTCONbits.GIE = 0;
  2858  02E1  138B               	bcf	11,7	;volatile
  2859                           
  2860                           ;main.c: 146: _delay((unsigned long)((10)*(16000000/4000.0)));
  2861  02E2  3034               	movlw	52
  2862  02E3  0020               	movlb	0	; select bank0
  2863  02E4  00C6               	movwf	??_main
  2864  02E5  30F1               	movlw	241
  2865  02E6                     u1567:	
  2866  02E6  0B89               	decfsz	9,f
  2867  02E7  2AE6               	goto	u1567
  2868  02E8  0BC6               	decfsz	??_main,f
  2869  02E9  2AE6               	goto	u1567
  2870  02EA  3200               	nop2
  2871                           
  2872                           ;main.c: 150: strcpy(nrf24l01TXName, "UnconfiguredH");
  2873  02EB  3038               	movlw	low (STR_6| (0+32768))
  2874  02EC  0020               	movlb	0	; select bank0
  2875  02ED  00A1               	movwf	strcpy@from
  2876  02EE  3086               	movlw	high (STR_6| (0+32768))
  2877  02EF  00A2               	movwf	strcpy@from+1
  2878  02F0  30C3               	movlw	(low (_nrf24l01TXName| 0))& (0+255)
  2879  02F1  3185  25EF  3182   	fcall	_strcpy
  2880                           
  2881                           ;main.c: 152: nrf24l01Init(0);
  2882  02F4  3000               	movlw	0
  2883  02F5  3185  2566  3182   	fcall	_nrf24l01Init
  2884                           
  2885                           ;main.c: 158: FVRCONbits.FVREN = 0;
  2886  02F8  0022               	movlb	2	; select bank2
  2887  02F9  1397               	bcf	23,7	;volatile
  2888                           
  2889                           ;main.c: 159: FVRCONbits.ADFVR = 1;
  2890  02FA  0817               	movf	23,w	;volatile
  2891  02FB  39FC               	andlw	-4
  2892  02FC  3801               	iorlw	1
  2893  02FD  0097               	movwf	23	;volatile
  2894                           
  2895                           ;main.c: 160: FVRCONbits.FVREN = 1;
  2896  02FE  1797               	bsf	23,7	;volatile
  2897                           
  2898                           ;main.c: 163: FVRCONbits.TSEN = 0;
  2899  02FF  1297               	bcf	23,5	;volatile
  2900                           
  2901                           ;main.c: 164: FVRCONbits.TSRNG = 0;
  2902  0300  1217               	bcf	23,4	;volatile
  2903                           
  2904                           ;main.c: 165: FVRCONbits.TSEN = 1;
  2905  0301  1697               	bsf	23,5	;volatile
  2906                           
  2907                           ;main.c: 168: ADCON0bits.ADON = 0;
  2908  0302  0021               	movlb	1	; select bank1
  2909  0303  101D               	bcf	29,0	;volatile
  2910                           
  2911                           ;main.c: 170: ANSELAbits.ANSA4 = 1;
  2912  0304  0023               	movlb	3	; select bank3
  2913  0305  160C               	bsf	12,4	;volatile
  2914                           
  2915                           ;main.c: 171: TRISAbits.TRISA4 = 1;
  2916  0306  0021               	movlb	1	; select bank1
  2917  0307  160C               	bsf	12,4	;volatile
  2918                           
  2919                           ;main.c: 172: WPUAbits.WPUA4 = 0;
  2920  0308  0024               	movlb	4	; select bank4
  2921  0309  120C               	bcf	12,4	;volatile
  2922                           
  2923                           ;main.c: 174: ANSELCbits.ANSC3 = 1;
  2924  030A  0023               	movlb	3	; select bank3
  2925  030B  158E               	bsf	14,3	;volatile
  2926                           
  2927                           ;main.c: 175: TRISCbits.TRISC3 = 1;
  2928  030C  0021               	movlb	1	; select bank1
  2929  030D  158E               	bsf	14,3	;volatile
  2930                           
  2931                           ;main.c: 177: ADCON1bits.ADCS = 0b111;
  2932  030E  3070               	movlw	112
  2933  030F  049E               	iorwf	30,f	;volatile
  2934                           
  2935                           ;main.c: 178: ADCON1bits.ADFM = 1;
  2936  0310  179E               	bsf	30,7	;volatile
  2937                           
  2938                           ;main.c: 179: ADCON1bits.ADPREF = 0b00;
  2939  0311  30FC               	movlw	-4
  2940  0312  059E               	andwf	30,f	;volatile
  2941                           
  2942                           ;main.c: 181: ADCON0bits.CHS = 3;
  2943  0313  081D               	movf	29,w	;volatile
  2944  0314  3903               	andlw	-253
  2945  0315  380C               	iorlw	12
  2946  0316  009D               	movwf	29	;volatile
  2947                           
  2948                           ;main.c: 182: ADCON0bits.ADON = 1;
  2949  0317  141D               	bsf	29,0	;volatile
  2950                           
  2951                           ;main.c: 186: TRISAbits.TRISA2 = 1;
  2952  0318  150C               	bsf	12,2	;volatile
  2953                           
  2954                           ;main.c: 187: RA2PPSbits.RA2PPS = 0b00010;
  2955  0319  003D               	movlb	29	; select bank29
  2956  031A  0812               	movf	18,w	;volatile
  2957  031B  39E0               	andlw	-32
  2958  031C  3802               	iorlw	2
  2959  031D  0092               	movwf	18	;volatile
  2960                           
  2961                           ;main.c: 188: PIE0bits.INTE = 1;
  2962  031E  0021               	movlb	1	; select bank1
  2963  031F  1410               	bsf	16,0	;volatile
  2964                           
  2965                           ;main.c: 189: INTCONbits.INTEDG = 0;
  2966  0320  100B               	bcf	11,0	;volatile
  2967                           
  2968                           ;main.c: 193: WDTCONbits.WDTPS = 10;
  2969  0321  0817               	movf	23,w	;volatile
  2970  0322  39C1               	andlw	-63
  2971  0323  3814               	iorlw	20
  2972  0324  0097               	movwf	23	;volatile
  2973                           
  2974                           ;main.c: 196: TRISAbits.TRISA5 = 0;
  2975  0325  128C               	bcf	12,5	;volatile
  2976                           
  2977                           ;main.c: 197: PORTAbits.RA5 = 0;
  2978  0326  0020               	movlb	0	; select bank0
  2979  0327  128C               	bcf	12,5	;volatile
  2980                           
  2981                           ;main.c: 200: INTCONbits.PEIE = 1;
  2982  0328  170B               	bsf	11,6	;volatile
  2983                           
  2984                           ;main.c: 201: INTCONbits.GIE = 1;
  2985  0329  178B               	bsf	11,7	;volatile
  2986                           
  2987                           ;main.c: 203: strcpy(nrf24l01TXTopic, "BOOT");
  2988  032A  30A0               	movlw	low (STR_7| (0+32768))
  2989  032B  00A1               	movwf	strcpy@from
  2990  032C  3086               	movlw	high (STR_7| (0+32768))
  2991  032D  00A2               	movwf	strcpy@from+1
  2992  032E  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  2993  032F  3185  25EF  3182   	fcall	_strcpy
  2994                           
  2995                           ;main.c: 205: utoa(nrf24l01TXValue, romData.bootMode, 10);
  2996  0332  0021               	movlb	1	; select bank1
  2997  0333  0832               	movf	((_romData+1)^(0+128)+17),w
  2998  0334  0020               	movlb	0	; select bank0
  2999  0335  00BE               	movwf	utoa@val+1
  3000  0336  0021               	movlb	1	; select bank1
  3001  0337  0831               	movf	(_romData^(0+128)+17),w
  3002  0338  0020               	movlb	0	; select bank0
  3003  0339  00BD               	movwf	utoa@val
  3004  033A  300A               	movlw	10
  3005  033B  00BF               	movwf	utoa@base
  3006  033C  3000               	movlw	0
  3007  033D  00C0               	movwf	utoa@base+1
  3008  033E  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3009  033F  3183  234F  3182   	fcall	_utoa
  3010                           
  3011                           ;main.c: 207: nrf24l01TXPacketData.byte = 0x00;
  3012  0342  0020               	movlb	0	; select bank0
  3013  0343  01CC               	clrf	_nrf24l01TXPacketData
  3014                           
  3015                           ;main.c: 208: nrf24l01TXPacketData.ACKRequest = 0;
  3016  0344  104C               	bcf	_nrf24l01TXPacketData,0
  3017                           
  3018                           ;main.c: 211: nrf24l01SendString();
  3019  0345  3181  2100  3182   	fcall	_nrf24l01SendString
  3020                           
  3021                           ;main.c: 213: sleep();
  3022  0348  3186  265F  3182   	fcall	_sleep
  3023  034B                     l2801:	
  3024                           ;main.c: 215: while(1){
  3025                           
  3026                           
  3027                           ;main.c: 216: loop();
  3028  034B  3180  202C  3182   	fcall	_loop
  3029  034E  2B4B               	goto	l2801
  3030  034F                     __end_of_main:	
  3031                           ;main.c: 217: };main.c: 219: return;
  3032                           
  3033                           
  3034                           	psect	text1
  3035  0566                     __ptext1:	
  3036 ;; *************** function _nrf24l01Init *****************
  3037 ;; Defined at:
  3038 ;;		line 452 in file "nrf24l01.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  isReciever      1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  isReciever      1   15[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:        3 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:   10
  3059 ;; This function calls:
  3060 ;;		_nrf24l01CEHigh
  3061 ;;		_nrf24l01CELow
  3062 ;;		_nrf24l01InitRegisters
  3063 ;;		_nrf24l01InterfaceInit
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _nrf24l01Init
  3071  0566                     _nrf24l01Init:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;nrf24l01Init@isReciever stored from wreg
  3076  0566  0020               	movlb	0	; select bank0
  3077  0567  00AF               	movwf	nrf24l01Init@isReciever
  3078                           
  3079                           ;nrf24l01.c: 455: nrf24l01InterfaceInit();
  3080  0568  3185  25D1  3185   	fcall	_nrf24l01InterfaceInit
  3081                           
  3082                           ;nrf24l01.c: 460: nrf24l01CELow();
  3083  056B  3186  26AF  3185   	fcall	_nrf24l01CELow
  3084                           
  3085                           ;nrf24l01.c: 462: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3086  056E  3002               	movlw	2
  3087  056F  0020               	movlb	0	; select bank0
  3088  0570  00AE               	movwf	??_nrf24l01Init+1
  3089  0571  3004               	movlw	4
  3090  0572  00AD               	movwf	??_nrf24l01Init
  3091  0573  30BA               	movlw	186
  3092  0574                     u1577:	
  3093  0574  0B89               	decfsz	9,f
  3094  0575  2D74               	goto	u1577
  3095  0576  0BAD               	decfsz	??_nrf24l01Init,f
  3096  0577  2D74               	goto	u1577
  3097  0578  0BAE               	decfsz	??_nrf24l01Init+1,f
  3098  0579  2D74               	goto	u1577
  3099  057A  0000               	nop
  3100                           
  3101                           ;nrf24l01.c: 464: nrf24l01InitRegisters(isReciever);
  3102  057B  0020               	movlb	0	; select bank0
  3103  057C  082F               	movf	nrf24l01Init@isReciever,w
  3104  057D  3181  21AB  3185   	fcall	_nrf24l01InitRegisters
  3105                           
  3106                           ;nrf24l01.c: 466: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3107  0580  3002               	movlw	2
  3108  0581  0020               	movlb	0	; select bank0
  3109  0582  00AE               	movwf	??_nrf24l01Init+1
  3110  0583  3004               	movlw	4
  3111  0584  00AD               	movwf	??_nrf24l01Init
  3112  0585  30BA               	movlw	186
  3113  0586                     u1587:	
  3114  0586  0B89               	decfsz	9,f
  3115  0587  2D86               	goto	u1587
  3116  0588  0BAD               	decfsz	??_nrf24l01Init,f
  3117  0589  2D86               	goto	u1587
  3118  058A  0BAE               	decfsz	??_nrf24l01Init+1,f
  3119  058B  2D86               	goto	u1587
  3120  058C  0000               	nop
  3121                           
  3122                           ;nrf24l01.c: 468: nrf24l01CEHigh();
  3123  058D  3186  26B2         	fcall	_nrf24l01CEHigh
  3124  058F  0008               	return
  3125  0590                     __end_of_nrf24l01Init:	
  3126                           
  3127                           	psect	text2
  3128  05D1                     __ptext2:	
  3129 ;; *************** function _nrf24l01InterfaceInit *****************
  3130 ;; Defined at:
  3131 ;;		line 28 in file "interface.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    6
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_nrf24l01Init
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _nrf24l01InterfaceInit
  3161  05D1                     _nrf24l01InterfaceInit:	
  3162                           
  3163                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3164                           
  3165                           ;incstack = 0
  3166                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3167  05D1  0021               	movlb	1	; select bank1
  3168  05D2  100C               	bcf	12,0	;volatile
  3169                           
  3170                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3171  05D3  108C               	bcf	12,1	;volatile
  3172                           
  3173                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3174  05D4  148E               	bsf	14,1	;volatile
  3175                           
  3176                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3177  05D5  110E               	bcf	14,2	;volatile
  3178                           
  3179                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3180  05D6  100E               	bcf	14,0	;volatile
  3181                           
  3182                           ;interface.c: 37: SSP1CON1bits.SSPEN = 0;
  3183  05D7  0024               	movlb	4	; select bank4
  3184  05D8  1295               	bcf	21,5	;volatile
  3185                           
  3186                           ;interface.c: 39: RC1PPSbits.RC1PPS = 0b10001;
  3187  05D9  003D               	movlb	29	; select bank29
  3188  05DA  0821               	movf	33,w	;volatile
  3189  05DB  39E0               	andlw	-32
  3190  05DC  3811               	iorlw	17
  3191  05DD  00A1               	movwf	33	;volatile
  3192                           
  3193                           ;interface.c: 40: RC2PPSbits.RC2PPS = 0b11001;
  3194  05DE  0822               	movf	34,w	;volatile
  3195  05DF  39E0               	andlw	-32
  3196  05E0  3819               	iorlw	25
  3197  05E1  00A2               	movwf	34	;volatile
  3198                           
  3199                           ;interface.c: 41: RC0PPSbits.RC0PPS = 0b11000;
  3200  05E2  0820               	movf	32,w	;volatile
  3201  05E3  39E0               	andlw	-32
  3202  05E4  3818               	iorlw	24
  3203  05E5  00A0               	movwf	32	;volatile
  3204                           
  3205                           ;interface.c: 43: SSP1CON1bits.CKP = 0;
  3206  05E6  0024               	movlb	4	; select bank4
  3207  05E7  1215               	bcf	21,4	;volatile
  3208                           
  3209                           ;interface.c: 44: SSP1STATbits.CKE = 1;
  3210  05E8  1714               	bsf	20,6	;volatile
  3211                           
  3212                           ;interface.c: 45: SSP1CON1bits.SSPM = 0b0010;
  3213  05E9  0815               	movf	21,w	;volatile
  3214  05EA  39F0               	andlw	-16
  3215  05EB  3802               	iorlw	2
  3216  05EC  0095               	movwf	21	;volatile
  3217                           
  3218                           ;interface.c: 47: SSP1CON1bits.SSPEN = 1;
  3219  05ED  1695               	bsf	21,5	;volatile
  3220  05EE  0008               	return
  3221  05EF                     __end_of_nrf24l01InterfaceInit:	
  3222                           
  3223                           	psect	text3
  3224  01AB                     __ptext3:	
  3225 ;; *************** function _nrf24l01InitRegisters *****************
  3226 ;; Defined at:
  3227 ;;		line 368 in file "nrf24l01.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  isReciever      1    wreg     unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  isReciever      1    0[COMMON] unsigned char 
  3232 ;;  config          1   12[BANK0 ] struct .
  3233 ;;  DynPD           1   11[BANK0 ] struct .
  3234 ;;  enAA            1   10[BANK0 ] struct .
  3235 ;;  enRXAddr        1    9[BANK0 ] struct .
  3236 ;;  status          1    8[BANK0 ] struct .
  3237 ;;  feature         1    7[BANK0 ] struct .
  3238 ;;  rfSetup         1    6[BANK0 ] struct .
  3239 ;;  setupAW         1    5[BANK0 ] struct .
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        9 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    9
  3256 ;; This function calls:
  3257 ;;		_nrf24l01Send
  3258 ;; This function is called by:
  3259 ;;		_nrf24l01Init
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _nrf24l01InitRegisters
  3265  01AB                     _nrf24l01InitRegisters:	
  3266                           
  3267                           ;nrf24l01.c: 370: n_CONFIG_t config;;nrf24l01.c: 372: config.PWR_UP = 0;
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3271  01AB  0020               	movlb	0	; select bank0
  3272  01AC  10AC               	bcf	nrf24l01InitRegisters@config,1
  3273                           
  3274                           ;nrf24l01.c: 373: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3275  01AD  082C               	movf	nrf24l01InitRegisters@config,w
  3276  01AE  00A4               	movwf	??_nrf24l01InitRegisters
  3277  01AF  0824               	movf	??_nrf24l01InitRegisters,w
  3278  01B0  00A1               	movwf	nrf24l01Send@data
  3279  01B1  3020               	movlw	32
  3280  01B2  3185  25B1  3181   	fcall	_nrf24l01Send
  3281                           
  3282                           ;nrf24l01.c: 375: n_SETUP_AW_t setupAW;;nrf24l01.c: 376: setupAW.byte = 0x00;
  3283  01B5  0020               	movlb	0	; select bank0
  3284  01B6  01A5               	clrf	nrf24l01InitRegisters@setupAW
  3285                           
  3286                           ;nrf24l01.c: 377: setupAW.AW = 0b11;
  3287  01B7  3003               	movlw	3
  3288  01B8  04A5               	iorwf	nrf24l01InitRegisters@setupAW,f
  3289                           
  3290                           ;nrf24l01.c: 378: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3291  01B9  0825               	movf	nrf24l01InitRegisters@setupAW,w
  3292  01BA  00A4               	movwf	??_nrf24l01InitRegisters
  3293  01BB  0824               	movf	??_nrf24l01InitRegisters,w
  3294  01BC  00A1               	movwf	nrf24l01Send@data
  3295  01BD  3022               	movlw	34
  3296  01BE  3185  25B1  3181   	fcall	_nrf24l01Send
  3297                           
  3298                           ;nrf24l01.c: 386: n_RF_SETUP_t rfSetup;;nrf24l01.c: 387: rfSetup.RF_DR_LOW = 0;
  3299  01C1  0020               	movlb	0	; select bank0
  3300  01C2  12A6               	bcf	nrf24l01InitRegisters@rfSetup,5
  3301                           
  3302                           ;nrf24l01.c: 388: rfSetup.RF_DR_HIGH = 1;
  3303  01C3  15A6               	bsf	nrf24l01InitRegisters@rfSetup,3
  3304                           
  3305                           ;nrf24l01.c: 389: rfSetup.RF_PWR = 3;
  3306  01C4  3006               	movlw	6
  3307  01C5  04A6               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3308                           
  3309                           ;nrf24l01.c: 390: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3310  01C6  0826               	movf	nrf24l01InitRegisters@rfSetup,w
  3311  01C7  00A4               	movwf	??_nrf24l01InitRegisters
  3312  01C8  0824               	movf	??_nrf24l01InitRegisters,w
  3313  01C9  00A1               	movwf	nrf24l01Send@data
  3314  01CA  3026               	movlw	38
  3315  01CB  3185  25B1  3181   	fcall	_nrf24l01Send
  3316                           
  3317                           ;nrf24l01.c: 393: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 394: enRXAddr.ERX_P0 = 1;
  3318  01CE  0020               	movlb	0	; select bank0
  3319  01CF  1429               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3320                           
  3321                           ;nrf24l01.c: 395: enRXAddr.ERX_P1 = 1;
  3322  01D0  14A9               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3323                           
  3324                           ;nrf24l01.c: 396: enRXAddr.ERX_P2 = 1;
  3325  01D1  1529               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3326                           
  3327                           ;nrf24l01.c: 397: enRXAddr.ERX_P3 = 1;
  3328  01D2  15A9               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3329                           
  3330                           ;nrf24l01.c: 398: enRXAddr.ERX_P4 = 1;
  3331  01D3  1629               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3332                           
  3333                           ;nrf24l01.c: 399: enRXAddr.ERX_P5 = 1;
  3334  01D4  16A9               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3335                           
  3336                           ;nrf24l01.c: 400: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3337  01D5  0829               	movf	nrf24l01InitRegisters@enRXAddr,w
  3338  01D6  00A4               	movwf	??_nrf24l01InitRegisters
  3339  01D7  0824               	movf	??_nrf24l01InitRegisters,w
  3340  01D8  00A1               	movwf	nrf24l01Send@data
  3341  01D9  3022               	movlw	34
  3342  01DA  3185  25B1  3181   	fcall	_nrf24l01Send
  3343                           
  3344                           ;nrf24l01.c: 403: n_EN_AA_t enAA;;nrf24l01.c: 404: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3345  01DD  0020               	movlb	0	; select bank0
  3346  01DE  01A1               	clrf	nrf24l01Send@data
  3347  01DF  3001               	movlw	1
  3348  01E0  3185  25B1  3181   	fcall	_nrf24l01Send
  3349  01E3  0020               	movlb	0	; select bank0
  3350  01E4  00A4               	movwf	??_nrf24l01InitRegisters
  3351  01E5  0824               	movf	??_nrf24l01InitRegisters,w
  3352  01E6  00AA               	movwf	nrf24l01InitRegisters@enAA
  3353                           
  3354                           ;nrf24l01.c: 405: enAA.ENAA_P0 = 0;
  3355  01E7  102A               	bcf	nrf24l01InitRegisters@enAA,0
  3356                           
  3357                           ;nrf24l01.c: 406: enAA.ENAA_P1 = 0;
  3358  01E8  10AA               	bcf	nrf24l01InitRegisters@enAA,1
  3359                           
  3360                           ;nrf24l01.c: 407: enAA.ENAA_P2 = 0;
  3361  01E9  112A               	bcf	nrf24l01InitRegisters@enAA,2
  3362                           
  3363                           ;nrf24l01.c: 408: enAA.ENAA_P3 = 0;
  3364  01EA  11AA               	bcf	nrf24l01InitRegisters@enAA,3
  3365                           
  3366                           ;nrf24l01.c: 409: enAA.ENAA_P4 = 0;
  3367  01EB  122A               	bcf	nrf24l01InitRegisters@enAA,4
  3368                           
  3369                           ;nrf24l01.c: 410: enAA.ENAA_P5 = 0;
  3370  01EC  12AA               	bcf	nrf24l01InitRegisters@enAA,5
  3371                           
  3372                           ;nrf24l01.c: 411: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3373  01ED  082A               	movf	nrf24l01InitRegisters@enAA,w
  3374  01EE  00A4               	movwf	??_nrf24l01InitRegisters
  3375  01EF  0824               	movf	??_nrf24l01InitRegisters,w
  3376  01F0  00A1               	movwf	nrf24l01Send@data
  3377  01F1  3021               	movlw	33
  3378  01F2  3185  25B1  3181   	fcall	_nrf24l01Send
  3379                           
  3380                           ;nrf24l01.c: 415: n_FEATURE_t feature;;nrf24l01.c: 416: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3381  01F5  0020               	movlb	0	; select bank0
  3382  01F6  01A1               	clrf	nrf24l01Send@data
  3383  01F7  301D               	movlw	29
  3384  01F8  3185  25B1  3181   	fcall	_nrf24l01Send
  3385  01FB  0020               	movlb	0	; select bank0
  3386  01FC  00A4               	movwf	??_nrf24l01InitRegisters
  3387  01FD  0824               	movf	??_nrf24l01InitRegisters,w
  3388  01FE  00A7               	movwf	nrf24l01InitRegisters@feature
  3389                           
  3390                           ;nrf24l01.c: 417: feature.EN_DPL = 1;
  3391  01FF  1527               	bsf	nrf24l01InitRegisters@feature,2
  3392                           
  3393                           ;nrf24l01.c: 418: feature.EN_DYN_ACK = 1;
  3394  0200  1427               	bsf	nrf24l01InitRegisters@feature,0
  3395                           
  3396                           ;nrf24l01.c: 419: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3397  0201  0827               	movf	nrf24l01InitRegisters@feature,w
  3398  0202  00A4               	movwf	??_nrf24l01InitRegisters
  3399  0203  0824               	movf	??_nrf24l01InitRegisters,w
  3400  0204  00A1               	movwf	nrf24l01Send@data
  3401  0205  303D               	movlw	61
  3402  0206  3185  25B1  3181   	fcall	_nrf24l01Send
  3403                           
  3404                           ;nrf24l01.c: 421: n_DYNPD_t DynPD;;nrf24l01.c: 422: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3405  0209  0020               	movlb	0	; select bank0
  3406  020A  01A1               	clrf	nrf24l01Send@data
  3407  020B  301C               	movlw	28
  3408  020C  3185  25B1  3181   	fcall	_nrf24l01Send
  3409  020F  0020               	movlb	0	; select bank0
  3410  0210  00A4               	movwf	??_nrf24l01InitRegisters
  3411  0211  0824               	movf	??_nrf24l01InitRegisters,w
  3412  0212  00AB               	movwf	nrf24l01InitRegisters@DynPD
  3413                           
  3414                           ;nrf24l01.c: 423: DynPD.DPL_P0 = 1;
  3415  0213  142B               	bsf	nrf24l01InitRegisters@DynPD,0
  3416                           
  3417                           ;nrf24l01.c: 424: DynPD.DPL_P1 = 1;
  3418  0214  14AB               	bsf	nrf24l01InitRegisters@DynPD,1
  3419                           
  3420                           ;nrf24l01.c: 425: DynPD.DPL_P2 = 1;
  3421  0215  152B               	bsf	nrf24l01InitRegisters@DynPD,2
  3422                           
  3423                           ;nrf24l01.c: 426: DynPD.DPL_P3 = 1;
  3424  0216  15AB               	bsf	nrf24l01InitRegisters@DynPD,3
  3425                           
  3426                           ;nrf24l01.c: 427: DynPD.DPL_P4 = 1;
  3427  0217  162B               	bsf	nrf24l01InitRegisters@DynPD,4
  3428                           
  3429                           ;nrf24l01.c: 428: DynPD.DPL_P5 = 1;
  3430  0218  16AB               	bsf	nrf24l01InitRegisters@DynPD,5
  3431                           
  3432                           ;nrf24l01.c: 429: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3433  0219  082B               	movf	nrf24l01InitRegisters@DynPD,w
  3434  021A  00A4               	movwf	??_nrf24l01InitRegisters
  3435  021B  0824               	movf	??_nrf24l01InitRegisters,w
  3436  021C  00A1               	movwf	nrf24l01Send@data
  3437  021D  303C               	movlw	60
  3438  021E  3185  25B1  3181   	fcall	_nrf24l01Send
  3439                           
  3440                           ;nrf24l01.c: 432: n_STATUS_t status;;nrf24l01.c: 433: status.byte = 0x00;
  3441  0221  0020               	movlb	0	; select bank0
  3442  0222  01A8               	clrf	nrf24l01InitRegisters@status
  3443                           
  3444                           ;nrf24l01.c: 434: status.RX_DR = 1;
  3445  0223  1728               	bsf	nrf24l01InitRegisters@status,6
  3446                           
  3447                           ;nrf24l01.c: 435: status.TX_DS = 1;
  3448  0224  16A8               	bsf	nrf24l01InitRegisters@status,5
  3449                           
  3450                           ;nrf24l01.c: 436: status.MAX_RT = 1;
  3451  0225  1628               	bsf	nrf24l01InitRegisters@status,4
  3452                           
  3453                           ;nrf24l01.c: 437: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3454  0226  0828               	movf	nrf24l01InitRegisters@status,w
  3455  0227  00A4               	movwf	??_nrf24l01InitRegisters
  3456  0228  0824               	movf	??_nrf24l01InitRegisters,w
  3457  0229  00A1               	movwf	nrf24l01Send@data
  3458  022A  3027               	movlw	39
  3459  022B  3185  25B1  3181   	fcall	_nrf24l01Send
  3460                           
  3461                           ;nrf24l01.c: 440: nrf24l01Send(0b11100001, 0);
  3462  022E  0020               	movlb	0	; select bank0
  3463  022F  01A1               	clrf	nrf24l01Send@data
  3464  0230  30E1               	movlw	225
  3465  0231  3185  25B1  3181   	fcall	_nrf24l01Send
  3466                           
  3467                           ;nrf24l01.c: 441: nrf24l01Send(0b11100010, 0);
  3468  0234  0020               	movlb	0	; select bank0
  3469  0235  01A1               	clrf	nrf24l01Send@data
  3470  0236  30E2               	movlw	226
  3471  0237  3185  25B1  3181   	fcall	_nrf24l01Send
  3472                           
  3473                           ;nrf24l01.c: 444: config.PRIM_RX = 1;
  3474  023A  0020               	movlb	0	; select bank0
  3475  023B  142C               	bsf	nrf24l01InitRegisters@config,0
  3476                           
  3477                           ;nrf24l01.c: 445: config.EN_CRC = 1;
  3478  023C  15AC               	bsf	nrf24l01InitRegisters@config,3
  3479                           
  3480                           ;nrf24l01.c: 446: config.CRCO = 1;
  3481  023D  152C               	bsf	nrf24l01InitRegisters@config,2
  3482                           
  3483                           ;nrf24l01.c: 447: config.PWR_UP = 1;
  3484  023E  14AC               	bsf	nrf24l01InitRegisters@config,1
  3485                           
  3486                           ;nrf24l01.c: 448: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3487  023F  082C               	movf	nrf24l01InitRegisters@config,w
  3488  0240  00A4               	movwf	??_nrf24l01InitRegisters
  3489  0241  0824               	movf	??_nrf24l01InitRegisters,w
  3490  0242  00A1               	movwf	nrf24l01Send@data
  3491  0243  3020               	movlw	32
  3492  0244  3185  25B1         	fcall	_nrf24l01Send
  3493  0246  0008               	return
  3494  0247                     __end_of_nrf24l01InitRegisters:	
  3495                           
  3496                           	psect	text4
  3497  002C                     __ptext4:	
  3498 ;; *************** function _loop *****************
  3499 ;; Defined at:
  3500 ;;		line 71 in file "main.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:   11
  3521 ;; This function calls:
  3522 ;;		_getADCValue
  3523 ;;		_nrf24l01SendString
  3524 ;;		_sleep
  3525 ;;		_strcpy
  3526 ;;		_utoa
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _loop
  3534  002C                     _loop:	
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3538  002C  0064               	clrwdt	;# 
  3539                           
  3540                           ;main.c: 76: strcpy(nrf24l01TXTopic, "DBG");
  3541  002D  30A5               	movlw	low (STR_1| (0+32768))
  3542  002E  0020               	movlb	0	; select bank0
  3543  002F  00A1               	movwf	strcpy@from
  3544  0030  3086               	movlw	high (STR_1| (0+32768))
  3545  0031  00A2               	movwf	strcpy@from+1
  3546  0032  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3547  0033  3185  25EF  3180   	fcall	_strcpy
  3548                           
  3549                           ;main.c: 77: utoa(nrf24l01TXValue, counter, 10);
  3550  0036  0020               	movlb	0	; select bank0
  3551  0037  0848               	movf	_counter+1,w
  3552  0038  00BE               	movwf	utoa@val+1
  3553  0039  0847               	movf	_counter,w
  3554  003A  00BD               	movwf	utoa@val
  3555  003B  300A               	movlw	10
  3556  003C  00BF               	movwf	utoa@base
  3557  003D  3000               	movlw	0
  3558  003E  00C0               	movwf	utoa@base+1
  3559  003F  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3560  0040  3183  234F  3180   	fcall	_utoa
  3561                           
  3562                           ;main.c: 78: counter = 0;
  3563  0043  0020               	movlb	0	; select bank0
  3564  0044  01C7               	clrf	_counter
  3565  0045  01C8               	clrf	_counter+1
  3566                           
  3567                           ;main.c: 79: nrf24l01TXPacketData.byte = 0x00;
  3568  0046  01CC               	clrf	_nrf24l01TXPacketData
  3569                           
  3570                           ;main.c: 80: nrf24l01TXPacketData.ACKRequest = 0;
  3571  0047  104C               	bcf	_nrf24l01TXPacketData,0
  3572                           
  3573                           ;main.c: 81: nrf24l01SendString();
  3574  0048  3181  2100  3180   	fcall	_nrf24l01SendString
  3575                           
  3576                           ;main.c: 82: sleep();
  3577  004B  3186  265F  3180   	fcall	_sleep
  3578                           
  3579                           ;main.c: 84: strcpy(nrf24l01TXTopic, "ADC3");
  3580  004E  3096               	movlw	low (STR_2| (0+32768))
  3581  004F  0020               	movlb	0	; select bank0
  3582  0050  00A1               	movwf	strcpy@from
  3583  0051  3086               	movlw	high (STR_2| (0+32768))
  3584  0052  00A2               	movwf	strcpy@from+1
  3585  0053  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3586  0054  3185  25EF  3180   	fcall	_strcpy
  3587                           
  3588                           ;main.c: 85: utoa(nrf24l01TXValue, getADCValue(3, 2505), 10);
  3589  0057  3000               	movlw	0
  3590  0058  0020               	movlb	0	; select bank0
  3591  0059  00B2               	movwf	getADCValue@divider+3
  3592  005A  3000               	movlw	0
  3593  005B  00B1               	movwf	getADCValue@divider+2
  3594  005C  3009               	movlw	9
  3595  005D  00B0               	movwf	getADCValue@divider+1
  3596  005E  30C9               	movlw	201
  3597  005F  00AF               	movwf	getADCValue@divider
  3598  0060  3003               	movlw	3
  3599  0061  3182  2247  3180   	fcall	_getADCValue
  3600  0064  0020               	movlb	0	; select bank0
  3601  0065  0830               	movf	?_getADCValue+1,w
  3602  0066  00BE               	movwf	utoa@val+1
  3603  0067  082F               	movf	?_getADCValue,w
  3604  0068  00BD               	movwf	utoa@val
  3605  0069  300A               	movlw	10
  3606  006A  00BF               	movwf	utoa@base
  3607  006B  3000               	movlw	0
  3608  006C  00C0               	movwf	utoa@base+1
  3609  006D  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3610  006E  3183  234F  3180   	fcall	_utoa
  3611                           
  3612                           ;main.c: 86: nrf24l01TXPacketData.byte = 0x00;
  3613  0071  0020               	movlb	0	; select bank0
  3614  0072  01CC               	clrf	_nrf24l01TXPacketData
  3615                           
  3616                           ;main.c: 87: nrf24l01TXPacketData.ACKRequest = 0;
  3617  0073  104C               	bcf	_nrf24l01TXPacketData,0
  3618                           
  3619                           ;main.c: 88: nrf24l01SendString();
  3620  0074  3181  2100  3180   	fcall	_nrf24l01SendString
  3621                           
  3622                           ;main.c: 89: sleep();
  3623  0077  3186  265F  3180   	fcall	_sleep
  3624                           
  3625                           ;main.c: 91: strcpy(nrf24l01TXTopic, "ADC7");
  3626  007A  309B               	movlw	low (STR_3| (0+32768))
  3627  007B  0020               	movlb	0	; select bank0
  3628  007C  00A1               	movwf	strcpy@from
  3629  007D  3086               	movlw	high (STR_3| (0+32768))
  3630  007E  00A2               	movwf	strcpy@from+1
  3631  007F  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3632  0080  3185  25EF  3180   	fcall	_strcpy
  3633                           
  3634                           ;main.c: 92: utoa(nrf24l01TXValue, getADCValue(7, 2500), 10);
  3635  0083  3000               	movlw	0
  3636  0084  0020               	movlb	0	; select bank0
  3637  0085  00B2               	movwf	getADCValue@divider+3
  3638  0086  3000               	movlw	0
  3639  0087  00B1               	movwf	getADCValue@divider+2
  3640  0088  3009               	movlw	9
  3641  0089  00B0               	movwf	getADCValue@divider+1
  3642  008A  30C4               	movlw	196
  3643  008B  00AF               	movwf	getADCValue@divider
  3644  008C  3007               	movlw	7
  3645  008D  3182  2247  3180   	fcall	_getADCValue
  3646  0090  0020               	movlb	0	; select bank0
  3647  0091  0830               	movf	?_getADCValue+1,w
  3648  0092  00BE               	movwf	utoa@val+1
  3649  0093  082F               	movf	?_getADCValue,w
  3650  0094  00BD               	movwf	utoa@val
  3651  0095  300A               	movlw	10
  3652  0096  00BF               	movwf	utoa@base
  3653  0097  3000               	movlw	0
  3654  0098  00C0               	movwf	utoa@base+1
  3655  0099  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3656  009A  3183  234F  3180   	fcall	_utoa
  3657                           
  3658                           ;main.c: 93: nrf24l01TXPacketData.byte = 0x00;
  3659  009D  0020               	movlb	0	; select bank0
  3660  009E  01CC               	clrf	_nrf24l01TXPacketData
  3661                           
  3662                           ;main.c: 94: nrf24l01TXPacketData.ACKRequest = 0;
  3663  009F  104C               	bcf	_nrf24l01TXPacketData,0
  3664                           
  3665                           ;main.c: 95: nrf24l01SendString();
  3666  00A0  3181  2100  3180   	fcall	_nrf24l01SendString
  3667                           
  3668                           ;main.c: 96: sleep();
  3669  00A3  3186  265F  3180   	fcall	_sleep
  3670                           
  3671                           ;main.c: 98: strcpy(nrf24l01TXTopic, "ADC29");
  3672  00A6  3085               	movlw	low (STR_4| (0+32768))
  3673  00A7  0020               	movlb	0	; select bank0
  3674  00A8  00A1               	movwf	strcpy@from
  3675  00A9  3086               	movlw	high (STR_4| (0+32768))
  3676  00AA  00A2               	movwf	strcpy@from+1
  3677  00AB  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3678  00AC  3185  25EF  3180   	fcall	_strcpy
  3679                           
  3680                           ;main.c: 99: utoa(nrf24l01TXValue, getADCValue(29, 208900) - 40, 10);
  3681  00AF  3000               	movlw	0
  3682  00B0  0020               	movlb	0	; select bank0
  3683  00B1  00B2               	movwf	getADCValue@divider+3
  3684  00B2  3003               	movlw	3
  3685  00B3  00B1               	movwf	getADCValue@divider+2
  3686  00B4  3030               	movlw	48
  3687  00B5  00B0               	movwf	getADCValue@divider+1
  3688  00B6  3004               	movlw	4
  3689  00B7  00AF               	movwf	getADCValue@divider
  3690  00B8  301D               	movlw	29
  3691  00B9  3182  2247  3180   	fcall	_getADCValue
  3692  00BC  0020               	movlb	0	; select bank0
  3693  00BD  082F               	movf	?_getADCValue,w
  3694  00BE  3ED8               	addlw	216
  3695  00BF  00BD               	movwf	utoa@val
  3696  00C0  30FF               	movlw	255
  3697  00C1  3D30               	addwfc	?_getADCValue+1,w
  3698  00C2  00BE               	movwf	utoa@val+1
  3699  00C3  300A               	movlw	10
  3700  00C4  00BF               	movwf	utoa@base
  3701  00C5  3000               	movlw	0
  3702  00C6  00C0               	movwf	utoa@base+1
  3703  00C7  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3704  00C8  3183  234F  3180   	fcall	_utoa
  3705                           
  3706                           ;main.c: 100: nrf24l01TXPacketData.byte = 0x00;
  3707  00CB  0020               	movlb	0	; select bank0
  3708  00CC  01CC               	clrf	_nrf24l01TXPacketData
  3709                           
  3710                           ;main.c: 101: nrf24l01TXPacketData.ACKRequest = 0;
  3711  00CD  104C               	bcf	_nrf24l01TXPacketData,0
  3712                           
  3713                           ;main.c: 102: nrf24l01SendString();
  3714  00CE  3181  2100  3180   	fcall	_nrf24l01SendString
  3715                           
  3716                           ;main.c: 103: sleep();
  3717  00D1  3186  265F  3180   	fcall	_sleep
  3718                           
  3719                           ;main.c: 105: strcpy(nrf24l01TXTopic, "ADC31");
  3720  00D4  307F               	movlw	low (STR_5| (0+32768))
  3721  00D5  0020               	movlb	0	; select bank0
  3722  00D6  00A1               	movwf	strcpy@from
  3723  00D7  3086               	movlw	high (STR_5| (0+32768))
  3724  00D8  00A2               	movwf	strcpy@from+1
  3725  00D9  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3726  00DA  3185  25EF  3180   	fcall	_strcpy
  3727                           
  3728                           ;main.c: 106: utoa(nrf24l01TXValue, getADCValue(31, 2475), 10);
  3729  00DD  3000               	movlw	0
  3730  00DE  0020               	movlb	0	; select bank0
  3731  00DF  00B2               	movwf	getADCValue@divider+3
  3732  00E0  3000               	movlw	0
  3733  00E1  00B1               	movwf	getADCValue@divider+2
  3734  00E2  3009               	movlw	9
  3735  00E3  00B0               	movwf	getADCValue@divider+1
  3736  00E4  30AB               	movlw	171
  3737  00E5  00AF               	movwf	getADCValue@divider
  3738  00E6  301F               	movlw	31
  3739  00E7  3182  2247  3180   	fcall	_getADCValue
  3740  00EA  0020               	movlb	0	; select bank0
  3741  00EB  0830               	movf	?_getADCValue+1,w
  3742  00EC  00BE               	movwf	utoa@val+1
  3743  00ED  082F               	movf	?_getADCValue,w
  3744  00EE  00BD               	movwf	utoa@val
  3745  00EF  300A               	movlw	10
  3746  00F0  00BF               	movwf	utoa@base
  3747  00F1  3000               	movlw	0
  3748  00F2  00C0               	movwf	utoa@base+1
  3749  00F3  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3750  00F4  3183  234F  3180   	fcall	_utoa
  3751                           
  3752                           ;main.c: 107: nrf24l01TXPacketData.byte = 0x00;
  3753  00F7  0020               	movlb	0	; select bank0
  3754  00F8  01CC               	clrf	_nrf24l01TXPacketData
  3755                           
  3756                           ;main.c: 108: nrf24l01TXPacketData.ACKRequest = 0;
  3757  00F9  104C               	bcf	_nrf24l01TXPacketData,0
  3758                           
  3759                           ;main.c: 109: nrf24l01SendString();
  3760  00FA  3181  2100  3180   	fcall	_nrf24l01SendString
  3761                           
  3762                           ;main.c: 110: sleep();
  3763  00FD  3186  265F         	fcall	_sleep
  3764  00FF  0008               	return
  3765  0100                     __end_of_loop:	
  3766                           
  3767                           	psect	text5
  3768  034F                     __ptext5:	
  3769 ;; *************** function _utoa *****************
  3770 ;; Defined at:
  3771 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  buf             1    wreg     PTR unsigned char 
  3774 ;;		 -> nrf24l01TXValue(8), 
  3775 ;;  val             2   29[BANK0 ] unsigned int 
  3776 ;;  base            2   31[BANK0 ] int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  buf             1   37[BANK0 ] PTR unsigned char 
  3779 ;;		 -> nrf24l01TXValue(8), 
  3780 ;;  v               2   34[BANK0 ] unsigned int 
  3781 ;;  c               1   36[BANK0 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      PTR unsigned char 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;Total ram usage:        9 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    7
  3798 ;; This function calls:
  3799 ;;		___lwdiv
  3800 ;;		___lwmod
  3801 ;; This function is called by:
  3802 ;;		_loop
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _utoa
  3809  034F                     _utoa:	
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3813                           ;utoa@buf stored from wreg
  3814  034F  0020               	movlb	0	; select bank0
  3815  0350  00C5               	movwf	utoa@buf
  3816  0351  083E               	movf	utoa@val+1,w
  3817  0352  00C3               	movwf	utoa@v+1
  3818  0353  083D               	movf	utoa@val,w
  3819  0354  00C2               	movwf	utoa@v
  3820  0355                     l2629:	
  3821  0355  0840               	movf	utoa@base+1,w
  3822  0356  00A2               	movwf	___lwdiv@divisor+1
  3823  0357  083F               	movf	utoa@base,w
  3824  0358  00A1               	movwf	___lwdiv@divisor
  3825  0359  0843               	movf	utoa@v+1,w
  3826  035A  00A4               	movwf	___lwdiv@dividend+1
  3827  035B  0842               	movf	utoa@v,w
  3828  035C  00A3               	movwf	___lwdiv@dividend
  3829  035D  3184  2476  3183   	fcall	___lwdiv
  3830  0360  0020               	movlb	0	; select bank0
  3831  0361  0822               	movf	?___lwdiv+1,w
  3832  0362  00C3               	movwf	utoa@v+1
  3833  0363  0821               	movf	?___lwdiv,w
  3834  0364  00C2               	movwf	utoa@v
  3835  0365  3001               	movlw	1
  3836  0366  00C1               	movwf	??_utoa
  3837  0367  0841               	movf	??_utoa,w
  3838  0368  07C5               	addwf	utoa@buf,f
  3839  0369  0842               	movf	utoa@v,w
  3840  036A  0443               	iorwf	utoa@v+1,w
  3841  036B  1D03               	btfss	3,2
  3842  036C  2B55               	goto	l2629
  3843  036D  0845               	movf	utoa@buf,w
  3844  036E  0086               	movwf	6
  3845  036F  0187               	clrf	7
  3846  0370  0181               	clrf	1
  3847  0371  3001               	movlw	1
  3848  0372  02C5               	subwf	utoa@buf,f
  3849  0373                     l2639:	
  3850  0373  0840               	movf	utoa@base+1,w
  3851  0374  00A2               	movwf	___lwmod@divisor+1
  3852  0375  083F               	movf	utoa@base,w
  3853  0376  00A1               	movwf	___lwmod@divisor
  3854  0377  083E               	movf	utoa@val+1,w
  3855  0378  00A4               	movwf	___lwmod@dividend+1
  3856  0379  083D               	movf	utoa@val,w
  3857  037A  00A3               	movwf	___lwmod@dividend
  3858  037B  3185  2539  3183   	fcall	___lwmod
  3859  037E  0020               	movlb	0	; select bank0
  3860  037F  0821               	movf	?___lwmod,w
  3861  0380  00C1               	movwf	??_utoa
  3862  0381  0841               	movf	??_utoa,w
  3863  0382  00C4               	movwf	utoa@c
  3864  0383  0840               	movf	utoa@base+1,w
  3865  0384  00A2               	movwf	___lwdiv@divisor+1
  3866  0385  083F               	movf	utoa@base,w
  3867  0386  00A1               	movwf	___lwdiv@divisor
  3868  0387  083E               	movf	utoa@val+1,w
  3869  0388  00A4               	movwf	___lwdiv@dividend+1
  3870  0389  083D               	movf	utoa@val,w
  3871  038A  00A3               	movwf	___lwdiv@dividend
  3872  038B  3184  2476  3183   	fcall	___lwdiv
  3873  038E  0020               	movlb	0	; select bank0
  3874  038F  0822               	movf	?___lwdiv+1,w
  3875  0390  00BE               	movwf	utoa@val+1
  3876  0391  0821               	movf	?___lwdiv,w
  3877  0392  00BD               	movwf	utoa@val
  3878  0393  300A               	movlw	10
  3879  0394  0244               	subwf	utoa@c,w
  3880  0395  1C03               	skipc
  3881  0396  2B9B               	goto	l871
  3882  0397  3007               	movlw	7
  3883  0398  00C1               	movwf	??_utoa
  3884  0399  0841               	movf	??_utoa,w
  3885  039A  07C4               	addwf	utoa@c,f
  3886  039B                     l871:	
  3887  039B  3030               	movlw	48
  3888  039C  00C1               	movwf	??_utoa
  3889  039D  0841               	movf	??_utoa,w
  3890  039E  07C4               	addwf	utoa@c,f
  3891  039F  0844               	movf	utoa@c,w
  3892  03A0  00C1               	movwf	??_utoa
  3893  03A1  0845               	movf	utoa@buf,w
  3894  03A2  0086               	movwf	6
  3895  03A3  0187               	clrf	7
  3896  03A4  0841               	movf	??_utoa,w
  3897  03A5  0081               	movwf	1
  3898  03A6  3001               	movlw	1
  3899  03A7  02C5               	subwf	utoa@buf,f
  3900  03A8  083D               	movf	utoa@val,w
  3901  03A9  043E               	iorwf	utoa@val+1,w
  3902  03AA  1D03               	btfss	3,2
  3903  03AB  2B73               	goto	l2639
  3904                           
  3905                           ;	Return value of _utoa is never used
  3906  03AC  3001               	movlw	1
  3907  03AD  00C1               	movwf	??_utoa
  3908  03AE  0841               	movf	??_utoa,w
  3909  03AF  07C5               	addwf	utoa@buf,f
  3910  03B0  0008               	return
  3911  03B1                     __end_of_utoa:	
  3912                           
  3913                           	psect	text6
  3914  0539                     __ptext6:	
  3915 ;; *************** function ___lwmod *****************
  3916 ;; Defined at:
  3917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  divisor         2    1[BANK0 ] unsigned int 
  3920 ;;  dividend        2    3[BANK0 ] unsigned int 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  counter         1    6[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    1[BANK0 ] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        6 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    6
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_utoa
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           
  3947                           ;psect for function ___lwmod
  3948  0539                     ___lwmod:	
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3952  0539  0020               	movlb	0	; select bank0
  3953  053A  0821               	movf	___lwmod@divisor,w
  3954  053B  0422               	iorwf	___lwmod@divisor+1,w
  3955  053C  1903               	btfsc	3,2
  3956  053D  2D61               	goto	l1953
  3957  053E  01A6               	clrf	___lwmod@counter
  3958  053F  0AA6               	incf	___lwmod@counter,f
  3959  0540                     l1943:	
  3960  0540  1BA2               	btfsc	___lwmod@divisor+1,7
  3961  0541  2D4C               	goto	l1945
  3962  0542  3001               	movlw	1
  3963  0543                     u915:	
  3964  0543  35A1               	lslf	___lwmod@divisor,f
  3965  0544  0DA2               	rlf	___lwmod@divisor+1,f
  3966  0545  0B89               	decfsz	9,f
  3967  0546  2D43               	goto	u915
  3968  0547  3001               	movlw	1
  3969  0548  00A5               	movwf	??___lwmod
  3970  0549  0825               	movf	??___lwmod,w
  3971  054A  07A6               	addwf	___lwmod@counter,f
  3972  054B  2D40               	goto	l1943
  3973  054C                     l1945:	
  3974  054C  0822               	movf	___lwmod@divisor+1,w
  3975  054D  0224               	subwf	___lwmod@dividend+1,w
  3976  054E  1D03               	skipz
  3977  054F  2D52               	goto	u935
  3978  0550  0821               	movf	___lwmod@divisor,w
  3979  0551  0223               	subwf	___lwmod@dividend,w
  3980  0552                     u935:	
  3981  0552  1C03               	skipc
  3982  0553  2D58               	goto	l1949
  3983  0554  0821               	movf	___lwmod@divisor,w
  3984  0555  02A3               	subwf	___lwmod@dividend,f
  3985  0556  0822               	movf	___lwmod@divisor+1,w
  3986  0557  3BA4               	subwfb	___lwmod@dividend+1,f
  3987  0558                     l1949:	
  3988  0558  3001               	movlw	1
  3989  0559                     u945:	
  3990  0559  36A2               	lsrf	___lwmod@divisor+1,f
  3991  055A  0CA1               	rrf	___lwmod@divisor,f
  3992  055B  0B89               	decfsz	9,f
  3993  055C  2D59               	goto	u945
  3994  055D  3001               	movlw	1
  3995  055E  02A6               	subwf	___lwmod@counter,f
  3996  055F  1D03               	btfss	3,2
  3997  0560  2D4C               	goto	l1945
  3998  0561                     l1953:	
  3999  0561  0824               	movf	___lwmod@dividend+1,w
  4000  0562  00A2               	movwf	?___lwmod+1
  4001  0563  0823               	movf	___lwmod@dividend,w
  4002  0564  00A1               	movwf	?___lwmod
  4003  0565  0008               	return
  4004  0566                     __end_of___lwmod:	
  4005                           
  4006                           	psect	text7
  4007  0476                     __ptext7:	
  4008 ;; *************** function ___lwdiv *****************
  4009 ;; Defined at:
  4010 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  divisor         2    1[BANK0 ] unsigned int 
  4013 ;;  dividend        2    3[BANK0 ] unsigned int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  quotient        2    6[BANK0 ] unsigned int 
  4016 ;;  counter         1    8[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    1[BANK0 ] unsigned int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        8 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    6
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_utoa
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function ___lwdiv
  4042  0476                     ___lwdiv:	
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4046  0476  0020               	movlb	0	; select bank0
  4047  0477  01A6               	clrf	___lwdiv@quotient
  4048  0478  01A7               	clrf	___lwdiv@quotient+1
  4049  0479  0821               	movf	___lwdiv@divisor,w
  4050  047A  0422               	iorwf	___lwdiv@divisor+1,w
  4051  047B  1903               	btfsc	3,2
  4052  047C  2CA6               	goto	l1931
  4053  047D  01A8               	clrf	___lwdiv@counter
  4054  047E  0AA8               	incf	___lwdiv@counter,f
  4055  047F                     l1919:	
  4056  047F  1BA2               	btfsc	___lwdiv@divisor+1,7
  4057  0480  2C8B               	goto	l1921
  4058  0481  3001               	movlw	1
  4059  0482                     u845:	
  4060  0482  35A1               	lslf	___lwdiv@divisor,f
  4061  0483  0DA2               	rlf	___lwdiv@divisor+1,f
  4062  0484  0B89               	decfsz	9,f
  4063  0485  2C82               	goto	u845
  4064  0486  3001               	movlw	1
  4065  0487  00A5               	movwf	??___lwdiv
  4066  0488  0825               	movf	??___lwdiv,w
  4067  0489  07A8               	addwf	___lwdiv@counter,f
  4068  048A  2C7F               	goto	l1919
  4069  048B                     l1921:	
  4070  048B  3001               	movlw	1
  4071  048C                     u865:	
  4072  048C  35A6               	lslf	___lwdiv@quotient,f
  4073  048D  0DA7               	rlf	___lwdiv@quotient+1,f
  4074  048E  0B89               	decfsz	9,f
  4075  048F  2C8C               	goto	u865
  4076  0490  0822               	movf	___lwdiv@divisor+1,w
  4077  0491  0224               	subwf	___lwdiv@dividend+1,w
  4078  0492  1D03               	skipz
  4079  0493  2C96               	goto	u875
  4080  0494  0821               	movf	___lwdiv@divisor,w
  4081  0495  0223               	subwf	___lwdiv@dividend,w
  4082  0496                     u875:	
  4083  0496  1C03               	skipc
  4084  0497  2C9D               	goto	l1927
  4085  0498  0821               	movf	___lwdiv@divisor,w
  4086  0499  02A3               	subwf	___lwdiv@dividend,f
  4087  049A  0822               	movf	___lwdiv@divisor+1,w
  4088  049B  3BA4               	subwfb	___lwdiv@dividend+1,f
  4089  049C  1426               	bsf	___lwdiv@quotient,0
  4090  049D                     l1927:	
  4091  049D  3001               	movlw	1
  4092  049E                     u885:	
  4093  049E  36A2               	lsrf	___lwdiv@divisor+1,f
  4094  049F  0CA1               	rrf	___lwdiv@divisor,f
  4095  04A0  0B89               	decfsz	9,f
  4096  04A1  2C9E               	goto	u885
  4097  04A2  3001               	movlw	1
  4098  04A3  02A8               	subwf	___lwdiv@counter,f
  4099  04A4  1D03               	btfss	3,2
  4100  04A5  2C8B               	goto	l1921
  4101  04A6                     l1931:	
  4102  04A6  0827               	movf	___lwdiv@quotient+1,w
  4103  04A7  00A2               	movwf	?___lwdiv+1
  4104  04A8  0826               	movf	___lwdiv@quotient,w
  4105  04A9  00A1               	movwf	?___lwdiv
  4106  04AA  0008               	return
  4107  04AB                     __end_of___lwdiv:	
  4108                           
  4109                           	psect	text8
  4110  05EF                     __ptext8:	
  4111 ;; *************** function _strcpy *****************
  4112 ;; Defined at:
  4113 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  to              1    wreg     PTR unsigned char 
  4116 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4117 ;;		 -> nrf24l01TXTopic(8), 
  4118 ;;  from            2    1[BANK0 ] PTR const unsigned char 
  4119 ;;		 -> STR_7(5), STR_6(14), nrf24l01TXName(16), STR_5(6), 
  4120 ;;		 -> STR_4(6), STR_3(5), STR_2(5), nrf24l01TXValue(8), 
  4121 ;;		 -> STR_1(4), nrf24l01TXTopic(8), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  to              1    5[BANK0 ] PTR unsigned char 
  4124 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4125 ;;		 -> nrf24l01TXTopic(8), 
  4126 ;;  cp              1    4[BANK0 ] PTR unsigned char 
  4127 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4128 ;;		 -> nrf24l01TXTopic(8), 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      PTR unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        5 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    6
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_loop
  4149 ;;		_main
  4150 ;;		_nrf24l01ReceiveString
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _strcpy
  4156  05EF                     _strcpy:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4160                           ;strcpy@to stored from wreg
  4161  05EF  0020               	movlb	0	; select bank0
  4162  05F0  00A5               	movwf	strcpy@to
  4163  05F1  0825               	movf	strcpy@to,w
  4164  05F2  00A3               	movwf	??_strcpy
  4165  05F3  0823               	movf	??_strcpy,w
  4166  05F4  00A4               	movwf	strcpy@cp
  4167  05F5                     l2625:	
  4168  05F5  0824               	movf	strcpy@cp,w
  4169  05F6  0086               	movwf	6
  4170  05F7  0187               	clrf	7
  4171  05F8  0821               	movf	strcpy@from,w
  4172  05F9  0084               	movwf	4
  4173  05FA  0822               	movf	strcpy@from+1,w
  4174  05FB  0085               	movwf	5
  4175  05FC  0800               	movf	0,w	;code access
  4176  05FD  3FC0               	movwi [0]fsr1
  4177  05FE  0889               	movf	9,f
  4178  05FF  1903               	btfsc	3,2
  4179  0600  0008               	return
  4180  0601  3001               	movlw	1
  4181  0602  00A3               	movwf	??_strcpy
  4182  0603  0823               	movf	??_strcpy,w
  4183  0604  07A4               	addwf	strcpy@cp,f
  4184  0605  3001               	movlw	1
  4185  0606  07A1               	addwf	strcpy@from,f
  4186  0607  3000               	movlw	0
  4187  0608  3DA2               	addwfc	strcpy@from+1,f
  4188  0609  2DF5               	goto	l2625
  4189  060A                     __end_of_strcpy:	
  4190                           ;	Return value of _strcpy is never used
  4191                           
  4192                           
  4193                           	psect	text9
  4194  065F                     __ptext9:	
  4195 ;; *************** function _sleep *****************
  4196 ;; Defined at:
  4197 ;;		line 46 in file "main.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		None
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    6
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_loop
  4222 ;;		_main
  4223 ;;		_checkRxData
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _sleep
  4229  065F                     _sleep:	
  4230  065F                     l215:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _sleep: []
  4233                           ;main.c: 47: while (1){
  4234                           
  4235  065F  0063               	sleep	;# 
  4236                           
  4237                           ;main.c: 50: __nop();
  4238  0660  0000               	nop
  4239                           
  4240                           ;main.c: 51: __nop();
  4241  0661  0000               	nop
  4242                           
  4243                           ;main.c: 53: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4244  0662  0020               	movlb	0	; select bank0
  4245  0663  1A03               	btfsc	3,4	;volatile
  4246  0664  2E5F               	goto	l215
  4247  0665  1D83               	btfss	3,3	;volatile
  4248  0666  0008               	return
  4249  0667  2E5F               	goto	l215
  4250  0668                     __end_of_sleep:	
  4251                           ;main.c: 54: return;
  4252                           
  4253                           
  4254                           	psect	text10
  4255  0100                     __ptext10:	
  4256 ;; *************** function _nrf24l01SendString *****************
  4257 ;; Defined at:
  4258 ;;		line 232 in file "nrf24l01.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  i               1    9[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;Total ram usage:        3 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   10
  4279 ;; This function calls:
  4280 ;;		_enableInterrupts
  4281 ;;		_nrf24l01CEHigh
  4282 ;;		_nrf24l01CELow
  4283 ;;		_nrf24l01SPIEnd
  4284 ;;		_nrf24l01SPISend
  4285 ;;		_nrf24l01SPIStart
  4286 ;;		_nrf24l01SetRXMode
  4287 ;; This function is called by:
  4288 ;;		_loop
  4289 ;;		_main
  4290 ;;		_nrf24l01ReceiveString
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _nrf24l01SendString
  4296  0100                     _nrf24l01SendString:	
  4297                           
  4298                           ;nrf24l01.c: 235: unsigned char i;;nrf24l01.c: 237: if (counter){
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _nrf24l01SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4302  0100  0020               	movlb	0	; select bank0
  4303  0101  0847               	movf	_counter,w
  4304  0102  0448               	iorwf	_counter+1,w
  4305  0103  1903               	btfsc	3,2
  4306  0104  2909               	goto	l334
  4307                           
  4308                           ;nrf24l01.c: 238: counter--;
  4309  0105  3001               	movlw	1
  4310  0106  02C7               	subwf	_counter,f
  4311  0107  3000               	movlw	0
  4312  0108  3BC8               	subwfb	_counter+1,f
  4313  0109                     l334:	
  4314                           ;nrf24l01.c: 239: };nrf24l01.c: 242: RESEND:
  4315                           
  4316                           
  4317                           ;nrf24l01.c: 253: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4318  0109  3002               	movlw	2
  4319  010A  0020               	movlb	0	; select bank0
  4320  010B  00A8               	movwf	??_nrf24l01SendString+1
  4321  010C  3004               	movlw	4
  4322  010D  00A7               	movwf	??_nrf24l01SendString
  4323  010E  30BA               	movlw	186
  4324  010F                     u1597:	
  4325  010F  0B89               	decfsz	9,f
  4326  0110  290F               	goto	u1597
  4327  0111  0BA7               	decfsz	??_nrf24l01SendString,f
  4328  0112  290F               	goto	u1597
  4329  0113  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4330  0114  290F               	goto	u1597
  4331  0115  0000               	nop
  4332                           
  4333                           ;nrf24l01.c: 254: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4334  0116  3002               	movlw	2
  4335  0117  0020               	movlb	0	; select bank0
  4336  0118  00A8               	movwf	??_nrf24l01SendString+1
  4337  0119  3004               	movlw	4
  4338  011A  00A7               	movwf	??_nrf24l01SendString
  4339  011B  30BA               	movlw	186
  4340  011C                     u1607:	
  4341  011C  0B89               	decfsz	9,f
  4342  011D  291C               	goto	u1607
  4343  011E  0BA7               	decfsz	??_nrf24l01SendString,f
  4344  011F  291C               	goto	u1607
  4345  0120  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4346  0121  291C               	goto	u1607
  4347  0122  0000               	nop
  4348                           
  4349                           ;nrf24l01.c: 255: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4350  0123  3002               	movlw	2
  4351  0124  0020               	movlb	0	; select bank0
  4352  0125  00A8               	movwf	??_nrf24l01SendString+1
  4353  0126  3004               	movlw	4
  4354  0127  00A7               	movwf	??_nrf24l01SendString
  4355  0128  30BA               	movlw	186
  4356  0129                     u1617:	
  4357  0129  0B89               	decfsz	9,f
  4358  012A  2929               	goto	u1617
  4359  012B  0BA7               	decfsz	??_nrf24l01SendString,f
  4360  012C  2929               	goto	u1617
  4361  012D  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4362  012E  2929               	goto	u1617
  4363  012F  0000               	nop
  4364                           
  4365                           ;nrf24l01.c: 260: nrf24l01.TXBusy = 1;
  4366  0130  0020               	movlb	0	; select bank0
  4367  0131  14CB               	bsf	_nrf24l01,1	;volatile
  4368                           
  4369                           ;nrf24l01.c: 263: enableInterrupts(0);
  4370  0132  3000               	movlw	0
  4371  0133  3186  2670  3181   	fcall	_enableInterrupts
  4372                           
  4373                           ;nrf24l01.c: 266: nrf24l01SetRXMode(0);
  4374  0136  3000               	movlw	0
  4375  0137  3184  2404  3181   	fcall	_nrf24l01SetRXMode
  4376                           
  4377                           ;nrf24l01.c: 269: nrf24l01SPIStart();
  4378  013A  3186  2668  3181   	fcall	_nrf24l01SPIStart
  4379                           
  4380                           ;nrf24l01.c: 272: nrf24l01SPISend(0b10110000);
  4381  013D  30B0               	movlw	176
  4382  013E  3186  2646  3181   	fcall	_nrf24l01SPISend
  4383                           
  4384                           ;nrf24l01.c: 277: for (i = 0; (nrf24l01TXName[i] != '\0') && (i < sizeof(nrf24l01TXName)
      +                          ); i++){
  4385  0141  0020               	movlb	0	; select bank0
  4386  0142  01A9               	clrf	nrf24l01SendString@i
  4387  0143  2951               	goto	l2061
  4388  0144                     l2057:	
  4389                           
  4390                           ;nrf24l01.c: 278: nrf24l01SPISend(nrf24l01TXName[i]);
  4391  0144  0829               	movf	nrf24l01SendString@i,w
  4392  0145  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4393  0146  0086               	movwf	6
  4394  0147  0187               	clrf	7
  4395  0148  0801               	movf	1,w
  4396  0149  3186  2646  3181   	fcall	_nrf24l01SPISend
  4397  014C  3001               	movlw	1
  4398  014D  0020               	movlb	0	; select bank0
  4399  014E  00A7               	movwf	??_nrf24l01SendString
  4400  014F  0827               	movf	??_nrf24l01SendString,w
  4401  0150  07A9               	addwf	nrf24l01SendString@i,f
  4402  0151                     l2061:	
  4403  0151  0829               	movf	nrf24l01SendString@i,w
  4404  0152  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4405  0153  0086               	movwf	6
  4406  0154  0187               	clrf	7
  4407  0155  0801               	movf	1,w
  4408  0156  1903               	btfsc	3,2
  4409  0157  295C               	goto	l2065
  4410  0158  3010               	movlw	16
  4411  0159  0229               	subwf	nrf24l01SendString@i,w
  4412  015A  1C03               	skipc
  4413  015B  2944               	goto	l2057
  4414  015C                     l2065:	
  4415                           
  4416                           ;nrf24l01.c: 279: };nrf24l01.c: 282: nrf24l01SPISend('/');
  4417  015C  302F               	movlw	47
  4418  015D  3186  2646  3181   	fcall	_nrf24l01SPISend
  4419                           
  4420                           ;nrf24l01.c: 285: for (i = 0; (nrf24l01TXTopic[i] != '\0') && (i < sizeof(nrf24l01TXTopi
      +                          c)); i++){
  4421  0160  0020               	movlb	0	; select bank0
  4422  0161  01A9               	clrf	nrf24l01SendString@i
  4423  0162  2970               	goto	l2073
  4424  0163                     l2069:	
  4425                           
  4426                           ;nrf24l01.c: 286: nrf24l01SPISend(nrf24l01TXTopic[i]);
  4427  0163  0829               	movf	nrf24l01SendString@i,w
  4428  0164  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4429  0165  0086               	movwf	6
  4430  0166  0187               	clrf	7
  4431  0167  0801               	movf	1,w
  4432  0168  3186  2646  3181   	fcall	_nrf24l01SPISend
  4433  016B  3001               	movlw	1
  4434  016C  0020               	movlb	0	; select bank0
  4435  016D  00A7               	movwf	??_nrf24l01SendString
  4436  016E  0827               	movf	??_nrf24l01SendString,w
  4437  016F  07A9               	addwf	nrf24l01SendString@i,f
  4438  0170                     l2073:	
  4439  0170  0829               	movf	nrf24l01SendString@i,w
  4440  0171  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4441  0172  0086               	movwf	6
  4442  0173  0187               	clrf	7
  4443  0174  0801               	movf	1,w
  4444  0175  1903               	btfsc	3,2
  4445  0176  297B               	goto	l2077
  4446  0177  3008               	movlw	8
  4447  0178  0229               	subwf	nrf24l01SendString@i,w
  4448  0179  1C03               	skipc
  4449  017A  2963               	goto	l2069
  4450  017B                     l2077:	
  4451                           
  4452                           ;nrf24l01.c: 287: };nrf24l01.c: 290: nrf24l01SPISend('/');
  4453  017B  302F               	movlw	47
  4454  017C  3186  2646  3181   	fcall	_nrf24l01SPISend
  4455                           
  4456                           ;nrf24l01.c: 293: for (i = 0; (nrf24l01TXValue[i] != '\0') && (i < sizeof(nrf24l01TXValu
      +                          e)); i++){
  4457  017F  0020               	movlb	0	; select bank0
  4458  0180  01A9               	clrf	nrf24l01SendString@i
  4459  0181  298F               	goto	l2085
  4460  0182                     l2081:	
  4461                           
  4462                           ;nrf24l01.c: 294: nrf24l01SPISend(nrf24l01TXValue[i]);
  4463  0182  0829               	movf	nrf24l01SendString@i,w
  4464  0183  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4465  0184  0086               	movwf	6
  4466  0185  0187               	clrf	7
  4467  0186  0801               	movf	1,w
  4468  0187  3186  2646  3181   	fcall	_nrf24l01SPISend
  4469  018A  3001               	movlw	1
  4470  018B  0020               	movlb	0	; select bank0
  4471  018C  00A7               	movwf	??_nrf24l01SendString
  4472  018D  0827               	movf	??_nrf24l01SendString,w
  4473  018E  07A9               	addwf	nrf24l01SendString@i,f
  4474  018F                     l2085:	
  4475  018F  0829               	movf	nrf24l01SendString@i,w
  4476  0190  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4477  0191  0086               	movwf	6
  4478  0192  0187               	clrf	7
  4479  0193  0801               	movf	1,w
  4480  0194  1903               	btfsc	3,2
  4481  0195  299A               	goto	l2089
  4482  0196  3008               	movlw	8
  4483  0197  0229               	subwf	nrf24l01SendString@i,w
  4484  0198  1C03               	skipc
  4485  0199  2982               	goto	l2081
  4486  019A                     l2089:	
  4487                           
  4488                           ;nrf24l01.c: 295: };nrf24l01.c: 298: nrf24l01SPIEnd();
  4489  019A  3186  2678  3181   	fcall	_nrf24l01SPIEnd
  4490                           
  4491                           ;nrf24l01.c: 301: nrf24l01CEHigh();
  4492  019D  3186  26B2  3181   	fcall	_nrf24l01CEHigh
  4493                           
  4494                           ;nrf24l01.c: 302: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4495  01A0  301A               	movlw	26
  4496  01A1                     u1627:	
  4497  01A1  0B89               	decfsz	9,f
  4498  01A2  29A1               	goto	u1627
  4499  01A3  3200               	nop2
  4500                           
  4501                           ;nrf24l01.c: 303: nrf24l01CELow();
  4502  01A4  3186  26AF  3181   	fcall	_nrf24l01CELow
  4503                           
  4504                           ;nrf24l01.c: 306: enableInterrupts(1);
  4505  01A7  3001               	movlw	1
  4506  01A8  3186  2670         	fcall	_enableInterrupts
  4507  01AA  0008               	return
  4508  01AB                     __end_of_nrf24l01SendString:	
  4509                           
  4510                           	psect	text11
  4511  0404                     __ptext11:	
  4512 ;; *************** function _nrf24l01SetRXMode *****************
  4513 ;; Defined at:
  4514 ;;		line 74 in file "nrf24l01.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  rxMode          1    wreg     unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  rxMode          1    6[BANK0 ] unsigned char 
  4519 ;;  config          1    5[BANK0 ] struct .
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;Total ram usage:        3 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    9
  4536 ;; This function calls:
  4537 ;;		_nrf24l01CEHigh
  4538 ;;		_nrf24l01CELow
  4539 ;;		_nrf24l01Send
  4540 ;; This function is called by:
  4541 ;;		_nrf24l01SendString
  4542 ;;		_checkRxData
  4543 ;;		_nrf24l01CheckACK
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _nrf24l01SetRXMode
  4549  0404                     _nrf24l01SetRXMode:	
  4550                           
  4551                           ;incstack = 0
  4552                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  4553                           ;nrf24l01SetRXMode@rxMode stored from wreg
  4554  0404  0020               	movlb	0	; select bank0
  4555  0405  00A6               	movwf	nrf24l01SetRXMode@rxMode
  4556                           
  4557                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  4558  0406  01A1               	clrf	nrf24l01Send@data
  4559  0407  3000               	movlw	0
  4560  0408  3185  25B1  3184   	fcall	_nrf24l01Send
  4561  040B  0020               	movlb	0	; select bank0
  4562  040C  00A4               	movwf	??_nrf24l01SetRXMode
  4563  040D  0824               	movf	??_nrf24l01SetRXMode,w
  4564  040E  00A5               	movwf	nrf24l01SetRXMode@config
  4565                           
  4566                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  4567  040F  0825               	movf	nrf24l01SetRXMode@config,w
  4568  0410  3901               	andlw	1
  4569  0411  0626               	xorwf	nrf24l01SetRXMode@rxMode,w
  4570  0412  1903               	skipnz
  4571  0413  2C38               	goto	l1869
  4572                           
  4573                           ;nrf24l01.c: 85: nrf24l01CELow();
  4574  0414  3186  26AF  3184   	fcall	_nrf24l01CELow
  4575                           
  4576                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4577  0417  30A0               	movlw	160
  4578  0418                     u1637:	
  4579  0418  3200               	nop2
  4580  0419  0B89               	decfsz	9,f
  4581  041A  2C18               	goto	u1637
  4582                           
  4583                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  4584  041B  0020               	movlb	0	; select bank0
  4585  041C  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4586  041D  3901               	andlw	1
  4587  041E  1025               	bcf	nrf24l01SetRXMode@config,0
  4588  041F  1D03               	skipz
  4589  0420  1425               	bsf	nrf24l01SetRXMode@config,0
  4590                           
  4591                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  4592  0421  0825               	movf	nrf24l01SetRXMode@config,w
  4593  0422  00A4               	movwf	??_nrf24l01SetRXMode
  4594  0423  0824               	movf	??_nrf24l01SetRXMode,w
  4595  0424  00A1               	movwf	nrf24l01Send@data
  4596  0425  3020               	movlw	32
  4597  0426  3185  25B1  3184   	fcall	_nrf24l01Send
  4598                           
  4599                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4600  0429  30A0               	movlw	160
  4601  042A                     u1647:	
  4602  042A  3200               	nop2
  4603  042B  0B89               	decfsz	9,f
  4604  042C  2C2A               	goto	u1647
  4605                           
  4606                           ;nrf24l01.c: 100: if (rxMode){
  4607  042D  0020               	movlb	0	; select bank0
  4608  042E  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4609  042F  1903               	btfsc	3,2
  4610  0430  2C38               	goto	l1869
  4611                           
  4612                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  4613  0431  3186  26B2  3184   	fcall	_nrf24l01CEHigh
  4614                           
  4615                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4616  0434  30A0               	movlw	160
  4617  0435                     u1657:	
  4618  0435  3200               	nop2
  4619  0436  0B89               	decfsz	9,f
  4620  0437  2C35               	goto	u1657
  4621  0438                     l1869:	
  4622                           
  4623                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  4624  0438  0020               	movlb	0	; select bank0
  4625  0439  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4626  043A  3901               	andlw	1
  4627  043B  11CB               	bcf	_nrf24l01,3	;volatile
  4628  043C  1D03               	skipz
  4629  043D  15CB               	bsf	_nrf24l01,3	;volatile
  4630  043E  0008               	return
  4631  043F                     __end_of_nrf24l01SetRXMode:	
  4632                           
  4633                           	psect	text12
  4634  05B1                     __ptext12:	
  4635 ;; *************** function _nrf24l01Send *****************
  4636 ;; Defined at:
  4637 ;;		line 19 in file "nrf24l01.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  command         1    wreg     unsigned char 
  4640 ;;  data            1    1[BANK0 ] unsigned char 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  command         1    3[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;Total ram usage:        3 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    8
  4659 ;; This function calls:
  4660 ;;		_enableInterrupts
  4661 ;;		_nrf24l01SPIEnd
  4662 ;;		_nrf24l01SPISend
  4663 ;;		_nrf24l01SPIStart
  4664 ;; This function is called by:
  4665 ;;		_nrf24l01SetRXMode
  4666 ;;		_nrf24l01InitRegisters
  4667 ;;		_nrf24l01ReceiveString
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _nrf24l01Send
  4673  05B1                     _nrf24l01Send:	
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  4677                           ;nrf24l01Send@command stored from wreg
  4678  05B1  0020               	movlb	0	; select bank0
  4679  05B2  00A3               	movwf	nrf24l01Send@command
  4680                           
  4681                           ;nrf24l01.c: 22: enableInterrupts(0);
  4682  05B3  3000               	movlw	0
  4683  05B4  3186  2670  3185   	fcall	_enableInterrupts
  4684                           
  4685                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  4686  05B7  3186  2668  3185   	fcall	_nrf24l01SPIStart
  4687                           
  4688                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  4689  05BA  0020               	movlb	0	; select bank0
  4690  05BB  0823               	movf	nrf24l01Send@command,w
  4691  05BC  3186  2646  3185   	fcall	_nrf24l01SPISend
  4692                           
  4693                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  4694  05BF  0020               	movlb	0	; select bank0
  4695  05C0  0821               	movf	nrf24l01Send@data,w
  4696  05C1  3186  2646  3185   	fcall	_nrf24l01SPISend
  4697  05C4  0020               	movlb	0	; select bank0
  4698  05C5  00A2               	movwf	??_nrf24l01Send
  4699  05C6  0822               	movf	??_nrf24l01Send,w
  4700  05C7  00A1               	movwf	nrf24l01Send@data
  4701                           
  4702                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  4703  05C8  3186  2678  3185   	fcall	_nrf24l01SPIEnd
  4704                           
  4705                           ;nrf24l01.c: 37: enableInterrupts(1);
  4706  05CB  3001               	movlw	1
  4707  05CC  3186  2670         	fcall	_enableInterrupts
  4708                           
  4709                           ;nrf24l01.c: 39: return data;
  4710  05CE  0020               	movlb	0	; select bank0
  4711  05CF  0821               	movf	nrf24l01Send@data,w
  4712  05D0  0008               	return
  4713  05D1                     __end_of_nrf24l01Send:	
  4714                           
  4715                           	psect	text13
  4716  0247                     __ptext13:	
  4717 ;; *************** function _getADCValue *****************
  4718 ;; Defined at:
  4719 ;;		line 21 in file "main.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  channel         1    wreg     unsigned char 
  4722 ;;  divider         4   15[BANK0 ] unsigned long 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  channel         1   23[BANK0 ] unsigned char 
  4725 ;;  adcSum          4   25[BANK0 ] unsigned long 
  4726 ;;  adcLoop         1   24[BANK0 ] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  4   15[BANK0 ] unsigned long 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4736 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;Total ram usage:       14 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    7
  4743 ;; This function calls:
  4744 ;;		___lldiv
  4745 ;;		___lmul
  4746 ;; This function is called by:
  4747 ;;		_loop
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _getADCValue
  4753  0247                     _getADCValue:	
  4754                           
  4755                           ;incstack = 0
  4756                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  4757                           ;getADCValue@channel stored from wreg
  4758  0247  0020               	movlb	0	; select bank0
  4759  0248  00B7               	movwf	getADCValue@channel
  4760                           
  4761                           ;main.c: 23: unsigned long adcSum = 0;
  4762  0249  3000               	movlw	0
  4763  024A  00BC               	movwf	getADCValue@adcSum+3
  4764  024B  3000               	movlw	0
  4765  024C  00BB               	movwf	getADCValue@adcSum+2
  4766  024D  3000               	movlw	0
  4767  024E  00BA               	movwf	getADCValue@adcSum+1
  4768  024F  3000               	movlw	0
  4769  0250  00B9               	movwf	getADCValue@adcSum
  4770                           
  4771                           ;main.c: 24: unsigned char adcLoop = 255;
  4772  0251  30FF               	movlw	255
  4773  0252  00B3               	movwf	??_getADCValue
  4774  0253  0833               	movf	??_getADCValue,w
  4775  0254  00B8               	movwf	getADCValue@adcLoop
  4776                           
  4777                           ;main.c: 26: ADCON0bits.CHS = channel;
  4778  0255  0837               	movf	getADCValue@channel,w
  4779  0256  00B3               	movwf	??_getADCValue
  4780  0257  0DB3               	rlf	??_getADCValue,f
  4781  0258  0DB3               	rlf	??_getADCValue,f
  4782  0259  0021               	movlb	1	; select bank1
  4783  025A  081D               	movf	29,w	;volatile
  4784  025B  0020               	movlb	0	; select bank0
  4785  025C  0633               	xorwf	??_getADCValue,w
  4786  025D  3903               	andlw	-253
  4787  025E  0633               	xorwf	??_getADCValue,w
  4788  025F  0021               	movlb	1	; select bank1
  4789  0260  009D               	movwf	29	;volatile
  4790                           
  4791                           ;main.c: 27: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4792  0261  30A0               	movlw	160
  4793  0262                     u1667:	
  4794  0262  3200               	nop2
  4795  0263  0B89               	decfsz	9,f
  4796  0264  2A62               	goto	u1667
  4797  0265                     l1991:	
  4798                           ;main.c: 29: while (--adcLoop){
  4799                           
  4800  0265  3001               	movlw	1
  4801  0266  0020               	movlb	0	; select bank0
  4802  0267  02B8               	subwf	getADCValue@adcLoop,f
  4803  0268  1903               	btfsc	3,2
  4804  0269  2A8F               	goto	l1993
  4805                           
  4806                           ;main.c: 31: ADCON0bits.ADGO = 1;
  4807  026A  0021               	movlb	1	; select bank1
  4808  026B  149D               	bsf	29,1	;volatile
  4809  026C                     l208:	
  4810                           ;main.c: 32: while (ADCON0bits.ADGO){
  4811                           
  4812  026C  0021               	movlb	1	; select bank1
  4813  026D  1C9D               	btfss	29,1	;volatile
  4814  026E  2A71               	goto	l1989
  4815                           
  4816                           ;main.c: 33: __nop();
  4817  026F  0000               	nop
  4818  0270  2A6C               	goto	l208
  4819  0271                     l1989:	
  4820                           
  4821                           ;main.c: 34: };main.c: 36: adcSum+= ADRESL;
  4822  0271  081B               	movf	27,w	;volatile
  4823  0272  0020               	movlb	0	; select bank0
  4824  0273  00B3               	movwf	??_getADCValue
  4825  0274  01B4               	clrf	??_getADCValue+1
  4826  0275  01B5               	clrf	??_getADCValue+2
  4827  0276  01B6               	clrf	??_getADCValue+3
  4828  0277  0833               	movf	??_getADCValue,w
  4829  0278  07B9               	addwf	getADCValue@adcSum,f
  4830  0279  0834               	movf	??_getADCValue+1,w
  4831  027A  3DBA               	addwfc	getADCValue@adcSum+1,f
  4832  027B  0835               	movf	??_getADCValue+2,w
  4833  027C  3DBB               	addwfc	getADCValue@adcSum+2,f
  4834  027D  0836               	movf	??_getADCValue+3,w
  4835  027E  3DBC               	addwfc	getADCValue@adcSum+3,f
  4836                           
  4837                           ;main.c: 37: adcSum+= (unsigned) (ADRESH << 8);
  4838  027F  0021               	movlb	1	; select bank1
  4839  0280  081C               	movf	28,w	;volatile
  4840  0281  0020               	movlb	0	; select bank0
  4841  0282  00B3               	movwf	??_getADCValue
  4842  0283  01B4               	clrf	??_getADCValue+1
  4843  0284  0833               	movf	??_getADCValue,w
  4844  0285  00B4               	movwf	??_getADCValue+1
  4845  0286  01B3               	clrf	??_getADCValue
  4846  0287  0833               	movf	??_getADCValue,w
  4847  0288  07B9               	addwf	getADCValue@adcSum,f
  4848  0289  0834               	movf	??_getADCValue+1,w
  4849  028A  3DBA               	addwfc	getADCValue@adcSum+1,f
  4850  028B  3000               	movlw	0
  4851  028C  3DBB               	addwfc	getADCValue@adcSum+2,f
  4852  028D  3DBC               	addwfc	getADCValue@adcSum+3,f
  4853  028E  2A65               	goto	l1991
  4854  028F                     l1993:	
  4855                           
  4856                           ;main.c: 38: };main.c: 40: adcSum*= 100;
  4857  028F  3000               	movlw	0
  4858  0290  00A4               	movwf	___lmul@multiplier+3
  4859  0291  3000               	movlw	0
  4860  0292  00A3               	movwf	___lmul@multiplier+2
  4861  0293  3000               	movlw	0
  4862  0294  00A2               	movwf	___lmul@multiplier+1
  4863  0295  3064               	movlw	100
  4864  0296  00A1               	movwf	___lmul@multiplier
  4865  0297  083C               	movf	getADCValue@adcSum+3,w
  4866  0298  00A8               	movwf	___lmul@multiplicand+3
  4867  0299  083B               	movf	getADCValue@adcSum+2,w
  4868  029A  00A7               	movwf	___lmul@multiplicand+2
  4869  029B  083A               	movf	getADCValue@adcSum+1,w
  4870  029C  00A6               	movwf	___lmul@multiplicand+1
  4871  029D  0839               	movf	getADCValue@adcSum,w
  4872  029E  00A5               	movwf	___lmul@multiplicand
  4873  029F  3184  24AB  3182   	fcall	___lmul
  4874  02A2  0020               	movlb	0	; select bank0
  4875  02A3  0824               	movf	?___lmul+3,w
  4876  02A4  00BC               	movwf	getADCValue@adcSum+3
  4877  02A5  0823               	movf	?___lmul+2,w
  4878  02A6  00BB               	movwf	getADCValue@adcSum+2
  4879  02A7  0822               	movf	?___lmul+1,w
  4880  02A8  00BA               	movwf	getADCValue@adcSum+1
  4881  02A9  0821               	movf	?___lmul,w
  4882  02AA  00B9               	movwf	getADCValue@adcSum
  4883                           
  4884                           ;main.c: 41: adcSum/= divider;
  4885  02AB  0832               	movf	getADCValue@divider+3,w
  4886  02AC  00A4               	movwf	___lldiv@divisor+3
  4887  02AD  0831               	movf	getADCValue@divider+2,w
  4888  02AE  00A3               	movwf	___lldiv@divisor+2
  4889  02AF  0830               	movf	getADCValue@divider+1,w
  4890  02B0  00A2               	movwf	___lldiv@divisor+1
  4891  02B1  082F               	movf	getADCValue@divider,w
  4892  02B2  00A1               	movwf	___lldiv@divisor
  4893  02B3  083C               	movf	getADCValue@adcSum+3,w
  4894  02B4  00A8               	movwf	___lldiv@dividend+3
  4895  02B5  083B               	movf	getADCValue@adcSum+2,w
  4896  02B6  00A7               	movwf	___lldiv@dividend+2
  4897  02B7  083A               	movf	getADCValue@adcSum+1,w
  4898  02B8  00A6               	movwf	___lldiv@dividend+1
  4899  02B9  0839               	movf	getADCValue@adcSum,w
  4900  02BA  00A5               	movwf	___lldiv@dividend
  4901  02BB  3183  23B1         	fcall	___lldiv
  4902  02BD  0020               	movlb	0	; select bank0
  4903  02BE  0824               	movf	?___lldiv+3,w
  4904  02BF  00BC               	movwf	getADCValue@adcSum+3
  4905  02C0  0823               	movf	?___lldiv+2,w
  4906  02C1  00BB               	movwf	getADCValue@adcSum+2
  4907  02C2  0822               	movf	?___lldiv+1,w
  4908  02C3  00BA               	movwf	getADCValue@adcSum+1
  4909  02C4  0821               	movf	?___lldiv,w
  4910  02C5  00B9               	movwf	getADCValue@adcSum
  4911                           
  4912                           ;main.c: 43: return adcSum;
  4913  02C6  083C               	movf	getADCValue@adcSum+3,w
  4914  02C7  00B2               	movwf	?_getADCValue+3
  4915  02C8  083B               	movf	getADCValue@adcSum+2,w
  4916  02C9  00B1               	movwf	?_getADCValue+2
  4917  02CA  083A               	movf	getADCValue@adcSum+1,w
  4918  02CB  00B0               	movwf	?_getADCValue+1
  4919  02CC  0839               	movf	getADCValue@adcSum,w
  4920  02CD  00AF               	movwf	?_getADCValue
  4921  02CE  0008               	return
  4922  02CF                     __end_of_getADCValue:	
  4923                           
  4924                           	psect	text14
  4925  04AB                     __ptext14:	
  4926 ;; *************** function ___lmul *****************
  4927 ;; Defined at:
  4928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  multiplier      4    1[BANK0 ] unsigned long 
  4931 ;;  multiplicand    4    5[BANK0 ] unsigned long 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  product         4    9[BANK0 ] unsigned long 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  4    1[BANK0 ] unsigned long 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:       12 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    6
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_getADCValue
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function ___lmul
  4959  04AB                     ___lmul:	
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4963  04AB  3000               	movlw	0
  4964  04AC  0020               	movlb	0	; select bank0
  4965  04AD  00AC               	movwf	___lmul@product+3
  4966  04AE  3000               	movlw	0
  4967  04AF  00AB               	movwf	___lmul@product+2
  4968  04B0  3000               	movlw	0
  4969  04B1  00AA               	movwf	___lmul@product+1
  4970  04B2  3000               	movlw	0
  4971  04B3  00A9               	movwf	___lmul@product
  4972  04B4                     l1873:	
  4973  04B4  1C21               	btfss	___lmul@multiplier,0
  4974  04B5  2CBE               	goto	l1877
  4975  04B6  0825               	movf	___lmul@multiplicand,w
  4976  04B7  07A9               	addwf	___lmul@product,f
  4977  04B8  0826               	movf	___lmul@multiplicand+1,w
  4978  04B9  3DAA               	addwfc	___lmul@product+1,f
  4979  04BA  0827               	movf	___lmul@multiplicand+2,w
  4980  04BB  3DAB               	addwfc	___lmul@product+2,f
  4981  04BC  0828               	movf	___lmul@multiplicand+3,w
  4982  04BD  3DAC               	addwfc	___lmul@product+3,f
  4983  04BE                     l1877:	
  4984  04BE  3001               	movlw	1
  4985  04BF                     u735:	
  4986  04BF  35A5               	lslf	___lmul@multiplicand,f
  4987  04C0  0DA6               	rlf	___lmul@multiplicand+1,f
  4988  04C1  0DA7               	rlf	___lmul@multiplicand+2,f
  4989  04C2  0DA8               	rlf	___lmul@multiplicand+3,f
  4990  04C3  0B89               	decfsz	9,f
  4991  04C4  2CBF               	goto	u735
  4992  04C5  3001               	movlw	1
  4993  04C6                     u745:	
  4994  04C6  36A4               	lsrf	___lmul@multiplier+3,f
  4995  04C7  0CA3               	rrf	___lmul@multiplier+2,f
  4996  04C8  0CA2               	rrf	___lmul@multiplier+1,f
  4997  04C9  0CA1               	rrf	___lmul@multiplier,f
  4998  04CA  0B89               	decfsz	9,f
  4999  04CB  2CC6               	goto	u745
  5000  04CC  0824               	movf	___lmul@multiplier+3,w
  5001  04CD  0423               	iorwf	___lmul@multiplier+2,w
  5002  04CE  0422               	iorwf	___lmul@multiplier+1,w
  5003  04CF  0421               	iorwf	___lmul@multiplier,w
  5004  04D0  1D03               	skipz
  5005  04D1  2CB4               	goto	l1873
  5006  04D2  082C               	movf	___lmul@product+3,w
  5007  04D3  00A4               	movwf	?___lmul+3
  5008  04D4  082B               	movf	___lmul@product+2,w
  5009  04D5  00A3               	movwf	?___lmul+2
  5010  04D6  082A               	movf	___lmul@product+1,w
  5011  04D7  00A2               	movwf	?___lmul+1
  5012  04D8  0829               	movf	___lmul@product,w
  5013  04D9  00A1               	movwf	?___lmul
  5014  04DA  0008               	return
  5015  04DB                     __end_of___lmul:	
  5016                           
  5017                           	psect	text15
  5018  03B1                     __ptext15:	
  5019 ;; *************** function ___lldiv *****************
  5020 ;; Defined at:
  5021 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  divisor         4    1[BANK0 ] unsigned long 
  5024 ;;  dividend        4    5[BANK0 ] unsigned long 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  quotient        4   10[BANK0 ] unsigned long 
  5027 ;;  counter         1   14[BANK0 ] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  4    1[BANK0 ] unsigned long 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5037 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;Total ram usage:       14 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    6
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_getADCValue
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function ___lldiv
  5053  03B1                     ___lldiv:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5057  03B1  3000               	movlw	0
  5058  03B2  0020               	movlb	0	; select bank0
  5059  03B3  00AD               	movwf	___lldiv@quotient+3
  5060  03B4  3000               	movlw	0
  5061  03B5  00AC               	movwf	___lldiv@quotient+2
  5062  03B6  3000               	movlw	0
  5063  03B7  00AB               	movwf	___lldiv@quotient+1
  5064  03B8  3000               	movlw	0
  5065  03B9  00AA               	movwf	___lldiv@quotient
  5066  03BA  0824               	movf	___lldiv@divisor+3,w
  5067  03BB  0423               	iorwf	___lldiv@divisor+2,w
  5068  03BC  0422               	iorwf	___lldiv@divisor+1,w
  5069  03BD  0421               	iorwf	___lldiv@divisor,w
  5070  03BE  1903               	skipnz
  5071  03BF  2BFB               	goto	l1905
  5072  03C0  01AE               	clrf	___lldiv@counter
  5073  03C1  0AAE               	incf	___lldiv@counter,f
  5074  03C2                     l1891:	
  5075  03C2  1BA4               	btfsc	___lldiv@divisor+3,7
  5076  03C3  2BD0               	goto	l1893
  5077  03C4  3001               	movlw	1
  5078  03C5                     u775:	
  5079  03C5  35A1               	lslf	___lldiv@divisor,f
  5080  03C6  0DA2               	rlf	___lldiv@divisor+1,f
  5081  03C7  0DA3               	rlf	___lldiv@divisor+2,f
  5082  03C8  0DA4               	rlf	___lldiv@divisor+3,f
  5083  03C9  0B89               	decfsz	9,f
  5084  03CA  2BC5               	goto	u775
  5085  03CB  3001               	movlw	1
  5086  03CC  00A9               	movwf	??___lldiv
  5087  03CD  0829               	movf	??___lldiv,w
  5088  03CE  07AE               	addwf	___lldiv@counter,f
  5089  03CF  2BC2               	goto	l1891
  5090  03D0                     l1893:	
  5091  03D0  3001               	movlw	1
  5092  03D1                     u795:	
  5093  03D1  35AA               	lslf	___lldiv@quotient,f
  5094  03D2  0DAB               	rlf	___lldiv@quotient+1,f
  5095  03D3  0DAC               	rlf	___lldiv@quotient+2,f
  5096  03D4  0DAD               	rlf	___lldiv@quotient+3,f
  5097  03D5  0B89               	decfsz	9,f
  5098  03D6  2BD1               	goto	u795
  5099  03D7  0824               	movf	___lldiv@divisor+3,w
  5100  03D8  0228               	subwf	___lldiv@dividend+3,w
  5101  03D9  1D03               	skipz
  5102  03DA  2BE5               	goto	u805
  5103  03DB  0823               	movf	___lldiv@divisor+2,w
  5104  03DC  0227               	subwf	___lldiv@dividend+2,w
  5105  03DD  1D03               	skipz
  5106  03DE  2BE5               	goto	u805
  5107  03DF  0822               	movf	___lldiv@divisor+1,w
  5108  03E0  0226               	subwf	___lldiv@dividend+1,w
  5109  03E1  1D03               	skipz
  5110  03E2  2BE5               	goto	u805
  5111  03E3  0821               	movf	___lldiv@divisor,w
  5112  03E4  0225               	subwf	___lldiv@dividend,w
  5113  03E5                     u805:	
  5114  03E5  1C03               	skipc
  5115  03E6  2BF0               	goto	l1901
  5116  03E7  0821               	movf	___lldiv@divisor,w
  5117  03E8  02A5               	subwf	___lldiv@dividend,f
  5118  03E9  0822               	movf	___lldiv@divisor+1,w
  5119  03EA  3BA6               	subwfb	___lldiv@dividend+1,f
  5120  03EB  0823               	movf	___lldiv@divisor+2,w
  5121  03EC  3BA7               	subwfb	___lldiv@dividend+2,f
  5122  03ED  0824               	movf	___lldiv@divisor+3,w
  5123  03EE  3BA8               	subwfb	___lldiv@dividend+3,f
  5124  03EF  142A               	bsf	___lldiv@quotient,0
  5125  03F0                     l1901:	
  5126  03F0  3001               	movlw	1
  5127  03F1                     u815:	
  5128  03F1  36A4               	lsrf	___lldiv@divisor+3,f
  5129  03F2  0CA3               	rrf	___lldiv@divisor+2,f
  5130  03F3  0CA2               	rrf	___lldiv@divisor+1,f
  5131  03F4  0CA1               	rrf	___lldiv@divisor,f
  5132  03F5  0B89               	decfsz	9,f
  5133  03F6  2BF1               	goto	u815
  5134  03F7  3001               	movlw	1
  5135  03F8  02AE               	subwf	___lldiv@counter,f
  5136  03F9  1D03               	btfss	3,2
  5137  03FA  2BD0               	goto	l1893
  5138  03FB                     l1905:	
  5139  03FB  082D               	movf	___lldiv@quotient+3,w
  5140  03FC  00A4               	movwf	?___lldiv+3
  5141  03FD  082C               	movf	___lldiv@quotient+2,w
  5142  03FE  00A3               	movwf	?___lldiv+2
  5143  03FF  082B               	movf	___lldiv@quotient+1,w
  5144  0400  00A2               	movwf	?___lldiv+1
  5145  0401  082A               	movf	___lldiv@quotient,w
  5146  0402  00A1               	movwf	?___lldiv
  5147  0403  0008               	return
  5148  0404                     __end_of___lldiv:	
  5149                           
  5150                           	psect	intentry
  5151  0004                     __pintentry:	
  5152 ;; *************** function _ISR *****************
  5153 ;; Defined at:
  5154 ;;		line 14 in file "main.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    5
  5175 ;; This function calls:
  5176 ;;		_nrf24l01ISR
  5177 ;; This function is called by:
  5178 ;;		Interrupt level 1
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182  0004                     _ISR:	
  5183                           
  5184                           ;incstack = 0
  5185  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5186                           
  5187                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5188  0005  3180               	pagesel	$
  5189                           
  5190                           ;main.c: 15: if (PIR0bits.INTF){
  5191  0006  0020               	movlb	0	; select bank0
  5192  0007  1C10               	btfss	16,0	;volatile
  5193  0008  280D               	goto	i1l203
  5194                           
  5195                           ;main.c: 16: nrf24l01ISR();
  5196  0009  3185  250B         	fcall	_nrf24l01ISR
  5197                           
  5198                           ;main.c: 17: PIR0bits.INTF = 0;
  5199  000B  0020               	movlb	0	; select bank0
  5200  000C  1010               	bcf	16,0	;volatile
  5201  000D                     i1l203:	
  5202  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5203  000E  0009               	retfie
  5204  000F                     __end_of_ISR:	
  5205                           
  5206                           	psect	text17
  5207  050B                     __ptext17:	
  5208 ;; *************** function _nrf24l01ISR *****************
  5209 ;; Defined at:
  5210 ;;		line 328 in file "nrf24l01.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  status          1    0[BANK0 ] struct .
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;Total ram usage:        2 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    4
  5231 ;; This function calls:
  5232 ;;		_exception
  5233 ;;		i1_nrf24l01Send
  5234 ;;		i1_nrf24l01SetRXMode
  5235 ;; This function is called by:
  5236 ;;		_ISR
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _nrf24l01ISR
  5242  050B                     _nrf24l01ISR:	
  5243                           
  5244                           ;nrf24l01.c: 330: n_STATUS_t status;;nrf24l01.c: 331: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _nrf24l01ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5248  050B  01F1               	clrf	i1nrf24l01Send@data
  5249  050C  3007               	movlw	7
  5250  050D  3186  260A  3185   	fcall	i1_nrf24l01Send
  5251  0510  00FD               	movwf	??_nrf24l01ISR
  5252  0511  087D               	movf	??_nrf24l01ISR,w
  5253  0512  0020               	movlb	0	; select bank0
  5254  0513  00A0               	movwf	nrf24l01ISR@status
  5255                           
  5256                           ;nrf24l01.c: 334: if (status.byte == 0x00){
  5257  0514  0820               	movf	nrf24l01ISR@status,w
  5258  0515  1D03               	btfss	3,2
  5259  0516  2D1B               	goto	i1l2245
  5260                           
  5261                           ;nrf24l01.c: 335: exception(1);
  5262  0517  3001               	movlw	1
  5263  0518  3186  2653  3185   	fcall	_exception
  5264  051B                     i1l2245:	
  5265                           
  5266                           ;nrf24l01.c: 336: };nrf24l01.c: 339: if (status.byte == 0xFF){
  5267  051B  0020               	movlb	0	; select bank0
  5268  051C  0A20               	incf	nrf24l01ISR@status,w
  5269  051D  1D03               	btfss	3,2
  5270  051E  2D23               	goto	i1l2249
  5271                           
  5272                           ;nrf24l01.c: 340: exception(2);
  5273  051F  3002               	movlw	2
  5274  0520  3186  2653  3185   	fcall	_exception
  5275  0523                     i1l2249:	
  5276                           
  5277                           ;nrf24l01.c: 341: };nrf24l01.c: 343: if (status.TX_DS){
  5278  0523  0020               	movlb	0	; select bank0
  5279  0524  1EA0               	btfss	nrf24l01ISR@status,5
  5280  0525  2D2E               	goto	i1l2257
  5281                           
  5282                           ;nrf24l01.c: 346: nrf24l01.TXBusy = 0;
  5283  0526  10CB               	bcf	_nrf24l01,1	;volatile
  5284                           
  5285                           ;nrf24l01.c: 349: if (!nrf24l01.RXMode){
  5286  0527  1DCB               	btfss	_nrf24l01,3	;volatile
  5287                           
  5288                           ;nrf24l01.c: 350: if (nrf24l01TXPacketData.ACKRequest){
  5289  0528  1C4C               	btfss	_nrf24l01TXPacketData,0
  5290  0529  2D2E               	goto	i1l2257
  5291                           
  5292                           ;nrf24l01.c: 352: nrf24l01SetRXMode(1);
  5293  052A  3001               	movlw	1
  5294  052B  3184  243F  3185   	fcall	i1_nrf24l01SetRXMode
  5295  052E                     i1l2257:	
  5296                           
  5297                           ;nrf24l01.c: 353: };nrf24l01.c: 354: };nrf24l01.c: 355: };nrf24l01.c: 358: if (status.RX
      +                          _DR){
  5298  052E  0020               	movlb	0	; select bank0
  5299  052F  1B20               	btfsc	nrf24l01ISR@status,6
  5300                           
  5301                           ;nrf24l01.c: 360: nrf24l01.RXPending = 1;
  5302  0530  154B               	bsf	_nrf24l01,2	;volatile
  5303                           
  5304                           ;nrf24l01.c: 361: };nrf24l01.c: 364: nrf24l01Send(0b00100000 | 0x07, status.byte);
  5305  0531  0820               	movf	nrf24l01ISR@status,w
  5306  0532  00FD               	movwf	??_nrf24l01ISR
  5307  0533  087D               	movf	??_nrf24l01ISR,w
  5308  0534  00F1               	movwf	i1nrf24l01Send@data
  5309  0535  3027               	movlw	39
  5310  0536  3186  260A         	fcall	i1_nrf24l01Send
  5311  0538  0008               	return
  5312  0539                     __end_of_nrf24l01ISR:	
  5313                           
  5314                           	psect	text18
  5315  043F                     __ptext18:	
  5316 ;; *************** function i1_nrf24l01SetRXMode *****************
  5317 ;; Defined at:
  5318 ;;		line 74 in file "nrf24l01.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  rxMode          1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  rxMode          1    6[COMMON] unsigned char 
  5323 ;;  nrf24l01SetR    1    5[COMMON] struct .
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, pclath, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;Total ram usage:        3 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    3
  5340 ;; This function calls:
  5341 ;;		_nrf24l01CEHigh
  5342 ;;		_nrf24l01CELow
  5343 ;;		i1_nrf24l01Send
  5344 ;; This function is called by:
  5345 ;;		_nrf24l01ISR
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function i1_nrf24l01SetRXMode
  5351  043F                     i1_nrf24l01SetRXMode:	
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5355                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  5356  043F  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  5357                           
  5358                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5359  0440  01F1               	clrf	i1nrf24l01Send@data
  5360  0441  3000               	movlw	0
  5361  0442  3186  260A  3184   	fcall	i1_nrf24l01Send
  5362  0445  00F4               	movwf	??i1_nrf24l01SetRXMode
  5363  0446  0874               	movf	??i1_nrf24l01SetRXMode,w
  5364  0447  00F5               	movwf	i1nrf24l01SetRXMode@config
  5365                           
  5366                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  5367  0448  0875               	movf	i1nrf24l01SetRXMode@config,w
  5368  0449  3901               	andlw	1
  5369  044A  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  5370  044B  1903               	skipnz
  5371  044C  2C6F               	goto	i1l2209
  5372                           
  5373                           ;nrf24l01.c: 85: nrf24l01CELow();
  5374  044D  3186  26AF  3184   	fcall	_nrf24l01CELow
  5375                           
  5376                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5377  0450  30A0               	movlw	160
  5378  0451                     u167_27:	
  5379  0451  3200               	nop2
  5380  0452  0B89               	decfsz	9,f
  5381  0453  2C51               	goto	u167_27
  5382                           
  5383                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  5384  0454  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5385  0455  3901               	andlw	1
  5386  0456  1075               	bcf	i1nrf24l01SetRXMode@config,0
  5387  0457  1D03               	skipz
  5388  0458  1475               	bsf	i1nrf24l01SetRXMode@config,0
  5389                           
  5390                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5391  0459  0875               	movf	i1nrf24l01SetRXMode@config,w
  5392  045A  00F4               	movwf	??i1_nrf24l01SetRXMode
  5393  045B  0874               	movf	??i1_nrf24l01SetRXMode,w
  5394  045C  00F1               	movwf	i1nrf24l01Send@data
  5395  045D  3020               	movlw	32
  5396  045E  3186  260A  3184   	fcall	i1_nrf24l01Send
  5397                           
  5398                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5399  0461  30A0               	movlw	160
  5400  0462                     u168_27:	
  5401  0462  3200               	nop2
  5402  0463  0B89               	decfsz	9,f
  5403  0464  2C62               	goto	u168_27
  5404                           
  5405                           ;nrf24l01.c: 100: if (rxMode){
  5406  0465  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5407  0466  1903               	btfsc	3,2
  5408  0467  2C6F               	goto	i1l2209
  5409                           
  5410                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  5411  0468  3186  26B2  3184   	fcall	_nrf24l01CEHigh
  5412                           
  5413                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5414  046B  30A0               	movlw	160
  5415  046C                     u169_27:	
  5416  046C  3200               	nop2
  5417  046D  0B89               	decfsz	9,f
  5418  046E  2C6C               	goto	u169_27
  5419  046F                     i1l2209:	
  5420                           
  5421                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  5422  046F  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5423  0470  3901               	andlw	1
  5424  0471  0020               	movlb	0	; select bank0
  5425  0472  11CB               	bcf	_nrf24l01,3	;volatile
  5426  0473  1D03               	skipz
  5427  0474  15CB               	bsf	_nrf24l01,3	;volatile
  5428  0475  0008               	return
  5429  0476                     __end_ofi1_nrf24l01SetRXMode:	
  5430                           
  5431                           	psect	text19
  5432  060A                     __ptext19:	
  5433 ;; *************** function i1_nrf24l01Send *****************
  5434 ;; Defined at:
  5435 ;;		line 19 in file "nrf24l01.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  command         1    wreg     unsigned char 
  5438 ;;  data            1    1[COMMON] unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  command         1    3[COMMON] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      unsigned char 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, pclath, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5450 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;Total ram usage:        3 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    2
  5457 ;; This function calls:
  5458 ;;		_enableInterrupts
  5459 ;;		_nrf24l01SPIEnd
  5460 ;;		_nrf24l01SPISend
  5461 ;;		_nrf24l01SPIStart
  5462 ;; This function is called by:
  5463 ;;		_nrf24l01ISR
  5464 ;;		i1_nrf24l01SetRXMode
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function i1_nrf24l01Send
  5470  060A                     i1_nrf24l01Send:	
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5474                           ;i1nrf24l01Send@command stored from wreg
  5475  060A  00F3               	movwf	i1nrf24l01Send@command
  5476                           
  5477                           ;nrf24l01.c: 22: enableInterrupts(0);
  5478  060B  3000               	movlw	0
  5479  060C  3186  2670  3186   	fcall	_enableInterrupts
  5480                           
  5481                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  5482  060F  3186  2668  3186   	fcall	_nrf24l01SPIStart
  5483                           
  5484                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  5485  0612  0873               	movf	i1nrf24l01Send@command,w
  5486  0613  3186  2646  3186   	fcall	_nrf24l01SPISend
  5487                           
  5488                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  5489  0616  0871               	movf	i1nrf24l01Send@data,w
  5490  0617  3186  2646  3186   	fcall	_nrf24l01SPISend
  5491  061A  00F2               	movwf	??i1_nrf24l01Send
  5492  061B  0872               	movf	??i1_nrf24l01Send,w
  5493  061C  00F1               	movwf	i1nrf24l01Send@data
  5494                           
  5495                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  5496  061D  3186  2678  3186   	fcall	_nrf24l01SPIEnd
  5497                           
  5498                           ;nrf24l01.c: 37: enableInterrupts(1);
  5499  0620  3001               	movlw	1
  5500  0621  3186  2670         	fcall	_enableInterrupts
  5501                           
  5502                           ;nrf24l01.c: 39: return data;
  5503  0623  0871               	movf	i1nrf24l01Send@data,w
  5504  0624  0008               	return
  5505  0625                     __end_ofi1_nrf24l01Send:	
  5506                           
  5507                           	psect	text20
  5508  0668                     __ptext20:	
  5509 ;; *************** function _nrf24l01SPIStart *****************
  5510 ;; Defined at:
  5511 ;;		line 65 in file "interface.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    7
  5532 ;; This function calls:
  5533 ;;		_nrf24l01CSLow
  5534 ;; This function is called by:
  5535 ;;		_nrf24l01Send
  5536 ;;		_nrf24l01SendString
  5537 ;;		i1_nrf24l01Send
  5538 ;;		_nrf24l01SetTXAddress
  5539 ;;		_nrf24l01ReceiveString
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _nrf24l01SPIStart
  5545  0668                     _nrf24l01SPIStart:	
  5546                           
  5547                           ;interface.c: 66: nrf24l01CSLow();
  5548                           
  5549                           ;incstack = 0
  5550 ;; hardware stack exceeded
  5551                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  5552  0668  3186  26A9  3186   	fcall	_nrf24l01CSLow
  5553                           
  5554                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5555  066B  300D               	movlw	13
  5556  066C                     u170_27:	
  5557  066C  0B89               	decfsz	9,f
  5558  066D  2E6C               	goto	u170_27
  5559  066E  0000               	nop
  5560  066F  0008               	return
  5561  0670                     __end_of_nrf24l01SPIStart:	
  5562                           
  5563                           	psect	text21
  5564  06A9                     __ptext21:	
  5565 ;; *************** function _nrf24l01CSLow *****************
  5566 ;; Defined at:
  5567 ;;		line 18 in file "interface.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		None
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    6
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_nrf24l01SPIStart
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _nrf24l01CSLow
  5597  06A9                     _nrf24l01CSLow:	
  5598                           
  5599                           ;interface.c: 19: PORTAbits.RA1 = 0;
  5600                           
  5601                           ;incstack = 0
  5602 ;; hardware stack exceeded
  5603                           ; Regs used in _nrf24l01CSLow: []
  5604  06A9  0020               	movlb	0	; select bank0
  5605  06AA  108C               	bcf	12,1	;volatile
  5606  06AB  0008               	return
  5607  06AC                     __end_of_nrf24l01CSLow:	
  5608                           
  5609                           	psect	text22
  5610  0646                     __ptext22:	
  5611 ;; *************** function _nrf24l01SPISend *****************
  5612 ;; Defined at:
  5613 ;;		line 52 in file "interface.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  data            1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  data            1    0[COMMON] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      unsigned char 
  5620 ;; Registers used:
  5621 ;;		wreg
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    6
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_nrf24l01Send
  5638 ;;		_nrf24l01SendString
  5639 ;;		i1_nrf24l01Send
  5640 ;;		_nrf24l01SetTXAddress
  5641 ;;		_nrf24l01ReceiveStringPart
  5642 ;;		_nrf24l01ReceiveString
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _nrf24l01SPISend
  5648  0646                     _nrf24l01SPISend:	
  5649                           
  5650                           ;incstack = 0
  5651 ;; hardware stack exceeded
  5652                           ; Regs used in _nrf24l01SPISend: [wreg]
  5653                           ;nrf24l01SPISend@data stored from wreg
  5654  0646  00F0               	movwf	nrf24l01SPISend@data
  5655                           
  5656                           ;interface.c: 53: SSP1BUF = data;
  5657  0647  0870               	movf	nrf24l01SPISend@data,w
  5658  0648  0024               	movlb	4	; select bank4
  5659  0649  0091               	movwf	17	;volatile
  5660                           
  5661                           ;interface.c: 55: PORTCbits.RC4 = 1;
  5662  064A  0020               	movlb	0	; select bank0
  5663  064B  160E               	bsf	14,4	;volatile
  5664  064C                     i1l94:	
  5665                           ;interface.c: 57: while (!SSP1STATbits.BF){
  5666                           
  5667  064C  0024               	movlb	4	; select bank4
  5668  064D  1814               	btfsc	20,0	;volatile
  5669  064E  2E51               	goto	i1l1807
  5670                           
  5671                           ;interface.c: 58: __nop();
  5672  064F  0000               	nop
  5673  0650  2E4C               	goto	i1l94
  5674  0651                     i1l1807:	
  5675                           
  5676                           ;interface.c: 59: };interface.c: 61: return SSP1BUF;
  5677  0651  0811               	movf	17,w	;volatile
  5678  0652  0008               	return
  5679  0653                     __end_of_nrf24l01SPISend:	
  5680                           
  5681                           	psect	text23
  5682  0678                     __ptext23:	
  5683 ;; *************** function _nrf24l01SPIEnd *****************
  5684 ;; Defined at:
  5685 ;;		line 71 in file "interface.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, pclath, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    7
  5706 ;; This function calls:
  5707 ;;		_nrf24l01CSHigh
  5708 ;; This function is called by:
  5709 ;;		_nrf24l01Send
  5710 ;;		_nrf24l01SendString
  5711 ;;		i1_nrf24l01Send
  5712 ;;		_nrf24l01ReceiveString
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _nrf24l01SPIEnd
  5718  0678                     _nrf24l01SPIEnd:	
  5719                           
  5720                           ;interface.c: 72: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5721                           
  5722                           ;incstack = 0
  5723 ;; hardware stack exceeded
  5724                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  5725  0678  300D               	movlw	13
  5726  0679                     u171_27:	
  5727  0679  0B89               	decfsz	9,f
  5728  067A  2E79               	goto	u171_27
  5729  067B  0000               	nop
  5730                           
  5731                           ;interface.c: 73: nrf24l01CSHigh();
  5732  067C  3186  26AC         	fcall	_nrf24l01CSHigh
  5733  067E  0008               	return
  5734  067F                     __end_of_nrf24l01SPIEnd:	
  5735                           
  5736                           	psect	text24
  5737  06AC                     __ptext24:	
  5738 ;; *************** function _nrf24l01CSHigh *****************
  5739 ;; Defined at:
  5740 ;;		line 23 in file "interface.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		None
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    6
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_nrf24l01SPIEnd
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _nrf24l01CSHigh
  5770  06AC                     _nrf24l01CSHigh:	
  5771                           
  5772                           ;interface.c: 24: PORTAbits.RA1 = 1;
  5773                           
  5774                           ;incstack = 0
  5775 ;; hardware stack exceeded
  5776                           ; Regs used in _nrf24l01CSHigh: []
  5777  06AC  0020               	movlb	0	; select bank0
  5778  06AD  148C               	bsf	12,1	;volatile
  5779  06AE  0008               	return
  5780  06AF                     __end_of_nrf24l01CSHigh:	
  5781                           
  5782                           	psect	text25
  5783  0670                     __ptext25:	
  5784 ;; *************** function _enableInterrupts *****************
  5785 ;; Defined at:
  5786 ;;		line 77 in file "interface.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  enable          1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  enable          1    0[COMMON] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    6
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_nrf24l01Send
  5811 ;;		_nrf24l01SendString
  5812 ;;		i1_nrf24l01Send
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _enableInterrupts
  5818  0670                     _enableInterrupts:	
  5819                           
  5820                           ;incstack = 0
  5821 ;; hardware stack exceeded
  5822                           ; Regs used in _enableInterrupts: [wreg+status,0]
  5823                           ;enableInterrupts@enable stored from wreg
  5824  0670  00F0               	movwf	enableInterrupts@enable
  5825                           
  5826                           ;interface.c: 78: PIE0bits.INTE = enable;
  5827  0671  0C70               	rrf	enableInterrupts@enable,w
  5828  0672  0021               	movlb	1	; select bank1
  5829  0673  1C03               	skipc
  5830  0674  1010               	bcf	16,0	;volatile
  5831  0675  1803               	skipnc
  5832  0676  1410               	bsf	16,0	;volatile
  5833  0677  0008               	return
  5834  0678                     __end_of_enableInterrupts:	
  5835                           
  5836                           	psect	text26
  5837  06AF                     __ptext26:	
  5838 ;; *************** function _nrf24l01CELow *****************
  5839 ;; Defined at:
  5840 ;;		line 8 in file "interface.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		None
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    6
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_nrf24l01SetRXMode
  5865 ;;		_nrf24l01SendString
  5866 ;;		_nrf24l01Init
  5867 ;;		i1_nrf24l01SetRXMode
  5868 ;;		_nrf24l01ReceiveString
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _nrf24l01CELow
  5874  06AF                     _nrf24l01CELow:	
  5875                           
  5876                           ;interface.c: 9: PORTAbits.RA0 = 0;
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in _nrf24l01CELow: []
  5880  06AF  0020               	movlb	0	; select bank0
  5881  06B0  100C               	bcf	12,0	;volatile
  5882  06B1  0008               	return
  5883  06B2                     __end_of_nrf24l01CELow:	
  5884                           
  5885                           	psect	text27
  5886  06B2                     __ptext27:	
  5887 ;; *************** function _nrf24l01CEHigh *****************
  5888 ;; Defined at:
  5889 ;;		line 13 in file "interface.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		None
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    6
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_nrf24l01SetRXMode
  5914 ;;		_nrf24l01SendString
  5915 ;;		_nrf24l01Init
  5916 ;;		i1_nrf24l01SetRXMode
  5917 ;;		_nrf24l01ReceiveString
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function _nrf24l01CEHigh
  5923  06B2                     _nrf24l01CEHigh:	
  5924                           
  5925                           ;interface.c: 14: PORTAbits.RA0 = 1;
  5926                           
  5927                           ;incstack = 0
  5928                           ; Regs used in _nrf24l01CEHigh: []
  5929  06B2  0020               	movlb	0	; select bank0
  5930  06B3  140C               	bsf	12,0	;volatile
  5931  06B4  0008               	return
  5932  06B5                     __end_of_nrf24l01CEHigh:	
  5933                           
  5934                           	psect	text28
  5935  0653                     __ptext28:	
  5936 ;; *************** function _exception *****************
  5937 ;; Defined at:
  5938 ;;		line 81 in file "interface.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  exception       1    wreg     unsigned char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  exception       1   12[COMMON] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;Total ram usage:        3 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    2
  5959 ;; This function calls:
  5960 ;;		_flashUpdate
  5961 ;; This function is called by:
  5962 ;;		_nrf24l01ISR
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _exception
  5968  0653                     _exception:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5972                           ;exception@exception stored from wreg
  5973  0653  00FC               	movwf	exception@exception
  5974                           
  5975                           ;interface.c: 82: romData.bootMode = exception;
  5976  0654  087C               	movf	exception@exception,w
  5977  0655  00FA               	movwf	??_exception
  5978  0656  01FB               	clrf	??_exception+1
  5979  0657  087A               	movf	??_exception,w
  5980  0658  0021               	movlb	1	; select bank1
  5981  0659  00B1               	movwf	(_romData^(0+128)+17)
  5982  065A  087B               	movf	??_exception+1,w
  5983  065B  00B2               	movwf	((_romData+1)^(0+128)+17)
  5984                           
  5985                           ;interface.c: 83: flashUpdate();
  5986  065C  3185  2590         	fcall	_flashUpdate
  5987  065E  0008               	return
  5988  065F                     __end_of_exception:	
  5989                           
  5990                           	psect	text29
  5991  0590                     __ptext29:	
  5992 ;; *************** function _flashUpdate *****************
  5993 ;; Defined at:
  5994 ;;		line 97 in file "flash.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;		None
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  i               2    8[COMMON] unsigned int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    1
  6015 ;; This function calls:
  6016 ;;		_flashWriteByte
  6017 ;; This function is called by:
  6018 ;;		_exception
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function _flashUpdate
  6024  0590                     _flashUpdate:	
  6025                           
  6026                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6030  0590  01F8               	clrf	flashUpdate@i
  6031  0591  01F9               	clrf	flashUpdate@i+1
  6032  0592                     L1:	
  6033  0592  3000               	movlw	0
  6034  0593  0279               	subwf	flashUpdate@i+1,w
  6035  0594  3020               	movlw	32
  6036  0595  1903               	skipnz
  6037  0596  0278               	subwf	flashUpdate@i,w
  6038  0597  1803               	btfsc	3,0
  6039  0598  0008               	return
  6040                           
  6041                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  6042  0599  0879               	movf	flashUpdate@i+1,w
  6043  059A  00F1               	movwf	flashWriteByte@offset+1
  6044  059B  0878               	movf	flashUpdate@i,w
  6045  059C  00F0               	movwf	flashWriteByte@offset
  6046  059D  0878               	movf	flashUpdate@i,w
  6047  059E  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6048  059F  0086               	movwf	6
  6049  05A0  3001               	movlw	1	; select bank2/3
  6050  05A1  0087               	movwf	7
  6051  05A2  0801               	movf	1,w
  6052  05A3  00F6               	movwf	??_flashUpdate
  6053  05A4  01F7               	clrf	??_flashUpdate+1
  6054  05A5  0876               	movf	??_flashUpdate,w
  6055  05A6  00F2               	movwf	flashWriteByte@data
  6056  05A7  0877               	movf	??_flashUpdate+1,w
  6057  05A8  00F3               	movwf	flashWriteByte@data+1
  6058  05A9  3184  24DB  3185   	fcall	_flashWriteByte
  6059  05AC  3001               	movlw	1
  6060  05AD  07F8               	addwf	flashUpdate@i,f
  6061  05AE  3000               	movlw	0
  6062  05AF  3DF9               	addwfc	flashUpdate@i+1,f
  6063  05B0  2D92               	goto	L1
  6064  05B1                     __end_of_flashUpdate:	
  6065                           
  6066                           	psect	text30
  6067  04DB                     __ptext30:	
  6068 ;; *************** function _flashWriteByte *****************
  6069 ;; Defined at:
  6070 ;;		line 8 in file "flash.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  offset          2    0[COMMON] unsigned int 
  6073 ;;  data            2    2[COMMON] unsigned int 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  address         2    4[COMMON] unsigned int 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;Total ram usage:        6 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_flashUpdate
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           
  6099                           ;psect for function _flashWriteByte
  6100  04DB                     _flashWriteByte:	
  6101                           
  6102                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  6103                           
  6104                           ;incstack = 0
  6105                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  6106  04DB  138B               	bcf	11,7	;volatile
  6107                           
  6108                           ;flash.c: 15: PMCON1 = 0x00;
  6109  04DC  0031               	movlb	17	; select bank17
  6110  04DD  0195               	clrf	21	;volsfr
  6111                           
  6112                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  6113  04DE  0870               	movf	flashWriteByte@offset,w
  6114  04DF  3EE0               	addlw	224
  6115  04E0  00F4               	movwf	flashWriteByte@address
  6116  04E1  301F               	movlw	31
  6117  04E2  3D71               	addwfc	flashWriteByte@offset+1,w
  6118  04E3  00F5               	movwf	flashWriteByte@address+1
  6119                           
  6120                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  6121  04E4  0874               	movf	flashWriteByte@address,w
  6122  04E5  0091               	movwf	17	;volatile
  6123                           
  6124                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  6125  04E6  0875               	movf	flashWriteByte@address+1,w
  6126  04E7  0092               	movwf	18	;volatile
  6127                           
  6128                           ;flash.c: 21: PMCON1bits.FREE = 1;
  6129  04E8  1615               	bsf	21,4	;volsfr
  6130                           
  6131                           ;flash.c: 22: PMCON1bits.WREN = 1;
  6132  04E9  1515               	bsf	21,2	;volsfr
  6133                           
  6134                           ;flash.c: 24: PMCON2 = 0x55;
  6135  04EA  3055               	movlw	85
  6136  04EB  0096               	movwf	22	;volsfr
  6137                           
  6138                           ;flash.c: 25: PMCON2 = 0xAA;
  6139  04EC  30AA               	movlw	170
  6140  04ED  0096               	movwf	22	;volsfr
  6141                           
  6142                           ;flash.c: 27: PMCON1bits.WR = 1;
  6143  04EE  1495               	bsf	21,1	;volsfr
  6144                           
  6145                           ;flash.c: 29: __nop();
  6146  04EF  0000               	nop
  6147                           
  6148                           ;flash.c: 30: __nop();
  6149  04F0  0000               	nop
  6150                           
  6151                           ;flash.c: 32: PMCON1bits.WREN = 0;
  6152  04F1  0031               	movlb	17	; select bank17
  6153  04F2  1115               	bcf	21,2	;volsfr
  6154                           
  6155                           ;flash.c: 36: PMCON1 = 0x00;
  6156  04F3  0195               	clrf	21	;volsfr
  6157                           
  6158                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  6159  04F4  0874               	movf	flashWriteByte@address,w
  6160  04F5  0091               	movwf	17	;volatile
  6161                           
  6162                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  6163  04F6  0875               	movf	flashWriteByte@address+1,w
  6164  04F7  0092               	movwf	18	;volatile
  6165                           
  6166                           ;flash.c: 41: PMCON1bits.FREE = 0;
  6167  04F8  1215               	bcf	21,4	;volsfr
  6168                           
  6169                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  6170  04F9  1695               	bsf	21,5	;volsfr
  6171                           
  6172                           ;flash.c: 43: PMCON1bits.WREN = 1;
  6173  04FA  1515               	bsf	21,2	;volsfr
  6174                           
  6175                           ;flash.c: 45: PMDATL = (data >> 0);
  6176  04FB  0872               	movf	flashWriteByte@data,w
  6177  04FC  0093               	movwf	19	;volatile
  6178                           
  6179                           ;flash.c: 46: PMDATH = (data >> 8);
  6180  04FD  0873               	movf	flashWriteByte@data+1,w
  6181  04FE  0094               	movwf	20	;volatile
  6182                           
  6183                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  6184  04FF  1295               	bcf	21,5	;volsfr
  6185                           
  6186                           ;flash.c: 50: PMCON2 = 0x55;
  6187  0500  3055               	movlw	85
  6188  0501  0096               	movwf	22	;volsfr
  6189                           
  6190                           ;flash.c: 51: PMCON2 = 0xAA;
  6191  0502  30AA               	movlw	170
  6192  0503  0096               	movwf	22	;volsfr
  6193                           
  6194                           ;flash.c: 53: PMCON1bits.WR = 1;
  6195  0504  1495               	bsf	21,1	;volsfr
  6196                           
  6197                           ;flash.c: 55: __nop();
  6198  0505  0000               	nop
  6199                           
  6200                           ;flash.c: 56: __nop();
  6201  0506  0000               	nop
  6202                           
  6203                           ;flash.c: 58: PMCON1bits.WREN = 0;
  6204  0507  0031               	movlb	17	; select bank17
  6205  0508  1115               	bcf	21,2	;volsfr
  6206                           
  6207                           ;flash.c: 61: INTCONbits.GIE = 1;
  6208  0509  178B               	bsf	11,7	;volatile
  6209  050A  0008               	return
  6210  050B                     __end_of_flashWriteByte:	
  6211  007E                     btemp	set	126	;btemp
  6212  007E                     int$flags	set	126
  6213  007E                     wtemp0	set	126


Data Sizes:
    Strings     45
    Constant    25
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      77
    BANK1            80      0      51
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[5]), STR_6(CODE[14]), nrf24l01TXName(BANK1[16]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[5]), nrf24l01TXValue(BANK0[8]), 
		 -> STR_1(CODE[4]), nrf24l01TXTopic(BANK0[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_exception
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->_flashUpdate
    _flashUpdate->_flashWriteByte

Critical Paths under _main in BANK0

    _main->_utoa
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_utoa
    _utoa->_getADCValue
    _nrf24l01SendString->_nrf24l01SetRXMode
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14324
                                             38 BANK0      1     1      0
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    1532
                                             13 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               10    10      0    1510
                                              4 BANK0      9     9      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    6848
                        _getADCValue
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    2678
                                             29 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                        _getADCValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2    1609
                                              1 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendString                                   3     3      0    1657
                                              7 BANK0      3     3      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1409
                                              4 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1275
                                              1 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             15 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              1 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              1 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    1070
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    1070
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _exception
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     349
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     215
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     395
                                             10 COMMON     3     3      0
                        _flashUpdate
 ---------------------------------------------------------------------------------
 (10) _flashUpdate                                         4     4      0     373
                                              6 COMMON     4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (11) _flashWriteByte                                      6     2      4     283
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendString
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _sleep
     _strcpy
     _utoa
       ___lwdiv
       ___lwmod
       _getADCValue (ARG)
         ___lldiv
         ___lmul
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendString
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
   _sleep
   _strcpy
   _utoa
     ___lwdiv
     ___lwmod
     _getADCValue (ARG)
       ___lldiv
       ___lmul

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       _flashUpdate
         _flashWriteByte
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      33       7       63.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jun 30 11:57:21 2018

                    __CFG_CP$OFF 0000              nrf24l01Send@command 0023  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l215 065F                              l208 026C  
                            l334 0109                              l871 039B                     flashUpdate@i 0078  
                   __CFG_CPD$OFF 0000                              _ISR 0004                              u805 03E5  
                            u815 03F1                              u735 04BF                              u745 04C6  
                            u915 0543                              u845 0482                              u775 03C5  
                            u935 0552                              u865 048C                              u945 0559  
                            u795 03D1                              u875 0496                              u885 049E  
                            wreg 0009                             ?_ISR 0070                   ??_nrf24l01Init 002D  
                           l2061 0151                             l2081 0182                             l2073 0170  
                           l2065 015C                             l2057 0144                             l2085 018F  
                           l2077 017B                             l2069 0163                             l2089 019A  
                           l1901 03F0                             l1905 03FB                             l2625 05F5  
                           l1921 048B                             l2801 034B                   ??_nrf24l01Send 0022  
                           l1931 04A6                             l2629 0355                             l1927 049D  
                           l1919 047F                             l1943 0540                             l2639 0373  
                           l1873 04B4                             l1945 054C                             l1953 0561  
                           l1891 03C2                             l1893 03D0                             l1877 04BE  
                           l1869 0438                             l1949 0558                             l1991 0265  
                           l1993 028F                             l1989 0271                             STR_1 06A5  
                   __CFG_WDTE$ON 0000                             STR_2 0696                             STR_3 069B  
                           STR_4 0685                             STR_5 067F                             STR_6 0638  
                           STR_7 06A0                             u1607 011C                             u1617 0129  
                           u1627 01A1                             u1637 0418                             u1647 042A  
                           u1567 02E6                             u1657 0435                             u1577 0574  
                           u1667 0262                             u1587 0586                             u1597 010F  
                           i1l94 064C   __size_of_nrf24l01InterfaceInit 001E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 05EF                             _main 02CF  
                           _loop 002C                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             _utoa 034F  
                  __CFG_BORV$LOW 0000                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_ISR 007E              nrf24l01SendString@i 0029  
           __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070                  ??_nrf24l01CSLow 0070  
    __size_of_nrf24l01SendString 00AB                            ?_main 0070                            ?_loop 0070  
                __end_of___lldiv 0404                            ?_utoa 003D                   __CFG_DEBUG$OFF 0000  
                __end_of___lwdiv 04AB                            i1l203 000D                  __end_of___lwmod 0566  
         enableInterrupts@enable 0070              ___lmul@multiplicand 0025                    __CFG_PWRTE$ON 0000  
                          _sleep 065F                   __CFG_BOREN$OFF 0000                 _enableInterrupts 0670  
                          utoa@c 0044                            utoa@v 0042                            status 0003  
                          wtemp0 007E      __end_ofi1_nrf24l01SetRXMode 0476                getADCValue@adcSum 0039  
               _nrf24l01SPIStart 0668                  __initialization 0011                     __end_of_main 034F  
                   __end_of_loop 0100                     __end_of_utoa 03B1                 ??_nrf24l01CEHigh 0070  
                         ??_main 0046                           ??_loop 0046                 ??_nrf24l01CSHigh 0070  
                         ??_utoa 0041                 ??_nrf24l01SPIEnd 0070         __size_of_nrf24l01SPISend 000D  
                         _ADRESH 009C                           _ADRESL 009B                           ?_sleep 0070  
                         _ANSELA 018C                           _ANSELC 018E                 ??_flashWriteByte 0074  
                         i1l2209 046F                           _ODCONA 028C                           _ODCONC 028E  
                         i1l2245 051B                           i1l2257 052E                           i1l2249 0523  
                         i1l1807 0651                           _INLVLA 038C                           _INLVLC 038E  
                         u170_27 066C                           u171_27 0679                           u167_27 0451  
                         _PMADRH 0892                           u168_27 0462                           _PMADRL 0891  
                         u169_27 046C                           _PMDATH 0894                           _PMDATL 0893  
                         _PMCON1 0895                           _PMCON2 0896               flashWriteByte@data 0072  
           __size_of_flashUpdate 0021             __size_of_nrf24l01ISR 002E          nrf24l01SetRXMode@config 0025  
                         ___lmul 04AB          nrf24l01SetRXMode@rxMode 0026                   __CFG_STVREN$ON 0000  
                      ??___lldiv 0029                        ??___lwdiv 0025                        ??___lwmod 0025  
           __end_of_nrf24l01Init 0590             __end_of_nrf24l01Send 05D1            _nrf24l01InitRegisters 01AB  
                         _strcpy 05EF        i1nrf24l01SetRXMode@config 0075                 __end_of_romArray 2000  
      i1nrf24l01SetRXMode@rxMode 0076               getADCValue@adcLoop 0038          __end_of__initialization 0028  
             getADCValue@channel 0037               getADCValue@divider 002F                   __pcstackCOMMON 0070  
                  __end_of_sleep 0668             _nrf24l01RXPacketData 0049    nrf24l01InitRegisters@enRXAddr 0029  
                        ??_sleep 0021                       __pbssBANK0 0047                       __pbssBANK1 00A0  
                     __pbssBANK2 0120                ??_nrf24l01SPISend 0070               __size_of_exception 000C  
        __size_ofi1_nrf24l01Send 001B                       __pmaintext 02CF                          ?___lmul 0021  
                __CFG_PPS1WAY$ON 0000                _nrf24l01SetRXMode 0404           ?_nrf24l01InitRegisters 0070  
                     __pintentry 0004              nrf24l01SPISend@data 0070                   ___lmul@product 0029  
             ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 0678             _nrf24l01TXPacketData 004C  
            __CFG_RSTOSC$HFINT32 0000                          ?_strcpy 0021            __end_of_n_ADDRESS_MUL 06B6  
            ??_nrf24l01SetRXMode 0024         __end_of_nrf24l01SPIStart 0670                          _SLRCONA 030C  
                        _SLRCONC 030E                          _SSP1BUF 0211            _nrf24l01InterfaceInit 05D1  
               __p_romArray_text 1FE0                    ??_getADCValue 0033            __size_of_nrf24l01Init 002A  
          __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 043F       __end_of_nrf24l01SendString 01AB  
                __size_of___lmul 0030                          ___lldiv 03B1                          ___lwdiv 0476  
                        ___lwmod 0539            __end_of_nrf24l01CELow 06B2            __end_of_nrf24l01CSLow 06AC  
                        __ptext1 0566                          __ptext2 05D1                          __ptext3 01AB  
                        __ptext4 002C                          __ptext5 034F                          __ptext6 0539  
                        __ptext7 0476                          __ptext8 05EF                          __ptext9 065F  
              __end_of_exception 065F                  __size_of_strcpy 001B                     __size_of_ISR 000B  
                        _counter 0047                 _romArray_absaddr 1FE0                          _romData 00A0  
                        clrloop0 068C             end_of_initialization 0028                     _nrf24l01Init 0566  
                   _nrf24l01Send 05B1                  ___lldiv@divisor 0021                  ___lldiv@counter 002E  
   __size_ofi1_nrf24l01SetRXMode 0037                          utoa@buf 0045                          utoa@val 003D  
          i1nrf24l01Send@command 0073              __end_of_getADCValue 02CF                        _PORTAbits 000C  
                      _PORTCbits 000E                        _TRISAbits 008C                        _TRISCbits 008E  
               nrf24l01Send@data 0021                 __CFG_FEXTOSC$OFF 0000                    ??_flashUpdate 0076  
                  ??_nrf24l01ISR 007D           ?_nrf24l01InterfaceInit 0070                   i1_nrf24l01Send 060A  
     __size_of_nrf24l01SetRXMode 003B                   __end_of___lmul 04DB                   __end_of_strcpy 060A  
            start_initialization 0011                  _nrf24l01SPISend 0646                      __end_of_ISR 000F  
          flashWriteByte@address 0074                  _nrf24l01RXValue 004D          __size_of_nrf24l01CEHigh 0003  
                _nrf24l01RXTopic 0055                  _nrf24l01TXValue 005D                  _nrf24l01TXTopic 0065  
        __size_of_nrf24l01CSHigh 0003           __end_ofi1_nrf24l01Send 0625          __size_of_nrf24l01SPIEnd 0007  
        ??_nrf24l01InitRegisters 0024                 __CFG_LPBOREN$OFF 0000                      _getADCValue 0247  
        __size_of_flashWriteByte 0030              __end_of_flashUpdate 05B1                         ??___lmul 0029  
            __end_of_nrf24l01ISR 0539             __end_of_resetRomData 0638                ?_enableInterrupts 0070  
                       ??_strcpy 0023               ??_enableInterrupts 0070                        ___latbits 0002  
                  __pcstackBANK0 0020                ?_nrf24l01SPIStart 0070               ??_nrf24l01SPIStart 0070  
                ?i1_nrf24l01Send 0071                 ___lwdiv@dividend 0023                         ?___lldiv 0021  
                       ?___lwdiv 0021                         ?___lwmod 0021             __end_of_n_ADDRESS_P0 0696  
        __end_of_nrf24l01SPISend 0653               i1nrf24l01Send@data 0071        nrf24l01InitRegisters@enAA 002A  
             _nrf24l01SendString 0100                        _exception 0653                 ___lwdiv@quotient 0026  
            i1_nrf24l01SetRXMode 043F                   __size_of_sleep 0009              ?_nrf24l01SendString 0070  
                    _flashUpdate 0590                      _nrf24l01ISR 050B                        clear_ram0 068B  
                       _PIE0bits 0090                         _PIR0bits 0010                        _romHolder 0120  
                      _sleepLoop 004A             ?i1_nrf24l01SetRXMode 0070             ??_nrf24l01SendString 0027  
                     _ADCON0bits 009D                       _ADCON1bits 009E                         _WPUAbits 020C  
                     ?_exception 0070                   _nrf24l01CEHigh 06B2                ___lmul@multiplier 0021  
        ??_nrf24l01InterfaceInit 0021                   _nrf24l01CSHigh 06AC                nrf24l01ISR@status 0020  
                 _nrf24l01SPIEnd 0678                   _nrf24l01RXName 00B3                   _nrf24l01TXName 00C3  
         __size_of_nrf24l01CELow 0003           __size_of_nrf24l01CSLow 0003             flashWriteByte@offset 0070  
                 _flashWriteByte 04DB            ??i1_nrf24l01SetRXMode 0074                 __size_of___lldiv 0053  
               __size_of___lwdiv 0035                 __size_of___lwmod 002D                 ?_nrf24l01SPISend 0070  
                     _ANSELAbits 018C                       _ANSELCbits 018E                    _n_ADDRESS_MUL 06B5  
         __end_of_nrf24l01CEHigh 06B5                  ___lwdiv@divisor 0021           __end_of_nrf24l01CSHigh 06AF  
                ___lwdiv@counter 0028                         __ptext10 0100                         __ptext11 0404  
                       __ptext20 0668                         __ptext12 05B1                         __ptext21 06A9  
                       __ptext13 0247                         __ptext30 04DB                         __ptext22 0646  
                       __ptext14 04AB                         __ptext23 0678                         __ptext15 03B1  
                       __ptext24 06AC                         __ptext25 0670                         __ptext17 050B  
                       __ptext26 06AF                         __ptext18 043F                         __ptext27 06B2  
                       __ptext19 060A                         __ptext28 0653                         __ptext29 0590  
                   _SSP1CON1bits 0215           __end_of_nrf24l01SPIEnd 067F                         _nrf24l01 004B  
                   _resetRomData 0625           nrf24l01Init@isReciever 002F                       strcpy@from 0021  
                  __size_of_main 0080                    __size_of_loop 00D4                    __size_of_utoa 0062  
         __end_of_flashWriteByte 050B     nrf24l01InitRegisters@feature 0027                       _RA2PPSbits 0E92  
             exception@exception 007C                       _RC0PPSbits 0EA0                         _romArray 1FE0  
   nrf24l01InitRegisters@rfSetup 0026                       _RC1PPSbits 0EA1                     ?_getADCValue 002F  
                     _RC2PPSbits 0EA2   __size_of_nrf24l01InitRegisters 009C    __end_of_nrf24l01InitRegisters 0247  
                       int$flags 007E     nrf24l01InitRegisters@setupAW 0025                     _SSP1STATbits 0214  
                  _nrf24l01CELow 06AF                    _nrf24l01CSLow 06A9                       _INTCONbits 000B  
                ?_nrf24l01CEHigh 0070                       _FVRCONbits 0117                 ??i1_nrf24l01Send 0072  
                    ??_exception 007A                  ?_nrf24l01CSHigh 0070                   __pstringtext10 06A5  
                 __pstringtext11 0000                  ?_nrf24l01SPIEnd 0070                         intlevel1 0000  
                   _n_ADDRESS_P0 0691        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lwmod@dividend 0023                 ___lldiv@dividend 0025                __CFG_CLKOUTEN$OFF 0000  
                ?_flashWriteByte 0070      nrf24l01InitRegisters@config 002C        __size_of_nrf24l01SPIStart 0008  
    nrf24l01InitRegisters@status 0028                   ?_nrf24l01CELow 0070                    __pstringtext1 0625  
                  __pstringtext2 0691                    __pstringtext3 06B5                    __pstringtext4 0638  
                  __pstringtext5 067F                    __pstringtext6 0685                    __pstringtext7 0696  
                  __pstringtext8 069B                    __pstringtext9 06A0                   ?_nrf24l01CSLow 0070  
                       utoa@base 003F       nrf24l01InitRegisters@DynPD 002B                 ___lldiv@quotient 002A  
                ___lwmod@divisor 0021                         strcpy@cp 0024                         strcpy@to 0025  
                ___lwmod@counter 0026                       _WDTCONbits 0097                    ?_nrf24l01Init 0070  
                  ?_nrf24l01Send 0021                       _STATUSbits 0003                     ?_flashUpdate 0070  
                   ?_nrf24l01ISR 0070  
