

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jun 29 13:25:10 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.00
    57                           ; Generated 27/05/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16LF18325 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0097                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  018C                     	;# 
   149  018E                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  028C                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030E                     	;# 
   216  0311                     	;# 
   217  0311                     	;# 
   218  0312                     	;# 
   219  0313                     	;# 
   220  0314                     	;# 
   221  0315                     	;# 
   222  0315                     	;# 
   223  0316                     	;# 
   224  0317                     	;# 
   225  0318                     	;# 
   226  038C                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0411                     	;# 
   240  0411                     	;# 
   241  0412                     	;# 
   242  0413                     	;# 
   243  0414                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  0418                     	;# 
   248  0418                     	;# 
   249  0419                     	;# 
   250  041A                     	;# 
   251  041B                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  041F                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049D                     	;# 
   264  049E                     	;# 
   265  049F                     	;# 
   266  0617                     	;# 
   267  0618                     	;# 
   268  0619                     	;# 
   269  0619                     	;# 
   270  061A                     	;# 
   271  061B                     	;# 
   272  061C                     	;# 
   273  061C                     	;# 
   274  061F                     	;# 
   275  0691                     	;# 
   276  0692                     	;# 
   277  0693                     	;# 
   278  0694                     	;# 
   279  0695                     	;# 
   280  0696                     	;# 
   281  0697                     	;# 
   282  0698                     	;# 
   283  0699                     	;# 
   284  0711                     	;# 
   285  0712                     	;# 
   286  0713                     	;# 
   287  0714                     	;# 
   288  0715                     	;# 
   289  0716                     	;# 
   290  0717                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0892                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0894                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0895                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  0896                     	;# 
   317  089B                     	;# 
   318  0911                     	;# 
   319  0912                     	;# 
   320  0913                     	;# 
   321  0914                     	;# 
   322  0915                     	;# 
   323  0916                     	;# 
   324  0918                     	;# 
   325  0919                     	;# 
   326  091A                     	;# 
   327  091B                     	;# 
   328  091C                     	;# 
   329  091D                     	;# 
   330  091E                     	;# 
   331  091F                     	;# 
   332  0E0F                     	;# 
   333  0E10                     	;# 
   334  0E11                     	;# 
   335  0E12                     	;# 
   336  0E13                     	;# 
   337  0E14                     	;# 
   338  0E15                     	;# 
   339  0E16                     	;# 
   340  0E17                     	;# 
   341  0E18                     	;# 
   342  0E19                     	;# 
   343  0E1A                     	;# 
   344  0E1B                     	;# 
   345  0E1C                     	;# 
   346  0E1D                     	;# 
   347  0E1E                     	;# 
   348  0E1F                     	;# 
   349  0E20                     	;# 
   350  0E21                     	;# 
   351  0E22                     	;# 
   352  0E24                     	;# 
   353  0E25                     	;# 
   354  0E28                     	;# 
   355  0E29                     	;# 
   356  0E2A                     	;# 
   357  0E2B                     	;# 
   358  0E2C                     	;# 
   359  0E2D                     	;# 
   360  0E2E                     	;# 
   361  0E2F                     	;# 
   362  0E90                     	;# 
   363  0E91                     	;# 
   364  0E92                     	;# 
   365  0E94                     	;# 
   366  0E95                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0F0F                     	;# 
   374  0F10                     	;# 
   375  0F11                     	;# 
   376  0F12                     	;# 
   377  0F13                     	;# 
   378  0F14                     	;# 
   379  0F15                     	;# 
   380  0F16                     	;# 
   381  0F17                     	;# 
   382  0F18                     	;# 
   383  0F19                     	;# 
   384  0F1A                     	;# 
   385  0F1B                     	;# 
   386  0F1C                     	;# 
   387  0F1D                     	;# 
   388  0F1E                     	;# 
   389  0F1F                     	;# 
   390  0F20                     	;# 
   391  0F21                     	;# 
   392  0F22                     	;# 
   393  0F23                     	;# 
   394  0F24                     	;# 
   395  0F25                     	;# 
   396  0F26                     	;# 
   397  0F27                     	;# 
   398  0F28                     	;# 
   399  0F29                     	;# 
   400  0F2A                     	;# 
   401  0F2B                     	;# 
   402  0F2C                     	;# 
   403  0F2D                     	;# 
   404  0F2E                     	;# 
   405  0F2F                     	;# 
   406  0F30                     	;# 
   407  0F31                     	;# 
   408  0F32                     	;# 
   409  0F33                     	;# 
   410  0F34                     	;# 
   411  0F35                     	;# 
   412  0F36                     	;# 
   413  0F37                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000E                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001D                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008E                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0097                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  009F                     	;# 
   472  010C                     	;# 
   473  010E                     	;# 
   474  0111                     	;# 
   475  0112                     	;# 
   476  0113                     	;# 
   477  0114                     	;# 
   478  0115                     	;# 
   479  0116                     	;# 
   480  0117                     	;# 
   481  0118                     	;# 
   482  0119                     	;# 
   483  018C                     	;# 
   484  018E                     	;# 
   485  0199                     	;# 
   486  0199                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019A                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019C                     	;# 
   497  019C                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019D                     	;# 
   501  019D                     	;# 
   502  019E                     	;# 
   503  019E                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  019F                     	;# 
   508  019F                     	;# 
   509  019F                     	;# 
   510  020C                     	;# 
   511  020E                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0215                     	;# 
   524  0216                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0217                     	;# 
   528  0219                     	;# 
   529  021A                     	;# 
   530  021B                     	;# 
   531  021C                     	;# 
   532  021D                     	;# 
   533  021D                     	;# 
   534  021E                     	;# 
   535  021F                     	;# 
   536  028C                     	;# 
   537  028E                     	;# 
   538  0291                     	;# 
   539  0291                     	;# 
   540  0292                     	;# 
   541  0293                     	;# 
   542  0294                     	;# 
   543  0295                     	;# 
   544  0295                     	;# 
   545  0296                     	;# 
   546  0297                     	;# 
   547  0298                     	;# 
   548  029F                     	;# 
   549  030C                     	;# 
   550  030E                     	;# 
   551  0311                     	;# 
   552  0311                     	;# 
   553  0312                     	;# 
   554  0313                     	;# 
   555  0314                     	;# 
   556  0315                     	;# 
   557  0315                     	;# 
   558  0316                     	;# 
   559  0317                     	;# 
   560  0318                     	;# 
   561  038C                     	;# 
   562  038E                     	;# 
   563  0391                     	;# 
   564  0392                     	;# 
   565  0393                     	;# 
   566  0397                     	;# 
   567  0398                     	;# 
   568  0399                     	;# 
   569  039A                     	;# 
   570  039C                     	;# 
   571  039D                     	;# 
   572  039E                     	;# 
   573  039F                     	;# 
   574  0411                     	;# 
   575  0411                     	;# 
   576  0412                     	;# 
   577  0413                     	;# 
   578  0414                     	;# 
   579  0415                     	;# 
   580  0416                     	;# 
   581  0417                     	;# 
   582  0418                     	;# 
   583  0418                     	;# 
   584  0419                     	;# 
   585  041A                     	;# 
   586  041B                     	;# 
   587  041C                     	;# 
   588  041D                     	;# 
   589  041E                     	;# 
   590  041F                     	;# 
   591  0498                     	;# 
   592  0498                     	;# 
   593  0499                     	;# 
   594  049A                     	;# 
   595  049B                     	;# 
   596  049B                     	;# 
   597  049C                     	;# 
   598  049D                     	;# 
   599  049E                     	;# 
   600  049F                     	;# 
   601  0617                     	;# 
   602  0618                     	;# 
   603  0619                     	;# 
   604  0619                     	;# 
   605  061A                     	;# 
   606  061B                     	;# 
   607  061C                     	;# 
   608  061C                     	;# 
   609  061F                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0696                     	;# 
   616  0697                     	;# 
   617  0698                     	;# 
   618  0699                     	;# 
   619  0711                     	;# 
   620  0712                     	;# 
   621  0713                     	;# 
   622  0714                     	;# 
   623  0715                     	;# 
   624  0716                     	;# 
   625  0717                     	;# 
   626  0718                     	;# 
   627  0719                     	;# 
   628  0891                     	;# 
   629  0891                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0891                     	;# 
   633  0891                     	;# 
   634  0892                     	;# 
   635  0892                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0893                     	;# 
   642  0893                     	;# 
   643  0894                     	;# 
   644  0894                     	;# 
   645  0894                     	;# 
   646  0895                     	;# 
   647  0895                     	;# 
   648  0895                     	;# 
   649  0896                     	;# 
   650  0896                     	;# 
   651  0896                     	;# 
   652  089B                     	;# 
   653  0911                     	;# 
   654  0912                     	;# 
   655  0913                     	;# 
   656  0914                     	;# 
   657  0915                     	;# 
   658  0916                     	;# 
   659  0918                     	;# 
   660  0919                     	;# 
   661  091A                     	;# 
   662  091B                     	;# 
   663  091C                     	;# 
   664  091D                     	;# 
   665  091E                     	;# 
   666  091F                     	;# 
   667  0E0F                     	;# 
   668  0E10                     	;# 
   669  0E11                     	;# 
   670  0E12                     	;# 
   671  0E13                     	;# 
   672  0E14                     	;# 
   673  0E15                     	;# 
   674  0E16                     	;# 
   675  0E17                     	;# 
   676  0E18                     	;# 
   677  0E19                     	;# 
   678  0E1A                     	;# 
   679  0E1B                     	;# 
   680  0E1C                     	;# 
   681  0E1D                     	;# 
   682  0E1E                     	;# 
   683  0E1F                     	;# 
   684  0E20                     	;# 
   685  0E21                     	;# 
   686  0E22                     	;# 
   687  0E24                     	;# 
   688  0E25                     	;# 
   689  0E28                     	;# 
   690  0E29                     	;# 
   691  0E2A                     	;# 
   692  0E2B                     	;# 
   693  0E2C                     	;# 
   694  0E2D                     	;# 
   695  0E2E                     	;# 
   696  0E2F                     	;# 
   697  0E90                     	;# 
   698  0E91                     	;# 
   699  0E92                     	;# 
   700  0E94                     	;# 
   701  0E95                     	;# 
   702  0EA0                     	;# 
   703  0EA1                     	;# 
   704  0EA2                     	;# 
   705  0EA3                     	;# 
   706  0EA4                     	;# 
   707  0EA5                     	;# 
   708  0F0F                     	;# 
   709  0F10                     	;# 
   710  0F11                     	;# 
   711  0F12                     	;# 
   712  0F13                     	;# 
   713  0F14                     	;# 
   714  0F15                     	;# 
   715  0F16                     	;# 
   716  0F17                     	;# 
   717  0F18                     	;# 
   718  0F19                     	;# 
   719  0F1A                     	;# 
   720  0F1B                     	;# 
   721  0F1C                     	;# 
   722  0F1D                     	;# 
   723  0F1E                     	;# 
   724  0F1F                     	;# 
   725  0F20                     	;# 
   726  0F21                     	;# 
   727  0F22                     	;# 
   728  0F23                     	;# 
   729  0F24                     	;# 
   730  0F25                     	;# 
   731  0F26                     	;# 
   732  0F27                     	;# 
   733  0F28                     	;# 
   734  0F29                     	;# 
   735  0F2A                     	;# 
   736  0F2B                     	;# 
   737  0F2C                     	;# 
   738  0F2D                     	;# 
   739  0F2E                     	;# 
   740  0F2F                     	;# 
   741  0F30                     	;# 
   742  0F31                     	;# 
   743  0F32                     	;# 
   744  0F33                     	;# 
   745  0F34                     	;# 
   746  0F35                     	;# 
   747  0F36                     	;# 
   748  0F37                     	;# 
   749  0FE4                     	;# 
   750  0FE5                     	;# 
   751  0FE6                     	;# 
   752  0FE7                     	;# 
   753  0FE8                     	;# 
   754  0FE9                     	;# 
   755  0FEA                     	;# 
   756  0FEB                     	;# 
   757  0FED                     	;# 
   758  0FEE                     	;# 
   759  0FEF                     	;# 
   760  0000                     	;# 
   761  0001                     	;# 
   762  0002                     	;# 
   763  0003                     	;# 
   764  0004                     	;# 
   765  0005                     	;# 
   766  0006                     	;# 
   767  0007                     	;# 
   768  0008                     	;# 
   769  0009                     	;# 
   770  000A                     	;# 
   771  000B                     	;# 
   772  000C                     	;# 
   773  000E                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  0019                     	;# 
   787  001A                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001D                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  008C                     	;# 
   794  008E                     	;# 
   795  0090                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0093                     	;# 
   799  0094                     	;# 
   800  0097                     	;# 
   801  009B                     	;# 
   802  009B                     	;# 
   803  009C                     	;# 
   804  009D                     	;# 
   805  009E                     	;# 
   806  009F                     	;# 
   807  010C                     	;# 
   808  010E                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0113                     	;# 
   812  0114                     	;# 
   813  0115                     	;# 
   814  0116                     	;# 
   815  0117                     	;# 
   816  0118                     	;# 
   817  0119                     	;# 
   818  018C                     	;# 
   819  018E                     	;# 
   820  0199                     	;# 
   821  0199                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019A                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019B                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019C                     	;# 
   834  019D                     	;# 
   835  019D                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019E                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  019F                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0216                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0217                     	;# 
   863  0219                     	;# 
   864  021A                     	;# 
   865  021B                     	;# 
   866  021C                     	;# 
   867  021D                     	;# 
   868  021D                     	;# 
   869  021E                     	;# 
   870  021F                     	;# 
   871  028C                     	;# 
   872  028E                     	;# 
   873  0291                     	;# 
   874  0291                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0294                     	;# 
   878  0295                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0297                     	;# 
   882  0298                     	;# 
   883  029F                     	;# 
   884  030C                     	;# 
   885  030E                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  038C                     	;# 
   897  038E                     	;# 
   898  0391                     	;# 
   899  0392                     	;# 
   900  0393                     	;# 
   901  0397                     	;# 
   902  0398                     	;# 
   903  0399                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0411                     	;# 
   910  0411                     	;# 
   911  0412                     	;# 
   912  0413                     	;# 
   913  0414                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041D                     	;# 
   924  041E                     	;# 
   925  041F                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  061F                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  0695                     	;# 
   950  0696                     	;# 
   951  0697                     	;# 
   952  0698                     	;# 
   953  0699                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0715                     	;# 
   959  0716                     	;# 
   960  0717                     	;# 
   961  0718                     	;# 
   962  0719                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0891                     	;# 
   966  0891                     	;# 
   967  0891                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0892                     	;# 
   971  0892                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0893                     	;# 
   975  0893                     	;# 
   976  0893                     	;# 
   977  0893                     	;# 
   978  0894                     	;# 
   979  0894                     	;# 
   980  0894                     	;# 
   981  0895                     	;# 
   982  0895                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0896                     	;# 
   986  0896                     	;# 
   987  089B                     	;# 
   988  0911                     	;# 
   989  0912                     	;# 
   990  0913                     	;# 
   991  0914                     	;# 
   992  0915                     	;# 
   993  0916                     	;# 
   994  0918                     	;# 
   995  0919                     	;# 
   996  091A                     	;# 
   997  091B                     	;# 
   998  091C                     	;# 
   999  091D                     	;# 
  1000  091E                     	;# 
  1001  091F                     	;# 
  1002  0E0F                     	;# 
  1003  0E10                     	;# 
  1004  0E11                     	;# 
  1005  0E12                     	;# 
  1006  0E13                     	;# 
  1007  0E14                     	;# 
  1008  0E15                     	;# 
  1009  0E16                     	;# 
  1010  0E17                     	;# 
  1011  0E18                     	;# 
  1012  0E19                     	;# 
  1013  0E1A                     	;# 
  1014  0E1B                     	;# 
  1015  0E1C                     	;# 
  1016  0E1D                     	;# 
  1017  0E1E                     	;# 
  1018  0E1F                     	;# 
  1019  0E20                     	;# 
  1020  0E21                     	;# 
  1021  0E22                     	;# 
  1022  0E24                     	;# 
  1023  0E25                     	;# 
  1024  0E28                     	;# 
  1025  0E29                     	;# 
  1026  0E2A                     	;# 
  1027  0E2B                     	;# 
  1028  0E2C                     	;# 
  1029  0E2D                     	;# 
  1030  0E2E                     	;# 
  1031  0E2F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0EA0                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0F2E                     	;# 
  1075  0F2F                     	;# 
  1076  0F30                     	;# 
  1077  0F31                     	;# 
  1078  0F32                     	;# 
  1079  0F33                     	;# 
  1080  0F34                     	;# 
  1081  0F35                     	;# 
  1082  0F36                     	;# 
  1083  0F37                     	;# 
  1084  0FE4                     	;# 
  1085  0FE5                     	;# 
  1086  0FE6                     	;# 
  1087  0FE7                     	;# 
  1088  0FE8                     	;# 
  1089  0FE9                     	;# 
  1090  0FEA                     	;# 
  1091  0FEB                     	;# 
  1092  0FED                     	;# 
  1093  0FEE                     	;# 
  1094  0FEF                     	;# 
  1095  0000                     	;# 
  1096  0001                     	;# 
  1097  0002                     	;# 
  1098  0003                     	;# 
  1099  0004                     	;# 
  1100  0005                     	;# 
  1101  0006                     	;# 
  1102  0007                     	;# 
  1103  0008                     	;# 
  1104  0009                     	;# 
  1105  000A                     	;# 
  1106  000B                     	;# 
  1107  000C                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0014                     	;# 
  1114  0015                     	;# 
  1115  0015                     	;# 
  1116  0016                     	;# 
  1117  0016                     	;# 
  1118  0017                     	;# 
  1119  0018                     	;# 
  1120  0019                     	;# 
  1121  0019                     	;# 
  1122  001A                     	;# 
  1123  001B                     	;# 
  1124  001C                     	;# 
  1125  001D                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0090                     	;# 
  1131  0091                     	;# 
  1132  0092                     	;# 
  1133  0093                     	;# 
  1134  0094                     	;# 
  1135  0097                     	;# 
  1136  009B                     	;# 
  1137  009B                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010E                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  018C                     	;# 
  1154  018E                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021B                     	;# 
  1201  021C                     	;# 
  1202  021D                     	;# 
  1203  021D                     	;# 
  1204  021E                     	;# 
  1205  021F                     	;# 
  1206  028C                     	;# 
  1207  028E                     	;# 
  1208  0291                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0294                     	;# 
  1213  0295                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0297                     	;# 
  1217  0298                     	;# 
  1218  029F                     	;# 
  1219  030C                     	;# 
  1220  030E                     	;# 
  1221  0311                     	;# 
  1222  0311                     	;# 
  1223  0312                     	;# 
  1224  0313                     	;# 
  1225  0314                     	;# 
  1226  0315                     	;# 
  1227  0315                     	;# 
  1228  0316                     	;# 
  1229  0317                     	;# 
  1230  0318                     	;# 
  1231  038C                     	;# 
  1232  038E                     	;# 
  1233  0391                     	;# 
  1234  0392                     	;# 
  1235  0393                     	;# 
  1236  0397                     	;# 
  1237  0398                     	;# 
  1238  0399                     	;# 
  1239  039A                     	;# 
  1240  039C                     	;# 
  1241  039D                     	;# 
  1242  039E                     	;# 
  1243  039F                     	;# 
  1244  0411                     	;# 
  1245  0411                     	;# 
  1246  0412                     	;# 
  1247  0413                     	;# 
  1248  0414                     	;# 
  1249  0415                     	;# 
  1250  0416                     	;# 
  1251  0417                     	;# 
  1252  0418                     	;# 
  1253  0418                     	;# 
  1254  0419                     	;# 
  1255  041A                     	;# 
  1256  041B                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  041F                     	;# 
  1261  0498                     	;# 
  1262  0498                     	;# 
  1263  0499                     	;# 
  1264  049A                     	;# 
  1265  049B                     	;# 
  1266  049B                     	;# 
  1267  049C                     	;# 
  1268  049D                     	;# 
  1269  049E                     	;# 
  1270  049F                     	;# 
  1271  0617                     	;# 
  1272  0618                     	;# 
  1273  0619                     	;# 
  1274  0619                     	;# 
  1275  061A                     	;# 
  1276  061B                     	;# 
  1277  061C                     	;# 
  1278  061C                     	;# 
  1279  061F                     	;# 
  1280  0691                     	;# 
  1281  0692                     	;# 
  1282  0693                     	;# 
  1283  0694                     	;# 
  1284  0695                     	;# 
  1285  0696                     	;# 
  1286  0697                     	;# 
  1287  0698                     	;# 
  1288  0699                     	;# 
  1289  0711                     	;# 
  1290  0712                     	;# 
  1291  0713                     	;# 
  1292  0714                     	;# 
  1293  0715                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  0891                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0891                     	;# 
  1302  0891                     	;# 
  1303  0891                     	;# 
  1304  0892                     	;# 
  1305  0892                     	;# 
  1306  0892                     	;# 
  1307  0893                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0893                     	;# 
  1311  0893                     	;# 
  1312  0893                     	;# 
  1313  0894                     	;# 
  1314  0894                     	;# 
  1315  0894                     	;# 
  1316  0895                     	;# 
  1317  0895                     	;# 
  1318  0895                     	;# 
  1319  0896                     	;# 
  1320  0896                     	;# 
  1321  0896                     	;# 
  1322  089B                     	;# 
  1323  0911                     	;# 
  1324  0912                     	;# 
  1325  0913                     	;# 
  1326  0914                     	;# 
  1327  0915                     	;# 
  1328  0916                     	;# 
  1329  0918                     	;# 
  1330  0919                     	;# 
  1331  091A                     	;# 
  1332  091B                     	;# 
  1333  091C                     	;# 
  1334  091D                     	;# 
  1335  091E                     	;# 
  1336  091F                     	;# 
  1337  0E0F                     	;# 
  1338  0E10                     	;# 
  1339  0E11                     	;# 
  1340  0E12                     	;# 
  1341  0E13                     	;# 
  1342  0E14                     	;# 
  1343  0E15                     	;# 
  1344  0E16                     	;# 
  1345  0E17                     	;# 
  1346  0E18                     	;# 
  1347  0E19                     	;# 
  1348  0E1A                     	;# 
  1349  0E1B                     	;# 
  1350  0E1C                     	;# 
  1351  0E1D                     	;# 
  1352  0E1E                     	;# 
  1353  0E1F                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E2F                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0EA0                     	;# 
  1373  0EA1                     	;# 
  1374  0EA2                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0097                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010E                     	;# 
  1479  0111                     	;# 
  1480  0112                     	;# 
  1481  0113                     	;# 
  1482  0114                     	;# 
  1483  0115                     	;# 
  1484  0116                     	;# 
  1485  0117                     	;# 
  1486  0118                     	;# 
  1487  0119                     	;# 
  1488  018C                     	;# 
  1489  018E                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020E                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0216                     	;# 
  1530  0216                     	;# 
  1531  0217                     	;# 
  1532  0217                     	;# 
  1533  0219                     	;# 
  1534  021A                     	;# 
  1535  021B                     	;# 
  1536  021C                     	;# 
  1537  021D                     	;# 
  1538  021D                     	;# 
  1539  021E                     	;# 
  1540  021F                     	;# 
  1541  028C                     	;# 
  1542  028E                     	;# 
  1543  0291                     	;# 
  1544  0291                     	;# 
  1545  0292                     	;# 
  1546  0293                     	;# 
  1547  0294                     	;# 
  1548  0295                     	;# 
  1549  0295                     	;# 
  1550  0296                     	;# 
  1551  0297                     	;# 
  1552  0298                     	;# 
  1553  029F                     	;# 
  1554  030C                     	;# 
  1555  030E                     	;# 
  1556  0311                     	;# 
  1557  0311                     	;# 
  1558  0312                     	;# 
  1559  0313                     	;# 
  1560  0314                     	;# 
  1561  0315                     	;# 
  1562  0315                     	;# 
  1563  0316                     	;# 
  1564  0317                     	;# 
  1565  0318                     	;# 
  1566  038C                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0397                     	;# 
  1572  0398                     	;# 
  1573  0399                     	;# 
  1574  039A                     	;# 
  1575  039C                     	;# 
  1576  039D                     	;# 
  1577  039E                     	;# 
  1578  039F                     	;# 
  1579  0411                     	;# 
  1580  0411                     	;# 
  1581  0412                     	;# 
  1582  0413                     	;# 
  1583  0414                     	;# 
  1584  0415                     	;# 
  1585  0416                     	;# 
  1586  0417                     	;# 
  1587  0418                     	;# 
  1588  0418                     	;# 
  1589  0419                     	;# 
  1590  041A                     	;# 
  1591  041B                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  041F                     	;# 
  1596  0498                     	;# 
  1597  0498                     	;# 
  1598  0499                     	;# 
  1599  049A                     	;# 
  1600  049B                     	;# 
  1601  049B                     	;# 
  1602  049C                     	;# 
  1603  049D                     	;# 
  1604  049E                     	;# 
  1605  049F                     	;# 
  1606  0617                     	;# 
  1607  0618                     	;# 
  1608  0619                     	;# 
  1609  0619                     	;# 
  1610  061A                     	;# 
  1611  061B                     	;# 
  1612  061C                     	;# 
  1613  061C                     	;# 
  1614  061F                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  0711                     	;# 
  1625  0712                     	;# 
  1626  0713                     	;# 
  1627  0714                     	;# 
  1628  0715                     	;# 
  1629  0716                     	;# 
  1630  0717                     	;# 
  1631  0718                     	;# 
  1632  0719                     	;# 
  1633  0891                     	;# 
  1634  0891                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0891                     	;# 
  1638  0891                     	;# 
  1639  0892                     	;# 
  1640  0892                     	;# 
  1641  0892                     	;# 
  1642  0893                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0893                     	;# 
  1647  0893                     	;# 
  1648  0894                     	;# 
  1649  0894                     	;# 
  1650  0894                     	;# 
  1651  0895                     	;# 
  1652  0895                     	;# 
  1653  0895                     	;# 
  1654  0896                     	;# 
  1655  0896                     	;# 
  1656  0896                     	;# 
  1657  089B                     	;# 
  1658  0911                     	;# 
  1659  0912                     	;# 
  1660  0913                     	;# 
  1661  0914                     	;# 
  1662  0915                     	;# 
  1663  0916                     	;# 
  1664  0918                     	;# 
  1665  0919                     	;# 
  1666  091A                     	;# 
  1667  091B                     	;# 
  1668  091C                     	;# 
  1669  091D                     	;# 
  1670  091E                     	;# 
  1671  091F                     	;# 
  1672  0E0F                     	;# 
  1673  0E10                     	;# 
  1674  0E11                     	;# 
  1675  0E12                     	;# 
  1676  0E13                     	;# 
  1677  0E14                     	;# 
  1678  0E15                     	;# 
  1679  0E16                     	;# 
  1680  0E17                     	;# 
  1681  0E18                     	;# 
  1682  0E19                     	;# 
  1683  0E1A                     	;# 
  1684  0E1B                     	;# 
  1685  0E1C                     	;# 
  1686  0E1D                     	;# 
  1687  0E1E                     	;# 
  1688  0E1F                     	;# 
  1689  0E20                     	;# 
  1690  0E21                     	;# 
  1691  0E22                     	;# 
  1692  0E24                     	;# 
  1693  0E25                     	;# 
  1694  0E28                     	;# 
  1695  0E29                     	;# 
  1696  0E2A                     	;# 
  1697  0E2B                     	;# 
  1698  0E2C                     	;# 
  1699  0E2D                     	;# 
  1700  0E2E                     	;# 
  1701  0E2F                     	;# 
  1702  0E90                     	;# 
  1703  0E91                     	;# 
  1704  0E92                     	;# 
  1705  0E94                     	;# 
  1706  0E95                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA2                     	;# 
  1710  0EA3                     	;# 
  1711  0EA4                     	;# 
  1712  0EA5                     	;# 
  1713  0F0F                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F33                     	;# 
  1750  0F34                     	;# 
  1751  0F35                     	;# 
  1752  0F36                     	;# 
  1753  0F37                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000E                     	;# 
  1779  0010                     	;# 
  1780  0011                     	;# 
  1781  0012                     	;# 
  1782  0013                     	;# 
  1783  0014                     	;# 
  1784  0015                     	;# 
  1785  0015                     	;# 
  1786  0016                     	;# 
  1787  0016                     	;# 
  1788  0017                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  0019                     	;# 
  1792  001A                     	;# 
  1793  001B                     	;# 
  1794  001C                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008E                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0092                     	;# 
  1803  0093                     	;# 
  1804  0094                     	;# 
  1805  0097                     	;# 
  1806  009B                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  009F                     	;# 
  1812  010C                     	;# 
  1813  010E                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0117                     	;# 
  1821  0118                     	;# 
  1822  0119                     	;# 
  1823  018C                     	;# 
  1824  018E                     	;# 
  1825  0199                     	;# 
  1826  0199                     	;# 
  1827  0199                     	;# 
  1828  019A                     	;# 
  1829  019A                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019C                     	;# 
  1839  019D                     	;# 
  1840  019D                     	;# 
  1841  019D                     	;# 
  1842  019E                     	;# 
  1843  019E                     	;# 
  1844  019E                     	;# 
  1845  019F                     	;# 
  1846  019F                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  020C                     	;# 
  1851  020E                     	;# 
  1852  0211                     	;# 
  1853  0211                     	;# 
  1854  0212                     	;# 
  1855  0212                     	;# 
  1856  0213                     	;# 
  1857  0213                     	;# 
  1858  0214                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0215                     	;# 
  1864  0216                     	;# 
  1865  0216                     	;# 
  1866  0217                     	;# 
  1867  0217                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021C                     	;# 
  1872  021D                     	;# 
  1873  021D                     	;# 
  1874  021E                     	;# 
  1875  021F                     	;# 
  1876  028C                     	;# 
  1877  028E                     	;# 
  1878  0291                     	;# 
  1879  0291                     	;# 
  1880  0292                     	;# 
  1881  0293                     	;# 
  1882  0294                     	;# 
  1883  0295                     	;# 
  1884  0295                     	;# 
  1885  0296                     	;# 
  1886  0297                     	;# 
  1887  0298                     	;# 
  1888  029F                     	;# 
  1889  030C                     	;# 
  1890  030E                     	;# 
  1891  0311                     	;# 
  1892  0311                     	;# 
  1893  0312                     	;# 
  1894  0313                     	;# 
  1895  0314                     	;# 
  1896  0315                     	;# 
  1897  0315                     	;# 
  1898  0316                     	;# 
  1899  0317                     	;# 
  1900  0318                     	;# 
  1901  038C                     	;# 
  1902  038E                     	;# 
  1903  0391                     	;# 
  1904  0392                     	;# 
  1905  0393                     	;# 
  1906  0397                     	;# 
  1907  0398                     	;# 
  1908  0399                     	;# 
  1909  039A                     	;# 
  1910  039C                     	;# 
  1911  039D                     	;# 
  1912  039E                     	;# 
  1913  039F                     	;# 
  1914  0411                     	;# 
  1915  0411                     	;# 
  1916  0412                     	;# 
  1917  0413                     	;# 
  1918  0414                     	;# 
  1919  0415                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041B                     	;# 
  1927  041C                     	;# 
  1928  041D                     	;# 
  1929  041E                     	;# 
  1930  041F                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0617                     	;# 
  1942  0618                     	;# 
  1943  0619                     	;# 
  1944  0619                     	;# 
  1945  061A                     	;# 
  1946  061B                     	;# 
  1947  061C                     	;# 
  1948  061C                     	;# 
  1949  061F                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  0695                     	;# 
  1955  0696                     	;# 
  1956  0697                     	;# 
  1957  0698                     	;# 
  1958  0699                     	;# 
  1959  0711                     	;# 
  1960  0712                     	;# 
  1961  0713                     	;# 
  1962  0714                     	;# 
  1963  0715                     	;# 
  1964  0716                     	;# 
  1965  0717                     	;# 
  1966  0718                     	;# 
  1967  0719                     	;# 
  1968  0891                     	;# 
  1969  0891                     	;# 
  1970  0891                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0891                     	;# 
  1974  0892                     	;# 
  1975  0892                     	;# 
  1976  0892                     	;# 
  1977  0893                     	;# 
  1978  0893                     	;# 
  1979  0893                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0893                     	;# 
  1983  0894                     	;# 
  1984  0894                     	;# 
  1985  0894                     	;# 
  1986  0895                     	;# 
  1987  0895                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0896                     	;# 
  1991  0896                     	;# 
  1992  089B                     	;# 
  1993  0911                     	;# 
  1994  0912                     	;# 
  1995  0913                     	;# 
  1996  0914                     	;# 
  1997  0915                     	;# 
  1998  0916                     	;# 
  1999  0918                     	;# 
  2000  0919                     	;# 
  2001  091A                     	;# 
  2002  091B                     	;# 
  2003  091C                     	;# 
  2004  091D                     	;# 
  2005  091E                     	;# 
  2006  091F                     	;# 
  2007  0E0F                     	;# 
  2008  0E10                     	;# 
  2009  0E11                     	;# 
  2010  0E12                     	;# 
  2011  0E13                     	;# 
  2012  0E14                     	;# 
  2013  0E15                     	;# 
  2014  0E16                     	;# 
  2015  0E17                     	;# 
  2016  0E18                     	;# 
  2017  0E19                     	;# 
  2018  0E1A                     	;# 
  2019  0E1B                     	;# 
  2020  0E1C                     	;# 
  2021  0E1D                     	;# 
  2022  0E1E                     	;# 
  2023  0E1F                     	;# 
  2024  0E20                     	;# 
  2025  0E21                     	;# 
  2026  0E22                     	;# 
  2027  0E24                     	;# 
  2028  0E25                     	;# 
  2029  0E28                     	;# 
  2030  0E29                     	;# 
  2031  0E2A                     	;# 
  2032  0E2B                     	;# 
  2033  0E2C                     	;# 
  2034  0E2D                     	;# 
  2035  0E2E                     	;# 
  2036  0E2F                     	;# 
  2037  0E90                     	;# 
  2038  0E91                     	;# 
  2039  0E92                     	;# 
  2040  0E94                     	;# 
  2041  0E95                     	;# 
  2042  0EA0                     	;# 
  2043  0EA1                     	;# 
  2044  0EA2                     	;# 
  2045  0EA3                     	;# 
  2046  0EA4                     	;# 
  2047  0EA5                     	;# 
  2048  0F0F                     	;# 
  2049  0F10                     	;# 
  2050  0F11                     	;# 
  2051  0F12                     	;# 
  2052  0F13                     	;# 
  2053  0F14                     	;# 
  2054  0F15                     	;# 
  2055  0F16                     	;# 
  2056  0F17                     	;# 
  2057  0F18                     	;# 
  2058  0F19                     	;# 
  2059  0F1A                     	;# 
  2060  0F1B                     	;# 
  2061  0F1C                     	;# 
  2062  0F1D                     	;# 
  2063  0F1E                     	;# 
  2064  0F1F                     	;# 
  2065  0F20                     	;# 
  2066  0F21                     	;# 
  2067  0F22                     	;# 
  2068  0F23                     	;# 
  2069  0F24                     	;# 
  2070  0F25                     	;# 
  2071  0F26                     	;# 
  2072  0F27                     	;# 
  2073  0F28                     	;# 
  2074  0F29                     	;# 
  2075  0F2A                     	;# 
  2076  0F2B                     	;# 
  2077  0F2C                     	;# 
  2078  0F2D                     	;# 
  2079  0F2E                     	;# 
  2080  0F2F                     	;# 
  2081  0F30                     	;# 
  2082  0F31                     	;# 
  2083  0F32                     	;# 
  2084  0F33                     	;# 
  2085  0F34                     	;# 
  2086  0F35                     	;# 
  2087  0F36                     	;# 
  2088  0F37                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEF                     	;# 
  2100  1FE0                     _romArray_absaddr	set	8160
  2101                           
  2102                           	psect	stringtext1
  2103  0643                     __pstringtext1:	
  2104  0643                     _resetRomData:	
  2105  0643  34AA               	retlw	170
  2106  0644  3455               	retlw	85
  2107  0645  346E               	retlw	110
  2108  0646  3463               	retlw	99
  2109  0647  346F               	retlw	111
  2110  0648  346E               	retlw	110
  2111  0649  3466               	retlw	102
  2112  064A  3469               	retlw	105
  2113  064B  3467               	retlw	103
  2114  064C  3475               	retlw	117
  2115  064D  3472               	retlw	114
  2116  064E  3465               	retlw	101
  2117  064F  3464               	retlw	100
  2118  0650  3400               	retlw	0
  2119  0651  3400               	retlw	0
  2120  0652  3400               	retlw	0
  2121  0653  3400               	retlw	0
  2122  0654  3400               	retlw	0
  2123  0655  3400               	retlw	0
  2124  0656                     __end_of_resetRomData:	
  2125                           
  2126                           	psect	stringtext2
  2127  06B6                     __pstringtext2:	
  2128  06B6                     _n_ADDRESS_P0:	
  2129  06B6  34AD               	retlw	173
  2130  06B7  3487               	retlw	135
  2131  06B8  3466               	retlw	102
  2132  06B9  34BC               	retlw	188
  2133  06BA  34BB               	retlw	187
  2134  06BB                     __end_of_n_ADDRESS_P0:	
  2135                           
  2136                           	psect	stringtext3
  2137  06DA                     __pstringtext3:	
  2138  06DA                     _n_ADDRESS_MUL:	
  2139  06DA  3421               	retlw	33
  2140  06DB                     __end_of_n_ADDRESS_MUL:	
  2141  1FE0                     _romArray_absaddr	set	8160
  2142                           
  2143                           	psect	_romArray_text
  2144  1FE0                     __p_romArray_text:	
  2145  1FE0                     _romArray:	
  2146  1FE0  3400               	retlw	0
  2147  1FE1  3400               	retlw	0
  2148  1FE2  3400               	retlw	0
  2149  1FE3  3400               	retlw	0
  2150  1FE4  3400               	retlw	0
  2151  1FE5  3400               	retlw	0
  2152  1FE6  3400               	retlw	0
  2153  1FE7  3400               	retlw	0
  2154  1FE8  3400               	retlw	0
  2155  1FE9  3400               	retlw	0
  2156  1FEA  3400               	retlw	0
  2157  1FEB  3400               	retlw	0
  2158  1FEC  3400               	retlw	0
  2159  1FED  3400               	retlw	0
  2160  1FEE  3400               	retlw	0
  2161  1FEF  3400               	retlw	0
  2162  1FF0  3400               	retlw	0
  2163  1FF1  3400               	retlw	0
  2164  1FF2  3400               	retlw	0
  2165  1FF3  3400               	retlw	0
  2166  1FF4  3400               	retlw	0
  2167  1FF5  3400               	retlw	0
  2168  1FF6  3400               	retlw	0
  2169  1FF7  3400               	retlw	0
  2170  1FF8  3400               	retlw	0
  2171  1FF9  3400               	retlw	0
  2172  1FFA  3400               	retlw	0
  2173  1FFB  3400               	retlw	0
  2174  1FFC  3400               	retlw	0
  2175  1FFD  3400               	retlw	0
  2176  1FFE  3400               	retlw	0
  2177  1FFF  3400               	retlw	0
  2178  2000                     __end_of_romArray:	
  2179  0010                     _PIR0bits	set	16
  2180  000E                     _PORTCbits	set	14
  2181  000C                     _PORTAbits	set	12
  2182  000B                     _INTCONbits	set	11
  2183  0097                     _WDTCONbits	set	151
  2184  009E                     _ADCON1bits	set	158
  2185  009C                     _ADRESH	set	156
  2186  009B                     _ADRESL	set	155
  2187  009D                     _ADCON0bits	set	157
  2188  0090                     _PIE0bits	set	144
  2189  008E                     _TRISCbits	set	142
  2190  008C                     _TRISAbits	set	140
  2191  0117                     _FVRCONbits	set	279
  2192  018E                     _ANSELCbits	set	398
  2193  018C                     _ANSELAbits	set	396
  2194  018E                     _ANSELC	set	398
  2195  018C                     _ANSELA	set	396
  2196  020C                     _WPUAbits	set	524
  2197  0211                     _SSP1BUF	set	529
  2198  0214                     _SSP1STATbits	set	532
  2199  0215                     _SSPCON1bits	set	533
  2200  028E                     _ODCONC	set	654
  2201  028C                     _ODCONA	set	652
  2202  030E                     _SLRCONC	set	782
  2203  030C                     _SLRCONA	set	780
  2204  038E                     _INLVLC	set	910
  2205  038C                     _INLVLA	set	908
  2206  0894                     _PMDATH	set	2196
  2207  0893                     _PMDATL	set	2195
  2208  0896                     _PMCON2	set	2198
  2209  0895                     _PMCON1bits	set	2197
  2210  0892                     _PMADRH	set	2194
  2211  0891                     _PMADRL	set	2193
  2212  0895                     _PMCON1	set	2197
  2213                           
  2214                           	psect	stringtext4
  2215  0666                     __pstringtext4:	
  2216  0666                     STR_6:	
  2217  0666  3455               	retlw	85	;'U'
  2218  0667  346E               	retlw	110	;'n'
  2219  0668  3463               	retlw	99	;'c'
  2220  0669  346F               	retlw	111	;'o'
  2221  066A  346E               	retlw	110	;'n'
  2222  066B  3466               	retlw	102	;'f'
  2223  066C  3469               	retlw	105	;'i'
  2224  066D  3467               	retlw	103	;'g'
  2225  066E  3475               	retlw	117	;'u'
  2226  066F  3472               	retlw	114	;'r'
  2227  0670  3465               	retlw	101	;'e'
  2228  0671  3464               	retlw	100	;'d'
  2229  0672  3448               	retlw	72	;'H'
  2230  0673  3400               	retlw	0
  2231                           
  2232                           	psect	stringtext5
  2233  06A4                     __pstringtext5:	
  2234  06A4                     STR_5:	
  2235  06A4  3441               	retlw	65	;'A'
  2236  06A5  3444               	retlw	68	;'D'
  2237  06A6  3443               	retlw	67	;'C'
  2238  06A7  3433               	retlw	51	;'3'
  2239  06A8  3431               	retlw	49	;'1'
  2240  06A9  3400               	retlw	0
  2241                           
  2242                           	psect	stringtext6
  2243  06AA                     __pstringtext6:	
  2244  06AA                     STR_4:	
  2245  06AA  3441               	retlw	65	;'A'
  2246  06AB  3444               	retlw	68	;'D'
  2247  06AC  3443               	retlw	67	;'C'
  2248  06AD  3432               	retlw	50	;'2'
  2249  06AE  3439               	retlw	57	;'9'
  2250  06AF  3400               	retlw	0
  2251                           
  2252                           	psect	stringtext7
  2253  06BB                     __pstringtext7:	
  2254  06BB                     STR_2:	
  2255  06BB  3441               	retlw	65	;'A'
  2256  06BC  3444               	retlw	68	;'D'
  2257  06BD  3443               	retlw	67	;'C'
  2258  06BE  3433               	retlw	51	;'3'
  2259  06BF  3400               	retlw	0
  2260                           
  2261                           	psect	stringtext8
  2262  06C0                     __pstringtext8:	
  2263  06C0                     STR_3:	
  2264  06C0  3441               	retlw	65	;'A'
  2265  06C1  3444               	retlw	68	;'D'
  2266  06C2  3443               	retlw	67	;'C'
  2267  06C3  3437               	retlw	55	;'7'
  2268  06C4  3400               	retlw	0
  2269                           
  2270                           	psect	stringtext9
  2271  06C5                     __pstringtext9:	
  2272  06C5                     STR_7:	
  2273  06C5  3442               	retlw	66	;'B'
  2274  06C6  344F               	retlw	79	;'O'
  2275  06C7  344F               	retlw	79	;'O'
  2276  06C8  3454               	retlw	84	;'T'
  2277  06C9  3400               	retlw	0
  2278                           
  2279                           	psect	stringtext10
  2280  06CA                     __pstringtext10:	
  2281  06CA                     STR_1:	
  2282  06CA  3444               	retlw	68	;'D'
  2283  06CB  3442               	retlw	66	;'B'
  2284  06CC  3447               	retlw	71	;'G'
  2285  06CD  3400               	retlw	0
  2286                           
  2287                           	psect	stringtext11
  2288  0000                     __pstringtext11:	
  2289                           
  2290                           ; #config settings
  2291  0000                     
  2292                           	psect	cinit
  2293  0011                     start_initialization:	
  2294  0011                     __initialization:	
  2295                           
  2296                           ; Clear objects allocated to BANK0
  2297  0011  3047               	movlw	low __pbssBANK0
  2298  0012  0084               	movwf	4
  2299  0013  3000               	movlw	high __pbssBANK0
  2300  0014  0085               	movwf	5
  2301  0015  3026               	movlw	38
  2302  0016  3186  26B0  3180   	fcall	clear_ram0
  2303                           
  2304                           ; Clear objects allocated to BANK1
  2305  0019  30A0               	movlw	low __pbssBANK1
  2306  001A  0084               	movwf	4
  2307  001B  3000               	movlw	high __pbssBANK1
  2308  001C  0085               	movwf	5
  2309  001D  3033               	movlw	51
  2310  001E  3186  26B0  3180   	fcall	clear_ram0
  2311                           
  2312                           ; Clear objects allocated to BANK2
  2313  0021  3020               	movlw	low __pbssBANK2
  2314  0022  0084               	movwf	4
  2315  0023  3001               	movlw	high __pbssBANK2
  2316  0024  0085               	movwf	5
  2317  0025  3020               	movlw	32
  2318  0026  3186  26B0         	fcall	clear_ram0
  2319  0028                     end_of_initialization:	
  2320                           ;End of C runtime variable initialization code
  2321                           
  2322  0028                     __end_of__initialization:	
  2323  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2324  0029  0020               	movlb	0
  2325  002A  3182  2ACF         	ljmp	_main	;jump to C main() function
  2326                           
  2327                           	psect	bssBANK0
  2328  0047                     __pbssBANK0:	
  2329  0047                     _counter:	
  2330  0047                     	ds	2
  2331  0049                     _nrf24l01RXPacketData:	
  2332  0049                     	ds	1
  2333  004A                     _sleepLoop:	
  2334  004A                     	ds	1
  2335  004B                     _nrf24l01:	
  2336  004B                     	ds	1
  2337  004C                     _nrf24l01TXPacketData:	
  2338  004C                     	ds	1
  2339  004D                     _nrf24l01RXValue:	
  2340  004D                     	ds	8
  2341  0055                     _nrf24l01RXTopic:	
  2342  0055                     	ds	8
  2343  005D                     _nrf24l01TXValue:	
  2344  005D                     	ds	8
  2345  0065                     _nrf24l01TXTopic:	
  2346  0065                     	ds	8
  2347                           
  2348                           	psect	bssBANK1
  2349  00A0                     __pbssBANK1:	
  2350  00A0                     _romData:	
  2351  00A0                     	ds	19
  2352  00B3                     _nrf24l01RXName:	
  2353  00B3                     	ds	16
  2354  00C3                     _nrf24l01TXName:	
  2355  00C3                     	ds	16
  2356                           
  2357                           	psect	bssBANK2
  2358  0120                     __pbssBANK2:	
  2359  0120                     _romHolder:	
  2360  0120                     	ds	32
  2361                           
  2362                           	psect	clrtext
  2363  06B0                     clear_ram0:	
  2364                           ;	Called with FSR0 containing the base address, and
  2365                           ;	WREG with the size to clear
  2366                           
  2367  06B0  0064               	clrwdt	;clear the watchdog before getting into this loop
  2368  06B1                     clrloop0:	
  2369  06B1  0180               	clrf	0	;clear RAM location pointed to by FSR
  2370  06B2  3101               	addfsr 0,1
  2371  06B3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2372  06B4  2EB1               	goto	clrloop0	;have we reached the end yet?
  2373  06B5  3400               	retlw	0	;all done for this memory range, return
  2374                           
  2375                           	psect	cstackCOMMON
  2376  0070                     __pcstackCOMMON:	
  2377  0070                     ?_nrf24l01ISR:	
  2378  0070                     ?_nrf24l01SetRXMode:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_nrf24l01SendString:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_nrf24l01Init:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_flashWriteByte:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_flashUpdate:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_nrf24l01CELow:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ??_nrf24l01CELow:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_nrf24l01CEHigh:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ??_nrf24l01CEHigh:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_nrf24l01CSLow:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ??_nrf24l01CSLow:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_nrf24l01CSHigh:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ??_nrf24l01CSHigh:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_nrf24l01InterfaceInit:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ?_nrf24l01SPISend:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ??_nrf24l01SPISend:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ?_nrf24l01SPIStart:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ??_nrf24l01SPIStart:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ?_nrf24l01SPIEnd:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ??_nrf24l01SPIEnd:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_enableInterrupts:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ??_enableInterrupts:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_exception:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_ISR:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_sleep:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_loop:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_main:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_nrf24l01InitRegisters:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?i1_nrf24l01SetRXMode:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     nrf24l01SPISend@data:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     enableInterrupts@enable:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     nrf24l01InitRegisters@isReciever:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     flashWriteByte@offset:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477                           
  2478                           ; 2 bytes @ 0x0
  2479  0070                     	ds	1
  2480  0071                     ?i1_nrf24l01Send:	
  2481  0071                     i1nrf24l01Send@data:	
  2482                           ; 1 bytes @ 0x1
  2483                           
  2484                           
  2485                           ; 1 bytes @ 0x1
  2486  0071                     	ds	1
  2487  0072                     ??i1_nrf24l01Send:	
  2488  0072                     flashWriteByte@data:	
  2489                           ; 1 bytes @ 0x2
  2490                           
  2491                           
  2492                           ; 2 bytes @ 0x2
  2493  0072                     	ds	1
  2494  0073                     i1nrf24l01Send@command:	
  2495                           
  2496                           ; 1 bytes @ 0x3
  2497  0073                     	ds	1
  2498  0074                     ??_flashWriteByte:	
  2499  0074                     ??i1_nrf24l01SetRXMode:	
  2500                           ; 1 bytes @ 0x4
  2501                           
  2502  0074                     flashWriteByte@address:	
  2503                           ; 1 bytes @ 0x4
  2504                           
  2505                           
  2506                           ; 2 bytes @ 0x4
  2507  0074                     	ds	1
  2508  0075                     i1nrf24l01SetRXMode@config:	
  2509                           
  2510                           ; 1 bytes @ 0x5
  2511  0075                     	ds	1
  2512  0076                     ??_flashUpdate:	
  2513  0076                     i1nrf24l01SetRXMode@rxMode:	
  2514                           ; 1 bytes @ 0x6
  2515                           
  2516                           
  2517                           ; 1 bytes @ 0x6
  2518  0076                     	ds	2
  2519  0078                     flashUpdate@i:	
  2520                           
  2521                           ; 2 bytes @ 0x8
  2522  0078                     	ds	2
  2523  007A                     ??_exception:	
  2524                           
  2525                           ; 1 bytes @ 0xA
  2526  007A                     	ds	2
  2527  007C                     exception@exception:	
  2528                           
  2529                           ; 1 bytes @ 0xC
  2530  007C                     	ds	1
  2531  007D                     ??_nrf24l01ISR:	
  2532                           
  2533                           ; 1 bytes @ 0xD
  2534  007D                     	ds	1
  2535  007E                     ??_ISR:	
  2536                           
  2537                           	psect	cstackBANK0
  2538  0020                     __pcstackBANK0:	
  2539                           ; 1 bytes @ 0xE
  2540                           
  2541  0020                     nrf24l01ISR@status:	
  2542                           
  2543                           ; 1 bytes @ 0x0
  2544  0020                     	ds	1
  2545  0021                     ?_strcpy:	
  2546  0021                     ??_nrf24l01InterfaceInit:	
  2547                           ; 1 bytes @ 0x1
  2548                           
  2549  0021                     ??_sleep:	
  2550                           ; 1 bytes @ 0x1
  2551                           
  2552  0021                     ?_nrf24l01Send:	
  2553                           ; 1 bytes @ 0x1
  2554                           
  2555  0021                     ?___lwdiv:	
  2556                           ; 1 bytes @ 0x1
  2557                           
  2558  0021                     ?___lwmod:	
  2559                           ; 2 bytes @ 0x1
  2560                           
  2561  0021                     ?___lmul:	
  2562                           ; 2 bytes @ 0x1
  2563                           
  2564  0021                     ?___lldiv:	
  2565                           ; 4 bytes @ 0x1
  2566                           
  2567  0021                     nrf24l01Send@data:	
  2568                           ; 4 bytes @ 0x1
  2569                           
  2570  0021                     ___lwdiv@divisor:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573  0021                     ___lwmod@divisor:	
  2574                           ; 2 bytes @ 0x1
  2575                           
  2576  0021                     strcpy@from:	
  2577                           ; 2 bytes @ 0x1
  2578                           
  2579  0021                     ___lmul@multiplier:	
  2580                           ; 2 bytes @ 0x1
  2581                           
  2582  0021                     ___lldiv@divisor:	
  2583                           ; 4 bytes @ 0x1
  2584                           
  2585                           
  2586                           ; 4 bytes @ 0x1
  2587  0021                     	ds	1
  2588  0022                     ??_nrf24l01Send:	
  2589                           
  2590                           ; 1 bytes @ 0x2
  2591  0022                     	ds	1
  2592  0023                     ??_strcpy:	
  2593  0023                     nrf24l01Send@command:	
  2594                           ; 1 bytes @ 0x3
  2595                           
  2596  0023                     ___lwdiv@dividend:	
  2597                           ; 1 bytes @ 0x3
  2598                           
  2599  0023                     ___lwmod@dividend:	
  2600                           ; 2 bytes @ 0x3
  2601                           
  2602                           
  2603                           ; 2 bytes @ 0x3
  2604  0023                     	ds	1
  2605  0024                     ??_nrf24l01SetRXMode:	
  2606  0024                     ??_nrf24l01InitRegisters:	
  2607                           ; 1 bytes @ 0x4
  2608                           
  2609  0024                     strcpy@cp:	
  2610                           ; 1 bytes @ 0x4
  2611                           
  2612                           
  2613                           ; 1 bytes @ 0x4
  2614  0024                     	ds	1
  2615  0025                     ??___lwdiv:	
  2616  0025                     ??___lwmod:	
  2617                           ; 1 bytes @ 0x5
  2618                           
  2619  0025                     nrf24l01SetRXMode@config:	
  2620                           ; 1 bytes @ 0x5
  2621                           
  2622  0025                     nrf24l01InitRegisters@setupAW:	
  2623                           ; 1 bytes @ 0x5
  2624                           
  2625  0025                     strcpy@to:	
  2626                           ; 1 bytes @ 0x5
  2627                           
  2628  0025                     ___lmul@multiplicand:	
  2629                           ; 1 bytes @ 0x5
  2630                           
  2631  0025                     ___lldiv@dividend:	
  2632                           ; 4 bytes @ 0x5
  2633                           
  2634                           
  2635                           ; 4 bytes @ 0x5
  2636  0025                     	ds	1
  2637  0026                     nrf24l01SetRXMode@rxMode:	
  2638  0026                     nrf24l01InitRegisters@rfSetup:	
  2639                           ; 1 bytes @ 0x6
  2640                           
  2641  0026                     ___lwmod@counter:	
  2642                           ; 1 bytes @ 0x6
  2643                           
  2644  0026                     ___lwdiv@quotient:	
  2645                           ; 1 bytes @ 0x6
  2646                           
  2647                           
  2648                           ; 2 bytes @ 0x6
  2649  0026                     	ds	1
  2650  0027                     ??_nrf24l01SendString:	
  2651  0027                     nrf24l01InitRegisters@feature:	
  2652                           ; 1 bytes @ 0x7
  2653                           
  2654                           
  2655                           ; 1 bytes @ 0x7
  2656  0027                     	ds	1
  2657  0028                     nrf24l01InitRegisters@status:	
  2658  0028                     ___lwdiv@counter:	
  2659                           ; 1 bytes @ 0x8
  2660                           
  2661                           
  2662                           ; 1 bytes @ 0x8
  2663  0028                     	ds	1
  2664  0029                     ??___lmul:	
  2665  0029                     ??___lldiv:	
  2666                           ; 1 bytes @ 0x9
  2667                           
  2668  0029                     nrf24l01SendString@i:	
  2669                           ; 1 bytes @ 0x9
  2670                           
  2671  0029                     nrf24l01InitRegisters@enRXAddr:	
  2672                           ; 1 bytes @ 0x9
  2673                           
  2674  0029                     ___lmul@product:	
  2675                           ; 1 bytes @ 0x9
  2676                           
  2677                           
  2678                           ; 4 bytes @ 0x9
  2679  0029                     	ds	1
  2680  002A                     nrf24l01InitRegisters@enAA:	
  2681  002A                     ___lldiv@quotient:	
  2682                           ; 1 bytes @ 0xA
  2683                           
  2684                           
  2685                           ; 4 bytes @ 0xA
  2686  002A                     	ds	1
  2687  002B                     nrf24l01InitRegisters@DynPD:	
  2688                           
  2689                           ; 1 bytes @ 0xB
  2690  002B                     	ds	1
  2691  002C                     nrf24l01InitRegisters@config:	
  2692                           
  2693                           ; 1 bytes @ 0xC
  2694  002C                     	ds	1
  2695  002D                     ??_nrf24l01Init:	
  2696                           
  2697                           ; 1 bytes @ 0xD
  2698  002D                     	ds	1
  2699  002E                     ___lldiv@counter:	
  2700                           
  2701                           ; 1 bytes @ 0xE
  2702  002E                     	ds	1
  2703  002F                     ?_getADCValue:	
  2704  002F                     nrf24l01Init@isReciever:	
  2705                           ; 4 bytes @ 0xF
  2706                           
  2707  002F                     getADCValue@divider:	
  2708                           ; 1 bytes @ 0xF
  2709                           
  2710                           
  2711                           ; 4 bytes @ 0xF
  2712  002F                     	ds	4
  2713  0033                     ??_getADCValue:	
  2714                           
  2715                           ; 1 bytes @ 0x13
  2716  0033                     	ds	4
  2717  0037                     getADCValue@channel:	
  2718                           
  2719                           ; 1 bytes @ 0x17
  2720  0037                     	ds	1
  2721  0038                     getADCValue@adcLoop:	
  2722                           
  2723                           ; 1 bytes @ 0x18
  2724  0038                     	ds	1
  2725  0039                     getADCValue@adcSum:	
  2726                           
  2727                           ; 4 bytes @ 0x19
  2728  0039                     	ds	4
  2729  003D                     ?_utoa:	
  2730  003D                     utoa@val:	
  2731                           ; 1 bytes @ 0x1D
  2732                           
  2733                           
  2734                           ; 2 bytes @ 0x1D
  2735  003D                     	ds	2
  2736  003F                     utoa@base:	
  2737                           
  2738                           ; 2 bytes @ 0x1F
  2739  003F                     	ds	2
  2740  0041                     ??_utoa:	
  2741                           
  2742                           ; 1 bytes @ 0x21
  2743  0041                     	ds	1
  2744  0042                     utoa@v:	
  2745                           
  2746                           ; 2 bytes @ 0x22
  2747  0042                     	ds	2
  2748  0044                     utoa@c:	
  2749                           
  2750                           ; 1 bytes @ 0x24
  2751  0044                     	ds	1
  2752  0045                     utoa@buf:	
  2753                           
  2754                           ; 1 bytes @ 0x25
  2755  0045                     	ds	1
  2756  0046                     ??_loop:	
  2757  0046                     ??_main:	
  2758                           ; 1 bytes @ 0x26
  2759                           
  2760                           
  2761                           ; 1 bytes @ 0x26
  2762  0046                     	ds	1
  2763                           
  2764                           	psect	maintext
  2765  02CF                     __pmaintext:	
  2766 ;;
  2767 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2768 ;;
  2769 ;; *************** function _main *****************
  2770 ;; Defined at:
  2771 ;;		line 120 in file "main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : B1F/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels required when called:   12
  2791 ;; This function calls:
  2792 ;;		_loop
  2793 ;;		_nrf24l01Init
  2794 ;;		_nrf24l01SendString
  2795 ;;		_sleep
  2796 ;;		_strcpy
  2797 ;;		_utoa
  2798 ;; This function is called by:
  2799 ;;		Startup code after reset
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _main
  2805  02CF                     _main:	
  2806                           
  2807                           ;main.c: 123: ANSELA = 0x00;
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2811  02CF  0023               	movlb	3	; select bank3
  2812  02D0  018C               	clrf	12	;volatile
  2813                           
  2814                           ;main.c: 124: ANSELC = 0x00;
  2815  02D1  018E               	clrf	14	;volatile
  2816                           
  2817                           ;main.c: 126: ODCONA = 0x00;
  2818  02D2  0025               	movlb	5	; select bank5
  2819  02D3  018C               	clrf	12	;volatile
  2820                           
  2821                           ;main.c: 127: ODCONC = 0x00;
  2822  02D4  018E               	clrf	14	;volatile
  2823                           
  2824                           ;main.c: 129: SLRCONA = 0x00;
  2825  02D5  0026               	movlb	6	; select bank6
  2826  02D6  018C               	clrf	12	;volatile
  2827                           
  2828                           ;main.c: 130: SLRCONC = 0x00;
  2829  02D7  018E               	clrf	14	;volatile
  2830                           
  2831                           ;main.c: 132: INLVLA = 0x00;
  2832  02D8  0027               	movlb	7	; select bank7
  2833  02D9  018C               	clrf	12	;volatile
  2834                           
  2835                           ;main.c: 133: INLVLC = 0x00;
  2836  02DA  018E               	clrf	14	;volatile
  2837                           
  2838                           ;main.c: 135: TRISCbits.TRISC5 = 0;
  2839  02DB  0021               	movlb	1	; select bank1
  2840  02DC  128E               	bcf	14,5	;volatile
  2841                           
  2842                           ;main.c: 136: TRISCbits.TRISC4 = 0;
  2843  02DD  120E               	bcf	14,4	;volatile
  2844                           
  2845                           ;main.c: 138: PORTCbits.RC4 = 0;
  2846  02DE  0020               	movlb	0	; select bank0
  2847  02DF  120E               	bcf	14,4	;volatile
  2848                           
  2849                           ;main.c: 145: INTCONbits.PEIE = 0;
  2850  02E0  130B               	bcf	11,6	;volatile
  2851                           
  2852                           ;main.c: 146: INTCONbits.GIE = 0;
  2853  02E1  138B               	bcf	11,7	;volatile
  2854                           
  2855                           ;main.c: 151: _delay((unsigned long)((10)*(16000000/4000.0)));
  2856  02E2  3034               	movlw	52
  2857  02E3  0020               	movlb	0	; select bank0
  2858  02E4  00C6               	movwf	??_main
  2859  02E5  30F1               	movlw	241
  2860  02E6                     u1527:	
  2861  02E6  0B89               	decfsz	9,f
  2862  02E7  2AE6               	goto	u1527
  2863  02E8  0BC6               	decfsz	??_main,f
  2864  02E9  2AE6               	goto	u1527
  2865  02EA  3200               	nop2
  2866                           
  2867                           ;main.c: 155: strcpy(nrf24l01TXName, "UnconfiguredH");
  2868  02EB  3066               	movlw	low (STR_6| (0+32768))
  2869  02EC  0020               	movlb	0	; select bank0
  2870  02ED  00A1               	movwf	strcpy@from
  2871  02EE  3086               	movlw	high (STR_6| (0+32768))
  2872  02EF  00A2               	movwf	strcpy@from+1
  2873  02F0  30C3               	movlw	(low (_nrf24l01TXName| 0))& (0+255)
  2874  02F1  3186  260D  3182   	fcall	_strcpy
  2875                           
  2876                           ;main.c: 157: nrf24l01Init(0);
  2877  02F4  3000               	movlw	0
  2878  02F5  3185  25A2  3182   	fcall	_nrf24l01Init
  2879                           
  2880                           ;main.c: 163: FVRCONbits.FVREN = 0;
  2881  02F8  0022               	movlb	2	; select bank2
  2882  02F9  1397               	bcf	23,7	;volatile
  2883                           
  2884                           ;main.c: 164: FVRCONbits.ADFVR = 1;
  2885  02FA  0817               	movf	23,w	;volatile
  2886  02FB  39FC               	andlw	-4
  2887  02FC  3801               	iorlw	1
  2888  02FD  0097               	movwf	23	;volatile
  2889                           
  2890                           ;main.c: 165: FVRCONbits.FVREN = 1;
  2891  02FE  1797               	bsf	23,7	;volatile
  2892                           
  2893                           ;main.c: 168: FVRCONbits.TSEN = 0;
  2894  02FF  1297               	bcf	23,5	;volatile
  2895                           
  2896                           ;main.c: 169: FVRCONbits.TSRNG = 0;
  2897  0300  1217               	bcf	23,4	;volatile
  2898                           
  2899                           ;main.c: 170: FVRCONbits.TSEN = 1;
  2900  0301  1697               	bsf	23,5	;volatile
  2901                           
  2902                           ;main.c: 173: ADCON0bits.ADON = 0;
  2903  0302  0021               	movlb	1	; select bank1
  2904  0303  101D               	bcf	29,0	;volatile
  2905                           
  2906                           ;main.c: 175: ANSELAbits.ANSA4 = 1;
  2907  0304  0023               	movlb	3	; select bank3
  2908  0305  160C               	bsf	12,4	;volatile
  2909                           
  2910                           ;main.c: 176: TRISAbits.TRISA4 = 1;
  2911  0306  0021               	movlb	1	; select bank1
  2912  0307  160C               	bsf	12,4	;volatile
  2913                           
  2914                           ;main.c: 177: WPUAbits.WPUA4 = 0;
  2915  0308  0024               	movlb	4	; select bank4
  2916  0309  120C               	bcf	12,4	;volatile
  2917                           
  2918                           ;main.c: 179: ANSELCbits.ANSC3 = 1;
  2919  030A  0023               	movlb	3	; select bank3
  2920  030B  158E               	bsf	14,3	;volatile
  2921                           
  2922                           ;main.c: 180: TRISCbits.TRISC3 = 1;
  2923  030C  0021               	movlb	1	; select bank1
  2924  030D  158E               	bsf	14,3	;volatile
  2925                           
  2926                           ;main.c: 182: ADCON1bits.ADCS = 0b111;
  2927  030E  3070               	movlw	112
  2928  030F  049E               	iorwf	30,f	;volatile
  2929                           
  2930                           ;main.c: 183: ADCON1bits.ADFM = 1;
  2931  0310  179E               	bsf	30,7	;volatile
  2932                           
  2933                           ;main.c: 184: ADCON1bits.ADPREF = 0b00;
  2934  0311  30FC               	movlw	-4
  2935  0312  059E               	andwf	30,f	;volatile
  2936                           
  2937                           ;main.c: 186: ADCON0bits.CHS = 3;
  2938  0313  081D               	movf	29,w	;volatile
  2939  0314  3903               	andlw	-253
  2940  0315  380C               	iorlw	12
  2941  0316  009D               	movwf	29	;volatile
  2942                           
  2943                           ;main.c: 187: ADCON0bits.ADON = 1;
  2944  0317  141D               	bsf	29,0	;volatile
  2945                           
  2946                           ;main.c: 191: TRISAbits.TRISA2 = 1;
  2947  0318  150C               	bsf	12,2	;volatile
  2948                           
  2949                           ;main.c: 192: PIE0bits.INTE = 1;
  2950  0319  1410               	bsf	16,0	;volatile
  2951                           
  2952                           ;main.c: 193: INTCONbits.INTEDG = 0;
  2953  031A  100B               	bcf	11,0	;volatile
  2954                           
  2955                           ;main.c: 197: WDTCONbits.WDTPS = 15;
  2956  031B  0817               	movf	23,w	;volatile
  2957  031C  39C1               	andlw	-63
  2958  031D  381E               	iorlw	30
  2959  031E  0097               	movwf	23	;volatile
  2960                           
  2961                           ;main.c: 200: TRISAbits.TRISA5 = 0;
  2962  031F  128C               	bcf	12,5	;volatile
  2963                           
  2964                           ;main.c: 201: PORTAbits.RA5 = 0;
  2965  0320  0020               	movlb	0	; select bank0
  2966  0321  128C               	bcf	12,5	;volatile
  2967                           
  2968                           ;main.c: 204: INTCONbits.PEIE = 1;
  2969  0322  170B               	bsf	11,6	;volatile
  2970                           
  2971                           ;main.c: 205: INTCONbits.GIE = 1;
  2972  0323  178B               	bsf	11,7	;volatile
  2973                           
  2974                           ;main.c: 207: strcpy(nrf24l01TXTopic, "BOOT");
  2975  0324  30C5               	movlw	low (STR_7| (0+32768))
  2976  0325  00A1               	movwf	strcpy@from
  2977  0326  3086               	movlw	high (STR_7| (0+32768))
  2978  0327  00A2               	movwf	strcpy@from+1
  2979  0328  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  2980  0329  3186  260D  3182   	fcall	_strcpy
  2981                           
  2982                           ;main.c: 209: utoa(nrf24l01TXValue, romData.bootMode, 10);
  2983  032C  0021               	movlb	1	; select bank1
  2984  032D  0832               	movf	((_romData+1)^(0+128)+17),w
  2985  032E  0020               	movlb	0	; select bank0
  2986  032F  00BE               	movwf	utoa@val+1
  2987  0330  0021               	movlb	1	; select bank1
  2988  0331  0831               	movf	(_romData^(0+128)+17),w
  2989  0332  0020               	movlb	0	; select bank0
  2990  0333  00BD               	movwf	utoa@val
  2991  0334  300A               	movlw	10
  2992  0335  00BF               	movwf	utoa@base
  2993  0336  3000               	movlw	0
  2994  0337  00C0               	movwf	utoa@base+1
  2995  0338  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  2996  0339  3183  2349  3182   	fcall	_utoa
  2997                           
  2998                           ;main.c: 211: nrf24l01TXPacketData.byte = 0x00;
  2999  033C  0020               	movlb	0	; select bank0
  3000  033D  01CC               	clrf	_nrf24l01TXPacketData
  3001                           
  3002                           ;main.c: 212: nrf24l01TXPacketData.ACKRequest = 0;
  3003  033E  104C               	bcf	_nrf24l01TXPacketData,0
  3004                           
  3005                           ;main.c: 215: nrf24l01SendString();
  3006  033F  3181  2100  3182   	fcall	_nrf24l01SendString
  3007                           
  3008                           ;main.c: 217: sleep();
  3009  0342  3183  23FE  3182   	fcall	_sleep
  3010  0345                     l2769:	
  3011                           ;main.c: 219: while(1){
  3012                           
  3013                           
  3014                           ;main.c: 220: loop();
  3015  0345  3180  202C  3182   	fcall	_loop
  3016  0348  2B45               	goto	l2769
  3017  0349                     __end_of_main:	
  3018                           ;main.c: 221: };main.c: 223: return;
  3019                           
  3020                           
  3021                           	psect	text1
  3022  05A2                     __ptext1:	
  3023 ;; *************** function _nrf24l01Init *****************
  3024 ;; Defined at:
  3025 ;;		line 452 in file "nrf24l01.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  isReciever      1    wreg     unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  isReciever      1   15[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        3 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:   10
  3046 ;; This function calls:
  3047 ;;		_nrf24l01CEHigh
  3048 ;;		_nrf24l01CELow
  3049 ;;		_nrf24l01InitRegisters
  3050 ;;		_nrf24l01InterfaceInit
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _nrf24l01Init
  3058  05A2                     _nrf24l01Init:	
  3059                           
  3060                           ;incstack = 0
  3061                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3062                           ;nrf24l01Init@isReciever stored from wreg
  3063  05A2  0020               	movlb	0	; select bank0
  3064  05A3  00AF               	movwf	nrf24l01Init@isReciever
  3065                           
  3066                           ;nrf24l01.c: 455: nrf24l01InterfaceInit();
  3067  05A4  3186  2656  3185   	fcall	_nrf24l01InterfaceInit
  3068                           
  3069                           ;nrf24l01.c: 460: nrf24l01CELow();
  3070  05A7  3186  26D4  3185   	fcall	_nrf24l01CELow
  3071                           
  3072                           ;nrf24l01.c: 462: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3073  05AA  3002               	movlw	2
  3074  05AB  0020               	movlb	0	; select bank0
  3075  05AC  00AE               	movwf	??_nrf24l01Init+1
  3076  05AD  3004               	movlw	4
  3077  05AE  00AD               	movwf	??_nrf24l01Init
  3078  05AF  30BA               	movlw	186
  3079  05B0                     u1537:	
  3080  05B0  0B89               	decfsz	9,f
  3081  05B1  2DB0               	goto	u1537
  3082  05B2  0BAD               	decfsz	??_nrf24l01Init,f
  3083  05B3  2DB0               	goto	u1537
  3084  05B4  0BAE               	decfsz	??_nrf24l01Init+1,f
  3085  05B5  2DB0               	goto	u1537
  3086  05B6  0000               	nop
  3087                           
  3088                           ;nrf24l01.c: 464: nrf24l01InitRegisters(isReciever);
  3089  05B7  0020               	movlb	0	; select bank0
  3090  05B8  082F               	movf	nrf24l01Init@isReciever,w
  3091  05B9  3181  21AB  3185   	fcall	_nrf24l01InitRegisters
  3092                           
  3093                           ;nrf24l01.c: 466: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3094  05BC  3002               	movlw	2
  3095  05BD  0020               	movlb	0	; select bank0
  3096  05BE  00AE               	movwf	??_nrf24l01Init+1
  3097  05BF  3004               	movlw	4
  3098  05C0  00AD               	movwf	??_nrf24l01Init
  3099  05C1  30BA               	movlw	186
  3100  05C2                     u1547:	
  3101  05C2  0B89               	decfsz	9,f
  3102  05C3  2DC2               	goto	u1547
  3103  05C4  0BAD               	decfsz	??_nrf24l01Init,f
  3104  05C5  2DC2               	goto	u1547
  3105  05C6  0BAE               	decfsz	??_nrf24l01Init+1,f
  3106  05C7  2DC2               	goto	u1547
  3107  05C8  0000               	nop
  3108                           
  3109                           ;nrf24l01.c: 468: nrf24l01CEHigh();
  3110  05C9  3186  26D7         	fcall	_nrf24l01CEHigh
  3111  05CB  0008               	return
  3112  05CC                     __end_of_nrf24l01Init:	
  3113                           
  3114                           	psect	text2
  3115  0656                     __ptext2:	
  3116 ;; *************** function _nrf24l01InterfaceInit *****************
  3117 ;; Defined at:
  3118 ;;		line 28 in file "interface.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    6
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_nrf24l01Init
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _nrf24l01InterfaceInit
  3148  0656                     _nrf24l01InterfaceInit:	
  3149                           
  3150                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3154  0656  0021               	movlb	1	; select bank1
  3155  0657  100C               	bcf	12,0	;volatile
  3156                           
  3157                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3158  0658  108C               	bcf	12,1	;volatile
  3159                           
  3160                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3161  0659  148E               	bsf	14,1	;volatile
  3162                           
  3163                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3164  065A  110E               	bcf	14,2	;volatile
  3165                           
  3166                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3167  065B  100E               	bcf	14,0	;volatile
  3168                           
  3169                           ;interface.c: 37: SSPCON1bits.SSPEN = 0;
  3170  065C  0024               	movlb	4	; select bank4
  3171  065D  1295               	bcf	21,5	;volatile
  3172                           
  3173                           ;interface.c: 38: SSPCON1bits.CKP = 0;
  3174  065E  1215               	bcf	21,4	;volatile
  3175                           
  3176                           ;interface.c: 39: SSP1STATbits.CKE = 1;
  3177  065F  1714               	bsf	20,6	;volatile
  3178                           
  3179                           ;interface.c: 40: SSPCON1bits.SSPM = 0b0010;
  3180  0660  0815               	movf	21,w	;volatile
  3181  0661  39F0               	andlw	-16
  3182  0662  3802               	iorlw	2
  3183  0663  0095               	movwf	21	;volatile
  3184                           
  3185                           ;interface.c: 42: SSPCON1bits.SSPEN = 1;
  3186  0664  1695               	bsf	21,5	;volatile
  3187  0665  0008               	return
  3188  0666                     __end_of_nrf24l01InterfaceInit:	
  3189                           
  3190                           	psect	text3
  3191  01AB                     __ptext3:	
  3192 ;; *************** function _nrf24l01InitRegisters *****************
  3193 ;; Defined at:
  3194 ;;		line 368 in file "nrf24l01.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  isReciever      1    wreg     unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  isReciever      1    0[COMMON] unsigned char 
  3199 ;;  config          1   12[BANK0 ] struct .
  3200 ;;  DynPD           1   11[BANK0 ] struct .
  3201 ;;  enAA            1   10[BANK0 ] struct .
  3202 ;;  enRXAddr        1    9[BANK0 ] struct .
  3203 ;;  status          1    8[BANK0 ] struct .
  3204 ;;  feature         1    7[BANK0 ] struct .
  3205 ;;  rfSetup         1    6[BANK0 ] struct .
  3206 ;;  setupAW         1    5[BANK0 ] struct .
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;Total ram usage:        9 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    9
  3223 ;; This function calls:
  3224 ;;		_nrf24l01Send
  3225 ;; This function is called by:
  3226 ;;		_nrf24l01Init
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _nrf24l01InitRegisters
  3232  01AB                     _nrf24l01InitRegisters:	
  3233                           
  3234                           ;nrf24l01.c: 370: n_CONFIG_t config;;nrf24l01.c: 372: config.PWR_UP = 0;
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3238  01AB  0020               	movlb	0	; select bank0
  3239  01AC  10AC               	bcf	nrf24l01InitRegisters@config,1
  3240                           
  3241                           ;nrf24l01.c: 373: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3242  01AD  082C               	movf	nrf24l01InitRegisters@config,w
  3243  01AE  00A4               	movwf	??_nrf24l01InitRegisters
  3244  01AF  0824               	movf	??_nrf24l01InitRegisters,w
  3245  01B0  00A1               	movwf	nrf24l01Send@data
  3246  01B1  3020               	movlw	32
  3247  01B2  3185  25ED  3181   	fcall	_nrf24l01Send
  3248                           
  3249                           ;nrf24l01.c: 375: n_SETUP_AW_t setupAW;;nrf24l01.c: 376: setupAW.byte = 0x00;
  3250  01B5  0020               	movlb	0	; select bank0
  3251  01B6  01A5               	clrf	nrf24l01InitRegisters@setupAW
  3252                           
  3253                           ;nrf24l01.c: 377: setupAW.AW = 0b11;
  3254  01B7  3003               	movlw	3
  3255  01B8  04A5               	iorwf	nrf24l01InitRegisters@setupAW,f
  3256                           
  3257                           ;nrf24l01.c: 378: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3258  01B9  0825               	movf	nrf24l01InitRegisters@setupAW,w
  3259  01BA  00A4               	movwf	??_nrf24l01InitRegisters
  3260  01BB  0824               	movf	??_nrf24l01InitRegisters,w
  3261  01BC  00A1               	movwf	nrf24l01Send@data
  3262  01BD  3022               	movlw	34
  3263  01BE  3185  25ED  3181   	fcall	_nrf24l01Send
  3264                           
  3265                           ;nrf24l01.c: 386: n_RF_SETUP_t rfSetup;;nrf24l01.c: 387: rfSetup.RF_DR_LOW = 0;
  3266  01C1  0020               	movlb	0	; select bank0
  3267  01C2  12A6               	bcf	nrf24l01InitRegisters@rfSetup,5
  3268                           
  3269                           ;nrf24l01.c: 388: rfSetup.RF_DR_HIGH = 1;
  3270  01C3  15A6               	bsf	nrf24l01InitRegisters@rfSetup,3
  3271                           
  3272                           ;nrf24l01.c: 389: rfSetup.RF_PWR = 3;
  3273  01C4  3006               	movlw	6
  3274  01C5  04A6               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3275                           
  3276                           ;nrf24l01.c: 390: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3277  01C6  0826               	movf	nrf24l01InitRegisters@rfSetup,w
  3278  01C7  00A4               	movwf	??_nrf24l01InitRegisters
  3279  01C8  0824               	movf	??_nrf24l01InitRegisters,w
  3280  01C9  00A1               	movwf	nrf24l01Send@data
  3281  01CA  3026               	movlw	38
  3282  01CB  3185  25ED  3181   	fcall	_nrf24l01Send
  3283                           
  3284                           ;nrf24l01.c: 393: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 394: enRXAddr.ERX_P0 = 1;
  3285  01CE  0020               	movlb	0	; select bank0
  3286  01CF  1429               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3287                           
  3288                           ;nrf24l01.c: 395: enRXAddr.ERX_P1 = 1;
  3289  01D0  14A9               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3290                           
  3291                           ;nrf24l01.c: 396: enRXAddr.ERX_P2 = 1;
  3292  01D1  1529               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3293                           
  3294                           ;nrf24l01.c: 397: enRXAddr.ERX_P3 = 1;
  3295  01D2  15A9               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3296                           
  3297                           ;nrf24l01.c: 398: enRXAddr.ERX_P4 = 1;
  3298  01D3  1629               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3299                           
  3300                           ;nrf24l01.c: 399: enRXAddr.ERX_P5 = 1;
  3301  01D4  16A9               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3302                           
  3303                           ;nrf24l01.c: 400: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3304  01D5  0829               	movf	nrf24l01InitRegisters@enRXAddr,w
  3305  01D6  00A4               	movwf	??_nrf24l01InitRegisters
  3306  01D7  0824               	movf	??_nrf24l01InitRegisters,w
  3307  01D8  00A1               	movwf	nrf24l01Send@data
  3308  01D9  3022               	movlw	34
  3309  01DA  3185  25ED  3181   	fcall	_nrf24l01Send
  3310                           
  3311                           ;nrf24l01.c: 403: n_EN_AA_t enAA;;nrf24l01.c: 404: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3312  01DD  0020               	movlb	0	; select bank0
  3313  01DE  01A1               	clrf	nrf24l01Send@data
  3314  01DF  3001               	movlw	1
  3315  01E0  3185  25ED  3181   	fcall	_nrf24l01Send
  3316  01E3  0020               	movlb	0	; select bank0
  3317  01E4  00A4               	movwf	??_nrf24l01InitRegisters
  3318  01E5  0824               	movf	??_nrf24l01InitRegisters,w
  3319  01E6  00AA               	movwf	nrf24l01InitRegisters@enAA
  3320                           
  3321                           ;nrf24l01.c: 405: enAA.ENAA_P0 = 0;
  3322  01E7  102A               	bcf	nrf24l01InitRegisters@enAA,0
  3323                           
  3324                           ;nrf24l01.c: 406: enAA.ENAA_P1 = 0;
  3325  01E8  10AA               	bcf	nrf24l01InitRegisters@enAA,1
  3326                           
  3327                           ;nrf24l01.c: 407: enAA.ENAA_P2 = 0;
  3328  01E9  112A               	bcf	nrf24l01InitRegisters@enAA,2
  3329                           
  3330                           ;nrf24l01.c: 408: enAA.ENAA_P3 = 0;
  3331  01EA  11AA               	bcf	nrf24l01InitRegisters@enAA,3
  3332                           
  3333                           ;nrf24l01.c: 409: enAA.ENAA_P4 = 0;
  3334  01EB  122A               	bcf	nrf24l01InitRegisters@enAA,4
  3335                           
  3336                           ;nrf24l01.c: 410: enAA.ENAA_P5 = 0;
  3337  01EC  12AA               	bcf	nrf24l01InitRegisters@enAA,5
  3338                           
  3339                           ;nrf24l01.c: 411: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3340  01ED  082A               	movf	nrf24l01InitRegisters@enAA,w
  3341  01EE  00A4               	movwf	??_nrf24l01InitRegisters
  3342  01EF  0824               	movf	??_nrf24l01InitRegisters,w
  3343  01F0  00A1               	movwf	nrf24l01Send@data
  3344  01F1  3021               	movlw	33
  3345  01F2  3185  25ED  3181   	fcall	_nrf24l01Send
  3346                           
  3347                           ;nrf24l01.c: 415: n_FEATURE_t feature;;nrf24l01.c: 416: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3348  01F5  0020               	movlb	0	; select bank0
  3349  01F6  01A1               	clrf	nrf24l01Send@data
  3350  01F7  301D               	movlw	29
  3351  01F8  3185  25ED  3181   	fcall	_nrf24l01Send
  3352  01FB  0020               	movlb	0	; select bank0
  3353  01FC  00A4               	movwf	??_nrf24l01InitRegisters
  3354  01FD  0824               	movf	??_nrf24l01InitRegisters,w
  3355  01FE  00A7               	movwf	nrf24l01InitRegisters@feature
  3356                           
  3357                           ;nrf24l01.c: 417: feature.EN_DPL = 1;
  3358  01FF  1527               	bsf	nrf24l01InitRegisters@feature,2
  3359                           
  3360                           ;nrf24l01.c: 418: feature.EN_DYN_ACK = 1;
  3361  0200  1427               	bsf	nrf24l01InitRegisters@feature,0
  3362                           
  3363                           ;nrf24l01.c: 419: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3364  0201  0827               	movf	nrf24l01InitRegisters@feature,w
  3365  0202  00A4               	movwf	??_nrf24l01InitRegisters
  3366  0203  0824               	movf	??_nrf24l01InitRegisters,w
  3367  0204  00A1               	movwf	nrf24l01Send@data
  3368  0205  303D               	movlw	61
  3369  0206  3185  25ED  3181   	fcall	_nrf24l01Send
  3370                           
  3371                           ;nrf24l01.c: 421: n_DYNPD_t DynPD;;nrf24l01.c: 422: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3372  0209  0020               	movlb	0	; select bank0
  3373  020A  01A1               	clrf	nrf24l01Send@data
  3374  020B  301C               	movlw	28
  3375  020C  3185  25ED  3181   	fcall	_nrf24l01Send
  3376  020F  0020               	movlb	0	; select bank0
  3377  0210  00A4               	movwf	??_nrf24l01InitRegisters
  3378  0211  0824               	movf	??_nrf24l01InitRegisters,w
  3379  0212  00AB               	movwf	nrf24l01InitRegisters@DynPD
  3380                           
  3381                           ;nrf24l01.c: 423: DynPD.DPL_P0 = 1;
  3382  0213  142B               	bsf	nrf24l01InitRegisters@DynPD,0
  3383                           
  3384                           ;nrf24l01.c: 424: DynPD.DPL_P1 = 1;
  3385  0214  14AB               	bsf	nrf24l01InitRegisters@DynPD,1
  3386                           
  3387                           ;nrf24l01.c: 425: DynPD.DPL_P2 = 1;
  3388  0215  152B               	bsf	nrf24l01InitRegisters@DynPD,2
  3389                           
  3390                           ;nrf24l01.c: 426: DynPD.DPL_P3 = 1;
  3391  0216  15AB               	bsf	nrf24l01InitRegisters@DynPD,3
  3392                           
  3393                           ;nrf24l01.c: 427: DynPD.DPL_P4 = 1;
  3394  0217  162B               	bsf	nrf24l01InitRegisters@DynPD,4
  3395                           
  3396                           ;nrf24l01.c: 428: DynPD.DPL_P5 = 1;
  3397  0218  16AB               	bsf	nrf24l01InitRegisters@DynPD,5
  3398                           
  3399                           ;nrf24l01.c: 429: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3400  0219  082B               	movf	nrf24l01InitRegisters@DynPD,w
  3401  021A  00A4               	movwf	??_nrf24l01InitRegisters
  3402  021B  0824               	movf	??_nrf24l01InitRegisters,w
  3403  021C  00A1               	movwf	nrf24l01Send@data
  3404  021D  303C               	movlw	60
  3405  021E  3185  25ED  3181   	fcall	_nrf24l01Send
  3406                           
  3407                           ;nrf24l01.c: 432: n_STATUS_t status;;nrf24l01.c: 433: status.byte = 0x00;
  3408  0221  0020               	movlb	0	; select bank0
  3409  0222  01A8               	clrf	nrf24l01InitRegisters@status
  3410                           
  3411                           ;nrf24l01.c: 434: status.RX_DR = 1;
  3412  0223  1728               	bsf	nrf24l01InitRegisters@status,6
  3413                           
  3414                           ;nrf24l01.c: 435: status.TX_DS = 1;
  3415  0224  16A8               	bsf	nrf24l01InitRegisters@status,5
  3416                           
  3417                           ;nrf24l01.c: 436: status.MAX_RT = 1;
  3418  0225  1628               	bsf	nrf24l01InitRegisters@status,4
  3419                           
  3420                           ;nrf24l01.c: 437: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3421  0226  0828               	movf	nrf24l01InitRegisters@status,w
  3422  0227  00A4               	movwf	??_nrf24l01InitRegisters
  3423  0228  0824               	movf	??_nrf24l01InitRegisters,w
  3424  0229  00A1               	movwf	nrf24l01Send@data
  3425  022A  3027               	movlw	39
  3426  022B  3185  25ED  3181   	fcall	_nrf24l01Send
  3427                           
  3428                           ;nrf24l01.c: 440: nrf24l01Send(0b11100001, 0);
  3429  022E  0020               	movlb	0	; select bank0
  3430  022F  01A1               	clrf	nrf24l01Send@data
  3431  0230  30E1               	movlw	225
  3432  0231  3185  25ED  3181   	fcall	_nrf24l01Send
  3433                           
  3434                           ;nrf24l01.c: 441: nrf24l01Send(0b11100010, 0);
  3435  0234  0020               	movlb	0	; select bank0
  3436  0235  01A1               	clrf	nrf24l01Send@data
  3437  0236  30E2               	movlw	226
  3438  0237  3185  25ED  3181   	fcall	_nrf24l01Send
  3439                           
  3440                           ;nrf24l01.c: 444: config.PRIM_RX = 1;
  3441  023A  0020               	movlb	0	; select bank0
  3442  023B  142C               	bsf	nrf24l01InitRegisters@config,0
  3443                           
  3444                           ;nrf24l01.c: 445: config.EN_CRC = 1;
  3445  023C  15AC               	bsf	nrf24l01InitRegisters@config,3
  3446                           
  3447                           ;nrf24l01.c: 446: config.CRCO = 1;
  3448  023D  152C               	bsf	nrf24l01InitRegisters@config,2
  3449                           
  3450                           ;nrf24l01.c: 447: config.PWR_UP = 1;
  3451  023E  14AC               	bsf	nrf24l01InitRegisters@config,1
  3452                           
  3453                           ;nrf24l01.c: 448: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3454  023F  082C               	movf	nrf24l01InitRegisters@config,w
  3455  0240  00A4               	movwf	??_nrf24l01InitRegisters
  3456  0241  0824               	movf	??_nrf24l01InitRegisters,w
  3457  0242  00A1               	movwf	nrf24l01Send@data
  3458  0243  3020               	movlw	32
  3459  0244  3185  25ED         	fcall	_nrf24l01Send
  3460  0246  0008               	return
  3461  0247                     __end_of_nrf24l01InitRegisters:	
  3462                           
  3463                           	psect	text4
  3464  002C                     __ptext4:	
  3465 ;; *************** function _loop *****************
  3466 ;; Defined at:
  3467 ;;		line 76 in file "main.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:   11
  3488 ;; This function calls:
  3489 ;;		_getADCValue
  3490 ;;		_nrf24l01SendString
  3491 ;;		_sleep
  3492 ;;		_strcpy
  3493 ;;		_utoa
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _loop
  3501  002C                     _loop:	
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3505  002C  0064               	clrwdt	;# 
  3506                           
  3507                           ;main.c: 81: strcpy(nrf24l01TXTopic, "DBG");
  3508  002D  30CA               	movlw	low (STR_1| (0+32768))
  3509  002E  0020               	movlb	0	; select bank0
  3510  002F  00A1               	movwf	strcpy@from
  3511  0030  3086               	movlw	high (STR_1| (0+32768))
  3512  0031  00A2               	movwf	strcpy@from+1
  3513  0032  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3514  0033  3186  260D  3180   	fcall	_strcpy
  3515                           
  3516                           ;main.c: 82: utoa(nrf24l01TXValue, counter, 10);
  3517  0036  0020               	movlb	0	; select bank0
  3518  0037  0848               	movf	_counter+1,w
  3519  0038  00BE               	movwf	utoa@val+1
  3520  0039  0847               	movf	_counter,w
  3521  003A  00BD               	movwf	utoa@val
  3522  003B  300A               	movlw	10
  3523  003C  00BF               	movwf	utoa@base
  3524  003D  3000               	movlw	0
  3525  003E  00C0               	movwf	utoa@base+1
  3526  003F  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3527  0040  3183  2349  3180   	fcall	_utoa
  3528                           
  3529                           ;main.c: 83: counter = 0;
  3530  0043  0020               	movlb	0	; select bank0
  3531  0044  01C7               	clrf	_counter
  3532  0045  01C8               	clrf	_counter+1
  3533                           
  3534                           ;main.c: 84: nrf24l01TXPacketData.byte = 0x00;
  3535  0046  01CC               	clrf	_nrf24l01TXPacketData
  3536                           
  3537                           ;main.c: 85: nrf24l01TXPacketData.ACKRequest = 0;
  3538  0047  104C               	bcf	_nrf24l01TXPacketData,0
  3539                           
  3540                           ;main.c: 86: nrf24l01SendString();
  3541  0048  3181  2100  3180   	fcall	_nrf24l01SendString
  3542                           
  3543                           ;main.c: 87: sleep();
  3544  004B  3183  23FE  3180   	fcall	_sleep
  3545                           
  3546                           ;main.c: 89: strcpy(nrf24l01TXTopic, "ADC3");
  3547  004E  30BB               	movlw	low (STR_2| (0+32768))
  3548  004F  0020               	movlb	0	; select bank0
  3549  0050  00A1               	movwf	strcpy@from
  3550  0051  3086               	movlw	high (STR_2| (0+32768))
  3551  0052  00A2               	movwf	strcpy@from+1
  3552  0053  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3553  0054  3186  260D  3180   	fcall	_strcpy
  3554                           
  3555                           ;main.c: 90: utoa(nrf24l01TXValue, getADCValue(3, 2505), 10);
  3556  0057  3000               	movlw	0
  3557  0058  0020               	movlb	0	; select bank0
  3558  0059  00B2               	movwf	getADCValue@divider+3
  3559  005A  3000               	movlw	0
  3560  005B  00B1               	movwf	getADCValue@divider+2
  3561  005C  3009               	movlw	9
  3562  005D  00B0               	movwf	getADCValue@divider+1
  3563  005E  30C9               	movlw	201
  3564  005F  00AF               	movwf	getADCValue@divider
  3565  0060  3003               	movlw	3
  3566  0061  3182  2247  3180   	fcall	_getADCValue
  3567  0064  0020               	movlb	0	; select bank0
  3568  0065  0830               	movf	?_getADCValue+1,w
  3569  0066  00BE               	movwf	utoa@val+1
  3570  0067  082F               	movf	?_getADCValue,w
  3571  0068  00BD               	movwf	utoa@val
  3572  0069  300A               	movlw	10
  3573  006A  00BF               	movwf	utoa@base
  3574  006B  3000               	movlw	0
  3575  006C  00C0               	movwf	utoa@base+1
  3576  006D  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3577  006E  3183  2349  3180   	fcall	_utoa
  3578                           
  3579                           ;main.c: 91: nrf24l01TXPacketData.byte = 0x00;
  3580  0071  0020               	movlb	0	; select bank0
  3581  0072  01CC               	clrf	_nrf24l01TXPacketData
  3582                           
  3583                           ;main.c: 92: nrf24l01TXPacketData.ACKRequest = 0;
  3584  0073  104C               	bcf	_nrf24l01TXPacketData,0
  3585                           
  3586                           ;main.c: 93: nrf24l01SendString();
  3587  0074  3181  2100  3180   	fcall	_nrf24l01SendString
  3588                           
  3589                           ;main.c: 94: sleep();
  3590  0077  3183  23FE  3180   	fcall	_sleep
  3591                           
  3592                           ;main.c: 96: strcpy(nrf24l01TXTopic, "ADC7");
  3593  007A  30C0               	movlw	low (STR_3| (0+32768))
  3594  007B  0020               	movlb	0	; select bank0
  3595  007C  00A1               	movwf	strcpy@from
  3596  007D  3086               	movlw	high (STR_3| (0+32768))
  3597  007E  00A2               	movwf	strcpy@from+1
  3598  007F  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3599  0080  3186  260D  3180   	fcall	_strcpy
  3600                           
  3601                           ;main.c: 97: utoa(nrf24l01TXValue, getADCValue(7, 2500), 10);
  3602  0083  3000               	movlw	0
  3603  0084  0020               	movlb	0	; select bank0
  3604  0085  00B2               	movwf	getADCValue@divider+3
  3605  0086  3000               	movlw	0
  3606  0087  00B1               	movwf	getADCValue@divider+2
  3607  0088  3009               	movlw	9
  3608  0089  00B0               	movwf	getADCValue@divider+1
  3609  008A  30C4               	movlw	196
  3610  008B  00AF               	movwf	getADCValue@divider
  3611  008C  3007               	movlw	7
  3612  008D  3182  2247  3180   	fcall	_getADCValue
  3613  0090  0020               	movlb	0	; select bank0
  3614  0091  0830               	movf	?_getADCValue+1,w
  3615  0092  00BE               	movwf	utoa@val+1
  3616  0093  082F               	movf	?_getADCValue,w
  3617  0094  00BD               	movwf	utoa@val
  3618  0095  300A               	movlw	10
  3619  0096  00BF               	movwf	utoa@base
  3620  0097  3000               	movlw	0
  3621  0098  00C0               	movwf	utoa@base+1
  3622  0099  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3623  009A  3183  2349  3180   	fcall	_utoa
  3624                           
  3625                           ;main.c: 98: nrf24l01TXPacketData.byte = 0x00;
  3626  009D  0020               	movlb	0	; select bank0
  3627  009E  01CC               	clrf	_nrf24l01TXPacketData
  3628                           
  3629                           ;main.c: 99: nrf24l01TXPacketData.ACKRequest = 0;
  3630  009F  104C               	bcf	_nrf24l01TXPacketData,0
  3631                           
  3632                           ;main.c: 100: nrf24l01SendString();
  3633  00A0  3181  2100  3180   	fcall	_nrf24l01SendString
  3634                           
  3635                           ;main.c: 101: sleep();
  3636  00A3  3183  23FE  3180   	fcall	_sleep
  3637                           
  3638                           ;main.c: 103: strcpy(nrf24l01TXTopic, "ADC29");
  3639  00A6  30AA               	movlw	low (STR_4| (0+32768))
  3640  00A7  0020               	movlb	0	; select bank0
  3641  00A8  00A1               	movwf	strcpy@from
  3642  00A9  3086               	movlw	high (STR_4| (0+32768))
  3643  00AA  00A2               	movwf	strcpy@from+1
  3644  00AB  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3645  00AC  3186  260D  3180   	fcall	_strcpy
  3646                           
  3647                           ;main.c: 104: utoa(nrf24l01TXValue, getADCValue(29, 208900) - 40, 10);
  3648  00AF  3000               	movlw	0
  3649  00B0  0020               	movlb	0	; select bank0
  3650  00B1  00B2               	movwf	getADCValue@divider+3
  3651  00B2  3003               	movlw	3
  3652  00B3  00B1               	movwf	getADCValue@divider+2
  3653  00B4  3030               	movlw	48
  3654  00B5  00B0               	movwf	getADCValue@divider+1
  3655  00B6  3004               	movlw	4
  3656  00B7  00AF               	movwf	getADCValue@divider
  3657  00B8  301D               	movlw	29
  3658  00B9  3182  2247  3180   	fcall	_getADCValue
  3659  00BC  0020               	movlb	0	; select bank0
  3660  00BD  082F               	movf	?_getADCValue,w
  3661  00BE  3ED8               	addlw	216
  3662  00BF  00BD               	movwf	utoa@val
  3663  00C0  30FF               	movlw	255
  3664  00C1  3D30               	addwfc	?_getADCValue+1,w
  3665  00C2  00BE               	movwf	utoa@val+1
  3666  00C3  300A               	movlw	10
  3667  00C4  00BF               	movwf	utoa@base
  3668  00C5  3000               	movlw	0
  3669  00C6  00C0               	movwf	utoa@base+1
  3670  00C7  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3671  00C8  3183  2349  3180   	fcall	_utoa
  3672                           
  3673                           ;main.c: 105: nrf24l01TXPacketData.byte = 0x00;
  3674  00CB  0020               	movlb	0	; select bank0
  3675  00CC  01CC               	clrf	_nrf24l01TXPacketData
  3676                           
  3677                           ;main.c: 106: nrf24l01TXPacketData.ACKRequest = 0;
  3678  00CD  104C               	bcf	_nrf24l01TXPacketData,0
  3679                           
  3680                           ;main.c: 107: nrf24l01SendString();
  3681  00CE  3181  2100  3180   	fcall	_nrf24l01SendString
  3682                           
  3683                           ;main.c: 108: sleep();
  3684  00D1  3183  23FE  3180   	fcall	_sleep
  3685                           
  3686                           ;main.c: 110: strcpy(nrf24l01TXTopic, "ADC31");
  3687  00D4  30A4               	movlw	low (STR_5| (0+32768))
  3688  00D5  0020               	movlb	0	; select bank0
  3689  00D6  00A1               	movwf	strcpy@from
  3690  00D7  3086               	movlw	high (STR_5| (0+32768))
  3691  00D8  00A2               	movwf	strcpy@from+1
  3692  00D9  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3693  00DA  3186  260D  3180   	fcall	_strcpy
  3694                           
  3695                           ;main.c: 111: utoa(nrf24l01TXValue, getADCValue(31, 2475), 10);
  3696  00DD  3000               	movlw	0
  3697  00DE  0020               	movlb	0	; select bank0
  3698  00DF  00B2               	movwf	getADCValue@divider+3
  3699  00E0  3000               	movlw	0
  3700  00E1  00B1               	movwf	getADCValue@divider+2
  3701  00E2  3009               	movlw	9
  3702  00E3  00B0               	movwf	getADCValue@divider+1
  3703  00E4  30AB               	movlw	171
  3704  00E5  00AF               	movwf	getADCValue@divider
  3705  00E6  301F               	movlw	31
  3706  00E7  3182  2247  3180   	fcall	_getADCValue
  3707  00EA  0020               	movlb	0	; select bank0
  3708  00EB  0830               	movf	?_getADCValue+1,w
  3709  00EC  00BE               	movwf	utoa@val+1
  3710  00ED  082F               	movf	?_getADCValue,w
  3711  00EE  00BD               	movwf	utoa@val
  3712  00EF  300A               	movlw	10
  3713  00F0  00BF               	movwf	utoa@base
  3714  00F1  3000               	movlw	0
  3715  00F2  00C0               	movwf	utoa@base+1
  3716  00F3  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3717  00F4  3183  2349  3180   	fcall	_utoa
  3718                           
  3719                           ;main.c: 112: nrf24l01TXPacketData.byte = 0x00;
  3720  00F7  0020               	movlb	0	; select bank0
  3721  00F8  01CC               	clrf	_nrf24l01TXPacketData
  3722                           
  3723                           ;main.c: 113: nrf24l01TXPacketData.ACKRequest = 0;
  3724  00F9  104C               	bcf	_nrf24l01TXPacketData,0
  3725                           
  3726                           ;main.c: 114: nrf24l01SendString();
  3727  00FA  3181  2100  3180   	fcall	_nrf24l01SendString
  3728                           
  3729                           ;main.c: 115: sleep();
  3730  00FD  3183  23FE         	fcall	_sleep
  3731  00FF  0008               	return
  3732  0100                     __end_of_loop:	
  3733                           
  3734                           	psect	text5
  3735  0349                     __ptext5:	
  3736 ;; *************** function _utoa *****************
  3737 ;; Defined at:
  3738 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  buf             1    wreg     PTR unsigned char 
  3741 ;;		 -> nrf24l01TXValue(8), 
  3742 ;;  val             2   29[BANK0 ] unsigned int 
  3743 ;;  base            2   31[BANK0 ] int 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  buf             1   37[BANK0 ] PTR unsigned char 
  3746 ;;		 -> nrf24l01TXValue(8), 
  3747 ;;  v               2   34[BANK0 ] unsigned int 
  3748 ;;  c               1   36[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      PTR unsigned char 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;Total ram usage:        9 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    7
  3765 ;; This function calls:
  3766 ;;		___lwdiv
  3767 ;;		___lwmod
  3768 ;; This function is called by:
  3769 ;;		_loop
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _utoa
  3776  0349                     _utoa:	
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3780                           ;utoa@buf stored from wreg
  3781  0349  0020               	movlb	0	; select bank0
  3782  034A  00C5               	movwf	utoa@buf
  3783  034B  083E               	movf	utoa@val+1,w
  3784  034C  00C3               	movwf	utoa@v+1
  3785  034D  083D               	movf	utoa@val,w
  3786  034E  00C2               	movwf	utoa@v
  3787  034F                     l2597:	
  3788  034F  0840               	movf	utoa@base+1,w
  3789  0350  00A2               	movwf	___lwdiv@divisor+1
  3790  0351  083F               	movf	utoa@base,w
  3791  0352  00A1               	movwf	___lwdiv@divisor
  3792  0353  0843               	movf	utoa@v+1,w
  3793  0354  00A4               	movwf	___lwdiv@dividend+1
  3794  0355  0842               	movf	utoa@v,w
  3795  0356  00A3               	movwf	___lwdiv@dividend
  3796  0357  3184  24B2  3183   	fcall	___lwdiv
  3797  035A  0020               	movlb	0	; select bank0
  3798  035B  0822               	movf	?___lwdiv+1,w
  3799  035C  00C3               	movwf	utoa@v+1
  3800  035D  0821               	movf	?___lwdiv,w
  3801  035E  00C2               	movwf	utoa@v
  3802  035F  3001               	movlw	1
  3803  0360  00C1               	movwf	??_utoa
  3804  0361  0841               	movf	??_utoa,w
  3805  0362  07C5               	addwf	utoa@buf,f
  3806  0363  0842               	movf	utoa@v,w
  3807  0364  0443               	iorwf	utoa@v+1,w
  3808  0365  1D03               	btfss	3,2
  3809  0366  2B4F               	goto	l2597
  3810  0367  0845               	movf	utoa@buf,w
  3811  0368  0086               	movwf	6
  3812  0369  0187               	clrf	7
  3813  036A  0181               	clrf	1
  3814  036B  3001               	movlw	1
  3815  036C  02C5               	subwf	utoa@buf,f
  3816  036D                     l2607:	
  3817  036D  0840               	movf	utoa@base+1,w
  3818  036E  00A2               	movwf	___lwmod@divisor+1
  3819  036F  083F               	movf	utoa@base,w
  3820  0370  00A1               	movwf	___lwmod@divisor
  3821  0371  083E               	movf	utoa@val+1,w
  3822  0372  00A4               	movwf	___lwmod@dividend+1
  3823  0373  083D               	movf	utoa@val,w
  3824  0374  00A3               	movwf	___lwmod@dividend
  3825  0375  3185  2575  3183   	fcall	___lwmod
  3826  0378  0020               	movlb	0	; select bank0
  3827  0379  0821               	movf	?___lwmod,w
  3828  037A  00C1               	movwf	??_utoa
  3829  037B  0841               	movf	??_utoa,w
  3830  037C  00C4               	movwf	utoa@c
  3831  037D  0840               	movf	utoa@base+1,w
  3832  037E  00A2               	movwf	___lwdiv@divisor+1
  3833  037F  083F               	movf	utoa@base,w
  3834  0380  00A1               	movwf	___lwdiv@divisor
  3835  0381  083E               	movf	utoa@val+1,w
  3836  0382  00A4               	movwf	___lwdiv@dividend+1
  3837  0383  083D               	movf	utoa@val,w
  3838  0384  00A3               	movwf	___lwdiv@dividend
  3839  0385  3184  24B2  3183   	fcall	___lwdiv
  3840  0388  0020               	movlb	0	; select bank0
  3841  0389  0822               	movf	?___lwdiv+1,w
  3842  038A  00BE               	movwf	utoa@val+1
  3843  038B  0821               	movf	?___lwdiv,w
  3844  038C  00BD               	movwf	utoa@val
  3845  038D  300A               	movlw	10
  3846  038E  0244               	subwf	utoa@c,w
  3847  038F  1C03               	skipc
  3848  0390  2B95               	goto	l857
  3849  0391  3007               	movlw	7
  3850  0392  00C1               	movwf	??_utoa
  3851  0393  0841               	movf	??_utoa,w
  3852  0394  07C4               	addwf	utoa@c,f
  3853  0395                     l857:	
  3854  0395  3030               	movlw	48
  3855  0396  00C1               	movwf	??_utoa
  3856  0397  0841               	movf	??_utoa,w
  3857  0398  07C4               	addwf	utoa@c,f
  3858  0399  0844               	movf	utoa@c,w
  3859  039A  00C1               	movwf	??_utoa
  3860  039B  0845               	movf	utoa@buf,w
  3861  039C  0086               	movwf	6
  3862  039D  0187               	clrf	7
  3863  039E  0841               	movf	??_utoa,w
  3864  039F  0081               	movwf	1
  3865  03A0  3001               	movlw	1
  3866  03A1  02C5               	subwf	utoa@buf,f
  3867  03A2  083D               	movf	utoa@val,w
  3868  03A3  043E               	iorwf	utoa@val+1,w
  3869  03A4  1D03               	btfss	3,2
  3870  03A5  2B6D               	goto	l2607
  3871                           
  3872                           ;	Return value of _utoa is never used
  3873  03A6  3001               	movlw	1
  3874  03A7  00C1               	movwf	??_utoa
  3875  03A8  0841               	movf	??_utoa,w
  3876  03A9  07C5               	addwf	utoa@buf,f
  3877  03AA  0008               	return
  3878  03AB                     __end_of_utoa:	
  3879                           
  3880                           	psect	text6
  3881  0575                     __ptext6:	
  3882 ;; *************** function ___lwmod *****************
  3883 ;; Defined at:
  3884 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  divisor         2    1[BANK0 ] unsigned int 
  3887 ;;  dividend        2    3[BANK0 ] unsigned int 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  counter         1    6[BANK0 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  2    1[BANK0 ] unsigned int 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        6 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    6
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_utoa
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function ___lwmod
  3915  0575                     ___lwmod:	
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3919  0575  0020               	movlb	0	; select bank0
  3920  0576  0821               	movf	___lwmod@divisor,w
  3921  0577  0422               	iorwf	___lwmod@divisor+1,w
  3922  0578  1903               	btfsc	3,2
  3923  0579  2D9D               	goto	l1929
  3924  057A  01A6               	clrf	___lwmod@counter
  3925  057B  0AA6               	incf	___lwmod@counter,f
  3926  057C                     l1919:	
  3927  057C  1BA2               	btfsc	___lwmod@divisor+1,7
  3928  057D  2D88               	goto	l1921
  3929  057E  3001               	movlw	1
  3930  057F                     u895:	
  3931  057F  35A1               	lslf	___lwmod@divisor,f
  3932  0580  0DA2               	rlf	___lwmod@divisor+1,f
  3933  0581  0B89               	decfsz	9,f
  3934  0582  2D7F               	goto	u895
  3935  0583  3001               	movlw	1
  3936  0584  00A5               	movwf	??___lwmod
  3937  0585  0825               	movf	??___lwmod,w
  3938  0586  07A6               	addwf	___lwmod@counter,f
  3939  0587  2D7C               	goto	l1919
  3940  0588                     l1921:	
  3941  0588  0822               	movf	___lwmod@divisor+1,w
  3942  0589  0224               	subwf	___lwmod@dividend+1,w
  3943  058A  1D03               	skipz
  3944  058B  2D8E               	goto	u915
  3945  058C  0821               	movf	___lwmod@divisor,w
  3946  058D  0223               	subwf	___lwmod@dividend,w
  3947  058E                     u915:	
  3948  058E  1C03               	skipc
  3949  058F  2D94               	goto	l1925
  3950  0590  0821               	movf	___lwmod@divisor,w
  3951  0591  02A3               	subwf	___lwmod@dividend,f
  3952  0592  0822               	movf	___lwmod@divisor+1,w
  3953  0593  3BA4               	subwfb	___lwmod@dividend+1,f
  3954  0594                     l1925:	
  3955  0594  3001               	movlw	1
  3956  0595                     u925:	
  3957  0595  36A2               	lsrf	___lwmod@divisor+1,f
  3958  0596  0CA1               	rrf	___lwmod@divisor,f
  3959  0597  0B89               	decfsz	9,f
  3960  0598  2D95               	goto	u925
  3961  0599  3001               	movlw	1
  3962  059A  02A6               	subwf	___lwmod@counter,f
  3963  059B  1D03               	btfss	3,2
  3964  059C  2D88               	goto	l1921
  3965  059D                     l1929:	
  3966  059D  0824               	movf	___lwmod@dividend+1,w
  3967  059E  00A2               	movwf	?___lwmod+1
  3968  059F  0823               	movf	___lwmod@dividend,w
  3969  05A0  00A1               	movwf	?___lwmod
  3970  05A1  0008               	return
  3971  05A2                     __end_of___lwmod:	
  3972                           
  3973                           	psect	text7
  3974  04B2                     __ptext7:	
  3975 ;; *************** function ___lwdiv *****************
  3976 ;; Defined at:
  3977 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  divisor         2    1[BANK0 ] unsigned int 
  3980 ;;  dividend        2    3[BANK0 ] unsigned int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  quotient        2    6[BANK0 ] unsigned int 
  3983 ;;  counter         1    8[BANK0 ] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    1[BANK0 ] unsigned int 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3994 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;Total ram usage:        8 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    6
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_utoa
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function ___lwdiv
  4009  04B2                     ___lwdiv:	
  4010                           
  4011                           ;incstack = 0
  4012                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4013  04B2  0020               	movlb	0	; select bank0
  4014  04B3  01A6               	clrf	___lwdiv@quotient
  4015  04B4  01A7               	clrf	___lwdiv@quotient+1
  4016  04B5  0821               	movf	___lwdiv@divisor,w
  4017  04B6  0422               	iorwf	___lwdiv@divisor+1,w
  4018  04B7  1903               	btfsc	3,2
  4019  04B8  2CE2               	goto	l1907
  4020  04B9  01A8               	clrf	___lwdiv@counter
  4021  04BA  0AA8               	incf	___lwdiv@counter,f
  4022  04BB                     l1895:	
  4023  04BB  1BA2               	btfsc	___lwdiv@divisor+1,7
  4024  04BC  2CC7               	goto	l1897
  4025  04BD  3001               	movlw	1
  4026  04BE                     u825:	
  4027  04BE  35A1               	lslf	___lwdiv@divisor,f
  4028  04BF  0DA2               	rlf	___lwdiv@divisor+1,f
  4029  04C0  0B89               	decfsz	9,f
  4030  04C1  2CBE               	goto	u825
  4031  04C2  3001               	movlw	1
  4032  04C3  00A5               	movwf	??___lwdiv
  4033  04C4  0825               	movf	??___lwdiv,w
  4034  04C5  07A8               	addwf	___lwdiv@counter,f
  4035  04C6  2CBB               	goto	l1895
  4036  04C7                     l1897:	
  4037  04C7  3001               	movlw	1
  4038  04C8                     u845:	
  4039  04C8  35A6               	lslf	___lwdiv@quotient,f
  4040  04C9  0DA7               	rlf	___lwdiv@quotient+1,f
  4041  04CA  0B89               	decfsz	9,f
  4042  04CB  2CC8               	goto	u845
  4043  04CC  0822               	movf	___lwdiv@divisor+1,w
  4044  04CD  0224               	subwf	___lwdiv@dividend+1,w
  4045  04CE  1D03               	skipz
  4046  04CF  2CD2               	goto	u855
  4047  04D0  0821               	movf	___lwdiv@divisor,w
  4048  04D1  0223               	subwf	___lwdiv@dividend,w
  4049  04D2                     u855:	
  4050  04D2  1C03               	skipc
  4051  04D3  2CD9               	goto	l1903
  4052  04D4  0821               	movf	___lwdiv@divisor,w
  4053  04D5  02A3               	subwf	___lwdiv@dividend,f
  4054  04D6  0822               	movf	___lwdiv@divisor+1,w
  4055  04D7  3BA4               	subwfb	___lwdiv@dividend+1,f
  4056  04D8  1426               	bsf	___lwdiv@quotient,0
  4057  04D9                     l1903:	
  4058  04D9  3001               	movlw	1
  4059  04DA                     u865:	
  4060  04DA  36A2               	lsrf	___lwdiv@divisor+1,f
  4061  04DB  0CA1               	rrf	___lwdiv@divisor,f
  4062  04DC  0B89               	decfsz	9,f
  4063  04DD  2CDA               	goto	u865
  4064  04DE  3001               	movlw	1
  4065  04DF  02A8               	subwf	___lwdiv@counter,f
  4066  04E0  1D03               	btfss	3,2
  4067  04E1  2CC7               	goto	l1897
  4068  04E2                     l1907:	
  4069  04E2  0827               	movf	___lwdiv@quotient+1,w
  4070  04E3  00A2               	movwf	?___lwdiv+1
  4071  04E4  0826               	movf	___lwdiv@quotient,w
  4072  04E5  00A1               	movwf	?___lwdiv
  4073  04E6  0008               	return
  4074  04E7                     __end_of___lwdiv:	
  4075                           
  4076                           	psect	text8
  4077  060D                     __ptext8:	
  4078 ;; *************** function _strcpy *****************
  4079 ;; Defined at:
  4080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  to              1    wreg     PTR unsigned char 
  4083 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4084 ;;		 -> nrf24l01TXTopic(8), 
  4085 ;;  from            2    1[BANK0 ] PTR const unsigned char 
  4086 ;;		 -> STR_7(5), STR_6(14), nrf24l01TXName(16), STR_5(6), 
  4087 ;;		 -> STR_4(6), STR_3(5), STR_2(5), nrf24l01TXValue(8), 
  4088 ;;		 -> STR_1(4), nrf24l01TXTopic(8), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  to              1    5[BANK0 ] PTR unsigned char 
  4091 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4092 ;;		 -> nrf24l01TXTopic(8), 
  4093 ;;  cp              1    4[BANK0 ] PTR unsigned char 
  4094 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4095 ;;		 -> nrf24l01TXTopic(8), 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      PTR unsigned char 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;Total ram usage:        5 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    6
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_loop
  4116 ;;		_main
  4117 ;;		_nrf24l01ReceiveString
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _strcpy
  4123  060D                     _strcpy:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4127                           ;strcpy@to stored from wreg
  4128  060D  0020               	movlb	0	; select bank0
  4129  060E  00A5               	movwf	strcpy@to
  4130  060F  0825               	movf	strcpy@to,w
  4131  0610  00A3               	movwf	??_strcpy
  4132  0611  0823               	movf	??_strcpy,w
  4133  0612  00A4               	movwf	strcpy@cp
  4134  0613                     l2593:	
  4135  0613  0824               	movf	strcpy@cp,w
  4136  0614  0086               	movwf	6
  4137  0615  0187               	clrf	7
  4138  0616  0821               	movf	strcpy@from,w
  4139  0617  0084               	movwf	4
  4140  0618  0822               	movf	strcpy@from+1,w
  4141  0619  0085               	movwf	5
  4142  061A  0800               	movf	0,w	;code access
  4143  061B  3FC0               	movwi [0]fsr1
  4144  061C  0889               	movf	9,f
  4145  061D  1903               	btfsc	3,2
  4146  061E  0008               	return
  4147  061F  3001               	movlw	1
  4148  0620  00A3               	movwf	??_strcpy
  4149  0621  0823               	movf	??_strcpy,w
  4150  0622  07A4               	addwf	strcpy@cp,f
  4151  0623  3001               	movlw	1
  4152  0624  07A1               	addwf	strcpy@from,f
  4153  0625  3000               	movlw	0
  4154  0626  3DA2               	addwfc	strcpy@from+1,f
  4155  0627  2E13               	goto	l2593
  4156  0628                     __end_of_strcpy:	
  4157                           ;	Return value of _strcpy is never used
  4158                           
  4159                           
  4160                           	psect	text9
  4161  03FE                     __ptext9:	
  4162 ;; *************** function _sleep *****************
  4163 ;; Defined at:
  4164 ;;		line 46 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:        2 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    6
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_loop
  4189 ;;		_main
  4190 ;;		_checkRxData
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _sleep
  4196  03FE                     _sleep:	
  4197                           
  4198                           ;main.c: 49: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _sleep: [wreg]
  4202  03FE  3002               	movlw	2
  4203  03FF  0020               	movlb	0	; select bank0
  4204  0400  00A2               	movwf	??_sleep+1
  4205  0401  3004               	movlw	4
  4206  0402  00A1               	movwf	??_sleep
  4207  0403  30BA               	movlw	186
  4208  0404                     u1557:	
  4209  0404  0B89               	decfsz	9,f
  4210  0405  2C04               	goto	u1557
  4211  0406  0BA1               	decfsz	??_sleep,f
  4212  0407  2C04               	goto	u1557
  4213  0408  0BA2               	decfsz	??_sleep+1,f
  4214  0409  2C04               	goto	u1557
  4215  040A  0000               	nop
  4216                           
  4217                           ;main.c: 50: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4218  040B  3002               	movlw	2
  4219  040C  0020               	movlb	0	; select bank0
  4220  040D  00A2               	movwf	??_sleep+1
  4221  040E  3004               	movlw	4
  4222  040F  00A1               	movwf	??_sleep
  4223  0410  30BA               	movlw	186
  4224  0411                     u1567:	
  4225  0411  0B89               	decfsz	9,f
  4226  0412  2C11               	goto	u1567
  4227  0413  0BA1               	decfsz	??_sleep,f
  4228  0414  2C11               	goto	u1567
  4229  0415  0BA2               	decfsz	??_sleep+1,f
  4230  0416  2C11               	goto	u1567
  4231  0417  0000               	nop
  4232                           
  4233                           ;main.c: 51: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4234  0418  3002               	movlw	2
  4235  0419  0020               	movlb	0	; select bank0
  4236  041A  00A2               	movwf	??_sleep+1
  4237  041B  3004               	movlw	4
  4238  041C  00A1               	movwf	??_sleep
  4239  041D  30BA               	movlw	186
  4240  041E                     u1577:	
  4241  041E  0B89               	decfsz	9,f
  4242  041F  2C1E               	goto	u1577
  4243  0420  0BA1               	decfsz	??_sleep,f
  4244  0421  2C1E               	goto	u1577
  4245  0422  0BA2               	decfsz	??_sleep+1,f
  4246  0423  2C1E               	goto	u1577
  4247  0424  0000               	nop
  4248                           
  4249                           ;main.c: 52: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4250  0425  3002               	movlw	2
  4251  0426  0020               	movlb	0	; select bank0
  4252  0427  00A2               	movwf	??_sleep+1
  4253  0428  3004               	movlw	4
  4254  0429  00A1               	movwf	??_sleep
  4255  042A  30BA               	movlw	186
  4256  042B                     u1587:	
  4257  042B  0B89               	decfsz	9,f
  4258  042C  2C2B               	goto	u1587
  4259  042D  0BA1               	decfsz	??_sleep,f
  4260  042E  2C2B               	goto	u1587
  4261  042F  0BA2               	decfsz	??_sleep+1,f
  4262  0430  2C2B               	goto	u1587
  4263  0431  0000               	nop
  4264                           
  4265                           ;main.c: 53: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4266  0432  3002               	movlw	2
  4267  0433  0020               	movlb	0	; select bank0
  4268  0434  00A2               	movwf	??_sleep+1
  4269  0435  3004               	movlw	4
  4270  0436  00A1               	movwf	??_sleep
  4271  0437  30BA               	movlw	186
  4272  0438                     u1597:	
  4273  0438  0B89               	decfsz	9,f
  4274  0439  2C38               	goto	u1597
  4275  043A  0BA1               	decfsz	??_sleep,f
  4276  043B  2C38               	goto	u1597
  4277  043C  0BA2               	decfsz	??_sleep+1,f
  4278  043D  2C38               	goto	u1597
  4279  043E  0000               	nop
  4280  043F  0008               	return
  4281  0440                     __end_of_sleep:	
  4282                           
  4283                           	psect	text10
  4284  0100                     __ptext10:	
  4285 ;; *************** function _nrf24l01SendString *****************
  4286 ;; Defined at:
  4287 ;;		line 232 in file "nrf24l01.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  i               1    9[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        3 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:   10
  4308 ;; This function calls:
  4309 ;;		_enableInterrupts
  4310 ;;		_nrf24l01CEHigh
  4311 ;;		_nrf24l01CELow
  4312 ;;		_nrf24l01SPIEnd
  4313 ;;		_nrf24l01SPISend
  4314 ;;		_nrf24l01SPIStart
  4315 ;;		_nrf24l01SetRXMode
  4316 ;; This function is called by:
  4317 ;;		_loop
  4318 ;;		_main
  4319 ;;		_nrf24l01ReceiveString
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _nrf24l01SendString
  4325  0100                     _nrf24l01SendString:	
  4326                           
  4327                           ;nrf24l01.c: 235: unsigned char i;;nrf24l01.c: 237: if (counter){
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _nrf24l01SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4331  0100  0020               	movlb	0	; select bank0
  4332  0101  0847               	movf	_counter,w
  4333  0102  0448               	iorwf	_counter+1,w
  4334  0103  1903               	btfsc	3,2
  4335  0104  2909               	goto	l320
  4336                           
  4337                           ;nrf24l01.c: 238: counter--;
  4338  0105  3001               	movlw	1
  4339  0106  02C7               	subwf	_counter,f
  4340  0107  3000               	movlw	0
  4341  0108  3BC8               	subwfb	_counter+1,f
  4342  0109                     l320:	
  4343                           ;nrf24l01.c: 239: };nrf24l01.c: 242: RESEND:
  4344                           
  4345                           
  4346                           ;nrf24l01.c: 253: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4347  0109  3002               	movlw	2
  4348  010A  0020               	movlb	0	; select bank0
  4349  010B  00A8               	movwf	??_nrf24l01SendString+1
  4350  010C  3004               	movlw	4
  4351  010D  00A7               	movwf	??_nrf24l01SendString
  4352  010E  30BA               	movlw	186
  4353  010F                     u1607:	
  4354  010F  0B89               	decfsz	9,f
  4355  0110  290F               	goto	u1607
  4356  0111  0BA7               	decfsz	??_nrf24l01SendString,f
  4357  0112  290F               	goto	u1607
  4358  0113  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4359  0114  290F               	goto	u1607
  4360  0115  0000               	nop
  4361                           
  4362                           ;nrf24l01.c: 254: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4363  0116  3002               	movlw	2
  4364  0117  0020               	movlb	0	; select bank0
  4365  0118  00A8               	movwf	??_nrf24l01SendString+1
  4366  0119  3004               	movlw	4
  4367  011A  00A7               	movwf	??_nrf24l01SendString
  4368  011B  30BA               	movlw	186
  4369  011C                     u1617:	
  4370  011C  0B89               	decfsz	9,f
  4371  011D  291C               	goto	u1617
  4372  011E  0BA7               	decfsz	??_nrf24l01SendString,f
  4373  011F  291C               	goto	u1617
  4374  0120  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4375  0121  291C               	goto	u1617
  4376  0122  0000               	nop
  4377                           
  4378                           ;nrf24l01.c: 255: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  4379  0123  3002               	movlw	2
  4380  0124  0020               	movlb	0	; select bank0
  4381  0125  00A8               	movwf	??_nrf24l01SendString+1
  4382  0126  3004               	movlw	4
  4383  0127  00A7               	movwf	??_nrf24l01SendString
  4384  0128  30BA               	movlw	186
  4385  0129                     u1627:	
  4386  0129  0B89               	decfsz	9,f
  4387  012A  2929               	goto	u1627
  4388  012B  0BA7               	decfsz	??_nrf24l01SendString,f
  4389  012C  2929               	goto	u1627
  4390  012D  0BA8               	decfsz	??_nrf24l01SendString+1,f
  4391  012E  2929               	goto	u1627
  4392  012F  0000               	nop
  4393                           
  4394                           ;nrf24l01.c: 260: nrf24l01.TXBusy = 1;
  4395  0130  0020               	movlb	0	; select bank0
  4396  0131  14CB               	bsf	_nrf24l01,1	;volatile
  4397                           
  4398                           ;nrf24l01.c: 263: enableInterrupts(0);
  4399  0132  3000               	movlw	0
  4400  0133  3186  2695  3181   	fcall	_enableInterrupts
  4401                           
  4402                           ;nrf24l01.c: 266: nrf24l01SetRXMode(0);
  4403  0136  3000               	movlw	0
  4404  0137  3184  2440  3181   	fcall	_nrf24l01SetRXMode
  4405                           
  4406                           ;nrf24l01.c: 269: nrf24l01SPIStart();
  4407  013A  3186  268D  3181   	fcall	_nrf24l01SPIStart
  4408                           
  4409                           ;nrf24l01.c: 272: nrf24l01SPISend(0b10110000);
  4410  013D  30B0               	movlw	176
  4411  013E  3186  2674  3181   	fcall	_nrf24l01SPISend
  4412                           
  4413                           ;nrf24l01.c: 277: for (i = 0; (nrf24l01TXName[i] != '\0') && (i < sizeof(nrf24l01TXName)
      +                          ); i++){
  4414  0141  0020               	movlb	0	; select bank0
  4415  0142  01A9               	clrf	nrf24l01SendString@i
  4416  0143  2951               	goto	l2031
  4417  0144                     l2027:	
  4418                           
  4419                           ;nrf24l01.c: 278: nrf24l01SPISend(nrf24l01TXName[i]);
  4420  0144  0829               	movf	nrf24l01SendString@i,w
  4421  0145  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4422  0146  0086               	movwf	6
  4423  0147  0187               	clrf	7
  4424  0148  0801               	movf	1,w
  4425  0149  3186  2674  3181   	fcall	_nrf24l01SPISend
  4426  014C  3001               	movlw	1
  4427  014D  0020               	movlb	0	; select bank0
  4428  014E  00A7               	movwf	??_nrf24l01SendString
  4429  014F  0827               	movf	??_nrf24l01SendString,w
  4430  0150  07A9               	addwf	nrf24l01SendString@i,f
  4431  0151                     l2031:	
  4432  0151  0829               	movf	nrf24l01SendString@i,w
  4433  0152  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4434  0153  0086               	movwf	6
  4435  0154  0187               	clrf	7
  4436  0155  0801               	movf	1,w
  4437  0156  1903               	btfsc	3,2
  4438  0157  295C               	goto	l2035
  4439  0158  3010               	movlw	16
  4440  0159  0229               	subwf	nrf24l01SendString@i,w
  4441  015A  1C03               	skipc
  4442  015B  2944               	goto	l2027
  4443  015C                     l2035:	
  4444                           
  4445                           ;nrf24l01.c: 279: };nrf24l01.c: 282: nrf24l01SPISend('/');
  4446  015C  302F               	movlw	47
  4447  015D  3186  2674  3181   	fcall	_nrf24l01SPISend
  4448                           
  4449                           ;nrf24l01.c: 285: for (i = 0; (nrf24l01TXTopic[i] != '\0') && (i < sizeof(nrf24l01TXTopi
      +                          c)); i++){
  4450  0160  0020               	movlb	0	; select bank0
  4451  0161  01A9               	clrf	nrf24l01SendString@i
  4452  0162  2970               	goto	l2043
  4453  0163                     l2039:	
  4454                           
  4455                           ;nrf24l01.c: 286: nrf24l01SPISend(nrf24l01TXTopic[i]);
  4456  0163  0829               	movf	nrf24l01SendString@i,w
  4457  0164  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4458  0165  0086               	movwf	6
  4459  0166  0187               	clrf	7
  4460  0167  0801               	movf	1,w
  4461  0168  3186  2674  3181   	fcall	_nrf24l01SPISend
  4462  016B  3001               	movlw	1
  4463  016C  0020               	movlb	0	; select bank0
  4464  016D  00A7               	movwf	??_nrf24l01SendString
  4465  016E  0827               	movf	??_nrf24l01SendString,w
  4466  016F  07A9               	addwf	nrf24l01SendString@i,f
  4467  0170                     l2043:	
  4468  0170  0829               	movf	nrf24l01SendString@i,w
  4469  0171  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4470  0172  0086               	movwf	6
  4471  0173  0187               	clrf	7
  4472  0174  0801               	movf	1,w
  4473  0175  1903               	btfsc	3,2
  4474  0176  297B               	goto	l2047
  4475  0177  3008               	movlw	8
  4476  0178  0229               	subwf	nrf24l01SendString@i,w
  4477  0179  1C03               	skipc
  4478  017A  2963               	goto	l2039
  4479  017B                     l2047:	
  4480                           
  4481                           ;nrf24l01.c: 287: };nrf24l01.c: 290: nrf24l01SPISend('/');
  4482  017B  302F               	movlw	47
  4483  017C  3186  2674  3181   	fcall	_nrf24l01SPISend
  4484                           
  4485                           ;nrf24l01.c: 293: for (i = 0; (nrf24l01TXValue[i] != '\0') && (i < sizeof(nrf24l01TXValu
      +                          e)); i++){
  4486  017F  0020               	movlb	0	; select bank0
  4487  0180  01A9               	clrf	nrf24l01SendString@i
  4488  0181  298F               	goto	l2055
  4489  0182                     l2051:	
  4490                           
  4491                           ;nrf24l01.c: 294: nrf24l01SPISend(nrf24l01TXValue[i]);
  4492  0182  0829               	movf	nrf24l01SendString@i,w
  4493  0183  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4494  0184  0086               	movwf	6
  4495  0185  0187               	clrf	7
  4496  0186  0801               	movf	1,w
  4497  0187  3186  2674  3181   	fcall	_nrf24l01SPISend
  4498  018A  3001               	movlw	1
  4499  018B  0020               	movlb	0	; select bank0
  4500  018C  00A7               	movwf	??_nrf24l01SendString
  4501  018D  0827               	movf	??_nrf24l01SendString,w
  4502  018E  07A9               	addwf	nrf24l01SendString@i,f
  4503  018F                     l2055:	
  4504  018F  0829               	movf	nrf24l01SendString@i,w
  4505  0190  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4506  0191  0086               	movwf	6
  4507  0192  0187               	clrf	7
  4508  0193  0801               	movf	1,w
  4509  0194  1903               	btfsc	3,2
  4510  0195  299A               	goto	l2059
  4511  0196  3008               	movlw	8
  4512  0197  0229               	subwf	nrf24l01SendString@i,w
  4513  0198  1C03               	skipc
  4514  0199  2982               	goto	l2051
  4515  019A                     l2059:	
  4516                           
  4517                           ;nrf24l01.c: 295: };nrf24l01.c: 298: nrf24l01SPIEnd();
  4518  019A  3186  269D  3181   	fcall	_nrf24l01SPIEnd
  4519                           
  4520                           ;nrf24l01.c: 301: nrf24l01CEHigh();
  4521  019D  3186  26D7  3181   	fcall	_nrf24l01CEHigh
  4522                           
  4523                           ;nrf24l01.c: 302: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4524  01A0  301A               	movlw	26
  4525  01A1                     u1637:	
  4526  01A1  0B89               	decfsz	9,f
  4527  01A2  29A1               	goto	u1637
  4528  01A3  3200               	nop2
  4529                           
  4530                           ;nrf24l01.c: 303: nrf24l01CELow();
  4531  01A4  3186  26D4  3181   	fcall	_nrf24l01CELow
  4532                           
  4533                           ;nrf24l01.c: 306: enableInterrupts(1);
  4534  01A7  3001               	movlw	1
  4535  01A8  3186  2695         	fcall	_enableInterrupts
  4536  01AA  0008               	return
  4537  01AB                     __end_of_nrf24l01SendString:	
  4538                           
  4539                           	psect	text11
  4540  0440                     __ptext11:	
  4541 ;; *************** function _nrf24l01SetRXMode *****************
  4542 ;; Defined at:
  4543 ;;		line 74 in file "nrf24l01.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  rxMode          1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  rxMode          1    6[BANK0 ] unsigned char 
  4548 ;;  config          1    5[BANK0 ] struct .
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;Total ram usage:        3 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    9
  4565 ;; This function calls:
  4566 ;;		_nrf24l01CEHigh
  4567 ;;		_nrf24l01CELow
  4568 ;;		_nrf24l01Send
  4569 ;; This function is called by:
  4570 ;;		_nrf24l01SendString
  4571 ;;		_checkRxData
  4572 ;;		_nrf24l01CheckACK
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _nrf24l01SetRXMode
  4578  0440                     _nrf24l01SetRXMode:	
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  4582                           ;nrf24l01SetRXMode@rxMode stored from wreg
  4583  0440  0020               	movlb	0	; select bank0
  4584  0441  00A6               	movwf	nrf24l01SetRXMode@rxMode
  4585                           
  4586                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  4587  0442  01A1               	clrf	nrf24l01Send@data
  4588  0443  3000               	movlw	0
  4589  0444  3185  25ED  3184   	fcall	_nrf24l01Send
  4590  0447  0020               	movlb	0	; select bank0
  4591  0448  00A4               	movwf	??_nrf24l01SetRXMode
  4592  0449  0824               	movf	??_nrf24l01SetRXMode,w
  4593  044A  00A5               	movwf	nrf24l01SetRXMode@config
  4594                           
  4595                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  4596  044B  0825               	movf	nrf24l01SetRXMode@config,w
  4597  044C  3901               	andlw	1
  4598  044D  0626               	xorwf	nrf24l01SetRXMode@rxMode,w
  4599  044E  1903               	skipnz
  4600  044F  2C74               	goto	l1845
  4601                           
  4602                           ;nrf24l01.c: 85: nrf24l01CELow();
  4603  0450  3186  26D4  3184   	fcall	_nrf24l01CELow
  4604                           
  4605                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4606  0453  30A0               	movlw	160
  4607  0454                     u1647:	
  4608  0454  3200               	nop2
  4609  0455  0B89               	decfsz	9,f
  4610  0456  2C54               	goto	u1647
  4611                           
  4612                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  4613  0457  0020               	movlb	0	; select bank0
  4614  0458  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4615  0459  3901               	andlw	1
  4616  045A  1025               	bcf	nrf24l01SetRXMode@config,0
  4617  045B  1D03               	skipz
  4618  045C  1425               	bsf	nrf24l01SetRXMode@config,0
  4619                           
  4620                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  4621  045D  0825               	movf	nrf24l01SetRXMode@config,w
  4622  045E  00A4               	movwf	??_nrf24l01SetRXMode
  4623  045F  0824               	movf	??_nrf24l01SetRXMode,w
  4624  0460  00A1               	movwf	nrf24l01Send@data
  4625  0461  3020               	movlw	32
  4626  0462  3185  25ED  3184   	fcall	_nrf24l01Send
  4627                           
  4628                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4629  0465  30A0               	movlw	160
  4630  0466                     u1657:	
  4631  0466  3200               	nop2
  4632  0467  0B89               	decfsz	9,f
  4633  0468  2C66               	goto	u1657
  4634                           
  4635                           ;nrf24l01.c: 100: if (rxMode){
  4636  0469  0020               	movlb	0	; select bank0
  4637  046A  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4638  046B  1903               	btfsc	3,2
  4639  046C  2C74               	goto	l1845
  4640                           
  4641                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  4642  046D  3186  26D7  3184   	fcall	_nrf24l01CEHigh
  4643                           
  4644                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4645  0470  30A0               	movlw	160
  4646  0471                     u1667:	
  4647  0471  3200               	nop2
  4648  0472  0B89               	decfsz	9,f
  4649  0473  2C71               	goto	u1667
  4650  0474                     l1845:	
  4651                           
  4652                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  4653  0474  0020               	movlb	0	; select bank0
  4654  0475  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4655  0476  3901               	andlw	1
  4656  0477  11CB               	bcf	_nrf24l01,3	;volatile
  4657  0478  1D03               	skipz
  4658  0479  15CB               	bsf	_nrf24l01,3	;volatile
  4659  047A  0008               	return
  4660  047B                     __end_of_nrf24l01SetRXMode:	
  4661                           
  4662                           	psect	text12
  4663  05ED                     __ptext12:	
  4664 ;; *************** function _nrf24l01Send *****************
  4665 ;; Defined at:
  4666 ;;		line 19 in file "nrf24l01.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  command         1    wreg     unsigned char 
  4669 ;;  data            1    1[BANK0 ] unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  command         1    3[BANK0 ] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      unsigned char 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4681 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;Total ram usage:        3 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    8
  4688 ;; This function calls:
  4689 ;;		_enableInterrupts
  4690 ;;		_nrf24l01SPIEnd
  4691 ;;		_nrf24l01SPISend
  4692 ;;		_nrf24l01SPIStart
  4693 ;; This function is called by:
  4694 ;;		_nrf24l01SetRXMode
  4695 ;;		_nrf24l01InitRegisters
  4696 ;;		_nrf24l01ReceiveString
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _nrf24l01Send
  4702  05ED                     _nrf24l01Send:	
  4703                           
  4704                           ;incstack = 0
  4705                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  4706                           ;nrf24l01Send@command stored from wreg
  4707  05ED  0020               	movlb	0	; select bank0
  4708  05EE  00A3               	movwf	nrf24l01Send@command
  4709                           
  4710                           ;nrf24l01.c: 22: enableInterrupts(0);
  4711  05EF  3000               	movlw	0
  4712  05F0  3186  2695  3185   	fcall	_enableInterrupts
  4713                           
  4714                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  4715  05F3  3186  268D  3185   	fcall	_nrf24l01SPIStart
  4716                           
  4717                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  4718  05F6  0020               	movlb	0	; select bank0
  4719  05F7  0823               	movf	nrf24l01Send@command,w
  4720  05F8  3186  2674  3185   	fcall	_nrf24l01SPISend
  4721                           
  4722                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  4723  05FB  0020               	movlb	0	; select bank0
  4724  05FC  0821               	movf	nrf24l01Send@data,w
  4725  05FD  3186  2674  3185   	fcall	_nrf24l01SPISend
  4726  0600  0020               	movlb	0	; select bank0
  4727  0601  00A2               	movwf	??_nrf24l01Send
  4728  0602  0822               	movf	??_nrf24l01Send,w
  4729  0603  00A1               	movwf	nrf24l01Send@data
  4730                           
  4731                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  4732  0604  3186  269D  3185   	fcall	_nrf24l01SPIEnd
  4733                           
  4734                           ;nrf24l01.c: 37: enableInterrupts(1);
  4735  0607  3001               	movlw	1
  4736  0608  3186  2695         	fcall	_enableInterrupts
  4737                           
  4738                           ;nrf24l01.c: 39: return data;
  4739  060A  0020               	movlb	0	; select bank0
  4740  060B  0821               	movf	nrf24l01Send@data,w
  4741  060C  0008               	return
  4742  060D                     __end_of_nrf24l01Send:	
  4743                           
  4744                           	psect	text13
  4745  0247                     __ptext13:	
  4746 ;; *************** function _getADCValue *****************
  4747 ;; Defined at:
  4748 ;;		line 21 in file "main.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  channel         1    wreg     unsigned char 
  4751 ;;  divider         4   15[BANK0 ] unsigned long 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  channel         1   23[BANK0 ] unsigned char 
  4754 ;;  adcSum          4   25[BANK0 ] unsigned long 
  4755 ;;  adcLoop         1   24[BANK0 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  4   15[BANK0 ] unsigned long 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;Total ram usage:       14 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    7
  4772 ;; This function calls:
  4773 ;;		___lldiv
  4774 ;;		___lmul
  4775 ;; This function is called by:
  4776 ;;		_loop
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _getADCValue
  4782  0247                     _getADCValue:	
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  4786                           ;getADCValue@channel stored from wreg
  4787  0247  0020               	movlb	0	; select bank0
  4788  0248  00B7               	movwf	getADCValue@channel
  4789                           
  4790                           ;main.c: 23: unsigned long adcSum = 0;
  4791  0249  3000               	movlw	0
  4792  024A  00BC               	movwf	getADCValue@adcSum+3
  4793  024B  3000               	movlw	0
  4794  024C  00BB               	movwf	getADCValue@adcSum+2
  4795  024D  3000               	movlw	0
  4796  024E  00BA               	movwf	getADCValue@adcSum+1
  4797  024F  3000               	movlw	0
  4798  0250  00B9               	movwf	getADCValue@adcSum
  4799                           
  4800                           ;main.c: 24: unsigned char adcLoop = 255;
  4801  0251  30FF               	movlw	255
  4802  0252  00B3               	movwf	??_getADCValue
  4803  0253  0833               	movf	??_getADCValue,w
  4804  0254  00B8               	movwf	getADCValue@adcLoop
  4805                           
  4806                           ;main.c: 26: ADCON0bits.CHS = channel;
  4807  0255  0837               	movf	getADCValue@channel,w
  4808  0256  00B3               	movwf	??_getADCValue
  4809  0257  0DB3               	rlf	??_getADCValue,f
  4810  0258  0DB3               	rlf	??_getADCValue,f
  4811  0259  0021               	movlb	1	; select bank1
  4812  025A  081D               	movf	29,w	;volatile
  4813  025B  0020               	movlb	0	; select bank0
  4814  025C  0633               	xorwf	??_getADCValue,w
  4815  025D  3903               	andlw	-253
  4816  025E  0633               	xorwf	??_getADCValue,w
  4817  025F  0021               	movlb	1	; select bank1
  4818  0260  009D               	movwf	29	;volatile
  4819                           
  4820                           ;main.c: 27: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4821  0261  30A0               	movlw	160
  4822  0262                     u1677:	
  4823  0262  3200               	nop2
  4824  0263  0B89               	decfsz	9,f
  4825  0264  2A62               	goto	u1677
  4826  0265                     l1963:	
  4827                           ;main.c: 29: while (--adcLoop){
  4828                           
  4829  0265  3001               	movlw	1
  4830  0266  0020               	movlb	0	; select bank0
  4831  0267  02B8               	subwf	getADCValue@adcLoop,f
  4832  0268  1903               	btfsc	3,2
  4833  0269  2A8F               	goto	l1965
  4834                           
  4835                           ;main.c: 31: ADCON0bits.ADGO = 1;
  4836  026A  0021               	movlb	1	; select bank1
  4837  026B  149D               	bsf	29,1	;volatile
  4838  026C                     l198:	
  4839                           ;main.c: 32: while (ADCON0bits.ADGO){
  4840                           
  4841  026C  0021               	movlb	1	; select bank1
  4842  026D  1C9D               	btfss	29,1	;volatile
  4843  026E  2A71               	goto	l1961
  4844                           
  4845                           ;main.c: 33: __nop();
  4846  026F  0000               	nop
  4847  0270  2A6C               	goto	l198
  4848  0271                     l1961:	
  4849                           
  4850                           ;main.c: 34: };main.c: 36: adcSum+= ADRESL;
  4851  0271  081B               	movf	27,w	;volatile
  4852  0272  0020               	movlb	0	; select bank0
  4853  0273  00B3               	movwf	??_getADCValue
  4854  0274  01B4               	clrf	??_getADCValue+1
  4855  0275  01B5               	clrf	??_getADCValue+2
  4856  0276  01B6               	clrf	??_getADCValue+3
  4857  0277  0833               	movf	??_getADCValue,w
  4858  0278  07B9               	addwf	getADCValue@adcSum,f
  4859  0279  0834               	movf	??_getADCValue+1,w
  4860  027A  3DBA               	addwfc	getADCValue@adcSum+1,f
  4861  027B  0835               	movf	??_getADCValue+2,w
  4862  027C  3DBB               	addwfc	getADCValue@adcSum+2,f
  4863  027D  0836               	movf	??_getADCValue+3,w
  4864  027E  3DBC               	addwfc	getADCValue@adcSum+3,f
  4865                           
  4866                           ;main.c: 37: adcSum+= (unsigned) (ADRESH << 8);
  4867  027F  0021               	movlb	1	; select bank1
  4868  0280  081C               	movf	28,w	;volatile
  4869  0281  0020               	movlb	0	; select bank0
  4870  0282  00B3               	movwf	??_getADCValue
  4871  0283  01B4               	clrf	??_getADCValue+1
  4872  0284  0833               	movf	??_getADCValue,w
  4873  0285  00B4               	movwf	??_getADCValue+1
  4874  0286  01B3               	clrf	??_getADCValue
  4875  0287  0833               	movf	??_getADCValue,w
  4876  0288  07B9               	addwf	getADCValue@adcSum,f
  4877  0289  0834               	movf	??_getADCValue+1,w
  4878  028A  3DBA               	addwfc	getADCValue@adcSum+1,f
  4879  028B  3000               	movlw	0
  4880  028C  3DBB               	addwfc	getADCValue@adcSum+2,f
  4881  028D  3DBC               	addwfc	getADCValue@adcSum+3,f
  4882  028E  2A65               	goto	l1963
  4883  028F                     l1965:	
  4884                           
  4885                           ;main.c: 38: };main.c: 40: adcSum*= 100;
  4886  028F  3000               	movlw	0
  4887  0290  00A4               	movwf	___lmul@multiplier+3
  4888  0291  3000               	movlw	0
  4889  0292  00A3               	movwf	___lmul@multiplier+2
  4890  0293  3000               	movlw	0
  4891  0294  00A2               	movwf	___lmul@multiplier+1
  4892  0295  3064               	movlw	100
  4893  0296  00A1               	movwf	___lmul@multiplier
  4894  0297  083C               	movf	getADCValue@adcSum+3,w
  4895  0298  00A8               	movwf	___lmul@multiplicand+3
  4896  0299  083B               	movf	getADCValue@adcSum+2,w
  4897  029A  00A7               	movwf	___lmul@multiplicand+2
  4898  029B  083A               	movf	getADCValue@adcSum+1,w
  4899  029C  00A6               	movwf	___lmul@multiplicand+1
  4900  029D  0839               	movf	getADCValue@adcSum,w
  4901  029E  00A5               	movwf	___lmul@multiplicand
  4902  029F  3184  24E7  3182   	fcall	___lmul
  4903  02A2  0020               	movlb	0	; select bank0
  4904  02A3  0824               	movf	?___lmul+3,w
  4905  02A4  00BC               	movwf	getADCValue@adcSum+3
  4906  02A5  0823               	movf	?___lmul+2,w
  4907  02A6  00BB               	movwf	getADCValue@adcSum+2
  4908  02A7  0822               	movf	?___lmul+1,w
  4909  02A8  00BA               	movwf	getADCValue@adcSum+1
  4910  02A9  0821               	movf	?___lmul,w
  4911  02AA  00B9               	movwf	getADCValue@adcSum
  4912                           
  4913                           ;main.c: 41: adcSum/= divider;
  4914  02AB  0832               	movf	getADCValue@divider+3,w
  4915  02AC  00A4               	movwf	___lldiv@divisor+3
  4916  02AD  0831               	movf	getADCValue@divider+2,w
  4917  02AE  00A3               	movwf	___lldiv@divisor+2
  4918  02AF  0830               	movf	getADCValue@divider+1,w
  4919  02B0  00A2               	movwf	___lldiv@divisor+1
  4920  02B1  082F               	movf	getADCValue@divider,w
  4921  02B2  00A1               	movwf	___lldiv@divisor
  4922  02B3  083C               	movf	getADCValue@adcSum+3,w
  4923  02B4  00A8               	movwf	___lldiv@dividend+3
  4924  02B5  083B               	movf	getADCValue@adcSum+2,w
  4925  02B6  00A7               	movwf	___lldiv@dividend+2
  4926  02B7  083A               	movf	getADCValue@adcSum+1,w
  4927  02B8  00A6               	movwf	___lldiv@dividend+1
  4928  02B9  0839               	movf	getADCValue@adcSum,w
  4929  02BA  00A5               	movwf	___lldiv@dividend
  4930  02BB  3183  23AB         	fcall	___lldiv
  4931  02BD  0020               	movlb	0	; select bank0
  4932  02BE  0824               	movf	?___lldiv+3,w
  4933  02BF  00BC               	movwf	getADCValue@adcSum+3
  4934  02C0  0823               	movf	?___lldiv+2,w
  4935  02C1  00BB               	movwf	getADCValue@adcSum+2
  4936  02C2  0822               	movf	?___lldiv+1,w
  4937  02C3  00BA               	movwf	getADCValue@adcSum+1
  4938  02C4  0821               	movf	?___lldiv,w
  4939  02C5  00B9               	movwf	getADCValue@adcSum
  4940                           
  4941                           ;main.c: 43: return adcSum;
  4942  02C6  083C               	movf	getADCValue@adcSum+3,w
  4943  02C7  00B2               	movwf	?_getADCValue+3
  4944  02C8  083B               	movf	getADCValue@adcSum+2,w
  4945  02C9  00B1               	movwf	?_getADCValue+2
  4946  02CA  083A               	movf	getADCValue@adcSum+1,w
  4947  02CB  00B0               	movwf	?_getADCValue+1
  4948  02CC  0839               	movf	getADCValue@adcSum,w
  4949  02CD  00AF               	movwf	?_getADCValue
  4950  02CE  0008               	return
  4951  02CF                     __end_of_getADCValue:	
  4952                           
  4953                           	psect	text14
  4954  04E7                     __ptext14:	
  4955 ;; *************** function ___lmul *****************
  4956 ;; Defined at:
  4957 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  multiplier      4    1[BANK0 ] unsigned long 
  4960 ;;  multiplicand    4    5[BANK0 ] unsigned long 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  product         4    9[BANK0 ] unsigned long 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  4    1[BANK0 ] unsigned long 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;Total ram usage:       12 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    6
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_getADCValue
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function ___lmul
  4988  04E7                     ___lmul:	
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4992  04E7  3000               	movlw	0
  4993  04E8  0020               	movlb	0	; select bank0
  4994  04E9  00AC               	movwf	___lmul@product+3
  4995  04EA  3000               	movlw	0
  4996  04EB  00AB               	movwf	___lmul@product+2
  4997  04EC  3000               	movlw	0
  4998  04ED  00AA               	movwf	___lmul@product+1
  4999  04EE  3000               	movlw	0
  5000  04EF  00A9               	movwf	___lmul@product
  5001  04F0                     l1849:	
  5002  04F0  1C21               	btfss	___lmul@multiplier,0
  5003  04F1  2CFA               	goto	l1853
  5004  04F2  0825               	movf	___lmul@multiplicand,w
  5005  04F3  07A9               	addwf	___lmul@product,f
  5006  04F4  0826               	movf	___lmul@multiplicand+1,w
  5007  04F5  3DAA               	addwfc	___lmul@product+1,f
  5008  04F6  0827               	movf	___lmul@multiplicand+2,w
  5009  04F7  3DAB               	addwfc	___lmul@product+2,f
  5010  04F8  0828               	movf	___lmul@multiplicand+3,w
  5011  04F9  3DAC               	addwfc	___lmul@product+3,f
  5012  04FA                     l1853:	
  5013  04FA  3001               	movlw	1
  5014  04FB                     u715:	
  5015  04FB  35A5               	lslf	___lmul@multiplicand,f
  5016  04FC  0DA6               	rlf	___lmul@multiplicand+1,f
  5017  04FD  0DA7               	rlf	___lmul@multiplicand+2,f
  5018  04FE  0DA8               	rlf	___lmul@multiplicand+3,f
  5019  04FF  0B89               	decfsz	9,f
  5020  0500  2CFB               	goto	u715
  5021  0501  3001               	movlw	1
  5022  0502                     u725:	
  5023  0502  36A4               	lsrf	___lmul@multiplier+3,f
  5024  0503  0CA3               	rrf	___lmul@multiplier+2,f
  5025  0504  0CA2               	rrf	___lmul@multiplier+1,f
  5026  0505  0CA1               	rrf	___lmul@multiplier,f
  5027  0506  0B89               	decfsz	9,f
  5028  0507  2D02               	goto	u725
  5029  0508  0824               	movf	___lmul@multiplier+3,w
  5030  0509  0423               	iorwf	___lmul@multiplier+2,w
  5031  050A  0422               	iorwf	___lmul@multiplier+1,w
  5032  050B  0421               	iorwf	___lmul@multiplier,w
  5033  050C  1D03               	skipz
  5034  050D  2CF0               	goto	l1849
  5035  050E  082C               	movf	___lmul@product+3,w
  5036  050F  00A4               	movwf	?___lmul+3
  5037  0510  082B               	movf	___lmul@product+2,w
  5038  0511  00A3               	movwf	?___lmul+2
  5039  0512  082A               	movf	___lmul@product+1,w
  5040  0513  00A2               	movwf	?___lmul+1
  5041  0514  0829               	movf	___lmul@product,w
  5042  0515  00A1               	movwf	?___lmul
  5043  0516  0008               	return
  5044  0517                     __end_of___lmul:	
  5045                           
  5046                           	psect	text15
  5047  03AB                     __ptext15:	
  5048 ;; *************** function ___lldiv *****************
  5049 ;; Defined at:
  5050 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  divisor         4    1[BANK0 ] unsigned long 
  5053 ;;  dividend        4    5[BANK0 ] unsigned long 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  quotient        4   10[BANK0 ] unsigned long 
  5056 ;;  counter         1   14[BANK0 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  4    1[BANK0 ] unsigned long 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5066 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;Total ram usage:       14 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    6
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_getADCValue
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function ___lldiv
  5082  03AB                     ___lldiv:	
  5083                           
  5084                           ;incstack = 0
  5085                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5086  03AB  3000               	movlw	0
  5087  03AC  0020               	movlb	0	; select bank0
  5088  03AD  00AD               	movwf	___lldiv@quotient+3
  5089  03AE  3000               	movlw	0
  5090  03AF  00AC               	movwf	___lldiv@quotient+2
  5091  03B0  3000               	movlw	0
  5092  03B1  00AB               	movwf	___lldiv@quotient+1
  5093  03B2  3000               	movlw	0
  5094  03B3  00AA               	movwf	___lldiv@quotient
  5095  03B4  0824               	movf	___lldiv@divisor+3,w
  5096  03B5  0423               	iorwf	___lldiv@divisor+2,w
  5097  03B6  0422               	iorwf	___lldiv@divisor+1,w
  5098  03B7  0421               	iorwf	___lldiv@divisor,w
  5099  03B8  1903               	skipnz
  5100  03B9  2BF5               	goto	l1881
  5101  03BA  01AE               	clrf	___lldiv@counter
  5102  03BB  0AAE               	incf	___lldiv@counter,f
  5103  03BC                     l1867:	
  5104  03BC  1BA4               	btfsc	___lldiv@divisor+3,7
  5105  03BD  2BCA               	goto	l1869
  5106  03BE  3001               	movlw	1
  5107  03BF                     u755:	
  5108  03BF  35A1               	lslf	___lldiv@divisor,f
  5109  03C0  0DA2               	rlf	___lldiv@divisor+1,f
  5110  03C1  0DA3               	rlf	___lldiv@divisor+2,f
  5111  03C2  0DA4               	rlf	___lldiv@divisor+3,f
  5112  03C3  0B89               	decfsz	9,f
  5113  03C4  2BBF               	goto	u755
  5114  03C5  3001               	movlw	1
  5115  03C6  00A9               	movwf	??___lldiv
  5116  03C7  0829               	movf	??___lldiv,w
  5117  03C8  07AE               	addwf	___lldiv@counter,f
  5118  03C9  2BBC               	goto	l1867
  5119  03CA                     l1869:	
  5120  03CA  3001               	movlw	1
  5121  03CB                     u775:	
  5122  03CB  35AA               	lslf	___lldiv@quotient,f
  5123  03CC  0DAB               	rlf	___lldiv@quotient+1,f
  5124  03CD  0DAC               	rlf	___lldiv@quotient+2,f
  5125  03CE  0DAD               	rlf	___lldiv@quotient+3,f
  5126  03CF  0B89               	decfsz	9,f
  5127  03D0  2BCB               	goto	u775
  5128  03D1  0824               	movf	___lldiv@divisor+3,w
  5129  03D2  0228               	subwf	___lldiv@dividend+3,w
  5130  03D3  1D03               	skipz
  5131  03D4  2BDF               	goto	u785
  5132  03D5  0823               	movf	___lldiv@divisor+2,w
  5133  03D6  0227               	subwf	___lldiv@dividend+2,w
  5134  03D7  1D03               	skipz
  5135  03D8  2BDF               	goto	u785
  5136  03D9  0822               	movf	___lldiv@divisor+1,w
  5137  03DA  0226               	subwf	___lldiv@dividend+1,w
  5138  03DB  1D03               	skipz
  5139  03DC  2BDF               	goto	u785
  5140  03DD  0821               	movf	___lldiv@divisor,w
  5141  03DE  0225               	subwf	___lldiv@dividend,w
  5142  03DF                     u785:	
  5143  03DF  1C03               	skipc
  5144  03E0  2BEA               	goto	l1877
  5145  03E1  0821               	movf	___lldiv@divisor,w
  5146  03E2  02A5               	subwf	___lldiv@dividend,f
  5147  03E3  0822               	movf	___lldiv@divisor+1,w
  5148  03E4  3BA6               	subwfb	___lldiv@dividend+1,f
  5149  03E5  0823               	movf	___lldiv@divisor+2,w
  5150  03E6  3BA7               	subwfb	___lldiv@dividend+2,f
  5151  03E7  0824               	movf	___lldiv@divisor+3,w
  5152  03E8  3BA8               	subwfb	___lldiv@dividend+3,f
  5153  03E9  142A               	bsf	___lldiv@quotient,0
  5154  03EA                     l1877:	
  5155  03EA  3001               	movlw	1
  5156  03EB                     u795:	
  5157  03EB  36A4               	lsrf	___lldiv@divisor+3,f
  5158  03EC  0CA3               	rrf	___lldiv@divisor+2,f
  5159  03ED  0CA2               	rrf	___lldiv@divisor+1,f
  5160  03EE  0CA1               	rrf	___lldiv@divisor,f
  5161  03EF  0B89               	decfsz	9,f
  5162  03F0  2BEB               	goto	u795
  5163  03F1  3001               	movlw	1
  5164  03F2  02AE               	subwf	___lldiv@counter,f
  5165  03F3  1D03               	btfss	3,2
  5166  03F4  2BCA               	goto	l1869
  5167  03F5                     l1881:	
  5168  03F5  082D               	movf	___lldiv@quotient+3,w
  5169  03F6  00A4               	movwf	?___lldiv+3
  5170  03F7  082C               	movf	___lldiv@quotient+2,w
  5171  03F8  00A3               	movwf	?___lldiv+2
  5172  03F9  082B               	movf	___lldiv@quotient+1,w
  5173  03FA  00A2               	movwf	?___lldiv+1
  5174  03FB  082A               	movf	___lldiv@quotient,w
  5175  03FC  00A1               	movwf	?___lldiv
  5176  03FD  0008               	return
  5177  03FE                     __end_of___lldiv:	
  5178                           
  5179                           	psect	intentry
  5180  0004                     __pintentry:	
  5181 ;; *************** function _ISR *****************
  5182 ;; Defined at:
  5183 ;;		line 14 in file "main.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    5
  5204 ;; This function calls:
  5205 ;;		_nrf24l01ISR
  5206 ;; This function is called by:
  5207 ;;		Interrupt level 1
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211  0004                     _ISR:	
  5212                           
  5213                           ;incstack = 0
  5214  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5215                           
  5216                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5217  0005  3180               	pagesel	$
  5218                           
  5219                           ;main.c: 15: if (PIR0bits.INTF){
  5220  0006  0020               	movlb	0	; select bank0
  5221  0007  1C10               	btfss	16,0	;volatile
  5222  0008  280D               	goto	i1l193
  5223                           
  5224                           ;main.c: 16: nrf24l01ISR();
  5225  0009  3185  2547         	fcall	_nrf24l01ISR
  5226                           
  5227                           ;main.c: 17: PIR0bits.INTF = 0;
  5228  000B  0020               	movlb	0	; select bank0
  5229  000C  1010               	bcf	16,0	;volatile
  5230  000D                     i1l193:	
  5231  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5232  000E  0009               	retfie
  5233  000F                     __end_of_ISR:	
  5234                           
  5235                           	psect	text17
  5236  0547                     __ptext17:	
  5237 ;; *************** function _nrf24l01ISR *****************
  5238 ;; Defined at:
  5239 ;;		line 328 in file "nrf24l01.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  status          1    0[BANK0 ] struct .
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    4
  5260 ;; This function calls:
  5261 ;;		_exception
  5262 ;;		i1_nrf24l01Send
  5263 ;;		i1_nrf24l01SetRXMode
  5264 ;; This function is called by:
  5265 ;;		_ISR
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           
  5270                           ;psect for function _nrf24l01ISR
  5271  0547                     _nrf24l01ISR:	
  5272                           
  5273                           ;nrf24l01.c: 330: n_STATUS_t status;;nrf24l01.c: 331: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _nrf24l01ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5277  0547  01F1               	clrf	i1nrf24l01Send@data
  5278  0548  3007               	movlw	7
  5279  0549  3186  2628  3185   	fcall	i1_nrf24l01Send
  5280  054C  00FD               	movwf	??_nrf24l01ISR
  5281  054D  087D               	movf	??_nrf24l01ISR,w
  5282  054E  0020               	movlb	0	; select bank0
  5283  054F  00A0               	movwf	nrf24l01ISR@status
  5284                           
  5285                           ;nrf24l01.c: 334: if (status.byte == 0x00){
  5286  0550  0820               	movf	nrf24l01ISR@status,w
  5287  0551  1D03               	btfss	3,2
  5288  0552  2D57               	goto	i1l2215
  5289                           
  5290                           ;nrf24l01.c: 335: exception(1);
  5291  0553  3001               	movlw	1
  5292  0554  3186  2681  3185   	fcall	_exception
  5293  0557                     i1l2215:	
  5294                           
  5295                           ;nrf24l01.c: 336: };nrf24l01.c: 339: if (status.byte == 0xFF){
  5296  0557  0020               	movlb	0	; select bank0
  5297  0558  0A20               	incf	nrf24l01ISR@status,w
  5298  0559  1D03               	btfss	3,2
  5299  055A  2D5F               	goto	i1l2219
  5300                           
  5301                           ;nrf24l01.c: 340: exception(2);
  5302  055B  3002               	movlw	2
  5303  055C  3186  2681  3185   	fcall	_exception
  5304  055F                     i1l2219:	
  5305                           
  5306                           ;nrf24l01.c: 341: };nrf24l01.c: 343: if (status.TX_DS){
  5307  055F  0020               	movlb	0	; select bank0
  5308  0560  1EA0               	btfss	nrf24l01ISR@status,5
  5309  0561  2D6A               	goto	i1l2227
  5310                           
  5311                           ;nrf24l01.c: 346: nrf24l01.TXBusy = 0;
  5312  0562  10CB               	bcf	_nrf24l01,1	;volatile
  5313                           
  5314                           ;nrf24l01.c: 349: if (!nrf24l01.RXMode){
  5315  0563  1DCB               	btfss	_nrf24l01,3	;volatile
  5316                           
  5317                           ;nrf24l01.c: 350: if (nrf24l01TXPacketData.ACKRequest){
  5318  0564  1C4C               	btfss	_nrf24l01TXPacketData,0
  5319  0565  2D6A               	goto	i1l2227
  5320                           
  5321                           ;nrf24l01.c: 352: nrf24l01SetRXMode(1);
  5322  0566  3001               	movlw	1
  5323  0567  3184  247B  3185   	fcall	i1_nrf24l01SetRXMode
  5324  056A                     i1l2227:	
  5325                           
  5326                           ;nrf24l01.c: 353: };nrf24l01.c: 354: };nrf24l01.c: 355: };nrf24l01.c: 358: if (status.RX
      +                          _DR){
  5327  056A  0020               	movlb	0	; select bank0
  5328  056B  1B20               	btfsc	nrf24l01ISR@status,6
  5329                           
  5330                           ;nrf24l01.c: 360: nrf24l01.RXPending = 1;
  5331  056C  154B               	bsf	_nrf24l01,2	;volatile
  5332                           
  5333                           ;nrf24l01.c: 361: };nrf24l01.c: 364: nrf24l01Send(0b00100000 | 0x07, status.byte);
  5334  056D  0820               	movf	nrf24l01ISR@status,w
  5335  056E  00FD               	movwf	??_nrf24l01ISR
  5336  056F  087D               	movf	??_nrf24l01ISR,w
  5337  0570  00F1               	movwf	i1nrf24l01Send@data
  5338  0571  3027               	movlw	39
  5339  0572  3186  2628         	fcall	i1_nrf24l01Send
  5340  0574  0008               	return
  5341  0575                     __end_of_nrf24l01ISR:	
  5342                           
  5343                           	psect	text18
  5344  047B                     __ptext18:	
  5345 ;; *************** function i1_nrf24l01SetRXMode *****************
  5346 ;; Defined at:
  5347 ;;		line 74 in file "nrf24l01.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  rxMode          1    wreg     unsigned char 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  rxMode          1    6[COMMON] unsigned char 
  5352 ;;  nrf24l01SetR    1    5[COMMON] struct .
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;Total ram usage:        3 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    3
  5369 ;; This function calls:
  5370 ;;		_nrf24l01CEHigh
  5371 ;;		_nrf24l01CELow
  5372 ;;		i1_nrf24l01Send
  5373 ;; This function is called by:
  5374 ;;		_nrf24l01ISR
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function i1_nrf24l01SetRXMode
  5380  047B                     i1_nrf24l01SetRXMode:	
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5384                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  5385  047B  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  5386                           
  5387                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5388  047C  01F1               	clrf	i1nrf24l01Send@data
  5389  047D  3000               	movlw	0
  5390  047E  3186  2628  3184   	fcall	i1_nrf24l01Send
  5391  0481  00F4               	movwf	??i1_nrf24l01SetRXMode
  5392  0482  0874               	movf	??i1_nrf24l01SetRXMode,w
  5393  0483  00F5               	movwf	i1nrf24l01SetRXMode@config
  5394                           
  5395                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  5396  0484  0875               	movf	i1nrf24l01SetRXMode@config,w
  5397  0485  3901               	andlw	1
  5398  0486  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  5399  0487  1903               	skipnz
  5400  0488  2CAB               	goto	i1l2179
  5401                           
  5402                           ;nrf24l01.c: 85: nrf24l01CELow();
  5403  0489  3186  26D4  3184   	fcall	_nrf24l01CELow
  5404                           
  5405                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5406  048C  30A0               	movlw	160
  5407  048D                     u168_27:	
  5408  048D  3200               	nop2
  5409  048E  0B89               	decfsz	9,f
  5410  048F  2C8D               	goto	u168_27
  5411                           
  5412                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  5413  0490  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5414  0491  3901               	andlw	1
  5415  0492  1075               	bcf	i1nrf24l01SetRXMode@config,0
  5416  0493  1D03               	skipz
  5417  0494  1475               	bsf	i1nrf24l01SetRXMode@config,0
  5418                           
  5419                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5420  0495  0875               	movf	i1nrf24l01SetRXMode@config,w
  5421  0496  00F4               	movwf	??i1_nrf24l01SetRXMode
  5422  0497  0874               	movf	??i1_nrf24l01SetRXMode,w
  5423  0498  00F1               	movwf	i1nrf24l01Send@data
  5424  0499  3020               	movlw	32
  5425  049A  3186  2628  3184   	fcall	i1_nrf24l01Send
  5426                           
  5427                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5428  049D  30A0               	movlw	160
  5429  049E                     u169_27:	
  5430  049E  3200               	nop2
  5431  049F  0B89               	decfsz	9,f
  5432  04A0  2C9E               	goto	u169_27
  5433                           
  5434                           ;nrf24l01.c: 100: if (rxMode){
  5435  04A1  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5436  04A2  1903               	btfsc	3,2
  5437  04A3  2CAB               	goto	i1l2179
  5438                           
  5439                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  5440  04A4  3186  26D7  3184   	fcall	_nrf24l01CEHigh
  5441                           
  5442                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5443  04A7  30A0               	movlw	160
  5444  04A8                     u170_27:	
  5445  04A8  3200               	nop2
  5446  04A9  0B89               	decfsz	9,f
  5447  04AA  2CA8               	goto	u170_27
  5448  04AB                     i1l2179:	
  5449                           
  5450                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  5451  04AB  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5452  04AC  3901               	andlw	1
  5453  04AD  0020               	movlb	0	; select bank0
  5454  04AE  11CB               	bcf	_nrf24l01,3	;volatile
  5455  04AF  1D03               	skipz
  5456  04B0  15CB               	bsf	_nrf24l01,3	;volatile
  5457  04B1  0008               	return
  5458  04B2                     __end_ofi1_nrf24l01SetRXMode:	
  5459                           
  5460                           	psect	text19
  5461  0628                     __ptext19:	
  5462 ;; *************** function i1_nrf24l01Send *****************
  5463 ;; Defined at:
  5464 ;;		line 19 in file "nrf24l01.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  command         1    wreg     unsigned char 
  5467 ;;  data            1    1[COMMON] unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  command         1    3[COMMON] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      unsigned char 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5479 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;Total ram usage:        3 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    2
  5486 ;; This function calls:
  5487 ;;		_enableInterrupts
  5488 ;;		_nrf24l01SPIEnd
  5489 ;;		_nrf24l01SPISend
  5490 ;;		_nrf24l01SPIStart
  5491 ;; This function is called by:
  5492 ;;		_nrf24l01ISR
  5493 ;;		i1_nrf24l01SetRXMode
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function i1_nrf24l01Send
  5499  0628                     i1_nrf24l01Send:	
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5503                           ;i1nrf24l01Send@command stored from wreg
  5504  0628  00F3               	movwf	i1nrf24l01Send@command
  5505                           
  5506                           ;nrf24l01.c: 22: enableInterrupts(0);
  5507  0629  3000               	movlw	0
  5508  062A  3186  2695  3186   	fcall	_enableInterrupts
  5509                           
  5510                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  5511  062D  3186  268D  3186   	fcall	_nrf24l01SPIStart
  5512                           
  5513                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  5514  0630  0873               	movf	i1nrf24l01Send@command,w
  5515  0631  3186  2674  3186   	fcall	_nrf24l01SPISend
  5516                           
  5517                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  5518  0634  0871               	movf	i1nrf24l01Send@data,w
  5519  0635  3186  2674  3186   	fcall	_nrf24l01SPISend
  5520  0638  00F2               	movwf	??i1_nrf24l01Send
  5521  0639  0872               	movf	??i1_nrf24l01Send,w
  5522  063A  00F1               	movwf	i1nrf24l01Send@data
  5523                           
  5524                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  5525  063B  3186  269D  3186   	fcall	_nrf24l01SPIEnd
  5526                           
  5527                           ;nrf24l01.c: 37: enableInterrupts(1);
  5528  063E  3001               	movlw	1
  5529  063F  3186  2695         	fcall	_enableInterrupts
  5530                           
  5531                           ;nrf24l01.c: 39: return data;
  5532  0641  0871               	movf	i1nrf24l01Send@data,w
  5533  0642  0008               	return
  5534  0643                     __end_ofi1_nrf24l01Send:	
  5535                           
  5536                           	psect	text20
  5537  068D                     __ptext20:	
  5538 ;; *************** function _nrf24l01SPIStart *****************
  5539 ;; Defined at:
  5540 ;;		line 60 in file "interface.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0, pclath, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    7
  5561 ;; This function calls:
  5562 ;;		_nrf24l01CSLow
  5563 ;; This function is called by:
  5564 ;;		_nrf24l01Send
  5565 ;;		_nrf24l01SendString
  5566 ;;		i1_nrf24l01Send
  5567 ;;		_nrf24l01SetTXAddress
  5568 ;;		_nrf24l01ReceiveString
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _nrf24l01SPIStart
  5574  068D                     _nrf24l01SPIStart:	
  5575                           
  5576                           ;interface.c: 61: nrf24l01CSLow();
  5577                           
  5578                           ;incstack = 0
  5579 ;; hardware stack exceeded
  5580                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  5581  068D  3186  26CE  3186   	fcall	_nrf24l01CSLow
  5582                           
  5583                           ;interface.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5584  0690  300D               	movlw	13
  5585  0691                     u171_27:	
  5586  0691  0B89               	decfsz	9,f
  5587  0692  2E91               	goto	u171_27
  5588  0693  0000               	nop
  5589  0694  0008               	return
  5590  0695                     __end_of_nrf24l01SPIStart:	
  5591                           
  5592                           	psect	text21
  5593  06CE                     __ptext21:	
  5594 ;; *************** function _nrf24l01CSLow *****************
  5595 ;; Defined at:
  5596 ;;		line 18 in file "interface.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;		None
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		None
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;Total ram usage:        0 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    6
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_nrf24l01SPIStart
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _nrf24l01CSLow
  5626  06CE                     _nrf24l01CSLow:	
  5627                           
  5628                           ;interface.c: 19: PORTAbits.RA1 = 0;
  5629                           
  5630                           ;incstack = 0
  5631 ;; hardware stack exceeded
  5632                           ; Regs used in _nrf24l01CSLow: []
  5633  06CE  0020               	movlb	0	; select bank0
  5634  06CF  108C               	bcf	12,1	;volatile
  5635  06D0  0008               	return
  5636  06D1                     __end_of_nrf24l01CSLow:	
  5637                           
  5638                           	psect	text22
  5639  0674                     __ptext22:	
  5640 ;; *************** function _nrf24l01SPISend *****************
  5641 ;; Defined at:
  5642 ;;		line 47 in file "interface.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  data            1    wreg     unsigned char 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  data            1    0[COMMON] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      unsigned char 
  5649 ;; Registers used:
  5650 ;;		wreg
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    6
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_nrf24l01Send
  5667 ;;		_nrf24l01SendString
  5668 ;;		i1_nrf24l01Send
  5669 ;;		_nrf24l01SetTXAddress
  5670 ;;		_nrf24l01ReceiveStringPart
  5671 ;;		_nrf24l01ReceiveString
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _nrf24l01SPISend
  5677  0674                     _nrf24l01SPISend:	
  5678                           
  5679                           ;incstack = 0
  5680 ;; hardware stack exceeded
  5681                           ; Regs used in _nrf24l01SPISend: [wreg]
  5682                           ;nrf24l01SPISend@data stored from wreg
  5683  0674  00F0               	movwf	nrf24l01SPISend@data
  5684                           
  5685                           ;interface.c: 48: SSP1BUF = data;
  5686  0675  0870               	movf	nrf24l01SPISend@data,w
  5687  0676  0024               	movlb	4	; select bank4
  5688  0677  0091               	movwf	17	;volatile
  5689                           
  5690                           ;interface.c: 50: PORTCbits.RC4 = 1;
  5691  0678  0020               	movlb	0	; select bank0
  5692  0679  160E               	bsf	14,4	;volatile
  5693  067A                     i1l88:	
  5694                           ;interface.c: 52: while (!SSP1STATbits.BF){
  5695                           
  5696  067A  0024               	movlb	4	; select bank4
  5697  067B  1814               	btfsc	20,0	;volatile
  5698  067C  2E7F               	goto	i1l1783
  5699                           
  5700                           ;interface.c: 53: __nop();
  5701  067D  0000               	nop
  5702  067E  2E7A               	goto	i1l88
  5703  067F                     i1l1783:	
  5704                           
  5705                           ;interface.c: 54: };interface.c: 56: return SSP1BUF;
  5706  067F  0811               	movf	17,w	;volatile
  5707  0680  0008               	return
  5708  0681                     __end_of_nrf24l01SPISend:	
  5709                           
  5710                           	psect	text23
  5711  069D                     __ptext23:	
  5712 ;; *************** function _nrf24l01SPIEnd *****************
  5713 ;; Defined at:
  5714 ;;		line 66 in file "interface.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0, pclath, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    7
  5735 ;; This function calls:
  5736 ;;		_nrf24l01CSHigh
  5737 ;; This function is called by:
  5738 ;;		_nrf24l01Send
  5739 ;;		_nrf24l01SendString
  5740 ;;		i1_nrf24l01Send
  5741 ;;		_nrf24l01ReceiveString
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _nrf24l01SPIEnd
  5747  069D                     _nrf24l01SPIEnd:	
  5748                           
  5749                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5750                           
  5751                           ;incstack = 0
  5752 ;; hardware stack exceeded
  5753                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  5754  069D  300D               	movlw	13
  5755  069E                     u172_27:	
  5756  069E  0B89               	decfsz	9,f
  5757  069F  2E9E               	goto	u172_27
  5758  06A0  0000               	nop
  5759                           
  5760                           ;interface.c: 68: nrf24l01CSHigh();
  5761  06A1  3186  26D1         	fcall	_nrf24l01CSHigh
  5762  06A3  0008               	return
  5763  06A4                     __end_of_nrf24l01SPIEnd:	
  5764                           
  5765                           	psect	text24
  5766  06D1                     __ptext24:	
  5767 ;; *************** function _nrf24l01CSHigh *****************
  5768 ;; Defined at:
  5769 ;;		line 23 in file "interface.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		None
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    6
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_nrf24l01SPIEnd
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function _nrf24l01CSHigh
  5799  06D1                     _nrf24l01CSHigh:	
  5800                           
  5801                           ;interface.c: 24: PORTAbits.RA1 = 1;
  5802                           
  5803                           ;incstack = 0
  5804 ;; hardware stack exceeded
  5805                           ; Regs used in _nrf24l01CSHigh: []
  5806  06D1  0020               	movlb	0	; select bank0
  5807  06D2  148C               	bsf	12,1	;volatile
  5808  06D3  0008               	return
  5809  06D4                     __end_of_nrf24l01CSHigh:	
  5810                           
  5811                           	psect	text25
  5812  0695                     __ptext25:	
  5813 ;; *************** function _enableInterrupts *****************
  5814 ;; Defined at:
  5815 ;;		line 72 in file "interface.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  enable          1    wreg     unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  enable          1    0[COMMON] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, status,0
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;Total ram usage:        0 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    6
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_nrf24l01Send
  5840 ;;		_nrf24l01SendString
  5841 ;;		i1_nrf24l01Send
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _enableInterrupts
  5847  0695                     _enableInterrupts:	
  5848                           
  5849                           ;incstack = 0
  5850 ;; hardware stack exceeded
  5851                           ; Regs used in _enableInterrupts: [wreg+status,0]
  5852                           ;enableInterrupts@enable stored from wreg
  5853  0695  00F0               	movwf	enableInterrupts@enable
  5854                           
  5855                           ;interface.c: 73: PIE0bits.INTE = enable;
  5856  0696  0C70               	rrf	enableInterrupts@enable,w
  5857  0697  0021               	movlb	1	; select bank1
  5858  0698  1C03               	skipc
  5859  0699  1010               	bcf	16,0	;volatile
  5860  069A  1803               	skipnc
  5861  069B  1410               	bsf	16,0	;volatile
  5862  069C  0008               	return
  5863  069D                     __end_of_enableInterrupts:	
  5864                           
  5865                           	psect	text26
  5866  06D4                     __ptext26:	
  5867 ;; *************** function _nrf24l01CELow *****************
  5868 ;; Defined at:
  5869 ;;		line 8 in file "interface.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		None
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    6
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_nrf24l01SetRXMode
  5894 ;;		_nrf24l01SendString
  5895 ;;		_nrf24l01Init
  5896 ;;		i1_nrf24l01SetRXMode
  5897 ;;		_nrf24l01ReceiveString
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _nrf24l01CELow
  5903  06D4                     _nrf24l01CELow:	
  5904                           
  5905                           ;interface.c: 9: PORTAbits.RA0 = 0;
  5906                           
  5907                           ;incstack = 0
  5908                           ; Regs used in _nrf24l01CELow: []
  5909  06D4  0020               	movlb	0	; select bank0
  5910  06D5  100C               	bcf	12,0	;volatile
  5911  06D6  0008               	return
  5912  06D7                     __end_of_nrf24l01CELow:	
  5913                           
  5914                           	psect	text27
  5915  06D7                     __ptext27:	
  5916 ;; *************** function _nrf24l01CEHigh *****************
  5917 ;; Defined at:
  5918 ;;		line 13 in file "interface.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		None
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    6
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_nrf24l01SetRXMode
  5943 ;;		_nrf24l01SendString
  5944 ;;		_nrf24l01Init
  5945 ;;		i1_nrf24l01SetRXMode
  5946 ;;		_nrf24l01ReceiveString
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _nrf24l01CEHigh
  5952  06D7                     _nrf24l01CEHigh:	
  5953                           
  5954                           ;interface.c: 14: PORTAbits.RA0 = 1;
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _nrf24l01CEHigh: []
  5958  06D7  0020               	movlb	0	; select bank0
  5959  06D8  140C               	bsf	12,0	;volatile
  5960  06D9  0008               	return
  5961  06DA                     __end_of_nrf24l01CEHigh:	
  5962                           
  5963                           	psect	text28
  5964  0681                     __ptext28:	
  5965 ;; *************** function _exception *****************
  5966 ;; Defined at:
  5967 ;;		line 76 in file "interface.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  exception       1    wreg     unsigned char 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  exception       1   12[COMMON] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        3 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    2
  5988 ;; This function calls:
  5989 ;;		_flashUpdate
  5990 ;; This function is called by:
  5991 ;;		_nrf24l01ISR
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function _exception
  5997  0681                     _exception:	
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6001                           ;exception@exception stored from wreg
  6002  0681  00FC               	movwf	exception@exception
  6003                           
  6004                           ;interface.c: 77: romData.bootMode = exception;
  6005  0682  087C               	movf	exception@exception,w
  6006  0683  00FA               	movwf	??_exception
  6007  0684  01FB               	clrf	??_exception+1
  6008  0685  087A               	movf	??_exception,w
  6009  0686  0021               	movlb	1	; select bank1
  6010  0687  00B1               	movwf	(_romData^(0+128)+17)
  6011  0688  087B               	movf	??_exception+1,w
  6012  0689  00B2               	movwf	((_romData+1)^(0+128)+17)
  6013                           
  6014                           ;interface.c: 78: flashUpdate();
  6015  068A  3185  25CC         	fcall	_flashUpdate
  6016  068C  0008               	return
  6017  068D                     __end_of_exception:	
  6018                           
  6019                           	psect	text29
  6020  05CC                     __ptext29:	
  6021 ;; *************** function _flashUpdate *****************
  6022 ;; Defined at:
  6023 ;;		line 97 in file "flash.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  i               2    8[COMMON] unsigned int 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;Total ram usage:        4 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    1
  6044 ;; This function calls:
  6045 ;;		_flashWriteByte
  6046 ;; This function is called by:
  6047 ;;		_exception
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function _flashUpdate
  6053  05CC                     _flashUpdate:	
  6054                           
  6055                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6059  05CC  01F8               	clrf	flashUpdate@i
  6060  05CD  01F9               	clrf	flashUpdate@i+1
  6061  05CE                     L1:	
  6062  05CE  3000               	movlw	0
  6063  05CF  0279               	subwf	flashUpdate@i+1,w
  6064  05D0  3020               	movlw	32
  6065  05D1  1903               	skipnz
  6066  05D2  0278               	subwf	flashUpdate@i,w
  6067  05D3  1803               	btfsc	3,0
  6068  05D4  0008               	return
  6069                           
  6070                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  6071  05D5  0879               	movf	flashUpdate@i+1,w
  6072  05D6  00F1               	movwf	flashWriteByte@offset+1
  6073  05D7  0878               	movf	flashUpdate@i,w
  6074  05D8  00F0               	movwf	flashWriteByte@offset
  6075  05D9  0878               	movf	flashUpdate@i,w
  6076  05DA  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6077  05DB  0086               	movwf	6
  6078  05DC  3001               	movlw	1	; select bank2/3
  6079  05DD  0087               	movwf	7
  6080  05DE  0801               	movf	1,w
  6081  05DF  00F6               	movwf	??_flashUpdate
  6082  05E0  01F7               	clrf	??_flashUpdate+1
  6083  05E1  0876               	movf	??_flashUpdate,w
  6084  05E2  00F2               	movwf	flashWriteByte@data
  6085  05E3  0877               	movf	??_flashUpdate+1,w
  6086  05E4  00F3               	movwf	flashWriteByte@data+1
  6087  05E5  3185  2517  3185   	fcall	_flashWriteByte
  6088  05E8  3001               	movlw	1
  6089  05E9  07F8               	addwf	flashUpdate@i,f
  6090  05EA  3000               	movlw	0
  6091  05EB  3DF9               	addwfc	flashUpdate@i+1,f
  6092  05EC  2DCE               	goto	L1
  6093  05ED                     __end_of_flashUpdate:	
  6094                           
  6095                           	psect	text30
  6096  0517                     __ptext30:	
  6097 ;; *************** function _flashWriteByte *****************
  6098 ;; Defined at:
  6099 ;;		line 8 in file "flash.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  offset          2    0[COMMON] unsigned int 
  6102 ;;  data            2    2[COMMON] unsigned int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  address         2    4[COMMON] unsigned int 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;Total ram usage:        6 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_flashUpdate
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _flashWriteByte
  6129  0517                     _flashWriteByte:	
  6130                           
  6131                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  6135  0517  138B               	bcf	11,7	;volatile
  6136                           
  6137                           ;flash.c: 15: PMCON1 = 0x00;
  6138  0518  0031               	movlb	17	; select bank17
  6139  0519  0195               	clrf	21	;volsfr
  6140                           
  6141                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  6142  051A  0870               	movf	flashWriteByte@offset,w
  6143  051B  3EE0               	addlw	224
  6144  051C  00F4               	movwf	flashWriteByte@address
  6145  051D  301F               	movlw	31
  6146  051E  3D71               	addwfc	flashWriteByte@offset+1,w
  6147  051F  00F5               	movwf	flashWriteByte@address+1
  6148                           
  6149                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  6150  0520  0874               	movf	flashWriteByte@address,w
  6151  0521  0091               	movwf	17	;volatile
  6152                           
  6153                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  6154  0522  0875               	movf	flashWriteByte@address+1,w
  6155  0523  0092               	movwf	18	;volatile
  6156                           
  6157                           ;flash.c: 21: PMCON1bits.FREE = 1;
  6158  0524  1615               	bsf	21,4	;volsfr
  6159                           
  6160                           ;flash.c: 22: PMCON1bits.WREN = 1;
  6161  0525  1515               	bsf	21,2	;volsfr
  6162                           
  6163                           ;flash.c: 24: PMCON2 = 0x55;
  6164  0526  3055               	movlw	85
  6165  0527  0096               	movwf	22	;volsfr
  6166                           
  6167                           ;flash.c: 25: PMCON2 = 0xAA;
  6168  0528  30AA               	movlw	170
  6169  0529  0096               	movwf	22	;volsfr
  6170                           
  6171                           ;flash.c: 27: PMCON1bits.WR = 1;
  6172  052A  1495               	bsf	21,1	;volsfr
  6173                           
  6174                           ;flash.c: 29: __nop();
  6175  052B  0000               	nop
  6176                           
  6177                           ;flash.c: 30: __nop();
  6178  052C  0000               	nop
  6179                           
  6180                           ;flash.c: 32: PMCON1bits.WREN = 0;
  6181  052D  0031               	movlb	17	; select bank17
  6182  052E  1115               	bcf	21,2	;volsfr
  6183                           
  6184                           ;flash.c: 36: PMCON1 = 0x00;
  6185  052F  0195               	clrf	21	;volsfr
  6186                           
  6187                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  6188  0530  0874               	movf	flashWriteByte@address,w
  6189  0531  0091               	movwf	17	;volatile
  6190                           
  6191                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  6192  0532  0875               	movf	flashWriteByte@address+1,w
  6193  0533  0092               	movwf	18	;volatile
  6194                           
  6195                           ;flash.c: 41: PMCON1bits.FREE = 0;
  6196  0534  1215               	bcf	21,4	;volsfr
  6197                           
  6198                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  6199  0535  1695               	bsf	21,5	;volsfr
  6200                           
  6201                           ;flash.c: 43: PMCON1bits.WREN = 1;
  6202  0536  1515               	bsf	21,2	;volsfr
  6203                           
  6204                           ;flash.c: 45: PMDATL = (data >> 0);
  6205  0537  0872               	movf	flashWriteByte@data,w
  6206  0538  0093               	movwf	19	;volatile
  6207                           
  6208                           ;flash.c: 46: PMDATH = (data >> 8);
  6209  0539  0873               	movf	flashWriteByte@data+1,w
  6210  053A  0094               	movwf	20	;volatile
  6211                           
  6212                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  6213  053B  1295               	bcf	21,5	;volsfr
  6214                           
  6215                           ;flash.c: 50: PMCON2 = 0x55;
  6216  053C  3055               	movlw	85
  6217  053D  0096               	movwf	22	;volsfr
  6218                           
  6219                           ;flash.c: 51: PMCON2 = 0xAA;
  6220  053E  30AA               	movlw	170
  6221  053F  0096               	movwf	22	;volsfr
  6222                           
  6223                           ;flash.c: 53: PMCON1bits.WR = 1;
  6224  0540  1495               	bsf	21,1	;volsfr
  6225                           
  6226                           ;flash.c: 55: __nop();
  6227  0541  0000               	nop
  6228                           
  6229                           ;flash.c: 56: __nop();
  6230  0542  0000               	nop
  6231                           
  6232                           ;flash.c: 58: PMCON1bits.WREN = 0;
  6233  0543  0031               	movlb	17	; select bank17
  6234  0544  1115               	bcf	21,2	;volsfr
  6235                           
  6236                           ;flash.c: 61: INTCONbits.GIE = 1;
  6237  0545  178B               	bsf	11,7	;volatile
  6238  0546  0008               	return
  6239  0547                     __end_of_flashWriteByte:	
  6240  007E                     btemp	set	126	;btemp
  6241  007E                     int$flags	set	126
  6242  007E                     wtemp0	set	126


Data Sizes:
    Strings     45
    Constant    25
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      77
    BANK1            80      0      51
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[5]), STR_6(CODE[14]), nrf24l01TXName(BANK1[16]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[5]), nrf24l01TXValue(BANK0[8]), 
		 -> STR_1(CODE[4]), nrf24l01TXTopic(BANK0[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_exception
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->_flashUpdate
    _flashUpdate->_flashWriteByte

Critical Paths under _main in BANK0

    _main->_utoa
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_utoa
    _utoa->_getADCValue
    _nrf24l01SendString->_nrf24l01SetRXMode
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14324
                                             38 BANK0      1     1      0
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    1532
                                             13 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               10    10      0    1510
                                              4 BANK0      9     9      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    6848
                        _getADCValue
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    2678
                                             29 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                        _getADCValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2    1609
                                              1 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sleep                                                2     2      0       0
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendString                                   3     3      0    1657
                                              7 BANK0      3     3      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1409
                                              4 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1275
                                              1 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             15 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              1 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              1 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    1070
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    1070
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _exception
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     349
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     215
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     395
                                             10 COMMON     3     3      0
                        _flashUpdate
 ---------------------------------------------------------------------------------
 (10) _flashUpdate                                         4     4      0     373
                                              6 COMMON     4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (11) _flashWriteByte                                      6     2      4     283
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendString
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _sleep
     _strcpy
     _utoa
       ___lwdiv
       ___lwmod
       _getADCValue (ARG)
         ___lldiv
         ___lmul
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendString
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
   _sleep
   _strcpy
   _utoa
     ___lwdiv
     ___lwmod
     _getADCValue (ARG)
       ___lldiv
       ___lmul

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       _flashUpdate
         _flashWriteByte
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      33       7       63.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jun 29 13:25:10 2018

                    __CFG_CP$OFF 0000              nrf24l01Send@command 0023  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l320 0109                              l198 026C  
                            l857 0395                     flashUpdate@i 0078                     __CFG_CPD$OFF 0000  
                            _ISR 0004                              u715 04FB                              u725 0502  
                            u825 04BE                              u755 03BF                              u915 058E  
                            u845 04C8                              u925 0595                              u775 03CB  
                            u855 04D2                              u785 03DF                              u865 04DA  
                            u795 03EB                              u895 057F                              wreg 0009  
                           ?_ISR 0070                   ??_nrf24l01Init 002D                             l2031 0151  
                           l2051 0182                             l2043 0170                             l2035 015C  
                           l2027 0144                             l2055 018F                             l2047 017B  
                           l2039 0163                             l2059 019A                             l1903 04D9  
                           l2607 036D                             l1921 0588                   ??_nrf24l01Send 0022  
                           l1907 04E2                             l1853 04FA                             l1845 0474  
                           l1925 0594                             l1919 057C                             l1881 03F5  
                           l1849 04F0                             l1961 0271                             l2593 0613  
                           l1929 059D                             l1867 03BC                             l1963 0265  
                           l1877 03EA                             l1869 03CA                             l1965 028F  
                           l2597 034F                             l1895 04BB                             l1897 04C7  
                           l2769 0345                             STR_1 06CA                             STR_2 06BB  
                           STR_3 06C0                             STR_4 06AA                             STR_5 06A4  
                           STR_6 0666                             STR_7 06C5                             u1607 010F  
                           u1527 02E6                             u1617 011C                             u1537 05B0  
                           u1627 0129                             u1547 05C2                             u1637 01A1  
                           u1557 0404                             u1647 0454                             u1567 0411  
                           u1657 0466                             u1577 041E                             u1667 0471  
                           u1587 042B                             u1677 0262                             u1597 0438  
                           i1l88 067A   __size_of_nrf24l01InterfaceInit 0010                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 0666                             _main 02CF  
                           _loop 002C                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             _utoa 0349  
                  __CFG_BORV$LOW 0000                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_ISR 007E              nrf24l01SendString@i 0029  
           __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070                  ??_nrf24l01CSLow 0070  
    __size_of_nrf24l01SendString 00AB                            ?_main 0070                            ?_loop 0070  
                  __CFG_WDTE$OFF 0000                  __end_of___lldiv 03FE                            ?_utoa 003D  
                 __CFG_DEBUG$OFF 0000                  __end_of___lwdiv 04E7                            i1l193 000D  
                __end_of___lwmod 05A2           enableInterrupts@enable 0070              ___lmul@multiplicand 0025  
                  __CFG_PWRTE$ON 0000                            _sleep 03FE                   __CFG_BOREN$OFF 0000  
               _enableInterrupts 0695                            utoa@c 0044                            utoa@v 0042  
                          status 0003                            wtemp0 007E      __end_ofi1_nrf24l01SetRXMode 04B2  
              getADCValue@adcSum 0039                 _nrf24l01SPIStart 068D                  __initialization 0011  
                   __end_of_main 0349                     __end_of_loop 0100                     __end_of_utoa 03AB  
               ??_nrf24l01CEHigh 0070                           ??_main 0046                           ??_loop 0046  
               ??_nrf24l01CSHigh 0070                           ??_utoa 0041                 ??_nrf24l01SPIEnd 0070  
       __size_of_nrf24l01SPISend 000D                           _ADRESH 009C                           _ADRESL 009B  
                         ?_sleep 0070                           _ANSELA 018C                           _ANSELC 018E  
               ??_flashWriteByte 0074                           i1l2215 0557                           _ODCONA 028C  
                         i1l2227 056A                           i1l2219 055F                           _ODCONC 028E  
                         i1l2179 04AB                           i1l1783 067F                           _INLVLA 038C  
                         _INLVLC 038E                           u170_27 04A8                           u171_27 0691  
                         u172_27 069E                           _PMADRH 0892                           u168_27 048D  
                         _PMADRL 0891                           u169_27 049E                           _PMDATH 0894  
                         _PMDATL 0893                           _PMCON1 0895                           _PMCON2 0896  
             flashWriteByte@data 0072             __size_of_flashUpdate 0021             __size_of_nrf24l01ISR 002E  
        nrf24l01SetRXMode@config 0025                           ___lmul 04E7          nrf24l01SetRXMode@rxMode 0026  
                 __CFG_STVREN$ON 0000                        ??___lldiv 0029                        ??___lwdiv 0025  
                      ??___lwmod 0025             __end_of_nrf24l01Init 05CC             __end_of_nrf24l01Send 060D  
          _nrf24l01InitRegisters 01AB                           _strcpy 060D        i1nrf24l01SetRXMode@config 0075  
               __end_of_romArray 2000        i1nrf24l01SetRXMode@rxMode 0076               getADCValue@adcLoop 0038  
        __end_of__initialization 0028               getADCValue@channel 0037               getADCValue@divider 002F  
                 __pcstackCOMMON 0070                    __end_of_sleep 0440             _nrf24l01RXPacketData 0049  
  nrf24l01InitRegisters@enRXAddr 0029                          ??_sleep 0021                       __pbssBANK0 0047  
                     __pbssBANK1 00A0                       __pbssBANK2 0120                ??_nrf24l01SPISend 0070  
             __size_of_exception 000C          __size_ofi1_nrf24l01Send 001B                       __pmaintext 02CF  
                        ?___lmul 0021                  __CFG_PPS1WAY$ON 0000                _nrf24l01SetRXMode 0440  
         ?_nrf24l01InitRegisters 0070                       __pintentry 0004              nrf24l01SPISend@data 0070  
                 ___lmul@product 0029               ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 069D  
           _nrf24l01TXPacketData 004C              __CFG_RSTOSC$HFINT32 0000                          ?_strcpy 0021  
          __end_of_n_ADDRESS_MUL 06DB              ??_nrf24l01SetRXMode 0024         __end_of_nrf24l01SPIStart 0695  
                        _SLRCONA 030C                          _SLRCONC 030E                          _SSP1BUF 0211  
          _nrf24l01InterfaceInit 0656                 __p_romArray_text 1FE0                    ??_getADCValue 0033  
          __size_of_nrf24l01Init 002A            __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 047B  
     __end_of_nrf24l01SendString 01AB                  __size_of___lmul 0030                          ___lldiv 03AB  
                        ___lwdiv 04B2                          ___lwmod 0575            __end_of_nrf24l01CELow 06D7  
          __end_of_nrf24l01CSLow 06D1                          __ptext1 05A2                          __ptext2 0656  
                        __ptext3 01AB                          __ptext4 002C                          __ptext5 0349  
                        __ptext6 0575                          __ptext7 04B2                          __ptext8 060D  
                        __ptext9 03FE                __end_of_exception 068D                  __size_of_strcpy 001B  
                   __size_of_ISR 000B                          _counter 0047                 _romArray_absaddr 1FE0  
                        _romData 00A0                          clrloop0 06B1             end_of_initialization 0028  
                   _nrf24l01Init 05A2                     _nrf24l01Send 05ED                  ___lldiv@divisor 0021  
                ___lldiv@counter 002E     __size_ofi1_nrf24l01SetRXMode 0037                          utoa@buf 0045  
                        utoa@val 003D            i1nrf24l01Send@command 0073              __end_of_getADCValue 02CF  
                      _PORTAbits 000C                        _PORTCbits 000E                        _TRISAbits 008C  
                      _TRISCbits 008E                 nrf24l01Send@data 0021                 __CFG_FEXTOSC$OFF 0000  
                  ??_flashUpdate 0076                    ??_nrf24l01ISR 007D           ?_nrf24l01InterfaceInit 0070  
                 i1_nrf24l01Send 0628       __size_of_nrf24l01SetRXMode 003B                   __end_of___lmul 0517  
                 __end_of_strcpy 0628              start_initialization 0011                  _nrf24l01SPISend 0674  
                    __end_of_ISR 000F            flashWriteByte@address 0074                  _nrf24l01RXValue 004D  
        __size_of_nrf24l01CEHigh 0003                  _nrf24l01RXTopic 0055                  _nrf24l01TXValue 005D  
                _nrf24l01TXTopic 0065          __size_of_nrf24l01CSHigh 0003           __end_ofi1_nrf24l01Send 0643  
        __size_of_nrf24l01SPIEnd 0007          ??_nrf24l01InitRegisters 0024                 __CFG_LPBOREN$OFF 0000  
                    _getADCValue 0247          __size_of_flashWriteByte 0030              __end_of_flashUpdate 05ED  
                       ??___lmul 0029              __end_of_nrf24l01ISR 0575             __end_of_resetRomData 0656  
              ?_enableInterrupts 0070                         ??_strcpy 0023               ??_enableInterrupts 0070  
                      ___latbits 0002                    __pcstackBANK0 0020                ?_nrf24l01SPIStart 0070  
             ??_nrf24l01SPIStart 0070                  ?i1_nrf24l01Send 0071                 ___lwdiv@dividend 0023  
                       ?___lldiv 0021                         ?___lwdiv 0021                         ?___lwmod 0021  
           __end_of_n_ADDRESS_P0 06BB          __end_of_nrf24l01SPISend 0681               i1nrf24l01Send@data 0071  
      nrf24l01InitRegisters@enAA 002A               _nrf24l01SendString 0100                        _exception 0681  
               ___lwdiv@quotient 0026              i1_nrf24l01SetRXMode 047B                   __size_of_sleep 0042  
            ?_nrf24l01SendString 0070                      _flashUpdate 05CC                      _nrf24l01ISR 0547  
                      clear_ram0 06B0                         _PIE0bits 0090                         _PIR0bits 0010  
                      _romHolder 0120                        _sleepLoop 004A             ?i1_nrf24l01SetRXMode 0070  
           ??_nrf24l01SendString 0027                       _ADCON0bits 009D                       _ADCON1bits 009E  
                       _WPUAbits 020C                       ?_exception 0070                   _nrf24l01CEHigh 06D7  
              ___lmul@multiplier 0021          ??_nrf24l01InterfaceInit 0021                   _nrf24l01CSHigh 06D1  
              nrf24l01ISR@status 0020                   _nrf24l01SPIEnd 069D                   _nrf24l01RXName 00B3  
                 _nrf24l01TXName 00C3           __size_of_nrf24l01CELow 0003           __size_of_nrf24l01CSLow 0003  
           flashWriteByte@offset 0070                   _flashWriteByte 0517            ??i1_nrf24l01SetRXMode 0074  
               __size_of___lldiv 0053                 __size_of___lwdiv 0035                 __size_of___lwmod 002D  
               ?_nrf24l01SPISend 0070                       _ANSELAbits 018C                       _ANSELCbits 018E  
                  _n_ADDRESS_MUL 06DA           __end_of_nrf24l01CEHigh 06DA                  ___lwdiv@divisor 0021  
         __end_of_nrf24l01CSHigh 06D4                  ___lwdiv@counter 0028                         __ptext10 0100  
                       __ptext11 0440                         __ptext20 068D                         __ptext12 05ED  
                       __ptext21 06CE                         __ptext13 0247                         __ptext30 0517  
                       __ptext22 0674                         __ptext14 04E7                         __ptext23 069D  
                       __ptext15 03AB                         __ptext24 06D1                         __ptext25 0695  
                       __ptext17 0547                         __ptext26 06D4                         __ptext18 047B  
                       __ptext27 06D7                         __ptext19 0628                         __ptext28 0681  
                       __ptext29 05CC           __end_of_nrf24l01SPIEnd 06A4                         _nrf24l01 004B  
                   _resetRomData 0643           nrf24l01Init@isReciever 002F                       strcpy@from 0021  
                  __size_of_main 007A                    __size_of_loop 00D4                    __size_of_utoa 0062  
         __end_of_flashWriteByte 0547     nrf24l01InitRegisters@feature 0027               exception@exception 007C  
                       _romArray 1FE0     nrf24l01InitRegisters@rfSetup 0026                     ?_getADCValue 002F  
 __size_of_nrf24l01InitRegisters 009C    __end_of_nrf24l01InitRegisters 0247                         int$flags 007E  
   nrf24l01InitRegisters@setupAW 0025                     _SSP1STATbits 0214                    _nrf24l01CELow 06D4  
                  _nrf24l01CSLow 06CE                       _INTCONbits 000B                  ?_nrf24l01CEHigh 0070  
                     _FVRCONbits 0117                 ??i1_nrf24l01Send 0072                      ??_exception 007A  
                ?_nrf24l01CSHigh 0070                   __pstringtext10 06CA                   __pstringtext11 0000  
                ?_nrf24l01SPIEnd 0070                         intlevel1 0000                     _n_ADDRESS_P0 06B6  
      __size_of_enableInterrupts 0008                       _PMCON1bits 0895                 ___lwmod@dividend 0023  
               ___lldiv@dividend 0025                __CFG_CLKOUTEN$OFF 0000                  ?_flashWriteByte 0070  
    nrf24l01InitRegisters@config 002C        __size_of_nrf24l01SPIStart 0008      nrf24l01InitRegisters@status 0028  
                 ?_nrf24l01CELow 0070                    __pstringtext1 0643                    __pstringtext2 06B6  
                  __pstringtext3 06DA                    __pstringtext4 0666                    __pstringtext5 06A4  
                  __pstringtext6 06AA                    __pstringtext7 06BB                    __pstringtext8 06C0  
                  __pstringtext9 06C5                   ?_nrf24l01CSLow 0070                         utoa@base 003F  
     nrf24l01InitRegisters@DynPD 002B                 ___lldiv@quotient 002A                  ___lwmod@divisor 0021  
                       strcpy@cp 0024                         strcpy@to 0025                  ___lwmod@counter 0026  
                    _SSPCON1bits 0215                       _WDTCONbits 0097                    ?_nrf24l01Init 0070  
                  ?_nrf24l01Send 0021                     ?_flashUpdate 0070                     ?_nrf24l01ISR 0070  
