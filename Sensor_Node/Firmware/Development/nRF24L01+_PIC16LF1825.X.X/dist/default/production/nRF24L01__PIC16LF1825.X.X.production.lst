

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jun 30 12:00:27 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.00
    57                           ; Generated 27/05/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16LF18325 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0097                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  018C                     	;# 
   149  018E                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  028C                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030E                     	;# 
   216  0311                     	;# 
   217  0311                     	;# 
   218  0312                     	;# 
   219  0313                     	;# 
   220  0314                     	;# 
   221  0315                     	;# 
   222  0315                     	;# 
   223  0316                     	;# 
   224  0317                     	;# 
   225  0318                     	;# 
   226  038C                     	;# 
   227  038E                     	;# 
   228  0391                     	;# 
   229  0392                     	;# 
   230  0393                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0411                     	;# 
   240  0411                     	;# 
   241  0412                     	;# 
   242  0413                     	;# 
   243  0414                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  0418                     	;# 
   248  0418                     	;# 
   249  0419                     	;# 
   250  041A                     	;# 
   251  041B                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  041F                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049D                     	;# 
   264  049E                     	;# 
   265  049F                     	;# 
   266  0617                     	;# 
   267  0618                     	;# 
   268  0619                     	;# 
   269  0619                     	;# 
   270  061A                     	;# 
   271  061B                     	;# 
   272  061C                     	;# 
   273  061C                     	;# 
   274  061F                     	;# 
   275  0691                     	;# 
   276  0692                     	;# 
   277  0693                     	;# 
   278  0694                     	;# 
   279  0695                     	;# 
   280  0696                     	;# 
   281  0697                     	;# 
   282  0698                     	;# 
   283  0699                     	;# 
   284  0711                     	;# 
   285  0712                     	;# 
   286  0713                     	;# 
   287  0714                     	;# 
   288  0715                     	;# 
   289  0716                     	;# 
   290  0717                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0892                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0894                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0895                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  0896                     	;# 
   317  089B                     	;# 
   318  0911                     	;# 
   319  0912                     	;# 
   320  0913                     	;# 
   321  0914                     	;# 
   322  0915                     	;# 
   323  0916                     	;# 
   324  0918                     	;# 
   325  0919                     	;# 
   326  091A                     	;# 
   327  091B                     	;# 
   328  091C                     	;# 
   329  091D                     	;# 
   330  091E                     	;# 
   331  091F                     	;# 
   332  0E0F                     	;# 
   333  0E10                     	;# 
   334  0E11                     	;# 
   335  0E12                     	;# 
   336  0E13                     	;# 
   337  0E14                     	;# 
   338  0E15                     	;# 
   339  0E16                     	;# 
   340  0E17                     	;# 
   341  0E18                     	;# 
   342  0E19                     	;# 
   343  0E1A                     	;# 
   344  0E1B                     	;# 
   345  0E1C                     	;# 
   346  0E1D                     	;# 
   347  0E1E                     	;# 
   348  0E1F                     	;# 
   349  0E20                     	;# 
   350  0E21                     	;# 
   351  0E22                     	;# 
   352  0E24                     	;# 
   353  0E25                     	;# 
   354  0E28                     	;# 
   355  0E29                     	;# 
   356  0E2A                     	;# 
   357  0E2B                     	;# 
   358  0E2C                     	;# 
   359  0E2D                     	;# 
   360  0E2E                     	;# 
   361  0E2F                     	;# 
   362  0E90                     	;# 
   363  0E91                     	;# 
   364  0E92                     	;# 
   365  0E94                     	;# 
   366  0E95                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0F0F                     	;# 
   374  0F10                     	;# 
   375  0F11                     	;# 
   376  0F12                     	;# 
   377  0F13                     	;# 
   378  0F14                     	;# 
   379  0F15                     	;# 
   380  0F16                     	;# 
   381  0F17                     	;# 
   382  0F18                     	;# 
   383  0F19                     	;# 
   384  0F1A                     	;# 
   385  0F1B                     	;# 
   386  0F1C                     	;# 
   387  0F1D                     	;# 
   388  0F1E                     	;# 
   389  0F1F                     	;# 
   390  0F20                     	;# 
   391  0F21                     	;# 
   392  0F22                     	;# 
   393  0F23                     	;# 
   394  0F24                     	;# 
   395  0F25                     	;# 
   396  0F26                     	;# 
   397  0F27                     	;# 
   398  0F28                     	;# 
   399  0F29                     	;# 
   400  0F2A                     	;# 
   401  0F2B                     	;# 
   402  0F2C                     	;# 
   403  0F2D                     	;# 
   404  0F2E                     	;# 
   405  0F2F                     	;# 
   406  0F30                     	;# 
   407  0F31                     	;# 
   408  0F32                     	;# 
   409  0F33                     	;# 
   410  0F34                     	;# 
   411  0F35                     	;# 
   412  0F36                     	;# 
   413  0F37                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000E                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001D                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008E                     	;# 
   460  0090                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0097                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  009F                     	;# 
   472  010C                     	;# 
   473  010E                     	;# 
   474  0111                     	;# 
   475  0112                     	;# 
   476  0113                     	;# 
   477  0114                     	;# 
   478  0115                     	;# 
   479  0116                     	;# 
   480  0117                     	;# 
   481  0118                     	;# 
   482  0119                     	;# 
   483  018C                     	;# 
   484  018E                     	;# 
   485  0199                     	;# 
   486  0199                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019A                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019C                     	;# 
   497  019C                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019D                     	;# 
   501  019D                     	;# 
   502  019E                     	;# 
   503  019E                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  019F                     	;# 
   507  019F                     	;# 
   508  019F                     	;# 
   509  019F                     	;# 
   510  020C                     	;# 
   511  020E                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0215                     	;# 
   524  0216                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0217                     	;# 
   528  0219                     	;# 
   529  021A                     	;# 
   530  021B                     	;# 
   531  021C                     	;# 
   532  021D                     	;# 
   533  021D                     	;# 
   534  021E                     	;# 
   535  021F                     	;# 
   536  028C                     	;# 
   537  028E                     	;# 
   538  0291                     	;# 
   539  0291                     	;# 
   540  0292                     	;# 
   541  0293                     	;# 
   542  0294                     	;# 
   543  0295                     	;# 
   544  0295                     	;# 
   545  0296                     	;# 
   546  0297                     	;# 
   547  0298                     	;# 
   548  029F                     	;# 
   549  030C                     	;# 
   550  030E                     	;# 
   551  0311                     	;# 
   552  0311                     	;# 
   553  0312                     	;# 
   554  0313                     	;# 
   555  0314                     	;# 
   556  0315                     	;# 
   557  0315                     	;# 
   558  0316                     	;# 
   559  0317                     	;# 
   560  0318                     	;# 
   561  038C                     	;# 
   562  038E                     	;# 
   563  0391                     	;# 
   564  0392                     	;# 
   565  0393                     	;# 
   566  0397                     	;# 
   567  0398                     	;# 
   568  0399                     	;# 
   569  039A                     	;# 
   570  039C                     	;# 
   571  039D                     	;# 
   572  039E                     	;# 
   573  039F                     	;# 
   574  0411                     	;# 
   575  0411                     	;# 
   576  0412                     	;# 
   577  0413                     	;# 
   578  0414                     	;# 
   579  0415                     	;# 
   580  0416                     	;# 
   581  0417                     	;# 
   582  0418                     	;# 
   583  0418                     	;# 
   584  0419                     	;# 
   585  041A                     	;# 
   586  041B                     	;# 
   587  041C                     	;# 
   588  041D                     	;# 
   589  041E                     	;# 
   590  041F                     	;# 
   591  0498                     	;# 
   592  0498                     	;# 
   593  0499                     	;# 
   594  049A                     	;# 
   595  049B                     	;# 
   596  049B                     	;# 
   597  049C                     	;# 
   598  049D                     	;# 
   599  049E                     	;# 
   600  049F                     	;# 
   601  0617                     	;# 
   602  0618                     	;# 
   603  0619                     	;# 
   604  0619                     	;# 
   605  061A                     	;# 
   606  061B                     	;# 
   607  061C                     	;# 
   608  061C                     	;# 
   609  061F                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0696                     	;# 
   616  0697                     	;# 
   617  0698                     	;# 
   618  0699                     	;# 
   619  0711                     	;# 
   620  0712                     	;# 
   621  0713                     	;# 
   622  0714                     	;# 
   623  0715                     	;# 
   624  0716                     	;# 
   625  0717                     	;# 
   626  0718                     	;# 
   627  0719                     	;# 
   628  0891                     	;# 
   629  0891                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0891                     	;# 
   633  0891                     	;# 
   634  0892                     	;# 
   635  0892                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0893                     	;# 
   642  0893                     	;# 
   643  0894                     	;# 
   644  0894                     	;# 
   645  0894                     	;# 
   646  0895                     	;# 
   647  0895                     	;# 
   648  0895                     	;# 
   649  0896                     	;# 
   650  0896                     	;# 
   651  0896                     	;# 
   652  089B                     	;# 
   653  0911                     	;# 
   654  0912                     	;# 
   655  0913                     	;# 
   656  0914                     	;# 
   657  0915                     	;# 
   658  0916                     	;# 
   659  0918                     	;# 
   660  0919                     	;# 
   661  091A                     	;# 
   662  091B                     	;# 
   663  091C                     	;# 
   664  091D                     	;# 
   665  091E                     	;# 
   666  091F                     	;# 
   667  0E0F                     	;# 
   668  0E10                     	;# 
   669  0E11                     	;# 
   670  0E12                     	;# 
   671  0E13                     	;# 
   672  0E14                     	;# 
   673  0E15                     	;# 
   674  0E16                     	;# 
   675  0E17                     	;# 
   676  0E18                     	;# 
   677  0E19                     	;# 
   678  0E1A                     	;# 
   679  0E1B                     	;# 
   680  0E1C                     	;# 
   681  0E1D                     	;# 
   682  0E1E                     	;# 
   683  0E1F                     	;# 
   684  0E20                     	;# 
   685  0E21                     	;# 
   686  0E22                     	;# 
   687  0E24                     	;# 
   688  0E25                     	;# 
   689  0E28                     	;# 
   690  0E29                     	;# 
   691  0E2A                     	;# 
   692  0E2B                     	;# 
   693  0E2C                     	;# 
   694  0E2D                     	;# 
   695  0E2E                     	;# 
   696  0E2F                     	;# 
   697  0E90                     	;# 
   698  0E91                     	;# 
   699  0E92                     	;# 
   700  0E94                     	;# 
   701  0E95                     	;# 
   702  0EA0                     	;# 
   703  0EA1                     	;# 
   704  0EA2                     	;# 
   705  0EA3                     	;# 
   706  0EA4                     	;# 
   707  0EA5                     	;# 
   708  0F0F                     	;# 
   709  0F10                     	;# 
   710  0F11                     	;# 
   711  0F12                     	;# 
   712  0F13                     	;# 
   713  0F14                     	;# 
   714  0F15                     	;# 
   715  0F16                     	;# 
   716  0F17                     	;# 
   717  0F18                     	;# 
   718  0F19                     	;# 
   719  0F1A                     	;# 
   720  0F1B                     	;# 
   721  0F1C                     	;# 
   722  0F1D                     	;# 
   723  0F1E                     	;# 
   724  0F1F                     	;# 
   725  0F20                     	;# 
   726  0F21                     	;# 
   727  0F22                     	;# 
   728  0F23                     	;# 
   729  0F24                     	;# 
   730  0F25                     	;# 
   731  0F26                     	;# 
   732  0F27                     	;# 
   733  0F28                     	;# 
   734  0F29                     	;# 
   735  0F2A                     	;# 
   736  0F2B                     	;# 
   737  0F2C                     	;# 
   738  0F2D                     	;# 
   739  0F2E                     	;# 
   740  0F2F                     	;# 
   741  0F30                     	;# 
   742  0F31                     	;# 
   743  0F32                     	;# 
   744  0F33                     	;# 
   745  0F34                     	;# 
   746  0F35                     	;# 
   747  0F36                     	;# 
   748  0F37                     	;# 
   749  0FE4                     	;# 
   750  0FE5                     	;# 
   751  0FE6                     	;# 
   752  0FE7                     	;# 
   753  0FE8                     	;# 
   754  0FE9                     	;# 
   755  0FEA                     	;# 
   756  0FEB                     	;# 
   757  0FED                     	;# 
   758  0FEE                     	;# 
   759  0FEF                     	;# 
   760  0000                     	;# 
   761  0001                     	;# 
   762  0002                     	;# 
   763  0003                     	;# 
   764  0004                     	;# 
   765  0005                     	;# 
   766  0006                     	;# 
   767  0007                     	;# 
   768  0008                     	;# 
   769  0009                     	;# 
   770  000A                     	;# 
   771  000B                     	;# 
   772  000C                     	;# 
   773  000E                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  0019                     	;# 
   787  001A                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001D                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  008C                     	;# 
   794  008E                     	;# 
   795  0090                     	;# 
   796  0091                     	;# 
   797  0092                     	;# 
   798  0093                     	;# 
   799  0094                     	;# 
   800  0097                     	;# 
   801  009B                     	;# 
   802  009B                     	;# 
   803  009C                     	;# 
   804  009D                     	;# 
   805  009E                     	;# 
   806  009F                     	;# 
   807  010C                     	;# 
   808  010E                     	;# 
   809  0111                     	;# 
   810  0112                     	;# 
   811  0113                     	;# 
   812  0114                     	;# 
   813  0115                     	;# 
   814  0116                     	;# 
   815  0117                     	;# 
   816  0118                     	;# 
   817  0119                     	;# 
   818  018C                     	;# 
   819  018E                     	;# 
   820  0199                     	;# 
   821  0199                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019A                     	;# 
   825  019A                     	;# 
   826  019B                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019B                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019C                     	;# 
   834  019D                     	;# 
   835  019D                     	;# 
   836  019D                     	;# 
   837  019E                     	;# 
   838  019E                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  019F                     	;# 
   842  019F                     	;# 
   843  019F                     	;# 
   844  019F                     	;# 
   845  020C                     	;# 
   846  020E                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0216                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0217                     	;# 
   863  0219                     	;# 
   864  021A                     	;# 
   865  021B                     	;# 
   866  021C                     	;# 
   867  021D                     	;# 
   868  021D                     	;# 
   869  021E                     	;# 
   870  021F                     	;# 
   871  028C                     	;# 
   872  028E                     	;# 
   873  0291                     	;# 
   874  0291                     	;# 
   875  0292                     	;# 
   876  0293                     	;# 
   877  0294                     	;# 
   878  0295                     	;# 
   879  0295                     	;# 
   880  0296                     	;# 
   881  0297                     	;# 
   882  0298                     	;# 
   883  029F                     	;# 
   884  030C                     	;# 
   885  030E                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  038C                     	;# 
   897  038E                     	;# 
   898  0391                     	;# 
   899  0392                     	;# 
   900  0393                     	;# 
   901  0397                     	;# 
   902  0398                     	;# 
   903  0399                     	;# 
   904  039A                     	;# 
   905  039C                     	;# 
   906  039D                     	;# 
   907  039E                     	;# 
   908  039F                     	;# 
   909  0411                     	;# 
   910  0411                     	;# 
   911  0412                     	;# 
   912  0413                     	;# 
   913  0414                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041B                     	;# 
   922  041C                     	;# 
   923  041D                     	;# 
   924  041E                     	;# 
   925  041F                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  061F                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  0695                     	;# 
   950  0696                     	;# 
   951  0697                     	;# 
   952  0698                     	;# 
   953  0699                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0715                     	;# 
   959  0716                     	;# 
   960  0717                     	;# 
   961  0718                     	;# 
   962  0719                     	;# 
   963  0891                     	;# 
   964  0891                     	;# 
   965  0891                     	;# 
   966  0891                     	;# 
   967  0891                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0892                     	;# 
   971  0892                     	;# 
   972  0893                     	;# 
   973  0893                     	;# 
   974  0893                     	;# 
   975  0893                     	;# 
   976  0893                     	;# 
   977  0893                     	;# 
   978  0894                     	;# 
   979  0894                     	;# 
   980  0894                     	;# 
   981  0895                     	;# 
   982  0895                     	;# 
   983  0895                     	;# 
   984  0896                     	;# 
   985  0896                     	;# 
   986  0896                     	;# 
   987  089B                     	;# 
   988  0911                     	;# 
   989  0912                     	;# 
   990  0913                     	;# 
   991  0914                     	;# 
   992  0915                     	;# 
   993  0916                     	;# 
   994  0918                     	;# 
   995  0919                     	;# 
   996  091A                     	;# 
   997  091B                     	;# 
   998  091C                     	;# 
   999  091D                     	;# 
  1000  091E                     	;# 
  1001  091F                     	;# 
  1002  0E0F                     	;# 
  1003  0E10                     	;# 
  1004  0E11                     	;# 
  1005  0E12                     	;# 
  1006  0E13                     	;# 
  1007  0E14                     	;# 
  1008  0E15                     	;# 
  1009  0E16                     	;# 
  1010  0E17                     	;# 
  1011  0E18                     	;# 
  1012  0E19                     	;# 
  1013  0E1A                     	;# 
  1014  0E1B                     	;# 
  1015  0E1C                     	;# 
  1016  0E1D                     	;# 
  1017  0E1E                     	;# 
  1018  0E1F                     	;# 
  1019  0E20                     	;# 
  1020  0E21                     	;# 
  1021  0E22                     	;# 
  1022  0E24                     	;# 
  1023  0E25                     	;# 
  1024  0E28                     	;# 
  1025  0E29                     	;# 
  1026  0E2A                     	;# 
  1027  0E2B                     	;# 
  1028  0E2C                     	;# 
  1029  0E2D                     	;# 
  1030  0E2E                     	;# 
  1031  0E2F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E94                     	;# 
  1036  0E95                     	;# 
  1037  0EA0                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0F2E                     	;# 
  1075  0F2F                     	;# 
  1076  0F30                     	;# 
  1077  0F31                     	;# 
  1078  0F32                     	;# 
  1079  0F33                     	;# 
  1080  0F34                     	;# 
  1081  0F35                     	;# 
  1082  0F36                     	;# 
  1083  0F37                     	;# 
  1084  0FE4                     	;# 
  1085  0FE5                     	;# 
  1086  0FE6                     	;# 
  1087  0FE7                     	;# 
  1088  0FE8                     	;# 
  1089  0FE9                     	;# 
  1090  0FEA                     	;# 
  1091  0FEB                     	;# 
  1092  0FED                     	;# 
  1093  0FEE                     	;# 
  1094  0FEF                     	;# 
  1095  0000                     	;# 
  1096  0001                     	;# 
  1097  0002                     	;# 
  1098  0003                     	;# 
  1099  0004                     	;# 
  1100  0005                     	;# 
  1101  0006                     	;# 
  1102  0007                     	;# 
  1103  0008                     	;# 
  1104  0009                     	;# 
  1105  000A                     	;# 
  1106  000B                     	;# 
  1107  000C                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0014                     	;# 
  1114  0015                     	;# 
  1115  0015                     	;# 
  1116  0016                     	;# 
  1117  0016                     	;# 
  1118  0017                     	;# 
  1119  0018                     	;# 
  1120  0019                     	;# 
  1121  0019                     	;# 
  1122  001A                     	;# 
  1123  001B                     	;# 
  1124  001C                     	;# 
  1125  001D                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0090                     	;# 
  1131  0091                     	;# 
  1132  0092                     	;# 
  1133  0093                     	;# 
  1134  0094                     	;# 
  1135  0097                     	;# 
  1136  009B                     	;# 
  1137  009B                     	;# 
  1138  009C                     	;# 
  1139  009D                     	;# 
  1140  009E                     	;# 
  1141  009F                     	;# 
  1142  010C                     	;# 
  1143  010E                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  018C                     	;# 
  1154  018E                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021B                     	;# 
  1201  021C                     	;# 
  1202  021D                     	;# 
  1203  021D                     	;# 
  1204  021E                     	;# 
  1205  021F                     	;# 
  1206  028C                     	;# 
  1207  028E                     	;# 
  1208  0291                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0294                     	;# 
  1213  0295                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0297                     	;# 
  1217  0298                     	;# 
  1218  029F                     	;# 
  1219  030C                     	;# 
  1220  030E                     	;# 
  1221  0311                     	;# 
  1222  0311                     	;# 
  1223  0312                     	;# 
  1224  0313                     	;# 
  1225  0314                     	;# 
  1226  0315                     	;# 
  1227  0315                     	;# 
  1228  0316                     	;# 
  1229  0317                     	;# 
  1230  0318                     	;# 
  1231  038C                     	;# 
  1232  038E                     	;# 
  1233  0391                     	;# 
  1234  0392                     	;# 
  1235  0393                     	;# 
  1236  0397                     	;# 
  1237  0398                     	;# 
  1238  0399                     	;# 
  1239  039A                     	;# 
  1240  039C                     	;# 
  1241  039D                     	;# 
  1242  039E                     	;# 
  1243  039F                     	;# 
  1244  0411                     	;# 
  1245  0411                     	;# 
  1246  0412                     	;# 
  1247  0413                     	;# 
  1248  0414                     	;# 
  1249  0415                     	;# 
  1250  0416                     	;# 
  1251  0417                     	;# 
  1252  0418                     	;# 
  1253  0418                     	;# 
  1254  0419                     	;# 
  1255  041A                     	;# 
  1256  041B                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  041F                     	;# 
  1261  0498                     	;# 
  1262  0498                     	;# 
  1263  0499                     	;# 
  1264  049A                     	;# 
  1265  049B                     	;# 
  1266  049B                     	;# 
  1267  049C                     	;# 
  1268  049D                     	;# 
  1269  049E                     	;# 
  1270  049F                     	;# 
  1271  0617                     	;# 
  1272  0618                     	;# 
  1273  0619                     	;# 
  1274  0619                     	;# 
  1275  061A                     	;# 
  1276  061B                     	;# 
  1277  061C                     	;# 
  1278  061C                     	;# 
  1279  061F                     	;# 
  1280  0691                     	;# 
  1281  0692                     	;# 
  1282  0693                     	;# 
  1283  0694                     	;# 
  1284  0695                     	;# 
  1285  0696                     	;# 
  1286  0697                     	;# 
  1287  0698                     	;# 
  1288  0699                     	;# 
  1289  0711                     	;# 
  1290  0712                     	;# 
  1291  0713                     	;# 
  1292  0714                     	;# 
  1293  0715                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  0891                     	;# 
  1299  0891                     	;# 
  1300  0891                     	;# 
  1301  0891                     	;# 
  1302  0891                     	;# 
  1303  0891                     	;# 
  1304  0892                     	;# 
  1305  0892                     	;# 
  1306  0892                     	;# 
  1307  0893                     	;# 
  1308  0893                     	;# 
  1309  0893                     	;# 
  1310  0893                     	;# 
  1311  0893                     	;# 
  1312  0893                     	;# 
  1313  0894                     	;# 
  1314  0894                     	;# 
  1315  0894                     	;# 
  1316  0895                     	;# 
  1317  0895                     	;# 
  1318  0895                     	;# 
  1319  0896                     	;# 
  1320  0896                     	;# 
  1321  0896                     	;# 
  1322  089B                     	;# 
  1323  0911                     	;# 
  1324  0912                     	;# 
  1325  0913                     	;# 
  1326  0914                     	;# 
  1327  0915                     	;# 
  1328  0916                     	;# 
  1329  0918                     	;# 
  1330  0919                     	;# 
  1331  091A                     	;# 
  1332  091B                     	;# 
  1333  091C                     	;# 
  1334  091D                     	;# 
  1335  091E                     	;# 
  1336  091F                     	;# 
  1337  0E0F                     	;# 
  1338  0E10                     	;# 
  1339  0E11                     	;# 
  1340  0E12                     	;# 
  1341  0E13                     	;# 
  1342  0E14                     	;# 
  1343  0E15                     	;# 
  1344  0E16                     	;# 
  1345  0E17                     	;# 
  1346  0E18                     	;# 
  1347  0E19                     	;# 
  1348  0E1A                     	;# 
  1349  0E1B                     	;# 
  1350  0E1C                     	;# 
  1351  0E1D                     	;# 
  1352  0E1E                     	;# 
  1353  0E1F                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E24                     	;# 
  1358  0E25                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E2F                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0EA0                     	;# 
  1373  0EA1                     	;# 
  1374  0EA2                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0097                     	;# 
  1471  009B                     	;# 
  1472  009B                     	;# 
  1473  009C                     	;# 
  1474  009D                     	;# 
  1475  009E                     	;# 
  1476  009F                     	;# 
  1477  010C                     	;# 
  1478  010E                     	;# 
  1479  0111                     	;# 
  1480  0112                     	;# 
  1481  0113                     	;# 
  1482  0114                     	;# 
  1483  0115                     	;# 
  1484  0116                     	;# 
  1485  0117                     	;# 
  1486  0118                     	;# 
  1487  0119                     	;# 
  1488  018C                     	;# 
  1489  018E                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020E                     	;# 
  1517  0211                     	;# 
  1518  0211                     	;# 
  1519  0212                     	;# 
  1520  0212                     	;# 
  1521  0213                     	;# 
  1522  0213                     	;# 
  1523  0214                     	;# 
  1524  0214                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0216                     	;# 
  1530  0216                     	;# 
  1531  0217                     	;# 
  1532  0217                     	;# 
  1533  0219                     	;# 
  1534  021A                     	;# 
  1535  021B                     	;# 
  1536  021C                     	;# 
  1537  021D                     	;# 
  1538  021D                     	;# 
  1539  021E                     	;# 
  1540  021F                     	;# 
  1541  028C                     	;# 
  1542  028E                     	;# 
  1543  0291                     	;# 
  1544  0291                     	;# 
  1545  0292                     	;# 
  1546  0293                     	;# 
  1547  0294                     	;# 
  1548  0295                     	;# 
  1549  0295                     	;# 
  1550  0296                     	;# 
  1551  0297                     	;# 
  1552  0298                     	;# 
  1553  029F                     	;# 
  1554  030C                     	;# 
  1555  030E                     	;# 
  1556  0311                     	;# 
  1557  0311                     	;# 
  1558  0312                     	;# 
  1559  0313                     	;# 
  1560  0314                     	;# 
  1561  0315                     	;# 
  1562  0315                     	;# 
  1563  0316                     	;# 
  1564  0317                     	;# 
  1565  0318                     	;# 
  1566  038C                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0397                     	;# 
  1572  0398                     	;# 
  1573  0399                     	;# 
  1574  039A                     	;# 
  1575  039C                     	;# 
  1576  039D                     	;# 
  1577  039E                     	;# 
  1578  039F                     	;# 
  1579  0411                     	;# 
  1580  0411                     	;# 
  1581  0412                     	;# 
  1582  0413                     	;# 
  1583  0414                     	;# 
  1584  0415                     	;# 
  1585  0416                     	;# 
  1586  0417                     	;# 
  1587  0418                     	;# 
  1588  0418                     	;# 
  1589  0419                     	;# 
  1590  041A                     	;# 
  1591  041B                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  041F                     	;# 
  1596  0498                     	;# 
  1597  0498                     	;# 
  1598  0499                     	;# 
  1599  049A                     	;# 
  1600  049B                     	;# 
  1601  049B                     	;# 
  1602  049C                     	;# 
  1603  049D                     	;# 
  1604  049E                     	;# 
  1605  049F                     	;# 
  1606  0617                     	;# 
  1607  0618                     	;# 
  1608  0619                     	;# 
  1609  0619                     	;# 
  1610  061A                     	;# 
  1611  061B                     	;# 
  1612  061C                     	;# 
  1613  061C                     	;# 
  1614  061F                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  0711                     	;# 
  1625  0712                     	;# 
  1626  0713                     	;# 
  1627  0714                     	;# 
  1628  0715                     	;# 
  1629  0716                     	;# 
  1630  0717                     	;# 
  1631  0718                     	;# 
  1632  0719                     	;# 
  1633  0891                     	;# 
  1634  0891                     	;# 
  1635  0891                     	;# 
  1636  0891                     	;# 
  1637  0891                     	;# 
  1638  0891                     	;# 
  1639  0892                     	;# 
  1640  0892                     	;# 
  1641  0892                     	;# 
  1642  0893                     	;# 
  1643  0893                     	;# 
  1644  0893                     	;# 
  1645  0893                     	;# 
  1646  0893                     	;# 
  1647  0893                     	;# 
  1648  0894                     	;# 
  1649  0894                     	;# 
  1650  0894                     	;# 
  1651  0895                     	;# 
  1652  0895                     	;# 
  1653  0895                     	;# 
  1654  0896                     	;# 
  1655  0896                     	;# 
  1656  0896                     	;# 
  1657  089B                     	;# 
  1658  0911                     	;# 
  1659  0912                     	;# 
  1660  0913                     	;# 
  1661  0914                     	;# 
  1662  0915                     	;# 
  1663  0916                     	;# 
  1664  0918                     	;# 
  1665  0919                     	;# 
  1666  091A                     	;# 
  1667  091B                     	;# 
  1668  091C                     	;# 
  1669  091D                     	;# 
  1670  091E                     	;# 
  1671  091F                     	;# 
  1672  0E0F                     	;# 
  1673  0E10                     	;# 
  1674  0E11                     	;# 
  1675  0E12                     	;# 
  1676  0E13                     	;# 
  1677  0E14                     	;# 
  1678  0E15                     	;# 
  1679  0E16                     	;# 
  1680  0E17                     	;# 
  1681  0E18                     	;# 
  1682  0E19                     	;# 
  1683  0E1A                     	;# 
  1684  0E1B                     	;# 
  1685  0E1C                     	;# 
  1686  0E1D                     	;# 
  1687  0E1E                     	;# 
  1688  0E1F                     	;# 
  1689  0E20                     	;# 
  1690  0E21                     	;# 
  1691  0E22                     	;# 
  1692  0E24                     	;# 
  1693  0E25                     	;# 
  1694  0E28                     	;# 
  1695  0E29                     	;# 
  1696  0E2A                     	;# 
  1697  0E2B                     	;# 
  1698  0E2C                     	;# 
  1699  0E2D                     	;# 
  1700  0E2E                     	;# 
  1701  0E2F                     	;# 
  1702  0E90                     	;# 
  1703  0E91                     	;# 
  1704  0E92                     	;# 
  1705  0E94                     	;# 
  1706  0E95                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA2                     	;# 
  1710  0EA3                     	;# 
  1711  0EA4                     	;# 
  1712  0EA5                     	;# 
  1713  0F0F                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F33                     	;# 
  1750  0F34                     	;# 
  1751  0F35                     	;# 
  1752  0F36                     	;# 
  1753  0F37                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000E                     	;# 
  1779  0010                     	;# 
  1780  0011                     	;# 
  1781  0012                     	;# 
  1782  0013                     	;# 
  1783  0014                     	;# 
  1784  0015                     	;# 
  1785  0015                     	;# 
  1786  0016                     	;# 
  1787  0016                     	;# 
  1788  0017                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  0019                     	;# 
  1792  001A                     	;# 
  1793  001B                     	;# 
  1794  001C                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008E                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0092                     	;# 
  1803  0093                     	;# 
  1804  0094                     	;# 
  1805  0097                     	;# 
  1806  009B                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  009F                     	;# 
  1812  010C                     	;# 
  1813  010E                     	;# 
  1814  0111                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0117                     	;# 
  1821  0118                     	;# 
  1822  0119                     	;# 
  1823  018C                     	;# 
  1824  018E                     	;# 
  1825  0199                     	;# 
  1826  0199                     	;# 
  1827  0199                     	;# 
  1828  019A                     	;# 
  1829  019A                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019C                     	;# 
  1837  019C                     	;# 
  1838  019C                     	;# 
  1839  019D                     	;# 
  1840  019D                     	;# 
  1841  019D                     	;# 
  1842  019E                     	;# 
  1843  019E                     	;# 
  1844  019E                     	;# 
  1845  019F                     	;# 
  1846  019F                     	;# 
  1847  019F                     	;# 
  1848  019F                     	;# 
  1849  019F                     	;# 
  1850  020C                     	;# 
  1851  020E                     	;# 
  1852  0211                     	;# 
  1853  0211                     	;# 
  1854  0212                     	;# 
  1855  0212                     	;# 
  1856  0213                     	;# 
  1857  0213                     	;# 
  1858  0214                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0215                     	;# 
  1864  0216                     	;# 
  1865  0216                     	;# 
  1866  0217                     	;# 
  1867  0217                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021C                     	;# 
  1872  021D                     	;# 
  1873  021D                     	;# 
  1874  021E                     	;# 
  1875  021F                     	;# 
  1876  028C                     	;# 
  1877  028E                     	;# 
  1878  0291                     	;# 
  1879  0291                     	;# 
  1880  0292                     	;# 
  1881  0293                     	;# 
  1882  0294                     	;# 
  1883  0295                     	;# 
  1884  0295                     	;# 
  1885  0296                     	;# 
  1886  0297                     	;# 
  1887  0298                     	;# 
  1888  029F                     	;# 
  1889  030C                     	;# 
  1890  030E                     	;# 
  1891  0311                     	;# 
  1892  0311                     	;# 
  1893  0312                     	;# 
  1894  0313                     	;# 
  1895  0314                     	;# 
  1896  0315                     	;# 
  1897  0315                     	;# 
  1898  0316                     	;# 
  1899  0317                     	;# 
  1900  0318                     	;# 
  1901  038C                     	;# 
  1902  038E                     	;# 
  1903  0391                     	;# 
  1904  0392                     	;# 
  1905  0393                     	;# 
  1906  0397                     	;# 
  1907  0398                     	;# 
  1908  0399                     	;# 
  1909  039A                     	;# 
  1910  039C                     	;# 
  1911  039D                     	;# 
  1912  039E                     	;# 
  1913  039F                     	;# 
  1914  0411                     	;# 
  1915  0411                     	;# 
  1916  0412                     	;# 
  1917  0413                     	;# 
  1918  0414                     	;# 
  1919  0415                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041B                     	;# 
  1927  041C                     	;# 
  1928  041D                     	;# 
  1929  041E                     	;# 
  1930  041F                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0617                     	;# 
  1942  0618                     	;# 
  1943  0619                     	;# 
  1944  0619                     	;# 
  1945  061A                     	;# 
  1946  061B                     	;# 
  1947  061C                     	;# 
  1948  061C                     	;# 
  1949  061F                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  0695                     	;# 
  1955  0696                     	;# 
  1956  0697                     	;# 
  1957  0698                     	;# 
  1958  0699                     	;# 
  1959  0711                     	;# 
  1960  0712                     	;# 
  1961  0713                     	;# 
  1962  0714                     	;# 
  1963  0715                     	;# 
  1964  0716                     	;# 
  1965  0717                     	;# 
  1966  0718                     	;# 
  1967  0719                     	;# 
  1968  0891                     	;# 
  1969  0891                     	;# 
  1970  0891                     	;# 
  1971  0891                     	;# 
  1972  0891                     	;# 
  1973  0891                     	;# 
  1974  0892                     	;# 
  1975  0892                     	;# 
  1976  0892                     	;# 
  1977  0893                     	;# 
  1978  0893                     	;# 
  1979  0893                     	;# 
  1980  0893                     	;# 
  1981  0893                     	;# 
  1982  0893                     	;# 
  1983  0894                     	;# 
  1984  0894                     	;# 
  1985  0894                     	;# 
  1986  0895                     	;# 
  1987  0895                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0896                     	;# 
  1991  0896                     	;# 
  1992  089B                     	;# 
  1993  0911                     	;# 
  1994  0912                     	;# 
  1995  0913                     	;# 
  1996  0914                     	;# 
  1997  0915                     	;# 
  1998  0916                     	;# 
  1999  0918                     	;# 
  2000  0919                     	;# 
  2001  091A                     	;# 
  2002  091B                     	;# 
  2003  091C                     	;# 
  2004  091D                     	;# 
  2005  091E                     	;# 
  2006  091F                     	;# 
  2007  0E0F                     	;# 
  2008  0E10                     	;# 
  2009  0E11                     	;# 
  2010  0E12                     	;# 
  2011  0E13                     	;# 
  2012  0E14                     	;# 
  2013  0E15                     	;# 
  2014  0E16                     	;# 
  2015  0E17                     	;# 
  2016  0E18                     	;# 
  2017  0E19                     	;# 
  2018  0E1A                     	;# 
  2019  0E1B                     	;# 
  2020  0E1C                     	;# 
  2021  0E1D                     	;# 
  2022  0E1E                     	;# 
  2023  0E1F                     	;# 
  2024  0E20                     	;# 
  2025  0E21                     	;# 
  2026  0E22                     	;# 
  2027  0E24                     	;# 
  2028  0E25                     	;# 
  2029  0E28                     	;# 
  2030  0E29                     	;# 
  2031  0E2A                     	;# 
  2032  0E2B                     	;# 
  2033  0E2C                     	;# 
  2034  0E2D                     	;# 
  2035  0E2E                     	;# 
  2036  0E2F                     	;# 
  2037  0E90                     	;# 
  2038  0E91                     	;# 
  2039  0E92                     	;# 
  2040  0E94                     	;# 
  2041  0E95                     	;# 
  2042  0EA0                     	;# 
  2043  0EA1                     	;# 
  2044  0EA2                     	;# 
  2045  0EA3                     	;# 
  2046  0EA4                     	;# 
  2047  0EA5                     	;# 
  2048  0F0F                     	;# 
  2049  0F10                     	;# 
  2050  0F11                     	;# 
  2051  0F12                     	;# 
  2052  0F13                     	;# 
  2053  0F14                     	;# 
  2054  0F15                     	;# 
  2055  0F16                     	;# 
  2056  0F17                     	;# 
  2057  0F18                     	;# 
  2058  0F19                     	;# 
  2059  0F1A                     	;# 
  2060  0F1B                     	;# 
  2061  0F1C                     	;# 
  2062  0F1D                     	;# 
  2063  0F1E                     	;# 
  2064  0F1F                     	;# 
  2065  0F20                     	;# 
  2066  0F21                     	;# 
  2067  0F22                     	;# 
  2068  0F23                     	;# 
  2069  0F24                     	;# 
  2070  0F25                     	;# 
  2071  0F26                     	;# 
  2072  0F27                     	;# 
  2073  0F28                     	;# 
  2074  0F29                     	;# 
  2075  0F2A                     	;# 
  2076  0F2B                     	;# 
  2077  0F2C                     	;# 
  2078  0F2D                     	;# 
  2079  0F2E                     	;# 
  2080  0F2F                     	;# 
  2081  0F30                     	;# 
  2082  0F31                     	;# 
  2083  0F32                     	;# 
  2084  0F33                     	;# 
  2085  0F34                     	;# 
  2086  0F35                     	;# 
  2087  0F36                     	;# 
  2088  0F37                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEF                     	;# 
  2100  1FE0                     _romArray_absaddr	set	8160
  2101                           
  2102                           	psect	stringtext1
  2103  0633                     __pstringtext1:	
  2104  0633                     _resetRomData:	
  2105  0633  34AA               	retlw	170
  2106  0634  3455               	retlw	85
  2107  0635  346E               	retlw	110
  2108  0636  3463               	retlw	99
  2109  0637  346F               	retlw	111
  2110  0638  346E               	retlw	110
  2111  0639  3466               	retlw	102
  2112  063A  3469               	retlw	105
  2113  063B  3467               	retlw	103
  2114  063C  3475               	retlw	117
  2115  063D  3472               	retlw	114
  2116  063E  3465               	retlw	101
  2117  063F  3464               	retlw	100
  2118  0640  3400               	retlw	0
  2119  0641  3400               	retlw	0
  2120  0642  3400               	retlw	0
  2121  0643  3400               	retlw	0
  2122  0644  3400               	retlw	0
  2123  0645  3400               	retlw	0
  2124  0646                     __end_of_resetRomData:	
  2125                           
  2126                           	psect	stringtext2
  2127  069F                     __pstringtext2:	
  2128  069F                     _n_ADDRESS_P0:	
  2129  069F  34AD               	retlw	173
  2130  06A0  3487               	retlw	135
  2131  06A1  3466               	retlw	102
  2132  06A2  34BC               	retlw	188
  2133  06A3  34BB               	retlw	187
  2134  06A4                     __end_of_n_ADDRESS_P0:	
  2135                           
  2136                           	psect	stringtext3
  2137  06C3                     __pstringtext3:	
  2138  06C3                     _n_ADDRESS_MUL:	
  2139  06C3  3421               	retlw	33
  2140  06C4                     __end_of_n_ADDRESS_MUL:	
  2141  1FE0                     _romArray_absaddr	set	8160
  2142                           
  2143                           	psect	_romArray_text
  2144  1FE0                     __p_romArray_text:	
  2145  1FE0                     _romArray:	
  2146  1FE0  3400               	retlw	0
  2147  1FE1  3400               	retlw	0
  2148  1FE2  3400               	retlw	0
  2149  1FE3  3400               	retlw	0
  2150  1FE4  3400               	retlw	0
  2151  1FE5  3400               	retlw	0
  2152  1FE6  3400               	retlw	0
  2153  1FE7  3400               	retlw	0
  2154  1FE8  3400               	retlw	0
  2155  1FE9  3400               	retlw	0
  2156  1FEA  3400               	retlw	0
  2157  1FEB  3400               	retlw	0
  2158  1FEC  3400               	retlw	0
  2159  1FED  3400               	retlw	0
  2160  1FEE  3400               	retlw	0
  2161  1FEF  3400               	retlw	0
  2162  1FF0  3400               	retlw	0
  2163  1FF1  3400               	retlw	0
  2164  1FF2  3400               	retlw	0
  2165  1FF3  3400               	retlw	0
  2166  1FF4  3400               	retlw	0
  2167  1FF5  3400               	retlw	0
  2168  1FF6  3400               	retlw	0
  2169  1FF7  3400               	retlw	0
  2170  1FF8  3400               	retlw	0
  2171  1FF9  3400               	retlw	0
  2172  1FFA  3400               	retlw	0
  2173  1FFB  3400               	retlw	0
  2174  1FFC  3400               	retlw	0
  2175  1FFD  3400               	retlw	0
  2176  1FFE  3400               	retlw	0
  2177  1FFF  3400               	retlw	0
  2178  2000                     __end_of_romArray:	
  2179  0003                     _STATUSbits	set	3
  2180  0010                     _PIR0bits	set	16
  2181  000E                     _PORTCbits	set	14
  2182  000C                     _PORTAbits	set	12
  2183  000B                     _INTCONbits	set	11
  2184  0097                     _WDTCONbits	set	151
  2185  009E                     _ADCON1bits	set	158
  2186  009C                     _ADRESH	set	156
  2187  009B                     _ADRESL	set	155
  2188  009D                     _ADCON0bits	set	157
  2189  0090                     _PIE0bits	set	144
  2190  008E                     _TRISCbits	set	142
  2191  008C                     _TRISAbits	set	140
  2192  0117                     _FVRCONbits	set	279
  2193  018E                     _ANSELCbits	set	398
  2194  018C                     _ANSELAbits	set	396
  2195  018E                     _ANSELC	set	398
  2196  018C                     _ANSELA	set	396
  2197  020C                     _WPUAbits	set	524
  2198  0211                     _SSP1BUF	set	529
  2199  0214                     _SSP1STATbits	set	532
  2200  0215                     _SSP1CON1bits	set	533
  2201  028E                     _ODCONC	set	654
  2202  028C                     _ODCONA	set	652
  2203  030E                     _SLRCONC	set	782
  2204  030C                     _SLRCONA	set	780
  2205  038E                     _INLVLC	set	910
  2206  038C                     _INLVLA	set	908
  2207  0894                     _PMDATH	set	2196
  2208  0893                     _PMDATL	set	2195
  2209  0896                     _PMCON2	set	2198
  2210  0895                     _PMCON1bits	set	2197
  2211  0892                     _PMADRH	set	2194
  2212  0891                     _PMADRL	set	2193
  2213  0895                     _PMCON1	set	2197
  2214  0E92                     _RA2PPSbits	set	3730
  2215  0EA0                     _RC0PPSbits	set	3744
  2216  0EA2                     _RC2PPSbits	set	3746
  2217  0EA1                     _RC1PPSbits	set	3745
  2218                           
  2219                           	psect	stringtext4
  2220  0646                     __pstringtext4:	
  2221  0646                     STR_6:	
  2222  0646  3455               	retlw	85	;'U'
  2223  0647  346E               	retlw	110	;'n'
  2224  0648  3463               	retlw	99	;'c'
  2225  0649  346F               	retlw	111	;'o'
  2226  064A  346E               	retlw	110	;'n'
  2227  064B  3466               	retlw	102	;'f'
  2228  064C  3469               	retlw	105	;'i'
  2229  064D  3467               	retlw	103	;'g'
  2230  064E  3475               	retlw	117	;'u'
  2231  064F  3472               	retlw	114	;'r'
  2232  0650  3465               	retlw	101	;'e'
  2233  0651  3464               	retlw	100	;'d'
  2234  0652  3448               	retlw	72	;'H'
  2235  0653  3400               	retlw	0
  2236                           
  2237                           	psect	stringtext5
  2238  068D                     __pstringtext5:	
  2239  068D                     STR_5:	
  2240  068D  3441               	retlw	65	;'A'
  2241  068E  3444               	retlw	68	;'D'
  2242  068F  3443               	retlw	67	;'C'
  2243  0690  3433               	retlw	51	;'3'
  2244  0691  3431               	retlw	49	;'1'
  2245  0692  3400               	retlw	0
  2246                           
  2247                           	psect	stringtext6
  2248  0693                     __pstringtext6:	
  2249  0693                     STR_4:	
  2250  0693  3441               	retlw	65	;'A'
  2251  0694  3444               	retlw	68	;'D'
  2252  0695  3443               	retlw	67	;'C'
  2253  0696  3432               	retlw	50	;'2'
  2254  0697  3439               	retlw	57	;'9'
  2255  0698  3400               	retlw	0
  2256                           
  2257                           	psect	stringtext7
  2258  06A4                     __pstringtext7:	
  2259  06A4                     STR_2:	
  2260  06A4  3441               	retlw	65	;'A'
  2261  06A5  3444               	retlw	68	;'D'
  2262  06A6  3443               	retlw	67	;'C'
  2263  06A7  3433               	retlw	51	;'3'
  2264  06A8  3400               	retlw	0
  2265                           
  2266                           	psect	stringtext8
  2267  06A9                     __pstringtext8:	
  2268  06A9                     STR_3:	
  2269  06A9  3441               	retlw	65	;'A'
  2270  06AA  3444               	retlw	68	;'D'
  2271  06AB  3443               	retlw	67	;'C'
  2272  06AC  3437               	retlw	55	;'7'
  2273  06AD  3400               	retlw	0
  2274                           
  2275                           	psect	stringtext9
  2276  06AE                     __pstringtext9:	
  2277  06AE                     STR_7:	
  2278  06AE  3442               	retlw	66	;'B'
  2279  06AF  344F               	retlw	79	;'O'
  2280  06B0  344F               	retlw	79	;'O'
  2281  06B1  3454               	retlw	84	;'T'
  2282  06B2  3400               	retlw	0
  2283                           
  2284                           	psect	stringtext10
  2285  06B3                     __pstringtext10:	
  2286  06B3                     STR_1:	
  2287  06B3  3444               	retlw	68	;'D'
  2288  06B4  3442               	retlw	66	;'B'
  2289  06B5  3447               	retlw	71	;'G'
  2290  06B6  3400               	retlw	0
  2291                           
  2292                           	psect	stringtext11
  2293  0000                     __pstringtext11:	
  2294                           
  2295                           ; #config settings
  2296  0000                     
  2297                           	psect	cinit
  2298  0011                     start_initialization:	
  2299  0011                     __initialization:	
  2300                           
  2301                           ; Clear objects allocated to BANK0
  2302  0011  3047               	movlw	low __pbssBANK0
  2303  0012  0084               	movwf	4
  2304  0013  3000               	movlw	high __pbssBANK0
  2305  0014  0085               	movwf	5
  2306  0015  3026               	movlw	38
  2307  0016  3186  2699  3180   	fcall	clear_ram0
  2308                           
  2309                           ; Clear objects allocated to BANK1
  2310  0019  30A0               	movlw	low __pbssBANK1
  2311  001A  0084               	movwf	4
  2312  001B  3000               	movlw	high __pbssBANK1
  2313  001C  0085               	movwf	5
  2314  001D  3033               	movlw	51
  2315  001E  3186  2699  3180   	fcall	clear_ram0
  2316                           
  2317                           ; Clear objects allocated to BANK2
  2318  0021  3020               	movlw	low __pbssBANK2
  2319  0022  0084               	movwf	4
  2320  0023  3001               	movlw	high __pbssBANK2
  2321  0024  0085               	movwf	5
  2322  0025  3020               	movlw	32
  2323  0026  3186  2699         	fcall	clear_ram0
  2324  0028                     end_of_initialization:	
  2325                           ;End of C runtime variable initialization code
  2326                           
  2327  0028                     __end_of__initialization:	
  2328  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2329  0029  0020               	movlb	0
  2330  002A  3182  2ADD         	ljmp	_main	;jump to C main() function
  2331                           
  2332                           	psect	bssBANK0
  2333  0047                     __pbssBANK0:	
  2334  0047                     _counter:	
  2335  0047                     	ds	2
  2336  0049                     _nrf24l01RXPacketData:	
  2337  0049                     	ds	1
  2338  004A                     _sleepLoop:	
  2339  004A                     	ds	1
  2340  004B                     _nrf24l01:	
  2341  004B                     	ds	1
  2342  004C                     _nrf24l01TXPacketData:	
  2343  004C                     	ds	1
  2344  004D                     _nrf24l01RXValue:	
  2345  004D                     	ds	8
  2346  0055                     _nrf24l01RXTopic:	
  2347  0055                     	ds	8
  2348  005D                     _nrf24l01TXValue:	
  2349  005D                     	ds	8
  2350  0065                     _nrf24l01TXTopic:	
  2351  0065                     	ds	8
  2352                           
  2353                           	psect	bssBANK1
  2354  00A0                     __pbssBANK1:	
  2355  00A0                     _romData:	
  2356  00A0                     	ds	19
  2357  00B3                     _nrf24l01RXName:	
  2358  00B3                     	ds	16
  2359  00C3                     _nrf24l01TXName:	
  2360  00C3                     	ds	16
  2361                           
  2362                           	psect	bssBANK2
  2363  0120                     __pbssBANK2:	
  2364  0120                     _romHolder:	
  2365  0120                     	ds	32
  2366                           
  2367                           	psect	clrtext
  2368  0699                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  0699  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  069A                     clrloop0:	
  2374  069A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  069B  3101               	addfsr 0,1
  2376  069C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  069D  2E9A               	goto	clrloop0	;have we reached the end yet?
  2378  069E  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0070                     __pcstackCOMMON:	
  2382  0070                     ?_nrf24l01ISR:	
  2383  0070                     ?_nrf24l01SetRXMode:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_nrf24l01SendString:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_nrf24l01Init:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_flashWriteByte:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_flashUpdate:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_nrf24l01CELow:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ??_nrf24l01CELow:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_nrf24l01CEHigh:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ??_nrf24l01CEHigh:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_nrf24l01CSLow:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ??_nrf24l01CSLow:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_nrf24l01CSHigh:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ??_nrf24l01CSHigh:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_nrf24l01InterfaceInit:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_nrf24l01SPISend:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ??_nrf24l01SPISend:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_nrf24l01SPIStart:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ??_nrf24l01SPIStart:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_nrf24l01SPIEnd:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ??_nrf24l01SPIEnd:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_enableInterrupts:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ??_enableInterrupts:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_exception:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_sleep:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_loop:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_main:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_nrf24l01InitRegisters:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?i1_nrf24l01SetRXMode:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     nrf24l01SPISend@data:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     enableInterrupts@enable:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     nrf24l01InitRegisters@isReciever:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     flashWriteByte@offset:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482                           
  2483                           ; 2 bytes @ 0x0
  2484  0070                     	ds	1
  2485  0071                     ?i1_nrf24l01Send:	
  2486  0071                     i1nrf24l01Send@data:	
  2487                           ; 1 bytes @ 0x1
  2488                           
  2489                           
  2490                           ; 1 bytes @ 0x1
  2491  0071                     	ds	1
  2492  0072                     ??i1_nrf24l01Send:	
  2493  0072                     flashWriteByte@data:	
  2494                           ; 1 bytes @ 0x2
  2495                           
  2496                           
  2497                           ; 2 bytes @ 0x2
  2498  0072                     	ds	1
  2499  0073                     i1nrf24l01Send@command:	
  2500                           
  2501                           ; 1 bytes @ 0x3
  2502  0073                     	ds	1
  2503  0074                     ??_flashWriteByte:	
  2504  0074                     ??i1_nrf24l01SetRXMode:	
  2505                           ; 1 bytes @ 0x4
  2506                           
  2507  0074                     flashWriteByte@address:	
  2508                           ; 1 bytes @ 0x4
  2509                           
  2510                           
  2511                           ; 2 bytes @ 0x4
  2512  0074                     	ds	1
  2513  0075                     i1nrf24l01SetRXMode@config:	
  2514                           
  2515                           ; 1 bytes @ 0x5
  2516  0075                     	ds	1
  2517  0076                     ??_flashUpdate:	
  2518  0076                     i1nrf24l01SetRXMode@rxMode:	
  2519                           ; 1 bytes @ 0x6
  2520                           
  2521                           
  2522                           ; 1 bytes @ 0x6
  2523  0076                     	ds	2
  2524  0078                     flashUpdate@i:	
  2525                           
  2526                           ; 2 bytes @ 0x8
  2527  0078                     	ds	2
  2528  007A                     ??_exception:	
  2529                           
  2530                           ; 1 bytes @ 0xA
  2531  007A                     	ds	2
  2532  007C                     exception@exception:	
  2533                           
  2534                           ; 1 bytes @ 0xC
  2535  007C                     	ds	1
  2536  007D                     ??_nrf24l01ISR:	
  2537                           
  2538                           ; 1 bytes @ 0xD
  2539  007D                     	ds	1
  2540  007E                     ??_ISR:	
  2541                           
  2542                           	psect	cstackBANK0
  2543  0020                     __pcstackBANK0:	
  2544                           ; 1 bytes @ 0xE
  2545                           
  2546  0020                     nrf24l01ISR@status:	
  2547                           
  2548                           ; 1 bytes @ 0x0
  2549  0020                     	ds	1
  2550  0021                     ?_strcpy:	
  2551  0021                     ??_nrf24l01InterfaceInit:	
  2552                           ; 1 bytes @ 0x1
  2553                           
  2554  0021                     ??_sleep:	
  2555                           ; 1 bytes @ 0x1
  2556                           
  2557  0021                     ?_nrf24l01Send:	
  2558                           ; 1 bytes @ 0x1
  2559                           
  2560  0021                     ?___lwdiv:	
  2561                           ; 1 bytes @ 0x1
  2562                           
  2563  0021                     ?___lwmod:	
  2564                           ; 2 bytes @ 0x1
  2565                           
  2566  0021                     ?___lmul:	
  2567                           ; 2 bytes @ 0x1
  2568                           
  2569  0021                     ?___lldiv:	
  2570                           ; 4 bytes @ 0x1
  2571                           
  2572  0021                     nrf24l01Send@data:	
  2573                           ; 4 bytes @ 0x1
  2574                           
  2575  0021                     ___lwdiv@divisor:	
  2576                           ; 1 bytes @ 0x1
  2577                           
  2578  0021                     ___lwmod@divisor:	
  2579                           ; 2 bytes @ 0x1
  2580                           
  2581  0021                     strcpy@from:	
  2582                           ; 2 bytes @ 0x1
  2583                           
  2584  0021                     ___lmul@multiplier:	
  2585                           ; 2 bytes @ 0x1
  2586                           
  2587  0021                     ___lldiv@divisor:	
  2588                           ; 4 bytes @ 0x1
  2589                           
  2590                           
  2591                           ; 4 bytes @ 0x1
  2592  0021                     	ds	1
  2593  0022                     ??_nrf24l01Send:	
  2594                           
  2595                           ; 1 bytes @ 0x2
  2596  0022                     	ds	1
  2597  0023                     ??_strcpy:	
  2598  0023                     nrf24l01Send@command:	
  2599                           ; 1 bytes @ 0x3
  2600                           
  2601  0023                     ___lwdiv@dividend:	
  2602                           ; 1 bytes @ 0x3
  2603                           
  2604  0023                     ___lwmod@dividend:	
  2605                           ; 2 bytes @ 0x3
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x3
  2609  0023                     	ds	1
  2610  0024                     ??_nrf24l01SetRXMode:	
  2611  0024                     ??_nrf24l01InitRegisters:	
  2612                           ; 1 bytes @ 0x4
  2613                           
  2614  0024                     strcpy@cp:	
  2615                           ; 1 bytes @ 0x4
  2616                           
  2617                           
  2618                           ; 1 bytes @ 0x4
  2619  0024                     	ds	1
  2620  0025                     ??___lwdiv:	
  2621  0025                     ??___lwmod:	
  2622                           ; 1 bytes @ 0x5
  2623                           
  2624  0025                     nrf24l01SetRXMode@config:	
  2625                           ; 1 bytes @ 0x5
  2626                           
  2627  0025                     nrf24l01InitRegisters@setupAW:	
  2628                           ; 1 bytes @ 0x5
  2629                           
  2630  0025                     strcpy@to:	
  2631                           ; 1 bytes @ 0x5
  2632                           
  2633  0025                     ___lmul@multiplicand:	
  2634                           ; 1 bytes @ 0x5
  2635                           
  2636  0025                     ___lldiv@dividend:	
  2637                           ; 4 bytes @ 0x5
  2638                           
  2639                           
  2640                           ; 4 bytes @ 0x5
  2641  0025                     	ds	1
  2642  0026                     nrf24l01SetRXMode@rxMode:	
  2643  0026                     nrf24l01InitRegisters@rfSetup:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0026                     ___lwmod@counter:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649  0026                     ___lwdiv@quotient:	
  2650                           ; 1 bytes @ 0x6
  2651                           
  2652                           
  2653                           ; 2 bytes @ 0x6
  2654  0026                     	ds	1
  2655  0027                     ??_nrf24l01SendString:	
  2656  0027                     nrf24l01InitRegisters@feature:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659                           
  2660                           ; 1 bytes @ 0x7
  2661  0027                     	ds	1
  2662  0028                     nrf24l01SendString@i:	
  2663  0028                     nrf24l01InitRegisters@status:	
  2664                           ; 1 bytes @ 0x8
  2665                           
  2666  0028                     ___lwdiv@counter:	
  2667                           ; 1 bytes @ 0x8
  2668                           
  2669                           
  2670                           ; 1 bytes @ 0x8
  2671  0028                     	ds	1
  2672  0029                     ??___lmul:	
  2673  0029                     ??___lldiv:	
  2674                           ; 1 bytes @ 0x9
  2675                           
  2676  0029                     nrf24l01InitRegisters@enRXAddr:	
  2677                           ; 1 bytes @ 0x9
  2678                           
  2679  0029                     ___lmul@product:	
  2680                           ; 1 bytes @ 0x9
  2681                           
  2682                           
  2683                           ; 4 bytes @ 0x9
  2684  0029                     	ds	1
  2685  002A                     nrf24l01InitRegisters@enAA:	
  2686  002A                     ___lldiv@quotient:	
  2687                           ; 1 bytes @ 0xA
  2688                           
  2689                           
  2690                           ; 4 bytes @ 0xA
  2691  002A                     	ds	1
  2692  002B                     nrf24l01InitRegisters@DynPD:	
  2693                           
  2694                           ; 1 bytes @ 0xB
  2695  002B                     	ds	1
  2696  002C                     nrf24l01InitRegisters@config:	
  2697                           
  2698                           ; 1 bytes @ 0xC
  2699  002C                     	ds	1
  2700  002D                     ??_nrf24l01Init:	
  2701                           
  2702                           ; 1 bytes @ 0xD
  2703  002D                     	ds	1
  2704  002E                     ___lldiv@counter:	
  2705                           
  2706                           ; 1 bytes @ 0xE
  2707  002E                     	ds	1
  2708  002F                     ?_getADCValue:	
  2709  002F                     nrf24l01Init@isReciever:	
  2710                           ; 4 bytes @ 0xF
  2711                           
  2712  002F                     getADCValue@divider:	
  2713                           ; 1 bytes @ 0xF
  2714                           
  2715                           
  2716                           ; 4 bytes @ 0xF
  2717  002F                     	ds	4
  2718  0033                     ??_getADCValue:	
  2719                           
  2720                           ; 1 bytes @ 0x13
  2721  0033                     	ds	4
  2722  0037                     getADCValue@channel:	
  2723                           
  2724                           ; 1 bytes @ 0x17
  2725  0037                     	ds	1
  2726  0038                     getADCValue@adcLoop:	
  2727                           
  2728                           ; 1 bytes @ 0x18
  2729  0038                     	ds	1
  2730  0039                     getADCValue@adcSum:	
  2731                           
  2732                           ; 4 bytes @ 0x19
  2733  0039                     	ds	4
  2734  003D                     ?_utoa:	
  2735  003D                     utoa@val:	
  2736                           ; 1 bytes @ 0x1D
  2737                           
  2738                           
  2739                           ; 2 bytes @ 0x1D
  2740  003D                     	ds	2
  2741  003F                     utoa@base:	
  2742                           
  2743                           ; 2 bytes @ 0x1F
  2744  003F                     	ds	2
  2745  0041                     ??_utoa:	
  2746                           
  2747                           ; 1 bytes @ 0x21
  2748  0041                     	ds	1
  2749  0042                     utoa@v:	
  2750                           
  2751                           ; 2 bytes @ 0x22
  2752  0042                     	ds	2
  2753  0044                     utoa@c:	
  2754                           
  2755                           ; 1 bytes @ 0x24
  2756  0044                     	ds	1
  2757  0045                     utoa@buf:	
  2758                           
  2759                           ; 1 bytes @ 0x25
  2760  0045                     	ds	1
  2761  0046                     ??_loop:	
  2762  0046                     ??_main:	
  2763                           ; 1 bytes @ 0x26
  2764                           
  2765                           
  2766                           ; 1 bytes @ 0x26
  2767  0046                     	ds	1
  2768                           
  2769                           	psect	maintext
  2770  02DD                     __pmaintext:	
  2771 ;;
  2772 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2773 ;;
  2774 ;; *************** function _main *****************
  2775 ;; Defined at:
  2776 ;;		line 115 in file "main.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : B1F/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels required when called:   12
  2796 ;; This function calls:
  2797 ;;		_loop
  2798 ;;		_nrf24l01Init
  2799 ;;		_nrf24l01SendString
  2800 ;;		_sleep
  2801 ;;		_strcpy
  2802 ;;		_utoa
  2803 ;; This function is called by:
  2804 ;;		Startup code after reset
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _main
  2810  02DD                     _main:	
  2811                           
  2812                           ;main.c: 118: ANSELA = 0x00;
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2816  02DD  0023               	movlb	3	; select bank3
  2817  02DE  018C               	clrf	12	;volatile
  2818                           
  2819                           ;main.c: 119: ANSELC = 0x00;
  2820  02DF  018E               	clrf	14	;volatile
  2821                           
  2822                           ;main.c: 121: ODCONA = 0x00;
  2823  02E0  0025               	movlb	5	; select bank5
  2824  02E1  018C               	clrf	12	;volatile
  2825                           
  2826                           ;main.c: 122: ODCONC = 0x00;
  2827  02E2  018E               	clrf	14	;volatile
  2828                           
  2829                           ;main.c: 124: SLRCONA = 0x00;
  2830  02E3  0026               	movlb	6	; select bank6
  2831  02E4  018C               	clrf	12	;volatile
  2832                           
  2833                           ;main.c: 125: SLRCONC = 0x00;
  2834  02E5  018E               	clrf	14	;volatile
  2835                           
  2836                           ;main.c: 127: INLVLA = 0x00;
  2837  02E6  0027               	movlb	7	; select bank7
  2838  02E7  018C               	clrf	12	;volatile
  2839                           
  2840                           ;main.c: 128: INLVLC = 0x00;
  2841  02E8  018E               	clrf	14	;volatile
  2842                           
  2843                           ;main.c: 130: TRISCbits.TRISC5 = 0;
  2844  02E9  0021               	movlb	1	; select bank1
  2845  02EA  128E               	bcf	14,5	;volatile
  2846                           
  2847                           ;main.c: 131: TRISCbits.TRISC4 = 0;
  2848  02EB  120E               	bcf	14,4	;volatile
  2849                           
  2850                           ;main.c: 133: PORTCbits.RC4 = 0;
  2851  02EC  0020               	movlb	0	; select bank0
  2852  02ED  120E               	bcf	14,4	;volatile
  2853                           
  2854                           ;main.c: 140: INTCONbits.PEIE = 0;
  2855  02EE  130B               	bcf	11,6	;volatile
  2856                           
  2857                           ;main.c: 141: INTCONbits.GIE = 0;
  2858  02EF  138B               	bcf	11,7	;volatile
  2859                           
  2860                           ;main.c: 146: _delay((unsigned long)((10)*(16000000/4000.0)));
  2861  02F0  3034               	movlw	52
  2862  02F1  0020               	movlb	0	; select bank0
  2863  02F2  00C6               	movwf	??_main
  2864  02F3  30F1               	movlw	241
  2865  02F4                     u1677:	
  2866  02F4  0B89               	decfsz	9,f
  2867  02F5  2AF4               	goto	u1677
  2868  02F6  0BC6               	decfsz	??_main,f
  2869  02F7  2AF4               	goto	u1677
  2870  02F8  3200               	nop2
  2871                           
  2872                           ;main.c: 150: strcpy(nrf24l01TXName, "UnconfiguredH");
  2873  02F9  3046               	movlw	low (STR_6| (0+32768))
  2874  02FA  0020               	movlb	0	; select bank0
  2875  02FB  00A1               	movwf	strcpy@from
  2876  02FC  3086               	movlw	high (STR_6| (0+32768))
  2877  02FD  00A2               	movwf	strcpy@from+1
  2878  02FE  30C3               	movlw	(low (_nrf24l01TXName| 0))& (0+255)
  2879  02FF  3185  25FD  3182   	fcall	_strcpy
  2880                           
  2881                           ;main.c: 152: nrf24l01Init(0);
  2882  0302  3000               	movlw	0
  2883  0303  3185  2574  3182   	fcall	_nrf24l01Init
  2884                           
  2885                           ;main.c: 158: FVRCONbits.FVREN = 0;
  2886  0306  0022               	movlb	2	; select bank2
  2887  0307  1397               	bcf	23,7	;volatile
  2888                           
  2889                           ;main.c: 159: FVRCONbits.ADFVR = 1;
  2890  0308  0817               	movf	23,w	;volatile
  2891  0309  39FC               	andlw	-4
  2892  030A  3801               	iorlw	1
  2893  030B  0097               	movwf	23	;volatile
  2894                           
  2895                           ;main.c: 160: FVRCONbits.FVREN = 1;
  2896  030C  1797               	bsf	23,7	;volatile
  2897                           
  2898                           ;main.c: 163: FVRCONbits.TSEN = 0;
  2899  030D  1297               	bcf	23,5	;volatile
  2900                           
  2901                           ;main.c: 164: FVRCONbits.TSRNG = 0;
  2902  030E  1217               	bcf	23,4	;volatile
  2903                           
  2904                           ;main.c: 165: FVRCONbits.TSEN = 1;
  2905  030F  1697               	bsf	23,5	;volatile
  2906                           
  2907                           ;main.c: 168: ADCON0bits.ADON = 0;
  2908  0310  0021               	movlb	1	; select bank1
  2909  0311  101D               	bcf	29,0	;volatile
  2910                           
  2911                           ;main.c: 170: ANSELAbits.ANSA4 = 1;
  2912  0312  0023               	movlb	3	; select bank3
  2913  0313  160C               	bsf	12,4	;volatile
  2914                           
  2915                           ;main.c: 171: TRISAbits.TRISA4 = 1;
  2916  0314  0021               	movlb	1	; select bank1
  2917  0315  160C               	bsf	12,4	;volatile
  2918                           
  2919                           ;main.c: 172: WPUAbits.WPUA4 = 0;
  2920  0316  0024               	movlb	4	; select bank4
  2921  0317  120C               	bcf	12,4	;volatile
  2922                           
  2923                           ;main.c: 174: ANSELCbits.ANSC3 = 1;
  2924  0318  0023               	movlb	3	; select bank3
  2925  0319  158E               	bsf	14,3	;volatile
  2926                           
  2927                           ;main.c: 175: TRISCbits.TRISC3 = 1;
  2928  031A  0021               	movlb	1	; select bank1
  2929  031B  158E               	bsf	14,3	;volatile
  2930                           
  2931                           ;main.c: 177: ADCON1bits.ADCS = 0b111;
  2932  031C  3070               	movlw	112
  2933  031D  049E               	iorwf	30,f	;volatile
  2934                           
  2935                           ;main.c: 178: ADCON1bits.ADFM = 1;
  2936  031E  179E               	bsf	30,7	;volatile
  2937                           
  2938                           ;main.c: 179: ADCON1bits.ADPREF = 0b00;
  2939  031F  30FC               	movlw	-4
  2940  0320  059E               	andwf	30,f	;volatile
  2941                           
  2942                           ;main.c: 181: ADCON0bits.CHS = 3;
  2943  0321  081D               	movf	29,w	;volatile
  2944  0322  3903               	andlw	-253
  2945  0323  380C               	iorlw	12
  2946  0324  009D               	movwf	29	;volatile
  2947                           
  2948                           ;main.c: 182: ADCON0bits.ADON = 1;
  2949  0325  141D               	bsf	29,0	;volatile
  2950                           
  2951                           ;main.c: 186: TRISAbits.TRISA2 = 1;
  2952  0326  150C               	bsf	12,2	;volatile
  2953                           
  2954                           ;main.c: 187: RA2PPSbits.RA2PPS = 0b00010;
  2955  0327  003D               	movlb	29	; select bank29
  2956  0328  0812               	movf	18,w	;volatile
  2957  0329  39E0               	andlw	-32
  2958  032A  3802               	iorlw	2
  2959  032B  0092               	movwf	18	;volatile
  2960                           
  2961                           ;main.c: 188: PIE0bits.INTE = 1;
  2962  032C  0021               	movlb	1	; select bank1
  2963  032D  1410               	bsf	16,0	;volatile
  2964                           
  2965                           ;main.c: 189: INTCONbits.INTEDG = 0;
  2966  032E  100B               	bcf	11,0	;volatile
  2967                           
  2968                           ;main.c: 193: WDTCONbits.WDTPS = 10;
  2969  032F  0817               	movf	23,w	;volatile
  2970  0330  39C1               	andlw	-63
  2971  0331  3814               	iorlw	20
  2972  0332  0097               	movwf	23	;volatile
  2973                           
  2974                           ;main.c: 196: TRISAbits.TRISA5 = 0;
  2975  0333  128C               	bcf	12,5	;volatile
  2976                           
  2977                           ;main.c: 197: PORTAbits.RA5 = 0;
  2978  0334  0020               	movlb	0	; select bank0
  2979  0335  128C               	bcf	12,5	;volatile
  2980                           
  2981                           ;main.c: 200: INTCONbits.PEIE = 1;
  2982  0336  170B               	bsf	11,6	;volatile
  2983                           
  2984                           ;main.c: 201: INTCONbits.GIE = 1;
  2985  0337  178B               	bsf	11,7	;volatile
  2986                           
  2987                           ;main.c: 203: strcpy(nrf24l01TXTopic, "BOOT");
  2988  0338  30AE               	movlw	low (STR_7| (0+32768))
  2989  0339  00A1               	movwf	strcpy@from
  2990  033A  3086               	movlw	high (STR_7| (0+32768))
  2991  033B  00A2               	movwf	strcpy@from+1
  2992  033C  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  2993  033D  3185  25FD  3182   	fcall	_strcpy
  2994                           
  2995                           ;main.c: 205: utoa(nrf24l01TXValue, romData.bootMode, 10);
  2996  0340  0021               	movlb	1	; select bank1
  2997  0341  0832               	movf	((_romData+1)^(0+128)+17),w
  2998  0342  0020               	movlb	0	; select bank0
  2999  0343  00BE               	movwf	utoa@val+1
  3000  0344  0021               	movlb	1	; select bank1
  3001  0345  0831               	movf	(_romData^(0+128)+17),w
  3002  0346  0020               	movlb	0	; select bank0
  3003  0347  00BD               	movwf	utoa@val
  3004  0348  300A               	movlw	10
  3005  0349  00BF               	movwf	utoa@base
  3006  034A  3000               	movlw	0
  3007  034B  00C0               	movwf	utoa@base+1
  3008  034C  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3009  034D  3183  235D  3182   	fcall	_utoa
  3010                           
  3011                           ;main.c: 207: nrf24l01TXPacketData.byte = 0x00;
  3012  0350  0020               	movlb	0	; select bank0
  3013  0351  01CC               	clrf	_nrf24l01TXPacketData
  3014                           
  3015                           ;main.c: 208: nrf24l01TXPacketData.ACKRequest = 0;
  3016  0352  104C               	bcf	_nrf24l01TXPacketData,0
  3017                           
  3018                           ;main.c: 211: nrf24l01SendString();
  3019  0353  3181  2100  3182   	fcall	_nrf24l01SendString
  3020                           
  3021                           ;main.c: 213: sleep();
  3022  0356  3186  266D  3182   	fcall	_sleep
  3023  0359                     l2853:	
  3024                           ;main.c: 215: while(1){
  3025                           
  3026                           
  3027                           ;main.c: 216: loop();
  3028  0359  3180  202C  3182   	fcall	_loop
  3029  035C  2B59               	goto	l2853
  3030  035D                     __end_of_main:	
  3031                           ;main.c: 217: };main.c: 219: return;
  3032                           
  3033                           
  3034                           	psect	text1
  3035  0574                     __ptext1:	
  3036 ;; *************** function _nrf24l01Init *****************
  3037 ;; Defined at:
  3038 ;;		line 446 in file "nrf24l01.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  isReciever      1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  isReciever      1   15[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:        3 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:   10
  3059 ;; This function calls:
  3060 ;;		_nrf24l01CEHigh
  3061 ;;		_nrf24l01CELow
  3062 ;;		_nrf24l01InitRegisters
  3063 ;;		_nrf24l01InterfaceInit
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _nrf24l01Init
  3071  0574                     _nrf24l01Init:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3075                           ;nrf24l01Init@isReciever stored from wreg
  3076  0574  0020               	movlb	0	; select bank0
  3077  0575  00AF               	movwf	nrf24l01Init@isReciever
  3078                           
  3079                           ;nrf24l01.c: 449: nrf24l01InterfaceInit();
  3080  0576  3185  25DF  3185   	fcall	_nrf24l01InterfaceInit
  3081                           
  3082                           ;nrf24l01.c: 454: nrf24l01CELow();
  3083  0579  3186  26BD  3185   	fcall	_nrf24l01CELow
  3084                           
  3085                           ;nrf24l01.c: 456: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3086  057C  3002               	movlw	2
  3087  057D  0020               	movlb	0	; select bank0
  3088  057E  00AE               	movwf	??_nrf24l01Init+1
  3089  057F  3004               	movlw	4
  3090  0580  00AD               	movwf	??_nrf24l01Init
  3091  0581  30BA               	movlw	186
  3092  0582                     u1687:	
  3093  0582  0B89               	decfsz	9,f
  3094  0583  2D82               	goto	u1687
  3095  0584  0BAD               	decfsz	??_nrf24l01Init,f
  3096  0585  2D82               	goto	u1687
  3097  0586  0BAE               	decfsz	??_nrf24l01Init+1,f
  3098  0587  2D82               	goto	u1687
  3099  0588  0000               	nop
  3100                           
  3101                           ;nrf24l01.c: 458: nrf24l01InitRegisters(isReciever);
  3102  0589  0020               	movlb	0	; select bank0
  3103  058A  082F               	movf	nrf24l01Init@isReciever,w
  3104  058B  3181  21B9  3185   	fcall	_nrf24l01InitRegisters
  3105                           
  3106                           ;nrf24l01.c: 460: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3107  058E  3002               	movlw	2
  3108  058F  0020               	movlb	0	; select bank0
  3109  0590  00AE               	movwf	??_nrf24l01Init+1
  3110  0591  3004               	movlw	4
  3111  0592  00AD               	movwf	??_nrf24l01Init
  3112  0593  30BA               	movlw	186
  3113  0594                     u1697:	
  3114  0594  0B89               	decfsz	9,f
  3115  0595  2D94               	goto	u1697
  3116  0596  0BAD               	decfsz	??_nrf24l01Init,f
  3117  0597  2D94               	goto	u1697
  3118  0598  0BAE               	decfsz	??_nrf24l01Init+1,f
  3119  0599  2D94               	goto	u1697
  3120  059A  0000               	nop
  3121                           
  3122                           ;nrf24l01.c: 462: nrf24l01CEHigh();
  3123  059B  3186  26C0         	fcall	_nrf24l01CEHigh
  3124  059D  0008               	return
  3125  059E                     __end_of_nrf24l01Init:	
  3126                           
  3127                           	psect	text2
  3128  05DF                     __ptext2:	
  3129 ;; *************** function _nrf24l01InterfaceInit *****************
  3130 ;; Defined at:
  3131 ;;		line 28 in file "interface.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    6
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_nrf24l01Init
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _nrf24l01InterfaceInit
  3161  05DF                     _nrf24l01InterfaceInit:	
  3162                           
  3163                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3164                           
  3165                           ;incstack = 0
  3166                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3167  05DF  0021               	movlb	1	; select bank1
  3168  05E0  100C               	bcf	12,0	;volatile
  3169                           
  3170                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3171  05E1  108C               	bcf	12,1	;volatile
  3172                           
  3173                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3174  05E2  148E               	bsf	14,1	;volatile
  3175                           
  3176                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3177  05E3  110E               	bcf	14,2	;volatile
  3178                           
  3179                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3180  05E4  100E               	bcf	14,0	;volatile
  3181                           
  3182                           ;interface.c: 37: SSP1CON1bits.SSPEN = 0;
  3183  05E5  0024               	movlb	4	; select bank4
  3184  05E6  1295               	bcf	21,5	;volatile
  3185                           
  3186                           ;interface.c: 39: RC1PPSbits.RC1PPS = 0b10001;
  3187  05E7  003D               	movlb	29	; select bank29
  3188  05E8  0821               	movf	33,w	;volatile
  3189  05E9  39E0               	andlw	-32
  3190  05EA  3811               	iorlw	17
  3191  05EB  00A1               	movwf	33	;volatile
  3192                           
  3193                           ;interface.c: 40: RC2PPSbits.RC2PPS = 0b11001;
  3194  05EC  0822               	movf	34,w	;volatile
  3195  05ED  39E0               	andlw	-32
  3196  05EE  3819               	iorlw	25
  3197  05EF  00A2               	movwf	34	;volatile
  3198                           
  3199                           ;interface.c: 41: RC0PPSbits.RC0PPS = 0b11000;
  3200  05F0  0820               	movf	32,w	;volatile
  3201  05F1  39E0               	andlw	-32
  3202  05F2  3818               	iorlw	24
  3203  05F3  00A0               	movwf	32	;volatile
  3204                           
  3205                           ;interface.c: 43: SSP1CON1bits.CKP = 0;
  3206  05F4  0024               	movlb	4	; select bank4
  3207  05F5  1215               	bcf	21,4	;volatile
  3208                           
  3209                           ;interface.c: 44: SSP1STATbits.CKE = 1;
  3210  05F6  1714               	bsf	20,6	;volatile
  3211                           
  3212                           ;interface.c: 45: SSP1CON1bits.SSPM = 0b0010;
  3213  05F7  0815               	movf	21,w	;volatile
  3214  05F8  39F0               	andlw	-16
  3215  05F9  3802               	iorlw	2
  3216  05FA  0095               	movwf	21	;volatile
  3217                           
  3218                           ;interface.c: 47: SSP1CON1bits.SSPEN = 1;
  3219  05FB  1695               	bsf	21,5	;volatile
  3220  05FC  0008               	return
  3221  05FD                     __end_of_nrf24l01InterfaceInit:	
  3222                           
  3223                           	psect	text3
  3224  01B9                     __ptext3:	
  3225 ;; *************** function _nrf24l01InitRegisters *****************
  3226 ;; Defined at:
  3227 ;;		line 362 in file "nrf24l01.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  isReciever      1    wreg     unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  isReciever      1    0[COMMON] unsigned char 
  3232 ;;  config          1   12[BANK0 ] struct .
  3233 ;;  DynPD           1   11[BANK0 ] struct .
  3234 ;;  enAA            1   10[BANK0 ] struct .
  3235 ;;  enRXAddr        1    9[BANK0 ] struct .
  3236 ;;  status          1    8[BANK0 ] struct .
  3237 ;;  feature         1    7[BANK0 ] struct .
  3238 ;;  rfSetup         1    6[BANK0 ] struct .
  3239 ;;  setupAW         1    5[BANK0 ] struct .
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        9 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    9
  3256 ;; This function calls:
  3257 ;;		_nrf24l01Send
  3258 ;; This function is called by:
  3259 ;;		_nrf24l01Init
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _nrf24l01InitRegisters
  3265  01B9                     _nrf24l01InitRegisters:	
  3266                           
  3267                           ;nrf24l01.c: 364: n_CONFIG_t config;;nrf24l01.c: 366: config.PWR_UP = 0;
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3271  01B9  0020               	movlb	0	; select bank0
  3272  01BA  10AC               	bcf	nrf24l01InitRegisters@config,1
  3273                           
  3274                           ;nrf24l01.c: 367: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3275  01BB  082C               	movf	nrf24l01InitRegisters@config,w
  3276  01BC  00A4               	movwf	??_nrf24l01InitRegisters
  3277  01BD  0824               	movf	??_nrf24l01InitRegisters,w
  3278  01BE  00A1               	movwf	nrf24l01Send@data
  3279  01BF  3020               	movlw	32
  3280  01C0  3185  25BF  3181   	fcall	_nrf24l01Send
  3281                           
  3282                           ;nrf24l01.c: 369: n_SETUP_AW_t setupAW;;nrf24l01.c: 370: setupAW.byte = 0x00;
  3283  01C3  0020               	movlb	0	; select bank0
  3284  01C4  01A5               	clrf	nrf24l01InitRegisters@setupAW
  3285                           
  3286                           ;nrf24l01.c: 371: setupAW.AW = 0b11;
  3287  01C5  3003               	movlw	3
  3288  01C6  04A5               	iorwf	nrf24l01InitRegisters@setupAW,f
  3289                           
  3290                           ;nrf24l01.c: 372: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3291  01C7  0825               	movf	nrf24l01InitRegisters@setupAW,w
  3292  01C8  00A4               	movwf	??_nrf24l01InitRegisters
  3293  01C9  0824               	movf	??_nrf24l01InitRegisters,w
  3294  01CA  00A1               	movwf	nrf24l01Send@data
  3295  01CB  3022               	movlw	34
  3296  01CC  3185  25BF  3181   	fcall	_nrf24l01Send
  3297                           
  3298                           ;nrf24l01.c: 380: n_RF_SETUP_t rfSetup;;nrf24l01.c: 381: rfSetup.RF_DR_LOW = 0;
  3299  01CF  0020               	movlb	0	; select bank0
  3300  01D0  12A6               	bcf	nrf24l01InitRegisters@rfSetup,5
  3301                           
  3302                           ;nrf24l01.c: 382: rfSetup.RF_DR_HIGH = 1;
  3303  01D1  15A6               	bsf	nrf24l01InitRegisters@rfSetup,3
  3304                           
  3305                           ;nrf24l01.c: 383: rfSetup.RF_PWR = 3;
  3306  01D2  3006               	movlw	6
  3307  01D3  04A6               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3308                           
  3309                           ;nrf24l01.c: 384: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3310  01D4  0826               	movf	nrf24l01InitRegisters@rfSetup,w
  3311  01D5  00A4               	movwf	??_nrf24l01InitRegisters
  3312  01D6  0824               	movf	??_nrf24l01InitRegisters,w
  3313  01D7  00A1               	movwf	nrf24l01Send@data
  3314  01D8  3026               	movlw	38
  3315  01D9  3185  25BF  3181   	fcall	_nrf24l01Send
  3316                           
  3317                           ;nrf24l01.c: 387: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 388: enRXAddr.ERX_P0 = 1;
  3318  01DC  0020               	movlb	0	; select bank0
  3319  01DD  1429               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3320                           
  3321                           ;nrf24l01.c: 389: enRXAddr.ERX_P1 = 1;
  3322  01DE  14A9               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3323                           
  3324                           ;nrf24l01.c: 390: enRXAddr.ERX_P2 = 1;
  3325  01DF  1529               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3326                           
  3327                           ;nrf24l01.c: 391: enRXAddr.ERX_P3 = 1;
  3328  01E0  15A9               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3329                           
  3330                           ;nrf24l01.c: 392: enRXAddr.ERX_P4 = 1;
  3331  01E1  1629               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3332                           
  3333                           ;nrf24l01.c: 393: enRXAddr.ERX_P5 = 1;
  3334  01E2  16A9               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3335                           
  3336                           ;nrf24l01.c: 394: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3337  01E3  0829               	movf	nrf24l01InitRegisters@enRXAddr,w
  3338  01E4  00A4               	movwf	??_nrf24l01InitRegisters
  3339  01E5  0824               	movf	??_nrf24l01InitRegisters,w
  3340  01E6  00A1               	movwf	nrf24l01Send@data
  3341  01E7  3022               	movlw	34
  3342  01E8  3185  25BF  3181   	fcall	_nrf24l01Send
  3343                           
  3344                           ;nrf24l01.c: 397: n_EN_AA_t enAA;;nrf24l01.c: 398: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3345  01EB  0020               	movlb	0	; select bank0
  3346  01EC  01A1               	clrf	nrf24l01Send@data
  3347  01ED  3001               	movlw	1
  3348  01EE  3185  25BF  3181   	fcall	_nrf24l01Send
  3349  01F1  0020               	movlb	0	; select bank0
  3350  01F2  00A4               	movwf	??_nrf24l01InitRegisters
  3351  01F3  0824               	movf	??_nrf24l01InitRegisters,w
  3352  01F4  00AA               	movwf	nrf24l01InitRegisters@enAA
  3353                           
  3354                           ;nrf24l01.c: 399: enAA.ENAA_P0 = 0;
  3355  01F5  102A               	bcf	nrf24l01InitRegisters@enAA,0
  3356                           
  3357                           ;nrf24l01.c: 400: enAA.ENAA_P1 = 0;
  3358  01F6  10AA               	bcf	nrf24l01InitRegisters@enAA,1
  3359                           
  3360                           ;nrf24l01.c: 401: enAA.ENAA_P2 = 0;
  3361  01F7  112A               	bcf	nrf24l01InitRegisters@enAA,2
  3362                           
  3363                           ;nrf24l01.c: 402: enAA.ENAA_P3 = 0;
  3364  01F8  11AA               	bcf	nrf24l01InitRegisters@enAA,3
  3365                           
  3366                           ;nrf24l01.c: 403: enAA.ENAA_P4 = 0;
  3367  01F9  122A               	bcf	nrf24l01InitRegisters@enAA,4
  3368                           
  3369                           ;nrf24l01.c: 404: enAA.ENAA_P5 = 0;
  3370  01FA  12AA               	bcf	nrf24l01InitRegisters@enAA,5
  3371                           
  3372                           ;nrf24l01.c: 405: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3373  01FB  082A               	movf	nrf24l01InitRegisters@enAA,w
  3374  01FC  00A4               	movwf	??_nrf24l01InitRegisters
  3375  01FD  0824               	movf	??_nrf24l01InitRegisters,w
  3376  01FE  00A1               	movwf	nrf24l01Send@data
  3377  01FF  3021               	movlw	33
  3378  0200  3185  25BF  3181   	fcall	_nrf24l01Send
  3379                           
  3380                           ;nrf24l01.c: 409: n_FEATURE_t feature;;nrf24l01.c: 410: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3381  0203  0020               	movlb	0	; select bank0
  3382  0204  01A1               	clrf	nrf24l01Send@data
  3383  0205  301D               	movlw	29
  3384  0206  3185  25BF  3181   	fcall	_nrf24l01Send
  3385  0209  0020               	movlb	0	; select bank0
  3386  020A  00A4               	movwf	??_nrf24l01InitRegisters
  3387  020B  0824               	movf	??_nrf24l01InitRegisters,w
  3388  020C  00A7               	movwf	nrf24l01InitRegisters@feature
  3389                           
  3390                           ;nrf24l01.c: 411: feature.EN_DPL = 1;
  3391  020D  1527               	bsf	nrf24l01InitRegisters@feature,2
  3392                           
  3393                           ;nrf24l01.c: 412: feature.EN_DYN_ACK = 1;
  3394  020E  1427               	bsf	nrf24l01InitRegisters@feature,0
  3395                           
  3396                           ;nrf24l01.c: 413: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3397  020F  0827               	movf	nrf24l01InitRegisters@feature,w
  3398  0210  00A4               	movwf	??_nrf24l01InitRegisters
  3399  0211  0824               	movf	??_nrf24l01InitRegisters,w
  3400  0212  00A1               	movwf	nrf24l01Send@data
  3401  0213  303D               	movlw	61
  3402  0214  3185  25BF  3181   	fcall	_nrf24l01Send
  3403                           
  3404                           ;nrf24l01.c: 415: n_DYNPD_t DynPD;;nrf24l01.c: 416: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3405  0217  0020               	movlb	0	; select bank0
  3406  0218  01A1               	clrf	nrf24l01Send@data
  3407  0219  301C               	movlw	28
  3408  021A  3185  25BF  3181   	fcall	_nrf24l01Send
  3409  021D  0020               	movlb	0	; select bank0
  3410  021E  00A4               	movwf	??_nrf24l01InitRegisters
  3411  021F  0824               	movf	??_nrf24l01InitRegisters,w
  3412  0220  00AB               	movwf	nrf24l01InitRegisters@DynPD
  3413                           
  3414                           ;nrf24l01.c: 417: DynPD.DPL_P0 = 1;
  3415  0221  142B               	bsf	nrf24l01InitRegisters@DynPD,0
  3416                           
  3417                           ;nrf24l01.c: 418: DynPD.DPL_P1 = 1;
  3418  0222  14AB               	bsf	nrf24l01InitRegisters@DynPD,1
  3419                           
  3420                           ;nrf24l01.c: 419: DynPD.DPL_P2 = 1;
  3421  0223  152B               	bsf	nrf24l01InitRegisters@DynPD,2
  3422                           
  3423                           ;nrf24l01.c: 420: DynPD.DPL_P3 = 1;
  3424  0224  15AB               	bsf	nrf24l01InitRegisters@DynPD,3
  3425                           
  3426                           ;nrf24l01.c: 421: DynPD.DPL_P4 = 1;
  3427  0225  162B               	bsf	nrf24l01InitRegisters@DynPD,4
  3428                           
  3429                           ;nrf24l01.c: 422: DynPD.DPL_P5 = 1;
  3430  0226  16AB               	bsf	nrf24l01InitRegisters@DynPD,5
  3431                           
  3432                           ;nrf24l01.c: 423: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3433  0227  082B               	movf	nrf24l01InitRegisters@DynPD,w
  3434  0228  00A4               	movwf	??_nrf24l01InitRegisters
  3435  0229  0824               	movf	??_nrf24l01InitRegisters,w
  3436  022A  00A1               	movwf	nrf24l01Send@data
  3437  022B  303C               	movlw	60
  3438  022C  3185  25BF  3181   	fcall	_nrf24l01Send
  3439                           
  3440                           ;nrf24l01.c: 426: n_STATUS_t status;;nrf24l01.c: 427: status.byte = 0x00;
  3441  022F  0020               	movlb	0	; select bank0
  3442  0230  01A8               	clrf	nrf24l01InitRegisters@status
  3443                           
  3444                           ;nrf24l01.c: 428: status.RX_DR = 1;
  3445  0231  1728               	bsf	nrf24l01InitRegisters@status,6
  3446                           
  3447                           ;nrf24l01.c: 429: status.TX_DS = 1;
  3448  0232  16A8               	bsf	nrf24l01InitRegisters@status,5
  3449                           
  3450                           ;nrf24l01.c: 430: status.MAX_RT = 1;
  3451  0233  1628               	bsf	nrf24l01InitRegisters@status,4
  3452                           
  3453                           ;nrf24l01.c: 431: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3454  0234  0828               	movf	nrf24l01InitRegisters@status,w
  3455  0235  00A4               	movwf	??_nrf24l01InitRegisters
  3456  0236  0824               	movf	??_nrf24l01InitRegisters,w
  3457  0237  00A1               	movwf	nrf24l01Send@data
  3458  0238  3027               	movlw	39
  3459  0239  3185  25BF  3181   	fcall	_nrf24l01Send
  3460                           
  3461                           ;nrf24l01.c: 434: nrf24l01Send(0b11100001, 0);
  3462  023C  0020               	movlb	0	; select bank0
  3463  023D  01A1               	clrf	nrf24l01Send@data
  3464  023E  30E1               	movlw	225
  3465  023F  3185  25BF  3181   	fcall	_nrf24l01Send
  3466                           
  3467                           ;nrf24l01.c: 435: nrf24l01Send(0b11100010, 0);
  3468  0242  0020               	movlb	0	; select bank0
  3469  0243  01A1               	clrf	nrf24l01Send@data
  3470  0244  30E2               	movlw	226
  3471  0245  3185  25BF  3181   	fcall	_nrf24l01Send
  3472                           
  3473                           ;nrf24l01.c: 438: config.PRIM_RX = 1;
  3474  0248  0020               	movlb	0	; select bank0
  3475  0249  142C               	bsf	nrf24l01InitRegisters@config,0
  3476                           
  3477                           ;nrf24l01.c: 439: config.EN_CRC = 1;
  3478  024A  15AC               	bsf	nrf24l01InitRegisters@config,3
  3479                           
  3480                           ;nrf24l01.c: 440: config.CRCO = 1;
  3481  024B  152C               	bsf	nrf24l01InitRegisters@config,2
  3482                           
  3483                           ;nrf24l01.c: 441: config.PWR_UP = 1;
  3484  024C  14AC               	bsf	nrf24l01InitRegisters@config,1
  3485                           
  3486                           ;nrf24l01.c: 442: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3487  024D  082C               	movf	nrf24l01InitRegisters@config,w
  3488  024E  00A4               	movwf	??_nrf24l01InitRegisters
  3489  024F  0824               	movf	??_nrf24l01InitRegisters,w
  3490  0250  00A1               	movwf	nrf24l01Send@data
  3491  0251  3020               	movlw	32
  3492  0252  3185  25BF         	fcall	_nrf24l01Send
  3493  0254  0008               	return
  3494  0255                     __end_of_nrf24l01InitRegisters:	
  3495                           
  3496                           	psect	text4
  3497  002C                     __ptext4:	
  3498 ;; *************** function _loop *****************
  3499 ;; Defined at:
  3500 ;;		line 71 in file "main.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:   11
  3521 ;; This function calls:
  3522 ;;		_getADCValue
  3523 ;;		_nrf24l01SendString
  3524 ;;		_sleep
  3525 ;;		_strcpy
  3526 ;;		_utoa
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _loop
  3534  002C                     _loop:	
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3538  002C  0064               	clrwdt	;# 
  3539                           
  3540                           ;main.c: 76: strcpy(nrf24l01TXTopic, "DBG");
  3541  002D  30B3               	movlw	low (STR_1| (0+32768))
  3542  002E  0020               	movlb	0	; select bank0
  3543  002F  00A1               	movwf	strcpy@from
  3544  0030  3086               	movlw	high (STR_1| (0+32768))
  3545  0031  00A2               	movwf	strcpy@from+1
  3546  0032  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3547  0033  3185  25FD  3180   	fcall	_strcpy
  3548                           
  3549                           ;main.c: 77: utoa(nrf24l01TXValue, counter, 10);
  3550  0036  0020               	movlb	0	; select bank0
  3551  0037  0848               	movf	_counter+1,w
  3552  0038  00BE               	movwf	utoa@val+1
  3553  0039  0847               	movf	_counter,w
  3554  003A  00BD               	movwf	utoa@val
  3555  003B  300A               	movlw	10
  3556  003C  00BF               	movwf	utoa@base
  3557  003D  3000               	movlw	0
  3558  003E  00C0               	movwf	utoa@base+1
  3559  003F  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3560  0040  3183  235D  3180   	fcall	_utoa
  3561                           
  3562                           ;main.c: 78: counter = 0;
  3563  0043  0020               	movlb	0	; select bank0
  3564  0044  01C7               	clrf	_counter
  3565  0045  01C8               	clrf	_counter+1
  3566                           
  3567                           ;main.c: 79: nrf24l01TXPacketData.byte = 0x00;
  3568  0046  01CC               	clrf	_nrf24l01TXPacketData
  3569                           
  3570                           ;main.c: 80: nrf24l01TXPacketData.ACKRequest = 0;
  3571  0047  104C               	bcf	_nrf24l01TXPacketData,0
  3572                           
  3573                           ;main.c: 81: nrf24l01SendString();
  3574  0048  3181  2100  3180   	fcall	_nrf24l01SendString
  3575                           
  3576                           ;main.c: 82: sleep();
  3577  004B  3186  266D  3180   	fcall	_sleep
  3578                           
  3579                           ;main.c: 84: strcpy(nrf24l01TXTopic, "ADC3");
  3580  004E  30A4               	movlw	low (STR_2| (0+32768))
  3581  004F  0020               	movlb	0	; select bank0
  3582  0050  00A1               	movwf	strcpy@from
  3583  0051  3086               	movlw	high (STR_2| (0+32768))
  3584  0052  00A2               	movwf	strcpy@from+1
  3585  0053  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3586  0054  3185  25FD  3180   	fcall	_strcpy
  3587                           
  3588                           ;main.c: 85: utoa(nrf24l01TXValue, getADCValue(3, 2505), 10);
  3589  0057  3000               	movlw	0
  3590  0058  0020               	movlb	0	; select bank0
  3591  0059  00B2               	movwf	getADCValue@divider+3
  3592  005A  3000               	movlw	0
  3593  005B  00B1               	movwf	getADCValue@divider+2
  3594  005C  3009               	movlw	9
  3595  005D  00B0               	movwf	getADCValue@divider+1
  3596  005E  30C9               	movlw	201
  3597  005F  00AF               	movwf	getADCValue@divider
  3598  0060  3003               	movlw	3
  3599  0061  3182  2255  3180   	fcall	_getADCValue
  3600  0064  0020               	movlb	0	; select bank0
  3601  0065  0830               	movf	?_getADCValue+1,w
  3602  0066  00BE               	movwf	utoa@val+1
  3603  0067  082F               	movf	?_getADCValue,w
  3604  0068  00BD               	movwf	utoa@val
  3605  0069  300A               	movlw	10
  3606  006A  00BF               	movwf	utoa@base
  3607  006B  3000               	movlw	0
  3608  006C  00C0               	movwf	utoa@base+1
  3609  006D  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3610  006E  3183  235D  3180   	fcall	_utoa
  3611                           
  3612                           ;main.c: 86: nrf24l01TXPacketData.byte = 0x00;
  3613  0071  0020               	movlb	0	; select bank0
  3614  0072  01CC               	clrf	_nrf24l01TXPacketData
  3615                           
  3616                           ;main.c: 87: nrf24l01TXPacketData.ACKRequest = 0;
  3617  0073  104C               	bcf	_nrf24l01TXPacketData,0
  3618                           
  3619                           ;main.c: 88: nrf24l01SendString();
  3620  0074  3181  2100  3180   	fcall	_nrf24l01SendString
  3621                           
  3622                           ;main.c: 89: sleep();
  3623  0077  3186  266D  3180   	fcall	_sleep
  3624                           
  3625                           ;main.c: 91: strcpy(nrf24l01TXTopic, "ADC7");
  3626  007A  30A9               	movlw	low (STR_3| (0+32768))
  3627  007B  0020               	movlb	0	; select bank0
  3628  007C  00A1               	movwf	strcpy@from
  3629  007D  3086               	movlw	high (STR_3| (0+32768))
  3630  007E  00A2               	movwf	strcpy@from+1
  3631  007F  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3632  0080  3185  25FD  3180   	fcall	_strcpy
  3633                           
  3634                           ;main.c: 92: utoa(nrf24l01TXValue, getADCValue(7, 2500), 10);
  3635  0083  3000               	movlw	0
  3636  0084  0020               	movlb	0	; select bank0
  3637  0085  00B2               	movwf	getADCValue@divider+3
  3638  0086  3000               	movlw	0
  3639  0087  00B1               	movwf	getADCValue@divider+2
  3640  0088  3009               	movlw	9
  3641  0089  00B0               	movwf	getADCValue@divider+1
  3642  008A  30C4               	movlw	196
  3643  008B  00AF               	movwf	getADCValue@divider
  3644  008C  3007               	movlw	7
  3645  008D  3182  2255  3180   	fcall	_getADCValue
  3646  0090  0020               	movlb	0	; select bank0
  3647  0091  0830               	movf	?_getADCValue+1,w
  3648  0092  00BE               	movwf	utoa@val+1
  3649  0093  082F               	movf	?_getADCValue,w
  3650  0094  00BD               	movwf	utoa@val
  3651  0095  300A               	movlw	10
  3652  0096  00BF               	movwf	utoa@base
  3653  0097  3000               	movlw	0
  3654  0098  00C0               	movwf	utoa@base+1
  3655  0099  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3656  009A  3183  235D  3180   	fcall	_utoa
  3657                           
  3658                           ;main.c: 93: nrf24l01TXPacketData.byte = 0x00;
  3659  009D  0020               	movlb	0	; select bank0
  3660  009E  01CC               	clrf	_nrf24l01TXPacketData
  3661                           
  3662                           ;main.c: 94: nrf24l01TXPacketData.ACKRequest = 0;
  3663  009F  104C               	bcf	_nrf24l01TXPacketData,0
  3664                           
  3665                           ;main.c: 95: nrf24l01SendString();
  3666  00A0  3181  2100  3180   	fcall	_nrf24l01SendString
  3667                           
  3668                           ;main.c: 96: sleep();
  3669  00A3  3186  266D  3180   	fcall	_sleep
  3670                           
  3671                           ;main.c: 98: strcpy(nrf24l01TXTopic, "ADC29");
  3672  00A6  3093               	movlw	low (STR_4| (0+32768))
  3673  00A7  0020               	movlb	0	; select bank0
  3674  00A8  00A1               	movwf	strcpy@from
  3675  00A9  3086               	movlw	high (STR_4| (0+32768))
  3676  00AA  00A2               	movwf	strcpy@from+1
  3677  00AB  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3678  00AC  3185  25FD  3180   	fcall	_strcpy
  3679                           
  3680                           ;main.c: 99: utoa(nrf24l01TXValue, getADCValue(29, 208900) - 40, 10);
  3681  00AF  3000               	movlw	0
  3682  00B0  0020               	movlb	0	; select bank0
  3683  00B1  00B2               	movwf	getADCValue@divider+3
  3684  00B2  3003               	movlw	3
  3685  00B3  00B1               	movwf	getADCValue@divider+2
  3686  00B4  3030               	movlw	48
  3687  00B5  00B0               	movwf	getADCValue@divider+1
  3688  00B6  3004               	movlw	4
  3689  00B7  00AF               	movwf	getADCValue@divider
  3690  00B8  301D               	movlw	29
  3691  00B9  3182  2255  3180   	fcall	_getADCValue
  3692  00BC  0020               	movlb	0	; select bank0
  3693  00BD  082F               	movf	?_getADCValue,w
  3694  00BE  3ED8               	addlw	216
  3695  00BF  00BD               	movwf	utoa@val
  3696  00C0  30FF               	movlw	255
  3697  00C1  3D30               	addwfc	?_getADCValue+1,w
  3698  00C2  00BE               	movwf	utoa@val+1
  3699  00C3  300A               	movlw	10
  3700  00C4  00BF               	movwf	utoa@base
  3701  00C5  3000               	movlw	0
  3702  00C6  00C0               	movwf	utoa@base+1
  3703  00C7  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3704  00C8  3183  235D  3180   	fcall	_utoa
  3705                           
  3706                           ;main.c: 100: nrf24l01TXPacketData.byte = 0x00;
  3707  00CB  0020               	movlb	0	; select bank0
  3708  00CC  01CC               	clrf	_nrf24l01TXPacketData
  3709                           
  3710                           ;main.c: 101: nrf24l01TXPacketData.ACKRequest = 0;
  3711  00CD  104C               	bcf	_nrf24l01TXPacketData,0
  3712                           
  3713                           ;main.c: 102: nrf24l01SendString();
  3714  00CE  3181  2100  3180   	fcall	_nrf24l01SendString
  3715                           
  3716                           ;main.c: 103: sleep();
  3717  00D1  3186  266D  3180   	fcall	_sleep
  3718                           
  3719                           ;main.c: 105: strcpy(nrf24l01TXTopic, "ADC31");
  3720  00D4  308D               	movlw	low (STR_5| (0+32768))
  3721  00D5  0020               	movlb	0	; select bank0
  3722  00D6  00A1               	movwf	strcpy@from
  3723  00D7  3086               	movlw	high (STR_5| (0+32768))
  3724  00D8  00A2               	movwf	strcpy@from+1
  3725  00D9  3065               	movlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  3726  00DA  3185  25FD  3180   	fcall	_strcpy
  3727                           
  3728                           ;main.c: 106: utoa(nrf24l01TXValue, getADCValue(31, 2475), 10);
  3729  00DD  3000               	movlw	0
  3730  00DE  0020               	movlb	0	; select bank0
  3731  00DF  00B2               	movwf	getADCValue@divider+3
  3732  00E0  3000               	movlw	0
  3733  00E1  00B1               	movwf	getADCValue@divider+2
  3734  00E2  3009               	movlw	9
  3735  00E3  00B0               	movwf	getADCValue@divider+1
  3736  00E4  30AB               	movlw	171
  3737  00E5  00AF               	movwf	getADCValue@divider
  3738  00E6  301F               	movlw	31
  3739  00E7  3182  2255  3180   	fcall	_getADCValue
  3740  00EA  0020               	movlb	0	; select bank0
  3741  00EB  0830               	movf	?_getADCValue+1,w
  3742  00EC  00BE               	movwf	utoa@val+1
  3743  00ED  082F               	movf	?_getADCValue,w
  3744  00EE  00BD               	movwf	utoa@val
  3745  00EF  300A               	movlw	10
  3746  00F0  00BF               	movwf	utoa@base
  3747  00F1  3000               	movlw	0
  3748  00F2  00C0               	movwf	utoa@base+1
  3749  00F3  305D               	movlw	(low (_nrf24l01TXValue| 0))& (0+255)
  3750  00F4  3183  235D  3180   	fcall	_utoa
  3751                           
  3752                           ;main.c: 107: nrf24l01TXPacketData.byte = 0x00;
  3753  00F7  0020               	movlb	0	; select bank0
  3754  00F8  01CC               	clrf	_nrf24l01TXPacketData
  3755                           
  3756                           ;main.c: 108: nrf24l01TXPacketData.ACKRequest = 0;
  3757  00F9  104C               	bcf	_nrf24l01TXPacketData,0
  3758                           
  3759                           ;main.c: 109: nrf24l01SendString();
  3760  00FA  3181  2100  3180   	fcall	_nrf24l01SendString
  3761                           
  3762                           ;main.c: 110: sleep();
  3763  00FD  3186  266D         	fcall	_sleep
  3764  00FF  0008               	return
  3765  0100                     __end_of_loop:	
  3766                           
  3767                           	psect	text5
  3768  035D                     __ptext5:	
  3769 ;; *************** function _utoa *****************
  3770 ;; Defined at:
  3771 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  buf             1    wreg     PTR unsigned char 
  3774 ;;		 -> nrf24l01TXValue(8), 
  3775 ;;  val             2   29[BANK0 ] unsigned int 
  3776 ;;  base            2   31[BANK0 ] int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  buf             1   37[BANK0 ] PTR unsigned char 
  3779 ;;		 -> nrf24l01TXValue(8), 
  3780 ;;  v               2   34[BANK0 ] unsigned int 
  3781 ;;  c               1   36[BANK0 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      PTR unsigned char 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;Total ram usage:        9 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    7
  3798 ;; This function calls:
  3799 ;;		___lwdiv
  3800 ;;		___lwmod
  3801 ;; This function is called by:
  3802 ;;		_loop
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _utoa
  3809  035D                     _utoa:	
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3813                           ;utoa@buf stored from wreg
  3814  035D  0020               	movlb	0	; select bank0
  3815  035E  00C5               	movwf	utoa@buf
  3816  035F  083E               	movf	utoa@val+1,w
  3817  0360  00C3               	movwf	utoa@v+1
  3818  0361  083D               	movf	utoa@val,w
  3819  0362  00C2               	movwf	utoa@v
  3820  0363                     l2681:	
  3821  0363  0840               	movf	utoa@base+1,w
  3822  0364  00A2               	movwf	___lwdiv@divisor+1
  3823  0365  083F               	movf	utoa@base,w
  3824  0366  00A1               	movwf	___lwdiv@divisor
  3825  0367  0843               	movf	utoa@v+1,w
  3826  0368  00A4               	movwf	___lwdiv@dividend+1
  3827  0369  0842               	movf	utoa@v,w
  3828  036A  00A3               	movwf	___lwdiv@dividend
  3829  036B  3184  2484  3183   	fcall	___lwdiv
  3830  036E  0020               	movlb	0	; select bank0
  3831  036F  0822               	movf	?___lwdiv+1,w
  3832  0370  00C3               	movwf	utoa@v+1
  3833  0371  0821               	movf	?___lwdiv,w
  3834  0372  00C2               	movwf	utoa@v
  3835  0373  3001               	movlw	1
  3836  0374  00C1               	movwf	??_utoa
  3837  0375  0841               	movf	??_utoa,w
  3838  0376  07C5               	addwf	utoa@buf,f
  3839  0377  0842               	movf	utoa@v,w
  3840  0378  0443               	iorwf	utoa@v+1,w
  3841  0379  1D03               	btfss	3,2
  3842  037A  2B63               	goto	l2681
  3843  037B  0845               	movf	utoa@buf,w
  3844  037C  0086               	movwf	6
  3845  037D  0187               	clrf	7
  3846  037E  0181               	clrf	1
  3847  037F  3001               	movlw	1
  3848  0380  02C5               	subwf	utoa@buf,f
  3849  0381                     l2691:	
  3850  0381  0840               	movf	utoa@base+1,w
  3851  0382  00A2               	movwf	___lwmod@divisor+1
  3852  0383  083F               	movf	utoa@base,w
  3853  0384  00A1               	movwf	___lwmod@divisor
  3854  0385  083E               	movf	utoa@val+1,w
  3855  0386  00A4               	movwf	___lwmod@dividend+1
  3856  0387  083D               	movf	utoa@val,w
  3857  0388  00A3               	movwf	___lwmod@dividend
  3858  0389  3185  2547  3183   	fcall	___lwmod
  3859  038C  0020               	movlb	0	; select bank0
  3860  038D  0821               	movf	?___lwmod,w
  3861  038E  00C1               	movwf	??_utoa
  3862  038F  0841               	movf	??_utoa,w
  3863  0390  00C4               	movwf	utoa@c
  3864  0391  0840               	movf	utoa@base+1,w
  3865  0392  00A2               	movwf	___lwdiv@divisor+1
  3866  0393  083F               	movf	utoa@base,w
  3867  0394  00A1               	movwf	___lwdiv@divisor
  3868  0395  083E               	movf	utoa@val+1,w
  3869  0396  00A4               	movwf	___lwdiv@dividend+1
  3870  0397  083D               	movf	utoa@val,w
  3871  0398  00A3               	movwf	___lwdiv@dividend
  3872  0399  3184  2484  3183   	fcall	___lwdiv
  3873  039C  0020               	movlb	0	; select bank0
  3874  039D  0822               	movf	?___lwdiv+1,w
  3875  039E  00BE               	movwf	utoa@val+1
  3876  039F  0821               	movf	?___lwdiv,w
  3877  03A0  00BD               	movwf	utoa@val
  3878  03A1  300A               	movlw	10
  3879  03A2  0244               	subwf	utoa@c,w
  3880  03A3  1C03               	skipc
  3881  03A4  2BA9               	goto	l883
  3882  03A5  3007               	movlw	7
  3883  03A6  00C1               	movwf	??_utoa
  3884  03A7  0841               	movf	??_utoa,w
  3885  03A8  07C4               	addwf	utoa@c,f
  3886  03A9                     l883:	
  3887  03A9  3030               	movlw	48
  3888  03AA  00C1               	movwf	??_utoa
  3889  03AB  0841               	movf	??_utoa,w
  3890  03AC  07C4               	addwf	utoa@c,f
  3891  03AD  0844               	movf	utoa@c,w
  3892  03AE  00C1               	movwf	??_utoa
  3893  03AF  0845               	movf	utoa@buf,w
  3894  03B0  0086               	movwf	6
  3895  03B1  0187               	clrf	7
  3896  03B2  0841               	movf	??_utoa,w
  3897  03B3  0081               	movwf	1
  3898  03B4  3001               	movlw	1
  3899  03B5  02C5               	subwf	utoa@buf,f
  3900  03B6  083D               	movf	utoa@val,w
  3901  03B7  043E               	iorwf	utoa@val+1,w
  3902  03B8  1D03               	btfss	3,2
  3903  03B9  2B81               	goto	l2691
  3904                           
  3905                           ;	Return value of _utoa is never used
  3906  03BA  3001               	movlw	1
  3907  03BB  00C1               	movwf	??_utoa
  3908  03BC  0841               	movf	??_utoa,w
  3909  03BD  07C5               	addwf	utoa@buf,f
  3910  03BE  0008               	return
  3911  03BF                     __end_of_utoa:	
  3912                           
  3913                           	psect	text6
  3914  0547                     __ptext6:	
  3915 ;; *************** function ___lwmod *****************
  3916 ;; Defined at:
  3917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  divisor         2    1[BANK0 ] unsigned int 
  3920 ;;  dividend        2    3[BANK0 ] unsigned int 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  counter         1    6[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    1[BANK0 ] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        6 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    6
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_utoa
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           
  3947                           ;psect for function ___lwmod
  3948  0547                     ___lwmod:	
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3952  0547  0020               	movlb	0	; select bank0
  3953  0548  0821               	movf	___lwmod@divisor,w
  3954  0549  0422               	iorwf	___lwmod@divisor+1,w
  3955  054A  1903               	btfsc	3,2
  3956  054B  2D6F               	goto	l1985
  3957  054C  01A6               	clrf	___lwmod@counter
  3958  054D  0AA6               	incf	___lwmod@counter,f
  3959  054E                     l1975:	
  3960  054E  1BA2               	btfsc	___lwmod@divisor+1,7
  3961  054F  2D5A               	goto	l1977
  3962  0550  3001               	movlw	1
  3963  0551                     u965:	
  3964  0551  35A1               	lslf	___lwmod@divisor,f
  3965  0552  0DA2               	rlf	___lwmod@divisor+1,f
  3966  0553  0B89               	decfsz	9,f
  3967  0554  2D51               	goto	u965
  3968  0555  3001               	movlw	1
  3969  0556  00A5               	movwf	??___lwmod
  3970  0557  0825               	movf	??___lwmod,w
  3971  0558  07A6               	addwf	___lwmod@counter,f
  3972  0559  2D4E               	goto	l1975
  3973  055A                     l1977:	
  3974  055A  0822               	movf	___lwmod@divisor+1,w
  3975  055B  0224               	subwf	___lwmod@dividend+1,w
  3976  055C  1D03               	skipz
  3977  055D  2D60               	goto	u985
  3978  055E  0821               	movf	___lwmod@divisor,w
  3979  055F  0223               	subwf	___lwmod@dividend,w
  3980  0560                     u985:	
  3981  0560  1C03               	skipc
  3982  0561  2D66               	goto	l1981
  3983  0562  0821               	movf	___lwmod@divisor,w
  3984  0563  02A3               	subwf	___lwmod@dividend,f
  3985  0564  0822               	movf	___lwmod@divisor+1,w
  3986  0565  3BA4               	subwfb	___lwmod@dividend+1,f
  3987  0566                     l1981:	
  3988  0566  3001               	movlw	1
  3989  0567                     u995:	
  3990  0567  36A2               	lsrf	___lwmod@divisor+1,f
  3991  0568  0CA1               	rrf	___lwmod@divisor,f
  3992  0569  0B89               	decfsz	9,f
  3993  056A  2D67               	goto	u995
  3994  056B  3001               	movlw	1
  3995  056C  02A6               	subwf	___lwmod@counter,f
  3996  056D  1D03               	btfss	3,2
  3997  056E  2D5A               	goto	l1977
  3998  056F                     l1985:	
  3999  056F  0824               	movf	___lwmod@dividend+1,w
  4000  0570  00A2               	movwf	?___lwmod+1
  4001  0571  0823               	movf	___lwmod@dividend,w
  4002  0572  00A1               	movwf	?___lwmod
  4003  0573  0008               	return
  4004  0574                     __end_of___lwmod:	
  4005                           
  4006                           	psect	text7
  4007  0484                     __ptext7:	
  4008 ;; *************** function ___lwdiv *****************
  4009 ;; Defined at:
  4010 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  divisor         2    1[BANK0 ] unsigned int 
  4013 ;;  dividend        2    3[BANK0 ] unsigned int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  quotient        2    6[BANK0 ] unsigned int 
  4016 ;;  counter         1    8[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    1[BANK0 ] unsigned int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        8 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    6
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_utoa
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function ___lwdiv
  4042  0484                     ___lwdiv:	
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4046  0484  0020               	movlb	0	; select bank0
  4047  0485  01A6               	clrf	___lwdiv@quotient
  4048  0486  01A7               	clrf	___lwdiv@quotient+1
  4049  0487  0821               	movf	___lwdiv@divisor,w
  4050  0488  0422               	iorwf	___lwdiv@divisor+1,w
  4051  0489  1903               	btfsc	3,2
  4052  048A  2CB4               	goto	l1963
  4053  048B  01A8               	clrf	___lwdiv@counter
  4054  048C  0AA8               	incf	___lwdiv@counter,f
  4055  048D                     l1951:	
  4056  048D  1BA2               	btfsc	___lwdiv@divisor+1,7
  4057  048E  2C99               	goto	l1953
  4058  048F  3001               	movlw	1
  4059  0490                     u895:	
  4060  0490  35A1               	lslf	___lwdiv@divisor,f
  4061  0491  0DA2               	rlf	___lwdiv@divisor+1,f
  4062  0492  0B89               	decfsz	9,f
  4063  0493  2C90               	goto	u895
  4064  0494  3001               	movlw	1
  4065  0495  00A5               	movwf	??___lwdiv
  4066  0496  0825               	movf	??___lwdiv,w
  4067  0497  07A8               	addwf	___lwdiv@counter,f
  4068  0498  2C8D               	goto	l1951
  4069  0499                     l1953:	
  4070  0499  3001               	movlw	1
  4071  049A                     u915:	
  4072  049A  35A6               	lslf	___lwdiv@quotient,f
  4073  049B  0DA7               	rlf	___lwdiv@quotient+1,f
  4074  049C  0B89               	decfsz	9,f
  4075  049D  2C9A               	goto	u915
  4076  049E  0822               	movf	___lwdiv@divisor+1,w
  4077  049F  0224               	subwf	___lwdiv@dividend+1,w
  4078  04A0  1D03               	skipz
  4079  04A1  2CA4               	goto	u925
  4080  04A2  0821               	movf	___lwdiv@divisor,w
  4081  04A3  0223               	subwf	___lwdiv@dividend,w
  4082  04A4                     u925:	
  4083  04A4  1C03               	skipc
  4084  04A5  2CAB               	goto	l1959
  4085  04A6  0821               	movf	___lwdiv@divisor,w
  4086  04A7  02A3               	subwf	___lwdiv@dividend,f
  4087  04A8  0822               	movf	___lwdiv@divisor+1,w
  4088  04A9  3BA4               	subwfb	___lwdiv@dividend+1,f
  4089  04AA  1426               	bsf	___lwdiv@quotient,0
  4090  04AB                     l1959:	
  4091  04AB  3001               	movlw	1
  4092  04AC                     u935:	
  4093  04AC  36A2               	lsrf	___lwdiv@divisor+1,f
  4094  04AD  0CA1               	rrf	___lwdiv@divisor,f
  4095  04AE  0B89               	decfsz	9,f
  4096  04AF  2CAC               	goto	u935
  4097  04B0  3001               	movlw	1
  4098  04B1  02A8               	subwf	___lwdiv@counter,f
  4099  04B2  1D03               	btfss	3,2
  4100  04B3  2C99               	goto	l1953
  4101  04B4                     l1963:	
  4102  04B4  0827               	movf	___lwdiv@quotient+1,w
  4103  04B5  00A2               	movwf	?___lwdiv+1
  4104  04B6  0826               	movf	___lwdiv@quotient,w
  4105  04B7  00A1               	movwf	?___lwdiv
  4106  04B8  0008               	return
  4107  04B9                     __end_of___lwdiv:	
  4108                           
  4109                           	psect	text8
  4110  05FD                     __ptext8:	
  4111 ;; *************** function _strcpy *****************
  4112 ;; Defined at:
  4113 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  to              1    wreg     PTR unsigned char 
  4116 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4117 ;;		 -> nrf24l01TXTopic(8), 
  4118 ;;  from            2    1[BANK0 ] PTR const unsigned char 
  4119 ;;		 -> STR_7(5), STR_6(14), nrf24l01TXName(16), STR_5(6), 
  4120 ;;		 -> STR_4(6), STR_3(5), STR_2(5), nrf24l01TXValue(8), 
  4121 ;;		 -> STR_1(4), nrf24l01TXTopic(8), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  to              1    5[BANK0 ] PTR unsigned char 
  4124 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4125 ;;		 -> nrf24l01TXTopic(8), 
  4126 ;;  cp              1    4[BANK0 ] PTR unsigned char 
  4127 ;;		 -> nrf24l01RXName(16), nrf24l01RXValue(8), nrf24l01RXTopic(8), nrf24l01TXName(16), 
  4128 ;;		 -> nrf24l01TXTopic(8), 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      PTR unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        5 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    6
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_loop
  4149 ;;		_main
  4150 ;;		_nrf24l01ReceiveString
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _strcpy
  4156  05FD                     _strcpy:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4160                           ;strcpy@to stored from wreg
  4161  05FD  0020               	movlb	0	; select bank0
  4162  05FE  00A5               	movwf	strcpy@to
  4163  05FF  0825               	movf	strcpy@to,w
  4164  0600  00A3               	movwf	??_strcpy
  4165  0601  0823               	movf	??_strcpy,w
  4166  0602  00A4               	movwf	strcpy@cp
  4167  0603                     l2677:	
  4168  0603  0824               	movf	strcpy@cp,w
  4169  0604  0086               	movwf	6
  4170  0605  0187               	clrf	7
  4171  0606  0821               	movf	strcpy@from,w
  4172  0607  0084               	movwf	4
  4173  0608  0822               	movf	strcpy@from+1,w
  4174  0609  0085               	movwf	5
  4175  060A  0800               	movf	0,w	;code access
  4176  060B  3FC0               	movwi [0]fsr1
  4177  060C  0889               	movf	9,f
  4178  060D  1903               	btfsc	3,2
  4179  060E  0008               	return
  4180  060F  3001               	movlw	1
  4181  0610  00A3               	movwf	??_strcpy
  4182  0611  0823               	movf	??_strcpy,w
  4183  0612  07A4               	addwf	strcpy@cp,f
  4184  0613  3001               	movlw	1
  4185  0614  07A1               	addwf	strcpy@from,f
  4186  0615  3000               	movlw	0
  4187  0616  3DA2               	addwfc	strcpy@from+1,f
  4188  0617  2E03               	goto	l2677
  4189  0618                     __end_of_strcpy:	
  4190                           ;	Return value of _strcpy is never used
  4191                           
  4192                           
  4193                           	psect	text9
  4194  066D                     __ptext9:	
  4195 ;; *************** function _sleep *****************
  4196 ;; Defined at:
  4197 ;;		line 46 in file "main.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		None
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    6
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_loop
  4222 ;;		_main
  4223 ;;		_checkRxData
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _sleep
  4229  066D                     _sleep:	
  4230  066D                     l215:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _sleep: []
  4233                           ;main.c: 47: while (1){
  4234                           
  4235  066D  0063               	sleep	;# 
  4236                           
  4237                           ;main.c: 50: __nop();
  4238  066E  0000               	nop
  4239                           
  4240                           ;main.c: 51: __nop();
  4241  066F  0000               	nop
  4242                           
  4243                           ;main.c: 53: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4244  0670  0020               	movlb	0	; select bank0
  4245  0671  1A03               	btfsc	3,4	;volatile
  4246  0672  2E6D               	goto	l215
  4247  0673  1D83               	btfss	3,3	;volatile
  4248  0674  0008               	return
  4249  0675  2E6D               	goto	l215
  4250  0676                     __end_of_sleep:	
  4251                           ;main.c: 54: return;
  4252                           
  4253                           
  4254                           	psect	text10
  4255  0100                     __ptext10:	
  4256 ;; *************** function _nrf24l01SendString *****************
  4257 ;; Defined at:
  4258 ;;		line 232 in file "nrf24l01.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  i               1    8[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   10
  4279 ;; This function calls:
  4280 ;;		_enableInterrupts
  4281 ;;		_nrf24l01CEHigh
  4282 ;;		_nrf24l01CELow
  4283 ;;		_nrf24l01SPIEnd
  4284 ;;		_nrf24l01SPISend
  4285 ;;		_nrf24l01SPIStart
  4286 ;;		_nrf24l01SetRXMode
  4287 ;; This function is called by:
  4288 ;;		_loop
  4289 ;;		_main
  4290 ;;		_nrf24l01ReceiveString
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _nrf24l01SendString
  4296  0100                     _nrf24l01SendString:	
  4297                           
  4298                           ;nrf24l01.c: 235: unsigned char i;;nrf24l01.c: 237: if (counter){
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _nrf24l01SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4302  0100  0020               	movlb	0	; select bank0
  4303  0101  0847               	movf	_counter,w
  4304  0102  0448               	iorwf	_counter+1,w
  4305  0103  1903               	btfsc	3,2
  4306  0104  2909               	goto	l334
  4307                           
  4308                           ;nrf24l01.c: 238: counter--;
  4309  0105  3001               	movlw	1
  4310  0106  02C7               	subwf	_counter,f
  4311  0107  3000               	movlw	0
  4312  0108  3BC8               	subwfb	_counter+1,f
  4313  0109                     l334:	
  4314                           ;nrf24l01.c: 239: };nrf24l01.c: 242: RESEND:
  4315                           
  4316                           
  4317                           ;nrf24l01.c: 245: i = 0xFF;
  4318  0109  30FF               	movlw	255
  4319  010A  00A7               	movwf	??_nrf24l01SendString
  4320  010B  0827               	movf	??_nrf24l01SendString,w
  4321  010C  00A8               	movwf	nrf24l01SendString@i
  4322  010D                     l2083:	
  4323                           ;nrf24l01.c: 246: while (nrf24l01.TXBusy){
  4324                           
  4325  010D  0020               	movlb	0	; select bank0
  4326  010E  1CCB               	btfss	_nrf24l01,1	;volatile
  4327  010F  2919               	goto	l338
  4328                           
  4329                           ;nrf24l01.c: 247: if (!--i) {
  4330  0110  3001               	movlw	1
  4331  0111  02A8               	subwf	nrf24l01SendString@i,f
  4332  0112  1903               	btfsc	3,2
  4333  0113  2909               	goto	l334
  4334                           
  4335                           ;nrf24l01.c: 249: };nrf24l01.c: 250: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4336                           
  4337                           ;nrf24l01.c: 248: goto RESEND;
  4338  0114  3042               	movlw	66
  4339  0115                     u1707:	
  4340  0115  0B89               	decfsz	9,f
  4341  0116  2915               	goto	u1707
  4342  0117  3200               	nop2
  4343  0118  290D               	goto	l2083
  4344  0119                     l338:	
  4345                           
  4346                           ;nrf24l01.c: 251: };nrf24l01.c: 254: nrf24l01.TXBusy = 1;
  4347  0119  14CB               	bsf	_nrf24l01,1	;volatile
  4348                           
  4349                           ;nrf24l01.c: 257: enableInterrupts(0);
  4350  011A  3000               	movlw	0
  4351  011B  3186  267E  3181   	fcall	_enableInterrupts
  4352                           
  4353                           ;nrf24l01.c: 260: nrf24l01SetRXMode(0);
  4354  011E  3000               	movlw	0
  4355  011F  3184  2412  3181   	fcall	_nrf24l01SetRXMode
  4356                           
  4357                           ;nrf24l01.c: 263: nrf24l01SPIStart();
  4358  0122  3186  2676  3181   	fcall	_nrf24l01SPIStart
  4359                           
  4360                           ;nrf24l01.c: 266: nrf24l01SPISend(0b10110000);
  4361  0125  30B0               	movlw	176
  4362  0126  3186  2654  3181   	fcall	_nrf24l01SPISend
  4363                           
  4364                           ;nrf24l01.c: 271: for (i = 0; (nrf24l01TXName[i] != '\0') && (i < sizeof(nrf24l01TXName)
      +                          ); i++){
  4365  0129  0020               	movlb	0	; select bank0
  4366  012A  01A8               	clrf	nrf24l01SendString@i
  4367  012B  2939               	goto	l2093
  4368  012C                     l2089:	
  4369                           
  4370                           ;nrf24l01.c: 272: nrf24l01SPISend(nrf24l01TXName[i]);
  4371  012C  0828               	movf	nrf24l01SendString@i,w
  4372  012D  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4373  012E  0086               	movwf	6
  4374  012F  0187               	clrf	7
  4375  0130  0801               	movf	1,w
  4376  0131  3186  2654  3181   	fcall	_nrf24l01SPISend
  4377  0134  3001               	movlw	1
  4378  0135  0020               	movlb	0	; select bank0
  4379  0136  00A7               	movwf	??_nrf24l01SendString
  4380  0137  0827               	movf	??_nrf24l01SendString,w
  4381  0138  07A8               	addwf	nrf24l01SendString@i,f
  4382  0139                     l2093:	
  4383  0139  0828               	movf	nrf24l01SendString@i,w
  4384  013A  3EC3               	addlw	(low (_nrf24l01TXName| 0))& (0+255)
  4385  013B  0086               	movwf	6
  4386  013C  0187               	clrf	7
  4387  013D  0801               	movf	1,w
  4388  013E  1903               	btfsc	3,2
  4389  013F  2944               	goto	l2097
  4390  0140  3010               	movlw	16
  4391  0141  0228               	subwf	nrf24l01SendString@i,w
  4392  0142  1C03               	skipc
  4393  0143  292C               	goto	l2089
  4394  0144                     l2097:	
  4395                           
  4396                           ;nrf24l01.c: 273: };nrf24l01.c: 276: nrf24l01SPISend('/');
  4397  0144  302F               	movlw	47
  4398  0145  3186  2654  3181   	fcall	_nrf24l01SPISend
  4399                           
  4400                           ;nrf24l01.c: 279: for (i = 0; (nrf24l01TXTopic[i] != '\0') && (i < sizeof(nrf24l01TXTopi
      +                          c)); i++){
  4401  0148  0020               	movlb	0	; select bank0
  4402  0149  01A8               	clrf	nrf24l01SendString@i
  4403  014A  2958               	goto	l2105
  4404  014B                     l2101:	
  4405                           
  4406                           ;nrf24l01.c: 280: nrf24l01SPISend(nrf24l01TXTopic[i]);
  4407  014B  0828               	movf	nrf24l01SendString@i,w
  4408  014C  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4409  014D  0086               	movwf	6
  4410  014E  0187               	clrf	7
  4411  014F  0801               	movf	1,w
  4412  0150  3186  2654  3181   	fcall	_nrf24l01SPISend
  4413  0153  3001               	movlw	1
  4414  0154  0020               	movlb	0	; select bank0
  4415  0155  00A7               	movwf	??_nrf24l01SendString
  4416  0156  0827               	movf	??_nrf24l01SendString,w
  4417  0157  07A8               	addwf	nrf24l01SendString@i,f
  4418  0158                     l2105:	
  4419  0158  0828               	movf	nrf24l01SendString@i,w
  4420  0159  3E65               	addlw	(low (_nrf24l01TXTopic| 0))& (0+255)
  4421  015A  0086               	movwf	6
  4422  015B  0187               	clrf	7
  4423  015C  0801               	movf	1,w
  4424  015D  1903               	btfsc	3,2
  4425  015E  2963               	goto	l2109
  4426  015F  3008               	movlw	8
  4427  0160  0228               	subwf	nrf24l01SendString@i,w
  4428  0161  1C03               	skipc
  4429  0162  294B               	goto	l2101
  4430  0163                     l2109:	
  4431                           
  4432                           ;nrf24l01.c: 281: };nrf24l01.c: 284: nrf24l01SPISend('/');
  4433  0163  302F               	movlw	47
  4434  0164  3186  2654  3181   	fcall	_nrf24l01SPISend
  4435                           
  4436                           ;nrf24l01.c: 287: for (i = 0; (nrf24l01TXValue[i] != '\0') && (i < sizeof(nrf24l01TXValu
      +                          e)); i++){
  4437  0167  0020               	movlb	0	; select bank0
  4438  0168  01A8               	clrf	nrf24l01SendString@i
  4439  0169  2977               	goto	l2117
  4440  016A                     l2113:	
  4441                           
  4442                           ;nrf24l01.c: 288: nrf24l01SPISend(nrf24l01TXValue[i]);
  4443  016A  0828               	movf	nrf24l01SendString@i,w
  4444  016B  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4445  016C  0086               	movwf	6
  4446  016D  0187               	clrf	7
  4447  016E  0801               	movf	1,w
  4448  016F  3186  2654  3181   	fcall	_nrf24l01SPISend
  4449  0172  3001               	movlw	1
  4450  0173  0020               	movlb	0	; select bank0
  4451  0174  00A7               	movwf	??_nrf24l01SendString
  4452  0175  0827               	movf	??_nrf24l01SendString,w
  4453  0176  07A8               	addwf	nrf24l01SendString@i,f
  4454  0177                     l2117:	
  4455  0177  0828               	movf	nrf24l01SendString@i,w
  4456  0178  3E5D               	addlw	(low (_nrf24l01TXValue| 0))& (0+255)
  4457  0179  0086               	movwf	6
  4458  017A  0187               	clrf	7
  4459  017B  0801               	movf	1,w
  4460  017C  1903               	btfsc	3,2
  4461  017D  2982               	goto	l2121
  4462  017E  3008               	movlw	8
  4463  017F  0228               	subwf	nrf24l01SendString@i,w
  4464  0180  1C03               	skipc
  4465  0181  296A               	goto	l2113
  4466  0182                     l2121:	
  4467                           
  4468                           ;nrf24l01.c: 289: };nrf24l01.c: 292: nrf24l01SPIEnd();
  4469  0182  3186  2686  3181   	fcall	_nrf24l01SPIEnd
  4470                           
  4471                           ;nrf24l01.c: 295: nrf24l01CEHigh();
  4472  0185  3186  26C0  3181   	fcall	_nrf24l01CEHigh
  4473                           
  4474                           ;nrf24l01.c: 296: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4475  0188  301A               	movlw	26
  4476  0189                     u1717:	
  4477  0189  0B89               	decfsz	9,f
  4478  018A  2989               	goto	u1717
  4479  018B  3200               	nop2
  4480                           
  4481                           ;nrf24l01.c: 297: nrf24l01CELow();
  4482  018C  3186  26BD  3181   	fcall	_nrf24l01CELow
  4483                           
  4484                           ;nrf24l01.c: 300: enableInterrupts(1);
  4485  018F  3001               	movlw	1
  4486  0190  3186  267E  3181   	fcall	_enableInterrupts
  4487                           
  4488                           ;nrf24l01.c: 303: i = 0xFF;
  4489  0193  30FF               	movlw	255
  4490  0194  0020               	movlb	0	; select bank0
  4491  0195  00A7               	movwf	??_nrf24l01SendString
  4492  0196  0827               	movf	??_nrf24l01SendString,w
  4493  0197  00A8               	movwf	nrf24l01SendString@i
  4494  0198                     l2135:	
  4495                           ;nrf24l01.c: 304: while (nrf24l01.TXBusy){
  4496                           
  4497  0198  0020               	movlb	0	; select bank0
  4498  0199  1CCB               	btfss	_nrf24l01,1	;volatile
  4499  019A  29A4               	goto	l2137
  4500                           
  4501                           ;nrf24l01.c: 305: if (!--i) {
  4502  019B  3001               	movlw	1
  4503  019C  02A8               	subwf	nrf24l01SendString@i,f
  4504  019D  1903               	btfsc	3,2
  4505  019E  2909               	goto	l334
  4506                           
  4507                           ;nrf24l01.c: 307: };nrf24l01.c: 308: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4508                           
  4509                           ;nrf24l01.c: 306: goto RESEND;
  4510  019F  3042               	movlw	66
  4511  01A0                     u1727:	
  4512  01A0  0B89               	decfsz	9,f
  4513  01A1  29A0               	goto	u1727
  4514  01A2  3200               	nop2
  4515  01A3  2998               	goto	l2135
  4516  01A4                     l2137:	
  4517                           
  4518                           ;nrf24l01.c: 309: };nrf24l01.c: 312: i = 0xFF;
  4519  01A4  30FF               	movlw	255
  4520  01A5  00A7               	movwf	??_nrf24l01SendString
  4521  01A6  0827               	movf	??_nrf24l01SendString,w
  4522  01A7  00A8               	movwf	nrf24l01SendString@i
  4523  01A8                     l2145:	
  4524                           ;nrf24l01.c: 313: while (nrf24l01TXPacketData.ACKRequest){
  4525                           
  4526  01A8  0020               	movlb	0	; select bank0
  4527  01A9  1C4C               	btfss	_nrf24l01TXPacketData,0
  4528  01AA  0008               	return
  4529                           
  4530                           ;nrf24l01.c: 314: if (!--i) {
  4531  01AB  3001               	movlw	1
  4532  01AC  02A8               	subwf	nrf24l01SendString@i,f
  4533  01AD  1D03               	btfss	3,2
  4534  01AE  29B4               	goto	l2143
  4535                           
  4536                           ;nrf24l01.c: 315: counter++;
  4537  01AF  3001               	movlw	1
  4538  01B0  07C7               	addwf	_counter,f
  4539  01B1  3000               	movlw	0
  4540  01B2  3DC8               	addwfc	_counter+1,f
  4541                           
  4542                           ;nrf24l01.c: 316: goto RESEND;
  4543  01B3  2909               	goto	l334
  4544  01B4                     l2143:	
  4545                           
  4546                           ;nrf24l01.c: 317: };nrf24l01.c: 318: _delay((unsigned long)((200)*(16000000/4000000.0)))
      +                          ;
  4547  01B4  30A0               	movlw	160
  4548  01B5                     u1737:	
  4549  01B5  3200               	nop2
  4550  01B6  0B89               	decfsz	9,f
  4551  01B7  29B5               	goto	u1737
  4552  01B8  29A8               	goto	l2145
  4553  01B9                     __end_of_nrf24l01SendString:	
  4554                           
  4555                           	psect	text11
  4556  0412                     __ptext11:	
  4557 ;; *************** function _nrf24l01SetRXMode *****************
  4558 ;; Defined at:
  4559 ;;		line 74 in file "nrf24l01.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  rxMode          1    wreg     unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  rxMode          1    6[BANK0 ] unsigned char 
  4564 ;;  config          1    5[BANK0 ] struct .
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;Total ram usage:        3 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    9
  4581 ;; This function calls:
  4582 ;;		_nrf24l01CEHigh
  4583 ;;		_nrf24l01CELow
  4584 ;;		_nrf24l01Send
  4585 ;; This function is called by:
  4586 ;;		_nrf24l01SendString
  4587 ;;		_checkRxData
  4588 ;;		_nrf24l01CheckACK
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _nrf24l01SetRXMode
  4594  0412                     _nrf24l01SetRXMode:	
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  4598                           ;nrf24l01SetRXMode@rxMode stored from wreg
  4599  0412  0020               	movlb	0	; select bank0
  4600  0413  00A6               	movwf	nrf24l01SetRXMode@rxMode
  4601                           
  4602                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  4603  0414  01A1               	clrf	nrf24l01Send@data
  4604  0415  3000               	movlw	0
  4605  0416  3185  25BF  3184   	fcall	_nrf24l01Send
  4606  0419  0020               	movlb	0	; select bank0
  4607  041A  00A4               	movwf	??_nrf24l01SetRXMode
  4608  041B  0824               	movf	??_nrf24l01SetRXMode,w
  4609  041C  00A5               	movwf	nrf24l01SetRXMode@config
  4610                           
  4611                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  4612  041D  0825               	movf	nrf24l01SetRXMode@config,w
  4613  041E  3901               	andlw	1
  4614  041F  0626               	xorwf	nrf24l01SetRXMode@rxMode,w
  4615  0420  1903               	skipnz
  4616  0421  2C46               	goto	l1901
  4617                           
  4618                           ;nrf24l01.c: 85: nrf24l01CELow();
  4619  0422  3186  26BD  3184   	fcall	_nrf24l01CELow
  4620                           
  4621                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4622  0425  30A0               	movlw	160
  4623  0426                     u1747:	
  4624  0426  3200               	nop2
  4625  0427  0B89               	decfsz	9,f
  4626  0428  2C26               	goto	u1747
  4627                           
  4628                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  4629  0429  0020               	movlb	0	; select bank0
  4630  042A  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4631  042B  3901               	andlw	1
  4632  042C  1025               	bcf	nrf24l01SetRXMode@config,0
  4633  042D  1D03               	skipz
  4634  042E  1425               	bsf	nrf24l01SetRXMode@config,0
  4635                           
  4636                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  4637  042F  0825               	movf	nrf24l01SetRXMode@config,w
  4638  0430  00A4               	movwf	??_nrf24l01SetRXMode
  4639  0431  0824               	movf	??_nrf24l01SetRXMode,w
  4640  0432  00A1               	movwf	nrf24l01Send@data
  4641  0433  3020               	movlw	32
  4642  0434  3185  25BF  3184   	fcall	_nrf24l01Send
  4643                           
  4644                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4645  0437  30A0               	movlw	160
  4646  0438                     u1757:	
  4647  0438  3200               	nop2
  4648  0439  0B89               	decfsz	9,f
  4649  043A  2C38               	goto	u1757
  4650                           
  4651                           ;nrf24l01.c: 100: if (rxMode){
  4652  043B  0020               	movlb	0	; select bank0
  4653  043C  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4654  043D  1903               	btfsc	3,2
  4655  043E  2C46               	goto	l1901
  4656                           
  4657                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  4658  043F  3186  26C0  3184   	fcall	_nrf24l01CEHigh
  4659                           
  4660                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4661  0442  30A0               	movlw	160
  4662  0443                     u1767:	
  4663  0443  3200               	nop2
  4664  0444  0B89               	decfsz	9,f
  4665  0445  2C43               	goto	u1767
  4666  0446                     l1901:	
  4667                           
  4668                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  4669  0446  0020               	movlb	0	; select bank0
  4670  0447  0826               	movf	nrf24l01SetRXMode@rxMode,w
  4671  0448  3901               	andlw	1
  4672  0449  11CB               	bcf	_nrf24l01,3	;volatile
  4673  044A  1D03               	skipz
  4674  044B  15CB               	bsf	_nrf24l01,3	;volatile
  4675  044C  0008               	return
  4676  044D                     __end_of_nrf24l01SetRXMode:	
  4677                           
  4678                           	psect	text12
  4679  05BF                     __ptext12:	
  4680 ;; *************** function _nrf24l01Send *****************
  4681 ;; Defined at:
  4682 ;;		line 19 in file "nrf24l01.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  command         1    wreg     unsigned char 
  4685 ;;  data            1    1[BANK0 ] unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  command         1    3[BANK0 ] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      unsigned char 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4697 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;Total ram usage:        3 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    8
  4704 ;; This function calls:
  4705 ;;		_enableInterrupts
  4706 ;;		_nrf24l01SPIEnd
  4707 ;;		_nrf24l01SPISend
  4708 ;;		_nrf24l01SPIStart
  4709 ;; This function is called by:
  4710 ;;		_nrf24l01SetRXMode
  4711 ;;		_nrf24l01InitRegisters
  4712 ;;		_nrf24l01ReceiveString
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _nrf24l01Send
  4718  05BF                     _nrf24l01Send:	
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  4722                           ;nrf24l01Send@command stored from wreg
  4723  05BF  0020               	movlb	0	; select bank0
  4724  05C0  00A3               	movwf	nrf24l01Send@command
  4725                           
  4726                           ;nrf24l01.c: 22: enableInterrupts(0);
  4727  05C1  3000               	movlw	0
  4728  05C2  3186  267E  3185   	fcall	_enableInterrupts
  4729                           
  4730                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  4731  05C5  3186  2676  3185   	fcall	_nrf24l01SPIStart
  4732                           
  4733                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  4734  05C8  0020               	movlb	0	; select bank0
  4735  05C9  0823               	movf	nrf24l01Send@command,w
  4736  05CA  3186  2654  3185   	fcall	_nrf24l01SPISend
  4737                           
  4738                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  4739  05CD  0020               	movlb	0	; select bank0
  4740  05CE  0821               	movf	nrf24l01Send@data,w
  4741  05CF  3186  2654  3185   	fcall	_nrf24l01SPISend
  4742  05D2  0020               	movlb	0	; select bank0
  4743  05D3  00A2               	movwf	??_nrf24l01Send
  4744  05D4  0822               	movf	??_nrf24l01Send,w
  4745  05D5  00A1               	movwf	nrf24l01Send@data
  4746                           
  4747                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  4748  05D6  3186  2686  3185   	fcall	_nrf24l01SPIEnd
  4749                           
  4750                           ;nrf24l01.c: 37: enableInterrupts(1);
  4751  05D9  3001               	movlw	1
  4752  05DA  3186  267E         	fcall	_enableInterrupts
  4753                           
  4754                           ;nrf24l01.c: 39: return data;
  4755  05DC  0020               	movlb	0	; select bank0
  4756  05DD  0821               	movf	nrf24l01Send@data,w
  4757  05DE  0008               	return
  4758  05DF                     __end_of_nrf24l01Send:	
  4759                           
  4760                           	psect	text13
  4761  0255                     __ptext13:	
  4762 ;; *************** function _getADCValue *****************
  4763 ;; Defined at:
  4764 ;;		line 21 in file "main.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  channel         1    wreg     unsigned char 
  4767 ;;  divider         4   15[BANK0 ] unsigned long 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  channel         1   23[BANK0 ] unsigned char 
  4770 ;;  adcSum          4   25[BANK0 ] unsigned long 
  4771 ;;  adcLoop         1   24[BANK0 ] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  4   15[BANK0 ] unsigned long 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:       14 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    7
  4788 ;; This function calls:
  4789 ;;		___lldiv
  4790 ;;		___lmul
  4791 ;; This function is called by:
  4792 ;;		_loop
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           
  4797                           ;psect for function _getADCValue
  4798  0255                     _getADCValue:	
  4799                           
  4800                           ;incstack = 0
  4801                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  4802                           ;getADCValue@channel stored from wreg
  4803  0255  0020               	movlb	0	; select bank0
  4804  0256  00B7               	movwf	getADCValue@channel
  4805                           
  4806                           ;main.c: 23: unsigned long adcSum = 0;
  4807  0257  3000               	movlw	0
  4808  0258  00BC               	movwf	getADCValue@adcSum+3
  4809  0259  3000               	movlw	0
  4810  025A  00BB               	movwf	getADCValue@adcSum+2
  4811  025B  3000               	movlw	0
  4812  025C  00BA               	movwf	getADCValue@adcSum+1
  4813  025D  3000               	movlw	0
  4814  025E  00B9               	movwf	getADCValue@adcSum
  4815                           
  4816                           ;main.c: 24: unsigned char adcLoop = 255;
  4817  025F  30FF               	movlw	255
  4818  0260  00B3               	movwf	??_getADCValue
  4819  0261  0833               	movf	??_getADCValue,w
  4820  0262  00B8               	movwf	getADCValue@adcLoop
  4821                           
  4822                           ;main.c: 26: ADCON0bits.CHS = channel;
  4823  0263  0837               	movf	getADCValue@channel,w
  4824  0264  00B3               	movwf	??_getADCValue
  4825  0265  0DB3               	rlf	??_getADCValue,f
  4826  0266  0DB3               	rlf	??_getADCValue,f
  4827  0267  0021               	movlb	1	; select bank1
  4828  0268  081D               	movf	29,w	;volatile
  4829  0269  0020               	movlb	0	; select bank0
  4830  026A  0633               	xorwf	??_getADCValue,w
  4831  026B  3903               	andlw	-253
  4832  026C  0633               	xorwf	??_getADCValue,w
  4833  026D  0021               	movlb	1	; select bank1
  4834  026E  009D               	movwf	29	;volatile
  4835                           
  4836                           ;main.c: 27: _delay((unsigned long)((200)*(16000000/4000000.0)));
  4837  026F  30A0               	movlw	160
  4838  0270                     u1777:	
  4839  0270  3200               	nop2
  4840  0271  0B89               	decfsz	9,f
  4841  0272  2A70               	goto	u1777
  4842  0273                     l2023:	
  4843                           ;main.c: 29: while (--adcLoop){
  4844                           
  4845  0273  3001               	movlw	1
  4846  0274  0020               	movlb	0	; select bank0
  4847  0275  02B8               	subwf	getADCValue@adcLoop,f
  4848  0276  1903               	btfsc	3,2
  4849  0277  2A9D               	goto	l2025
  4850                           
  4851                           ;main.c: 31: ADCON0bits.ADGO = 1;
  4852  0278  0021               	movlb	1	; select bank1
  4853  0279  149D               	bsf	29,1	;volatile
  4854  027A                     l208:	
  4855                           ;main.c: 32: while (ADCON0bits.ADGO){
  4856                           
  4857  027A  0021               	movlb	1	; select bank1
  4858  027B  1C9D               	btfss	29,1	;volatile
  4859  027C  2A7F               	goto	l2021
  4860                           
  4861                           ;main.c: 33: __nop();
  4862  027D  0000               	nop
  4863  027E  2A7A               	goto	l208
  4864  027F                     l2021:	
  4865                           
  4866                           ;main.c: 34: };main.c: 36: adcSum+= ADRESL;
  4867  027F  081B               	movf	27,w	;volatile
  4868  0280  0020               	movlb	0	; select bank0
  4869  0281  00B3               	movwf	??_getADCValue
  4870  0282  01B4               	clrf	??_getADCValue+1
  4871  0283  01B5               	clrf	??_getADCValue+2
  4872  0284  01B6               	clrf	??_getADCValue+3
  4873  0285  0833               	movf	??_getADCValue,w
  4874  0286  07B9               	addwf	getADCValue@adcSum,f
  4875  0287  0834               	movf	??_getADCValue+1,w
  4876  0288  3DBA               	addwfc	getADCValue@adcSum+1,f
  4877  0289  0835               	movf	??_getADCValue+2,w
  4878  028A  3DBB               	addwfc	getADCValue@adcSum+2,f
  4879  028B  0836               	movf	??_getADCValue+3,w
  4880  028C  3DBC               	addwfc	getADCValue@adcSum+3,f
  4881                           
  4882                           ;main.c: 37: adcSum+= (unsigned) (ADRESH << 8);
  4883  028D  0021               	movlb	1	; select bank1
  4884  028E  081C               	movf	28,w	;volatile
  4885  028F  0020               	movlb	0	; select bank0
  4886  0290  00B3               	movwf	??_getADCValue
  4887  0291  01B4               	clrf	??_getADCValue+1
  4888  0292  0833               	movf	??_getADCValue,w
  4889  0293  00B4               	movwf	??_getADCValue+1
  4890  0294  01B3               	clrf	??_getADCValue
  4891  0295  0833               	movf	??_getADCValue,w
  4892  0296  07B9               	addwf	getADCValue@adcSum,f
  4893  0297  0834               	movf	??_getADCValue+1,w
  4894  0298  3DBA               	addwfc	getADCValue@adcSum+1,f
  4895  0299  3000               	movlw	0
  4896  029A  3DBB               	addwfc	getADCValue@adcSum+2,f
  4897  029B  3DBC               	addwfc	getADCValue@adcSum+3,f
  4898  029C  2A73               	goto	l2023
  4899  029D                     l2025:	
  4900                           
  4901                           ;main.c: 38: };main.c: 40: adcSum*= 100;
  4902  029D  3000               	movlw	0
  4903  029E  00A4               	movwf	___lmul@multiplier+3
  4904  029F  3000               	movlw	0
  4905  02A0  00A3               	movwf	___lmul@multiplier+2
  4906  02A1  3000               	movlw	0
  4907  02A2  00A2               	movwf	___lmul@multiplier+1
  4908  02A3  3064               	movlw	100
  4909  02A4  00A1               	movwf	___lmul@multiplier
  4910  02A5  083C               	movf	getADCValue@adcSum+3,w
  4911  02A6  00A8               	movwf	___lmul@multiplicand+3
  4912  02A7  083B               	movf	getADCValue@adcSum+2,w
  4913  02A8  00A7               	movwf	___lmul@multiplicand+2
  4914  02A9  083A               	movf	getADCValue@adcSum+1,w
  4915  02AA  00A6               	movwf	___lmul@multiplicand+1
  4916  02AB  0839               	movf	getADCValue@adcSum,w
  4917  02AC  00A5               	movwf	___lmul@multiplicand
  4918  02AD  3184  24B9  3182   	fcall	___lmul
  4919  02B0  0020               	movlb	0	; select bank0
  4920  02B1  0824               	movf	?___lmul+3,w
  4921  02B2  00BC               	movwf	getADCValue@adcSum+3
  4922  02B3  0823               	movf	?___lmul+2,w
  4923  02B4  00BB               	movwf	getADCValue@adcSum+2
  4924  02B5  0822               	movf	?___lmul+1,w
  4925  02B6  00BA               	movwf	getADCValue@adcSum+1
  4926  02B7  0821               	movf	?___lmul,w
  4927  02B8  00B9               	movwf	getADCValue@adcSum
  4928                           
  4929                           ;main.c: 41: adcSum/= divider;
  4930  02B9  0832               	movf	getADCValue@divider+3,w
  4931  02BA  00A4               	movwf	___lldiv@divisor+3
  4932  02BB  0831               	movf	getADCValue@divider+2,w
  4933  02BC  00A3               	movwf	___lldiv@divisor+2
  4934  02BD  0830               	movf	getADCValue@divider+1,w
  4935  02BE  00A2               	movwf	___lldiv@divisor+1
  4936  02BF  082F               	movf	getADCValue@divider,w
  4937  02C0  00A1               	movwf	___lldiv@divisor
  4938  02C1  083C               	movf	getADCValue@adcSum+3,w
  4939  02C2  00A8               	movwf	___lldiv@dividend+3
  4940  02C3  083B               	movf	getADCValue@adcSum+2,w
  4941  02C4  00A7               	movwf	___lldiv@dividend+2
  4942  02C5  083A               	movf	getADCValue@adcSum+1,w
  4943  02C6  00A6               	movwf	___lldiv@dividend+1
  4944  02C7  0839               	movf	getADCValue@adcSum,w
  4945  02C8  00A5               	movwf	___lldiv@dividend
  4946  02C9  3183  23BF         	fcall	___lldiv
  4947  02CB  0020               	movlb	0	; select bank0
  4948  02CC  0824               	movf	?___lldiv+3,w
  4949  02CD  00BC               	movwf	getADCValue@adcSum+3
  4950  02CE  0823               	movf	?___lldiv+2,w
  4951  02CF  00BB               	movwf	getADCValue@adcSum+2
  4952  02D0  0822               	movf	?___lldiv+1,w
  4953  02D1  00BA               	movwf	getADCValue@adcSum+1
  4954  02D2  0821               	movf	?___lldiv,w
  4955  02D3  00B9               	movwf	getADCValue@adcSum
  4956                           
  4957                           ;main.c: 43: return adcSum;
  4958  02D4  083C               	movf	getADCValue@adcSum+3,w
  4959  02D5  00B2               	movwf	?_getADCValue+3
  4960  02D6  083B               	movf	getADCValue@adcSum+2,w
  4961  02D7  00B1               	movwf	?_getADCValue+2
  4962  02D8  083A               	movf	getADCValue@adcSum+1,w
  4963  02D9  00B0               	movwf	?_getADCValue+1
  4964  02DA  0839               	movf	getADCValue@adcSum,w
  4965  02DB  00AF               	movwf	?_getADCValue
  4966  02DC  0008               	return
  4967  02DD                     __end_of_getADCValue:	
  4968                           
  4969                           	psect	text14
  4970  04B9                     __ptext14:	
  4971 ;; *************** function ___lmul *****************
  4972 ;; Defined at:
  4973 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  multiplier      4    1[BANK0 ] unsigned long 
  4976 ;;  multiplicand    4    5[BANK0 ] unsigned long 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  product         4    9[BANK0 ] unsigned long 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  4    1[BANK0 ] unsigned long 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;Total ram usage:       12 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    6
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_getADCValue
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function ___lmul
  5004  04B9                     ___lmul:	
  5005                           
  5006                           ;incstack = 0
  5007                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5008  04B9  3000               	movlw	0
  5009  04BA  0020               	movlb	0	; select bank0
  5010  04BB  00AC               	movwf	___lmul@product+3
  5011  04BC  3000               	movlw	0
  5012  04BD  00AB               	movwf	___lmul@product+2
  5013  04BE  3000               	movlw	0
  5014  04BF  00AA               	movwf	___lmul@product+1
  5015  04C0  3000               	movlw	0
  5016  04C1  00A9               	movwf	___lmul@product
  5017  04C2                     l1905:	
  5018  04C2  1C21               	btfss	___lmul@multiplier,0
  5019  04C3  2CCC               	goto	l1909
  5020  04C4  0825               	movf	___lmul@multiplicand,w
  5021  04C5  07A9               	addwf	___lmul@product,f
  5022  04C6  0826               	movf	___lmul@multiplicand+1,w
  5023  04C7  3DAA               	addwfc	___lmul@product+1,f
  5024  04C8  0827               	movf	___lmul@multiplicand+2,w
  5025  04C9  3DAB               	addwfc	___lmul@product+2,f
  5026  04CA  0828               	movf	___lmul@multiplicand+3,w
  5027  04CB  3DAC               	addwfc	___lmul@product+3,f
  5028  04CC                     l1909:	
  5029  04CC  3001               	movlw	1
  5030  04CD                     u785:	
  5031  04CD  35A5               	lslf	___lmul@multiplicand,f
  5032  04CE  0DA6               	rlf	___lmul@multiplicand+1,f
  5033  04CF  0DA7               	rlf	___lmul@multiplicand+2,f
  5034  04D0  0DA8               	rlf	___lmul@multiplicand+3,f
  5035  04D1  0B89               	decfsz	9,f
  5036  04D2  2CCD               	goto	u785
  5037  04D3  3001               	movlw	1
  5038  04D4                     u795:	
  5039  04D4  36A4               	lsrf	___lmul@multiplier+3,f
  5040  04D5  0CA3               	rrf	___lmul@multiplier+2,f
  5041  04D6  0CA2               	rrf	___lmul@multiplier+1,f
  5042  04D7  0CA1               	rrf	___lmul@multiplier,f
  5043  04D8  0B89               	decfsz	9,f
  5044  04D9  2CD4               	goto	u795
  5045  04DA  0824               	movf	___lmul@multiplier+3,w
  5046  04DB  0423               	iorwf	___lmul@multiplier+2,w
  5047  04DC  0422               	iorwf	___lmul@multiplier+1,w
  5048  04DD  0421               	iorwf	___lmul@multiplier,w
  5049  04DE  1D03               	skipz
  5050  04DF  2CC2               	goto	l1905
  5051  04E0  082C               	movf	___lmul@product+3,w
  5052  04E1  00A4               	movwf	?___lmul+3
  5053  04E2  082B               	movf	___lmul@product+2,w
  5054  04E3  00A3               	movwf	?___lmul+2
  5055  04E4  082A               	movf	___lmul@product+1,w
  5056  04E5  00A2               	movwf	?___lmul+1
  5057  04E6  0829               	movf	___lmul@product,w
  5058  04E7  00A1               	movwf	?___lmul
  5059  04E8  0008               	return
  5060  04E9                     __end_of___lmul:	
  5061                           
  5062                           	psect	text15
  5063  03BF                     __ptext15:	
  5064 ;; *************** function ___lldiv *****************
  5065 ;; Defined at:
  5066 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  divisor         4    1[BANK0 ] unsigned long 
  5069 ;;  dividend        4    5[BANK0 ] unsigned long 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  quotient        4   10[BANK0 ] unsigned long 
  5072 ;;  counter         1   14[BANK0 ] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  4    1[BANK0 ] unsigned long 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5082 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;Total ram usage:       14 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    6
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_getADCValue
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function ___lldiv
  5098  03BF                     ___lldiv:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5102  03BF  3000               	movlw	0
  5103  03C0  0020               	movlb	0	; select bank0
  5104  03C1  00AD               	movwf	___lldiv@quotient+3
  5105  03C2  3000               	movlw	0
  5106  03C3  00AC               	movwf	___lldiv@quotient+2
  5107  03C4  3000               	movlw	0
  5108  03C5  00AB               	movwf	___lldiv@quotient+1
  5109  03C6  3000               	movlw	0
  5110  03C7  00AA               	movwf	___lldiv@quotient
  5111  03C8  0824               	movf	___lldiv@divisor+3,w
  5112  03C9  0423               	iorwf	___lldiv@divisor+2,w
  5113  03CA  0422               	iorwf	___lldiv@divisor+1,w
  5114  03CB  0421               	iorwf	___lldiv@divisor,w
  5115  03CC  1903               	skipnz
  5116  03CD  2C09               	goto	l1937
  5117  03CE  01AE               	clrf	___lldiv@counter
  5118  03CF  0AAE               	incf	___lldiv@counter,f
  5119  03D0                     l1923:	
  5120  03D0  1BA4               	btfsc	___lldiv@divisor+3,7
  5121  03D1  2BDE               	goto	l1925
  5122  03D2  3001               	movlw	1
  5123  03D3                     u825:	
  5124  03D3  35A1               	lslf	___lldiv@divisor,f
  5125  03D4  0DA2               	rlf	___lldiv@divisor+1,f
  5126  03D5  0DA3               	rlf	___lldiv@divisor+2,f
  5127  03D6  0DA4               	rlf	___lldiv@divisor+3,f
  5128  03D7  0B89               	decfsz	9,f
  5129  03D8  2BD3               	goto	u825
  5130  03D9  3001               	movlw	1
  5131  03DA  00A9               	movwf	??___lldiv
  5132  03DB  0829               	movf	??___lldiv,w
  5133  03DC  07AE               	addwf	___lldiv@counter,f
  5134  03DD  2BD0               	goto	l1923
  5135  03DE                     l1925:	
  5136  03DE  3001               	movlw	1
  5137  03DF                     u845:	
  5138  03DF  35AA               	lslf	___lldiv@quotient,f
  5139  03E0  0DAB               	rlf	___lldiv@quotient+1,f
  5140  03E1  0DAC               	rlf	___lldiv@quotient+2,f
  5141  03E2  0DAD               	rlf	___lldiv@quotient+3,f
  5142  03E3  0B89               	decfsz	9,f
  5143  03E4  2BDF               	goto	u845
  5144  03E5  0824               	movf	___lldiv@divisor+3,w
  5145  03E6  0228               	subwf	___lldiv@dividend+3,w
  5146  03E7  1D03               	skipz
  5147  03E8  2BF3               	goto	u855
  5148  03E9  0823               	movf	___lldiv@divisor+2,w
  5149  03EA  0227               	subwf	___lldiv@dividend+2,w
  5150  03EB  1D03               	skipz
  5151  03EC  2BF3               	goto	u855
  5152  03ED  0822               	movf	___lldiv@divisor+1,w
  5153  03EE  0226               	subwf	___lldiv@dividend+1,w
  5154  03EF  1D03               	skipz
  5155  03F0  2BF3               	goto	u855
  5156  03F1  0821               	movf	___lldiv@divisor,w
  5157  03F2  0225               	subwf	___lldiv@dividend,w
  5158  03F3                     u855:	
  5159  03F3  1C03               	skipc
  5160  03F4  2BFE               	goto	l1933
  5161  03F5  0821               	movf	___lldiv@divisor,w
  5162  03F6  02A5               	subwf	___lldiv@dividend,f
  5163  03F7  0822               	movf	___lldiv@divisor+1,w
  5164  03F8  3BA6               	subwfb	___lldiv@dividend+1,f
  5165  03F9  0823               	movf	___lldiv@divisor+2,w
  5166  03FA  3BA7               	subwfb	___lldiv@dividend+2,f
  5167  03FB  0824               	movf	___lldiv@divisor+3,w
  5168  03FC  3BA8               	subwfb	___lldiv@dividend+3,f
  5169  03FD  142A               	bsf	___lldiv@quotient,0
  5170  03FE                     l1933:	
  5171  03FE  3001               	movlw	1
  5172  03FF                     u865:	
  5173  03FF  36A4               	lsrf	___lldiv@divisor+3,f
  5174  0400  0CA3               	rrf	___lldiv@divisor+2,f
  5175  0401  0CA2               	rrf	___lldiv@divisor+1,f
  5176  0402  0CA1               	rrf	___lldiv@divisor,f
  5177  0403  0B89               	decfsz	9,f
  5178  0404  2BFF               	goto	u865
  5179  0405  3001               	movlw	1
  5180  0406  02AE               	subwf	___lldiv@counter,f
  5181  0407  1D03               	btfss	3,2
  5182  0408  2BDE               	goto	l1925
  5183  0409                     l1937:	
  5184  0409  082D               	movf	___lldiv@quotient+3,w
  5185  040A  00A4               	movwf	?___lldiv+3
  5186  040B  082C               	movf	___lldiv@quotient+2,w
  5187  040C  00A3               	movwf	?___lldiv+2
  5188  040D  082B               	movf	___lldiv@quotient+1,w
  5189  040E  00A2               	movwf	?___lldiv+1
  5190  040F  082A               	movf	___lldiv@quotient,w
  5191  0410  00A1               	movwf	?___lldiv
  5192  0411  0008               	return
  5193  0412                     __end_of___lldiv:	
  5194                           
  5195                           	psect	intentry
  5196  0004                     __pintentry:	
  5197 ;; *************** function _ISR *****************
  5198 ;; Defined at:
  5199 ;;		line 14 in file "main.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    5
  5220 ;; This function calls:
  5221 ;;		_nrf24l01ISR
  5222 ;; This function is called by:
  5223 ;;		Interrupt level 1
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227  0004                     _ISR:	
  5228                           
  5229                           ;incstack = 0
  5230  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5231                           
  5232                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5233  0005  3180               	pagesel	$
  5234                           
  5235                           ;main.c: 15: if (PIR0bits.INTF){
  5236  0006  0020               	movlb	0	; select bank0
  5237  0007  1C10               	btfss	16,0	;volatile
  5238  0008  280D               	goto	i1l203
  5239                           
  5240                           ;main.c: 16: nrf24l01ISR();
  5241  0009  3185  2519         	fcall	_nrf24l01ISR
  5242                           
  5243                           ;main.c: 17: PIR0bits.INTF = 0;
  5244  000B  0020               	movlb	0	; select bank0
  5245  000C  1010               	bcf	16,0	;volatile
  5246  000D                     i1l203:	
  5247  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5248  000E  0009               	retfie
  5249  000F                     __end_of_ISR:	
  5250                           
  5251                           	psect	text17
  5252  0519                     __ptext17:	
  5253 ;; *************** function _nrf24l01ISR *****************
  5254 ;; Defined at:
  5255 ;;		line 322 in file "nrf24l01.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  status          1    0[BANK0 ] struct .
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        2 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    4
  5276 ;; This function calls:
  5277 ;;		_exception
  5278 ;;		i1_nrf24l01Send
  5279 ;;		i1_nrf24l01SetRXMode
  5280 ;; This function is called by:
  5281 ;;		_ISR
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _nrf24l01ISR
  5287  0519                     _nrf24l01ISR:	
  5288                           
  5289                           ;nrf24l01.c: 324: n_STATUS_t status;;nrf24l01.c: 325: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _nrf24l01ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5293  0519  01F1               	clrf	i1nrf24l01Send@data
  5294  051A  3007               	movlw	7
  5295  051B  3186  2618  3185   	fcall	i1_nrf24l01Send
  5296  051E  00FD               	movwf	??_nrf24l01ISR
  5297  051F  087D               	movf	??_nrf24l01ISR,w
  5298  0520  0020               	movlb	0	; select bank0
  5299  0521  00A0               	movwf	nrf24l01ISR@status
  5300                           
  5301                           ;nrf24l01.c: 328: if (status.byte == 0x00){
  5302  0522  0820               	movf	nrf24l01ISR@status,w
  5303  0523  1D03               	btfss	3,2
  5304  0524  2D29               	goto	i1l2297
  5305                           
  5306                           ;nrf24l01.c: 329: exception(1);
  5307  0525  3001               	movlw	1
  5308  0526  3186  2661  3185   	fcall	_exception
  5309  0529                     i1l2297:	
  5310                           
  5311                           ;nrf24l01.c: 330: };nrf24l01.c: 333: if (status.byte == 0xFF){
  5312  0529  0020               	movlb	0	; select bank0
  5313  052A  0A20               	incf	nrf24l01ISR@status,w
  5314  052B  1D03               	btfss	3,2
  5315  052C  2D31               	goto	i1l2301
  5316                           
  5317                           ;nrf24l01.c: 334: exception(2);
  5318  052D  3002               	movlw	2
  5319  052E  3186  2661  3185   	fcall	_exception
  5320  0531                     i1l2301:	
  5321                           
  5322                           ;nrf24l01.c: 335: };nrf24l01.c: 337: if (status.TX_DS){
  5323  0531  0020               	movlb	0	; select bank0
  5324  0532  1EA0               	btfss	nrf24l01ISR@status,5
  5325  0533  2D3C               	goto	i1l2309
  5326                           
  5327                           ;nrf24l01.c: 340: nrf24l01.TXBusy = 0;
  5328  0534  10CB               	bcf	_nrf24l01,1	;volatile
  5329                           
  5330                           ;nrf24l01.c: 343: if (!nrf24l01.RXMode){
  5331  0535  1DCB               	btfss	_nrf24l01,3	;volatile
  5332                           
  5333                           ;nrf24l01.c: 344: if (nrf24l01TXPacketData.ACKRequest){
  5334  0536  1C4C               	btfss	_nrf24l01TXPacketData,0
  5335  0537  2D3C               	goto	i1l2309
  5336                           
  5337                           ;nrf24l01.c: 346: nrf24l01SetRXMode(1);
  5338  0538  3001               	movlw	1
  5339  0539  3184  244D  3185   	fcall	i1_nrf24l01SetRXMode
  5340  053C                     i1l2309:	
  5341                           
  5342                           ;nrf24l01.c: 347: };nrf24l01.c: 348: };nrf24l01.c: 349: };nrf24l01.c: 352: if (status.RX
      +                          _DR){
  5343  053C  0020               	movlb	0	; select bank0
  5344  053D  1B20               	btfsc	nrf24l01ISR@status,6
  5345                           
  5346                           ;nrf24l01.c: 354: nrf24l01.RXPending = 1;
  5347  053E  154B               	bsf	_nrf24l01,2	;volatile
  5348                           
  5349                           ;nrf24l01.c: 355: };nrf24l01.c: 358: nrf24l01Send(0b00100000 | 0x07, status.byte);
  5350  053F  0820               	movf	nrf24l01ISR@status,w
  5351  0540  00FD               	movwf	??_nrf24l01ISR
  5352  0541  087D               	movf	??_nrf24l01ISR,w
  5353  0542  00F1               	movwf	i1nrf24l01Send@data
  5354  0543  3027               	movlw	39
  5355  0544  3186  2618         	fcall	i1_nrf24l01Send
  5356  0546  0008               	return
  5357  0547                     __end_of_nrf24l01ISR:	
  5358                           
  5359                           	psect	text18
  5360  044D                     __ptext18:	
  5361 ;; *************** function i1_nrf24l01SetRXMode *****************
  5362 ;; Defined at:
  5363 ;;		line 74 in file "nrf24l01.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  rxMode          1    wreg     unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  rxMode          1    6[COMMON] unsigned char 
  5368 ;;  nrf24l01SetR    1    5[COMMON] struct .
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        3 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    3
  5385 ;; This function calls:
  5386 ;;		_nrf24l01CEHigh
  5387 ;;		_nrf24l01CELow
  5388 ;;		i1_nrf24l01Send
  5389 ;; This function is called by:
  5390 ;;		_nrf24l01ISR
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function i1_nrf24l01SetRXMode
  5396  044D                     i1_nrf24l01SetRXMode:	
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5400                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  5401  044D  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  5402                           
  5403                           ;nrf24l01.c: 76: n_CONFIG_t config;;nrf24l01.c: 79: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5404  044E  01F1               	clrf	i1nrf24l01Send@data
  5405  044F  3000               	movlw	0
  5406  0450  3186  2618  3184   	fcall	i1_nrf24l01Send
  5407  0453  00F4               	movwf	??i1_nrf24l01SetRXMode
  5408  0454  0874               	movf	??i1_nrf24l01SetRXMode,w
  5409  0455  00F5               	movwf	i1nrf24l01SetRXMode@config
  5410                           
  5411                           ;nrf24l01.c: 82: if (config.PRIM_RX != rxMode){
  5412  0456  0875               	movf	i1nrf24l01SetRXMode@config,w
  5413  0457  3901               	andlw	1
  5414  0458  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  5415  0459  1903               	skipnz
  5416  045A  2C7D               	goto	i1l2261
  5417                           
  5418                           ;nrf24l01.c: 85: nrf24l01CELow();
  5419  045B  3186  26BD  3184   	fcall	_nrf24l01CELow
  5420                           
  5421                           ;nrf24l01.c: 86: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5422  045E  30A0               	movlw	160
  5423  045F                     u178_27:	
  5424  045F  3200               	nop2
  5425  0460  0B89               	decfsz	9,f
  5426  0461  2C5F               	goto	u178_27
  5427                           
  5428                           ;nrf24l01.c: 93: config.PRIM_RX = rxMode;
  5429  0462  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5430  0463  3901               	andlw	1
  5431  0464  1075               	bcf	i1nrf24l01SetRXMode@config,0
  5432  0465  1D03               	skipz
  5433  0466  1475               	bsf	i1nrf24l01SetRXMode@config,0
  5434                           
  5435                           ;nrf24l01.c: 94: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5436  0467  0875               	movf	i1nrf24l01SetRXMode@config,w
  5437  0468  00F4               	movwf	??i1_nrf24l01SetRXMode
  5438  0469  0874               	movf	??i1_nrf24l01SetRXMode,w
  5439  046A  00F1               	movwf	i1nrf24l01Send@data
  5440  046B  3020               	movlw	32
  5441  046C  3186  2618  3184   	fcall	i1_nrf24l01Send
  5442                           
  5443                           ;nrf24l01.c: 97: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5444  046F  30A0               	movlw	160
  5445  0470                     u179_27:	
  5446  0470  3200               	nop2
  5447  0471  0B89               	decfsz	9,f
  5448  0472  2C70               	goto	u179_27
  5449                           
  5450                           ;nrf24l01.c: 100: if (rxMode){
  5451  0473  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5452  0474  1903               	btfsc	3,2
  5453  0475  2C7D               	goto	i1l2261
  5454                           
  5455                           ;nrf24l01.c: 101: nrf24l01CEHigh();
  5456  0476  3186  26C0  3184   	fcall	_nrf24l01CEHigh
  5457                           
  5458                           ;nrf24l01.c: 102: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5459  0479  30A0               	movlw	160
  5460  047A                     u180_27:	
  5461  047A  3200               	nop2
  5462  047B  0B89               	decfsz	9,f
  5463  047C  2C7A               	goto	u180_27
  5464  047D                     i1l2261:	
  5465                           
  5466                           ;nrf24l01.c: 103: };nrf24l01.c: 104: };nrf24l01.c: 107: nrf24l01.RXMode = rxMode;
  5467  047D  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  5468  047E  3901               	andlw	1
  5469  047F  0020               	movlb	0	; select bank0
  5470  0480  11CB               	bcf	_nrf24l01,3	;volatile
  5471  0481  1D03               	skipz
  5472  0482  15CB               	bsf	_nrf24l01,3	;volatile
  5473  0483  0008               	return
  5474  0484                     __end_ofi1_nrf24l01SetRXMode:	
  5475                           
  5476                           	psect	text19
  5477  0618                     __ptext19:	
  5478 ;; *************** function i1_nrf24l01Send *****************
  5479 ;; Defined at:
  5480 ;;		line 19 in file "nrf24l01.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  command         1    wreg     unsigned char 
  5483 ;;  data            1    1[COMMON] unsigned char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  command         1    3[COMMON] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      unsigned char 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:        3 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    2
  5502 ;; This function calls:
  5503 ;;		_enableInterrupts
  5504 ;;		_nrf24l01SPIEnd
  5505 ;;		_nrf24l01SPISend
  5506 ;;		_nrf24l01SPIStart
  5507 ;; This function is called by:
  5508 ;;		_nrf24l01ISR
  5509 ;;		i1_nrf24l01SetRXMode
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function i1_nrf24l01Send
  5515  0618                     i1_nrf24l01Send:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5519                           ;i1nrf24l01Send@command stored from wreg
  5520  0618  00F3               	movwf	i1nrf24l01Send@command
  5521                           
  5522                           ;nrf24l01.c: 22: enableInterrupts(0);
  5523  0619  3000               	movlw	0
  5524  061A  3186  267E  3186   	fcall	_enableInterrupts
  5525                           
  5526                           ;nrf24l01.c: 25: nrf24l01SPIStart();
  5527  061D  3186  2676  3186   	fcall	_nrf24l01SPIStart
  5528                           
  5529                           ;nrf24l01.c: 28: nrf24l01SPISend(command);
  5530  0620  0873               	movf	i1nrf24l01Send@command,w
  5531  0621  3186  2654  3186   	fcall	_nrf24l01SPISend
  5532                           
  5533                           ;nrf24l01.c: 31: data = nrf24l01SPISend(data);
  5534  0624  0871               	movf	i1nrf24l01Send@data,w
  5535  0625  3186  2654  3186   	fcall	_nrf24l01SPISend
  5536  0628  00F2               	movwf	??i1_nrf24l01Send
  5537  0629  0872               	movf	??i1_nrf24l01Send,w
  5538  062A  00F1               	movwf	i1nrf24l01Send@data
  5539                           
  5540                           ;nrf24l01.c: 34: nrf24l01SPIEnd();
  5541  062B  3186  2686  3186   	fcall	_nrf24l01SPIEnd
  5542                           
  5543                           ;nrf24l01.c: 37: enableInterrupts(1);
  5544  062E  3001               	movlw	1
  5545  062F  3186  267E         	fcall	_enableInterrupts
  5546                           
  5547                           ;nrf24l01.c: 39: return data;
  5548  0631  0871               	movf	i1nrf24l01Send@data,w
  5549  0632  0008               	return
  5550  0633                     __end_ofi1_nrf24l01Send:	
  5551                           
  5552                           	psect	text20
  5553  0676                     __ptext20:	
  5554 ;; *************** function _nrf24l01SPIStart *****************
  5555 ;; Defined at:
  5556 ;;		line 65 in file "interface.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    7
  5577 ;; This function calls:
  5578 ;;		_nrf24l01CSLow
  5579 ;; This function is called by:
  5580 ;;		_nrf24l01Send
  5581 ;;		_nrf24l01SendString
  5582 ;;		i1_nrf24l01Send
  5583 ;;		_nrf24l01SetTXAddress
  5584 ;;		_nrf24l01ReceiveString
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _nrf24l01SPIStart
  5590  0676                     _nrf24l01SPIStart:	
  5591                           
  5592                           ;interface.c: 66: nrf24l01CSLow();
  5593                           
  5594                           ;incstack = 0
  5595 ;; hardware stack exceeded
  5596                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  5597  0676  3186  26B7  3186   	fcall	_nrf24l01CSLow
  5598                           
  5599                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5600  0679  300D               	movlw	13
  5601  067A                     u181_27:	
  5602  067A  0B89               	decfsz	9,f
  5603  067B  2E7A               	goto	u181_27
  5604  067C  0000               	nop
  5605  067D  0008               	return
  5606  067E                     __end_of_nrf24l01SPIStart:	
  5607                           
  5608                           	psect	text21
  5609  06B7                     __ptext21:	
  5610 ;; *************** function _nrf24l01CSLow *****************
  5611 ;; Defined at:
  5612 ;;		line 18 in file "interface.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		None
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    6
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_nrf24l01SPIStart
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _nrf24l01CSLow
  5642  06B7                     _nrf24l01CSLow:	
  5643                           
  5644                           ;interface.c: 19: PORTAbits.RA1 = 0;
  5645                           
  5646                           ;incstack = 0
  5647 ;; hardware stack exceeded
  5648                           ; Regs used in _nrf24l01CSLow: []
  5649  06B7  0020               	movlb	0	; select bank0
  5650  06B8  108C               	bcf	12,1	;volatile
  5651  06B9  0008               	return
  5652  06BA                     __end_of_nrf24l01CSLow:	
  5653                           
  5654                           	psect	text22
  5655  0654                     __ptext22:	
  5656 ;; *************** function _nrf24l01SPISend *****************
  5657 ;; Defined at:
  5658 ;;		line 52 in file "interface.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  data            1    wreg     unsigned char 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  data            1    0[COMMON] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;Total ram usage:        0 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    6
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_nrf24l01Send
  5683 ;;		_nrf24l01SendString
  5684 ;;		i1_nrf24l01Send
  5685 ;;		_nrf24l01SetTXAddress
  5686 ;;		_nrf24l01ReceiveStringPart
  5687 ;;		_nrf24l01ReceiveString
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _nrf24l01SPISend
  5693  0654                     _nrf24l01SPISend:	
  5694                           
  5695                           ;incstack = 0
  5696 ;; hardware stack exceeded
  5697                           ; Regs used in _nrf24l01SPISend: [wreg]
  5698                           ;nrf24l01SPISend@data stored from wreg
  5699  0654  00F0               	movwf	nrf24l01SPISend@data
  5700                           
  5701                           ;interface.c: 53: SSP1BUF = data;
  5702  0655  0870               	movf	nrf24l01SPISend@data,w
  5703  0656  0024               	movlb	4	; select bank4
  5704  0657  0091               	movwf	17	;volatile
  5705                           
  5706                           ;interface.c: 55: PORTCbits.RC4 = 1;
  5707  0658  0020               	movlb	0	; select bank0
  5708  0659  160E               	bsf	14,4	;volatile
  5709  065A                     i1l94:	
  5710                           ;interface.c: 57: while (!SSP1STATbits.BF){
  5711                           
  5712  065A  0024               	movlb	4	; select bank4
  5713  065B  1814               	btfsc	20,0	;volatile
  5714  065C  2E5F               	goto	i1l1839
  5715                           
  5716                           ;interface.c: 58: __nop();
  5717  065D  0000               	nop
  5718  065E  2E5A               	goto	i1l94
  5719  065F                     i1l1839:	
  5720                           
  5721                           ;interface.c: 59: };interface.c: 61: return SSP1BUF;
  5722  065F  0811               	movf	17,w	;volatile
  5723  0660  0008               	return
  5724  0661                     __end_of_nrf24l01SPISend:	
  5725                           
  5726                           	psect	text23
  5727  0686                     __ptext23:	
  5728 ;; *************** function _nrf24l01SPIEnd *****************
  5729 ;; Defined at:
  5730 ;;		line 71 in file "interface.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    7
  5751 ;; This function calls:
  5752 ;;		_nrf24l01CSHigh
  5753 ;; This function is called by:
  5754 ;;		_nrf24l01Send
  5755 ;;		_nrf24l01SendString
  5756 ;;		i1_nrf24l01Send
  5757 ;;		_nrf24l01ReceiveString
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _nrf24l01SPIEnd
  5763  0686                     _nrf24l01SPIEnd:	
  5764                           
  5765                           ;interface.c: 72: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5766                           
  5767                           ;incstack = 0
  5768 ;; hardware stack exceeded
  5769                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  5770  0686  300D               	movlw	13
  5771  0687                     u182_27:	
  5772  0687  0B89               	decfsz	9,f
  5773  0688  2E87               	goto	u182_27
  5774  0689  0000               	nop
  5775                           
  5776                           ;interface.c: 73: nrf24l01CSHigh();
  5777  068A  3186  26BA         	fcall	_nrf24l01CSHigh
  5778  068C  0008               	return
  5779  068D                     __end_of_nrf24l01SPIEnd:	
  5780                           
  5781                           	psect	text24
  5782  06BA                     __ptext24:	
  5783 ;; *************** function _nrf24l01CSHigh *****************
  5784 ;; Defined at:
  5785 ;;		line 23 in file "interface.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		None
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    6
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_nrf24l01SPIEnd
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _nrf24l01CSHigh
  5815  06BA                     _nrf24l01CSHigh:	
  5816                           
  5817                           ;interface.c: 24: PORTAbits.RA1 = 1;
  5818                           
  5819                           ;incstack = 0
  5820 ;; hardware stack exceeded
  5821                           ; Regs used in _nrf24l01CSHigh: []
  5822  06BA  0020               	movlb	0	; select bank0
  5823  06BB  148C               	bsf	12,1	;volatile
  5824  06BC  0008               	return
  5825  06BD                     __end_of_nrf24l01CSHigh:	
  5826                           
  5827                           	psect	text25
  5828  067E                     __ptext25:	
  5829 ;; *************** function _enableInterrupts *****************
  5830 ;; Defined at:
  5831 ;;		line 77 in file "interface.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  enable          1    wreg     unsigned char 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  enable          1    0[COMMON] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    6
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_nrf24l01Send
  5856 ;;		_nrf24l01SendString
  5857 ;;		i1_nrf24l01Send
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _enableInterrupts
  5863  067E                     _enableInterrupts:	
  5864                           
  5865                           ;incstack = 0
  5866 ;; hardware stack exceeded
  5867                           ; Regs used in _enableInterrupts: [wreg+status,0]
  5868                           ;enableInterrupts@enable stored from wreg
  5869  067E  00F0               	movwf	enableInterrupts@enable
  5870                           
  5871                           ;interface.c: 78: PIE0bits.INTE = enable;
  5872  067F  0C70               	rrf	enableInterrupts@enable,w
  5873  0680  0021               	movlb	1	; select bank1
  5874  0681  1C03               	skipc
  5875  0682  1010               	bcf	16,0	;volatile
  5876  0683  1803               	skipnc
  5877  0684  1410               	bsf	16,0	;volatile
  5878  0685  0008               	return
  5879  0686                     __end_of_enableInterrupts:	
  5880                           
  5881                           	psect	text26
  5882  06BD                     __ptext26:	
  5883 ;; *************** function _nrf24l01CELow *****************
  5884 ;; Defined at:
  5885 ;;		line 8 in file "interface.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		None
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    6
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_nrf24l01SetRXMode
  5910 ;;		_nrf24l01SendString
  5911 ;;		_nrf24l01Init
  5912 ;;		i1_nrf24l01SetRXMode
  5913 ;;		_nrf24l01ReceiveString
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _nrf24l01CELow
  5919  06BD                     _nrf24l01CELow:	
  5920                           
  5921                           ;interface.c: 9: PORTAbits.RA0 = 0;
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in _nrf24l01CELow: []
  5925  06BD  0020               	movlb	0	; select bank0
  5926  06BE  100C               	bcf	12,0	;volatile
  5927  06BF  0008               	return
  5928  06C0                     __end_of_nrf24l01CELow:	
  5929                           
  5930                           	psect	text27
  5931  06C0                     __ptext27:	
  5932 ;; *************** function _nrf24l01CEHigh *****************
  5933 ;; Defined at:
  5934 ;;		line 13 in file "interface.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		None
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    6
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_nrf24l01SetRXMode
  5959 ;;		_nrf24l01SendString
  5960 ;;		_nrf24l01Init
  5961 ;;		i1_nrf24l01SetRXMode
  5962 ;;		_nrf24l01ReceiveString
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _nrf24l01CEHigh
  5968  06C0                     _nrf24l01CEHigh:	
  5969                           
  5970                           ;interface.c: 14: PORTAbits.RA0 = 1;
  5971                           
  5972                           ;incstack = 0
  5973                           ; Regs used in _nrf24l01CEHigh: []
  5974  06C0  0020               	movlb	0	; select bank0
  5975  06C1  140C               	bsf	12,0	;volatile
  5976  06C2  0008               	return
  5977  06C3                     __end_of_nrf24l01CEHigh:	
  5978                           
  5979                           	psect	text28
  5980  0661                     __ptext28:	
  5981 ;; *************** function _exception *****************
  5982 ;; Defined at:
  5983 ;;		line 81 in file "interface.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  exception       1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  exception       1   12[COMMON] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;Total ram usage:        3 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    2
  6004 ;; This function calls:
  6005 ;;		_flashUpdate
  6006 ;; This function is called by:
  6007 ;;		_nrf24l01ISR
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           
  6012                           ;psect for function _exception
  6013  0661                     _exception:	
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6017                           ;exception@exception stored from wreg
  6018  0661  00FC               	movwf	exception@exception
  6019                           
  6020                           ;interface.c: 82: romData.bootMode = exception;
  6021  0662  087C               	movf	exception@exception,w
  6022  0663  00FA               	movwf	??_exception
  6023  0664  01FB               	clrf	??_exception+1
  6024  0665  087A               	movf	??_exception,w
  6025  0666  0021               	movlb	1	; select bank1
  6026  0667  00B1               	movwf	(_romData^(0+128)+17)
  6027  0668  087B               	movf	??_exception+1,w
  6028  0669  00B2               	movwf	((_romData+1)^(0+128)+17)
  6029                           
  6030                           ;interface.c: 83: flashUpdate();
  6031  066A  3185  259E         	fcall	_flashUpdate
  6032  066C  0008               	return
  6033  066D                     __end_of_exception:	
  6034                           
  6035                           	psect	text29
  6036  059E                     __ptext29:	
  6037 ;; *************** function _flashUpdate *****************
  6038 ;; Defined at:
  6039 ;;		line 97 in file "flash.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  i               2    8[COMMON] unsigned int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        4 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    1
  6060 ;; This function calls:
  6061 ;;		_flashWriteByte
  6062 ;; This function is called by:
  6063 ;;		_exception
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _flashUpdate
  6069  059E                     _flashUpdate:	
  6070                           
  6071                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  6072                           
  6073                           ;incstack = 0
  6074                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6075  059E  01F8               	clrf	flashUpdate@i
  6076  059F  01F9               	clrf	flashUpdate@i+1
  6077  05A0                     L1:	
  6078  05A0  3000               	movlw	0
  6079  05A1  0279               	subwf	flashUpdate@i+1,w
  6080  05A2  3020               	movlw	32
  6081  05A3  1903               	skipnz
  6082  05A4  0278               	subwf	flashUpdate@i,w
  6083  05A5  1803               	btfsc	3,0
  6084  05A6  0008               	return
  6085                           
  6086                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  6087  05A7  0879               	movf	flashUpdate@i+1,w
  6088  05A8  00F1               	movwf	flashWriteByte@offset+1
  6089  05A9  0878               	movf	flashUpdate@i,w
  6090  05AA  00F0               	movwf	flashWriteByte@offset
  6091  05AB  0878               	movf	flashUpdate@i,w
  6092  05AC  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6093  05AD  0086               	movwf	6
  6094  05AE  3001               	movlw	1	; select bank2/3
  6095  05AF  0087               	movwf	7
  6096  05B0  0801               	movf	1,w
  6097  05B1  00F6               	movwf	??_flashUpdate
  6098  05B2  01F7               	clrf	??_flashUpdate+1
  6099  05B3  0876               	movf	??_flashUpdate,w
  6100  05B4  00F2               	movwf	flashWriteByte@data
  6101  05B5  0877               	movf	??_flashUpdate+1,w
  6102  05B6  00F3               	movwf	flashWriteByte@data+1
  6103  05B7  3184  24E9  3185   	fcall	_flashWriteByte
  6104  05BA  3001               	movlw	1
  6105  05BB  07F8               	addwf	flashUpdate@i,f
  6106  05BC  3000               	movlw	0
  6107  05BD  3DF9               	addwfc	flashUpdate@i+1,f
  6108  05BE  2DA0               	goto	L1
  6109  05BF                     __end_of_flashUpdate:	
  6110                           
  6111                           	psect	text30
  6112  04E9                     __ptext30:	
  6113 ;; *************** function _flashWriteByte *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "flash.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  offset          2    0[COMMON] unsigned int 
  6118 ;;  data            2    2[COMMON] unsigned int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  address         2    4[COMMON] unsigned int 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;Total ram usage:        6 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_flashUpdate
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function _flashWriteByte
  6145  04E9                     _flashWriteByte:	
  6146                           
  6147                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  6151  04E9  138B               	bcf	11,7	;volatile
  6152                           
  6153                           ;flash.c: 15: PMCON1 = 0x00;
  6154  04EA  0031               	movlb	17	; select bank17
  6155  04EB  0195               	clrf	21	;volsfr
  6156                           
  6157                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  6158  04EC  0870               	movf	flashWriteByte@offset,w
  6159  04ED  3EE0               	addlw	224
  6160  04EE  00F4               	movwf	flashWriteByte@address
  6161  04EF  301F               	movlw	31
  6162  04F0  3D71               	addwfc	flashWriteByte@offset+1,w
  6163  04F1  00F5               	movwf	flashWriteByte@address+1
  6164                           
  6165                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  6166  04F2  0874               	movf	flashWriteByte@address,w
  6167  04F3  0091               	movwf	17	;volatile
  6168                           
  6169                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  6170  04F4  0875               	movf	flashWriteByte@address+1,w
  6171  04F5  0092               	movwf	18	;volatile
  6172                           
  6173                           ;flash.c: 21: PMCON1bits.FREE = 1;
  6174  04F6  1615               	bsf	21,4	;volsfr
  6175                           
  6176                           ;flash.c: 22: PMCON1bits.WREN = 1;
  6177  04F7  1515               	bsf	21,2	;volsfr
  6178                           
  6179                           ;flash.c: 24: PMCON2 = 0x55;
  6180  04F8  3055               	movlw	85
  6181  04F9  0096               	movwf	22	;volsfr
  6182                           
  6183                           ;flash.c: 25: PMCON2 = 0xAA;
  6184  04FA  30AA               	movlw	170
  6185  04FB  0096               	movwf	22	;volsfr
  6186                           
  6187                           ;flash.c: 27: PMCON1bits.WR = 1;
  6188  04FC  1495               	bsf	21,1	;volsfr
  6189                           
  6190                           ;flash.c: 29: __nop();
  6191  04FD  0000               	nop
  6192                           
  6193                           ;flash.c: 30: __nop();
  6194  04FE  0000               	nop
  6195                           
  6196                           ;flash.c: 32: PMCON1bits.WREN = 0;
  6197  04FF  0031               	movlb	17	; select bank17
  6198  0500  1115               	bcf	21,2	;volsfr
  6199                           
  6200                           ;flash.c: 36: PMCON1 = 0x00;
  6201  0501  0195               	clrf	21	;volsfr
  6202                           
  6203                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  6204  0502  0874               	movf	flashWriteByte@address,w
  6205  0503  0091               	movwf	17	;volatile
  6206                           
  6207                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  6208  0504  0875               	movf	flashWriteByte@address+1,w
  6209  0505  0092               	movwf	18	;volatile
  6210                           
  6211                           ;flash.c: 41: PMCON1bits.FREE = 0;
  6212  0506  1215               	bcf	21,4	;volsfr
  6213                           
  6214                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  6215  0507  1695               	bsf	21,5	;volsfr
  6216                           
  6217                           ;flash.c: 43: PMCON1bits.WREN = 1;
  6218  0508  1515               	bsf	21,2	;volsfr
  6219                           
  6220                           ;flash.c: 45: PMDATL = (data >> 0);
  6221  0509  0872               	movf	flashWriteByte@data,w
  6222  050A  0093               	movwf	19	;volatile
  6223                           
  6224                           ;flash.c: 46: PMDATH = (data >> 8);
  6225  050B  0873               	movf	flashWriteByte@data+1,w
  6226  050C  0094               	movwf	20	;volatile
  6227                           
  6228                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  6229  050D  1295               	bcf	21,5	;volsfr
  6230                           
  6231                           ;flash.c: 50: PMCON2 = 0x55;
  6232  050E  3055               	movlw	85
  6233  050F  0096               	movwf	22	;volsfr
  6234                           
  6235                           ;flash.c: 51: PMCON2 = 0xAA;
  6236  0510  30AA               	movlw	170
  6237  0511  0096               	movwf	22	;volsfr
  6238                           
  6239                           ;flash.c: 53: PMCON1bits.WR = 1;
  6240  0512  1495               	bsf	21,1	;volsfr
  6241                           
  6242                           ;flash.c: 55: __nop();
  6243  0513  0000               	nop
  6244                           
  6245                           ;flash.c: 56: __nop();
  6246  0514  0000               	nop
  6247                           
  6248                           ;flash.c: 58: PMCON1bits.WREN = 0;
  6249  0515  0031               	movlb	17	; select bank17
  6250  0516  1115               	bcf	21,2	;volsfr
  6251                           
  6252                           ;flash.c: 61: INTCONbits.GIE = 1;
  6253  0517  178B               	bsf	11,7	;volatile
  6254  0518  0008               	return
  6255  0519                     __end_of_flashWriteByte:	
  6256  007E                     btemp	set	126	;btemp
  6257  007E                     int$flags	set	126
  6258  007E                     wtemp0	set	126


Data Sizes:
    Strings     45
    Constant    25
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      77
    BANK1            80      0      51
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[5]), STR_6(CODE[14]), nrf24l01TXName(BANK1[16]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[5]), nrf24l01TXValue(BANK0[8]), 
		 -> STR_1(CODE[4]), nrf24l01TXTopic(BANK0[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> nrf24l01TXValue(BANK0[8]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> nrf24l01RXName(BANK1[16]), nrf24l01RXValue(BANK0[8]), nrf24l01RXTopic(BANK0[8]), nrf24l01TXName(BANK1[16]), 
		 -> nrf24l01TXTopic(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_exception
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->_flashUpdate
    _flashUpdate->_flashWriteByte

Critical Paths under _main in BANK0

    _main->_utoa
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_utoa
    _utoa->_getADCValue
    _nrf24l01SendString->_nrf24l01SetRXMode
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14462
                                             38 BANK0      1     1      0
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    1532
                                             13 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               10    10      0    1510
                                              4 BANK0      9     9      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    6917
                        _getADCValue
                 _nrf24l01SendString
                              _sleep
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    2678
                                             29 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                        _getADCValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2    1609
                                              1 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendString                                   2     2      0    1726
                                              7 BANK0      2     2      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1409
                                              4 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1275
                                              1 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             15 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              1 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              1 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    1070
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    1070
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _exception
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     349
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     215
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     395
                                             10 COMMON     3     3      0
                        _flashUpdate
 ---------------------------------------------------------------------------------
 (10) _flashUpdate                                         4     4      0     373
                                              6 COMMON     4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (11) _flashWriteByte                                      6     2      4     283
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendString
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _sleep
     _strcpy
     _utoa
       ___lwdiv
       ___lwmod
       _getADCValue (ARG)
         ___lldiv
         ___lmul
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendString
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
   _sleep
   _strcpy
   _utoa
     ___lwdiv
     ___lwmod
     _getADCValue (ARG)
       ___lldiv
       ___lmul

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       _flashUpdate
         _flashWriteByte
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      33       7       63.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jun 30 12:00:27 2018

                    __CFG_CP$OFF 0000              nrf24l01Send@command 0023  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l215 066D                              l208 027A  
                            l334 0109                              l338 0119                              l883 03A9  
                   flashUpdate@i 0078                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            u825 03D3                              u915 049A                              u845 03DF  
                            u925 04A4                              u855 03F3                              u935 04AC  
                            u865 03FF                              u785 04CD                              u795 04D4  
                            u965 0551                              u895 0490                              u985 0560  
                            u995 0567                              wreg 0009                             ?_ISR 0070  
                 ??_nrf24l01Init 002D                             l2021 027F                             l2101 014B  
                           l2023 0273                             l2025 029D                             l2121 0182  
                           l2113 016A                             l2105 0158                             l2117 0177  
                           l2109 0163                             l2143 01B4                             l2135 0198  
                           l2145 01A8                             l2137 01A4                             l2083 010D  
                           l2093 0139                             l2097 0144                             l2089 012C  
                           l1901 0446                             l1905 04C2                   ??_nrf24l01Send 0022  
                           l1923 03D0                             l1933 03FE                             l1925 03DE  
                           l1909 04CC                             l1951 048D                             l1937 0409  
                           l1953 0499                             l2681 0363                             l1963 04B4  
                           l2691 0381                             l2677 0603                             l1981 0566  
                           l2853 0359                             l1959 04AB                             l1975 054E  
                           l1977 055A                             l1985 056F                             STR_1 06B3  
                   __CFG_WDTE$ON 0000                             STR_2 06A4                             STR_3 06A9  
                           STR_4 0693                             STR_5 068D                             STR_6 0646  
                           STR_7 06AE                             u1707 0115                             u1717 0189  
                           u1727 01A0                             u1737 01B5                             u1747 0426  
                           u1757 0438                             u1677 02F4                             u1767 0443  
                           u1687 0582                             u1777 0270                             u1697 0594  
                           i1l94 065A   __size_of_nrf24l01InterfaceInit 001E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 05FD                             _main 02DD  
                           _loop 002C                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             _utoa 035D  
                  __CFG_BORV$LOW 0000                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                            ??_ISR 007E              nrf24l01SendString@i 0028  
           __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070                  ??_nrf24l01CSLow 0070  
    __size_of_nrf24l01SendString 00B9                            ?_main 0070                            ?_loop 0070  
                __end_of___lldiv 0412                            ?_utoa 003D                   __CFG_DEBUG$OFF 0000  
                __end_of___lwdiv 04B9                            i1l203 000D                  __end_of___lwmod 0574  
         enableInterrupts@enable 0070              ___lmul@multiplicand 0025                    __CFG_PWRTE$ON 0000  
                          _sleep 066D                   __CFG_BOREN$OFF 0000                 _enableInterrupts 067E  
                          utoa@c 0044                            utoa@v 0042                            status 0003  
                          wtemp0 007E      __end_ofi1_nrf24l01SetRXMode 0484                getADCValue@adcSum 0039  
               _nrf24l01SPIStart 0676                  __initialization 0011                     __end_of_main 035D  
                   __end_of_loop 0100                     __end_of_utoa 03BF                 ??_nrf24l01CEHigh 0070  
                         ??_main 0046                           ??_loop 0046                 ??_nrf24l01CSHigh 0070  
                         ??_utoa 0041                 ??_nrf24l01SPIEnd 0070         __size_of_nrf24l01SPISend 000D  
                         _ADRESH 009C                           _ADRESL 009B                           ?_sleep 0070  
                         _ANSELA 018C                           _ANSELC 018E                 ??_flashWriteByte 0074  
                         i1l2301 0531                           _ODCONA 028C                           _ODCONC 028E  
                         i1l2261 047D                           i1l2309 053C                           i1l2297 0529  
                         i1l1839 065F                           _INLVLA 038C                           _INLVLC 038E  
                         u180_27 047A                           u181_27 067A                           u182_27 0687  
                         _PMADRH 0892                           _PMADRL 0891                           _PMDATH 0894  
                         u178_27 045F                           _PMDATL 0893                           u179_27 0470  
                         _PMCON1 0895                           _PMCON2 0896               flashWriteByte@data 0072  
           __size_of_flashUpdate 0021             __size_of_nrf24l01ISR 002E          nrf24l01SetRXMode@config 0025  
                         ___lmul 04B9          nrf24l01SetRXMode@rxMode 0026                   __CFG_STVREN$ON 0000  
                      ??___lldiv 0029                        ??___lwdiv 0025                        ??___lwmod 0025  
           __end_of_nrf24l01Init 059E             __end_of_nrf24l01Send 05DF            _nrf24l01InitRegisters 01B9  
                         _strcpy 05FD        i1nrf24l01SetRXMode@config 0075                 __end_of_romArray 2000  
      i1nrf24l01SetRXMode@rxMode 0076               getADCValue@adcLoop 0038          __end_of__initialization 0028  
             getADCValue@channel 0037               getADCValue@divider 002F                   __pcstackCOMMON 0070  
                  __end_of_sleep 0676             _nrf24l01RXPacketData 0049    nrf24l01InitRegisters@enRXAddr 0029  
                        ??_sleep 0021                       __pbssBANK0 0047                       __pbssBANK1 00A0  
                     __pbssBANK2 0120                ??_nrf24l01SPISend 0070               __size_of_exception 000C  
        __size_ofi1_nrf24l01Send 001B                       __pmaintext 02DD                          ?___lmul 0021  
                __CFG_PPS1WAY$ON 0000                _nrf24l01SetRXMode 0412           ?_nrf24l01InitRegisters 0070  
                     __pintentry 0004              nrf24l01SPISend@data 0070                   ___lmul@product 0029  
             ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 0686             _nrf24l01TXPacketData 004C  
            __CFG_RSTOSC$HFINT32 0000                          ?_strcpy 0021            __end_of_n_ADDRESS_MUL 06C4  
            ??_nrf24l01SetRXMode 0024         __end_of_nrf24l01SPIStart 067E                          _SLRCONA 030C  
                        _SLRCONC 030E                          _SSP1BUF 0211            _nrf24l01InterfaceInit 05DF  
               __p_romArray_text 1FE0                    ??_getADCValue 0033            __size_of_nrf24l01Init 002A  
          __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 044D       __end_of_nrf24l01SendString 01B9  
                __size_of___lmul 0030                          ___lldiv 03BF                          ___lwdiv 0484  
                        ___lwmod 0547            __end_of_nrf24l01CELow 06C0            __end_of_nrf24l01CSLow 06BA  
                        __ptext1 0574                          __ptext2 05DF                          __ptext3 01B9  
                        __ptext4 002C                          __ptext5 035D                          __ptext6 0547  
                        __ptext7 0484                          __ptext8 05FD                          __ptext9 066D  
              __end_of_exception 066D                  __size_of_strcpy 001B                     __size_of_ISR 000B  
                        _counter 0047                 _romArray_absaddr 1FE0                          _romData 00A0  
                        clrloop0 069A             end_of_initialization 0028                     _nrf24l01Init 0574  
                   _nrf24l01Send 05BF                  ___lldiv@divisor 0021                  ___lldiv@counter 002E  
   __size_ofi1_nrf24l01SetRXMode 0037                          utoa@buf 0045                          utoa@val 003D  
          i1nrf24l01Send@command 0073              __end_of_getADCValue 02DD                        _PORTAbits 000C  
                      _PORTCbits 000E                        _TRISAbits 008C                        _TRISCbits 008E  
               nrf24l01Send@data 0021                 __CFG_FEXTOSC$OFF 0000                    ??_flashUpdate 0076  
                  ??_nrf24l01ISR 007D           ?_nrf24l01InterfaceInit 0070                   i1_nrf24l01Send 0618  
     __size_of_nrf24l01SetRXMode 003B                   __end_of___lmul 04E9                   __end_of_strcpy 0618  
            start_initialization 0011                  _nrf24l01SPISend 0654                      __end_of_ISR 000F  
          flashWriteByte@address 0074                  _nrf24l01RXValue 004D          __size_of_nrf24l01CEHigh 0003  
                _nrf24l01RXTopic 0055                  _nrf24l01TXValue 005D                  _nrf24l01TXTopic 0065  
        __size_of_nrf24l01CSHigh 0003           __end_ofi1_nrf24l01Send 0633          __size_of_nrf24l01SPIEnd 0007  
        ??_nrf24l01InitRegisters 0024                 __CFG_LPBOREN$OFF 0000                      _getADCValue 0255  
        __size_of_flashWriteByte 0030              __end_of_flashUpdate 05BF                         ??___lmul 0029  
            __end_of_nrf24l01ISR 0547             __end_of_resetRomData 0646                ?_enableInterrupts 0070  
                       ??_strcpy 0023               ??_enableInterrupts 0070                        ___latbits 0002  
                  __pcstackBANK0 0020                ?_nrf24l01SPIStart 0070               ??_nrf24l01SPIStart 0070  
                ?i1_nrf24l01Send 0071                 ___lwdiv@dividend 0023                         ?___lldiv 0021  
                       ?___lwdiv 0021                         ?___lwmod 0021             __end_of_n_ADDRESS_P0 06A4  
        __end_of_nrf24l01SPISend 0661               i1nrf24l01Send@data 0071        nrf24l01InitRegisters@enAA 002A  
             _nrf24l01SendString 0100                        _exception 0661                 ___lwdiv@quotient 0026  
            i1_nrf24l01SetRXMode 044D                   __size_of_sleep 0009              ?_nrf24l01SendString 0070  
                    _flashUpdate 059E                      _nrf24l01ISR 0519                        clear_ram0 0699  
                       _PIE0bits 0090                         _PIR0bits 0010                        _romHolder 0120  
                      _sleepLoop 004A             ?i1_nrf24l01SetRXMode 0070             ??_nrf24l01SendString 0027  
                     _ADCON0bits 009D                       _ADCON1bits 009E                         _WPUAbits 020C  
                     ?_exception 0070                   _nrf24l01CEHigh 06C0                ___lmul@multiplier 0021  
        ??_nrf24l01InterfaceInit 0021                   _nrf24l01CSHigh 06BA                nrf24l01ISR@status 0020  
                 _nrf24l01SPIEnd 0686                   _nrf24l01RXName 00B3                   _nrf24l01TXName 00C3  
         __size_of_nrf24l01CELow 0003           __size_of_nrf24l01CSLow 0003             flashWriteByte@offset 0070  
                 _flashWriteByte 04E9            ??i1_nrf24l01SetRXMode 0074                 __size_of___lldiv 0053  
               __size_of___lwdiv 0035                 __size_of___lwmod 002D                 ?_nrf24l01SPISend 0070  
                     _ANSELAbits 018C                       _ANSELCbits 018E                    _n_ADDRESS_MUL 06C3  
         __end_of_nrf24l01CEHigh 06C3                  ___lwdiv@divisor 0021           __end_of_nrf24l01CSHigh 06BD  
                ___lwdiv@counter 0028                         __ptext10 0100                         __ptext11 0412  
                       __ptext20 0676                         __ptext12 05BF                         __ptext21 06B7  
                       __ptext13 0255                         __ptext30 04E9                         __ptext22 0654  
                       __ptext14 04B9                         __ptext23 0686                         __ptext15 03BF  
                       __ptext24 06BA                         __ptext25 067E                         __ptext17 0519  
                       __ptext26 06BD                         __ptext18 044D                         __ptext27 06C0  
                       __ptext19 0618                         __ptext28 0661                         __ptext29 059E  
                   _SSP1CON1bits 0215           __end_of_nrf24l01SPIEnd 068D                         _nrf24l01 004B  
                   _resetRomData 0633           nrf24l01Init@isReciever 002F                       strcpy@from 0021  
                  __size_of_main 0080                    __size_of_loop 00D4                    __size_of_utoa 0062  
         __end_of_flashWriteByte 0519     nrf24l01InitRegisters@feature 0027                       _RA2PPSbits 0E92  
             exception@exception 007C                       _RC0PPSbits 0EA0                         _romArray 1FE0  
   nrf24l01InitRegisters@rfSetup 0026                       _RC1PPSbits 0EA1                     ?_getADCValue 002F  
                     _RC2PPSbits 0EA2   __size_of_nrf24l01InitRegisters 009C    __end_of_nrf24l01InitRegisters 0255  
                       int$flags 007E     nrf24l01InitRegisters@setupAW 0025                     _SSP1STATbits 0214  
                  _nrf24l01CELow 06BD                    _nrf24l01CSLow 06B7                       _INTCONbits 000B  
                ?_nrf24l01CEHigh 0070                       _FVRCONbits 0117                 ??i1_nrf24l01Send 0072  
                    ??_exception 007A                  ?_nrf24l01CSHigh 0070                   __pstringtext10 06B3  
                 __pstringtext11 0000                  ?_nrf24l01SPIEnd 0070                         intlevel1 0000  
                   _n_ADDRESS_P0 069F        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lwmod@dividend 0023                 ___lldiv@dividend 0025                __CFG_CLKOUTEN$OFF 0000  
                ?_flashWriteByte 0070      nrf24l01InitRegisters@config 002C        __size_of_nrf24l01SPIStart 0008  
    nrf24l01InitRegisters@status 0028                   ?_nrf24l01CELow 0070                    __pstringtext1 0633  
                  __pstringtext2 069F                    __pstringtext3 06C3                    __pstringtext4 0646  
                  __pstringtext5 068D                    __pstringtext6 0693                    __pstringtext7 06A4  
                  __pstringtext8 06A9                    __pstringtext9 06AE                   ?_nrf24l01CSLow 0070  
                       utoa@base 003F       nrf24l01InitRegisters@DynPD 002B                 ___lldiv@quotient 002A  
                ___lwmod@divisor 0021                         strcpy@cp 0024                         strcpy@to 0025  
                ___lwmod@counter 0026                       _WDTCONbits 0097                    ?_nrf24l01Init 0070  
                  ?_nrf24l01Send 0021                       _STATUSbits 0003                     ?_flashUpdate 0070  
                   ?_nrf24l01ISR 0070  
