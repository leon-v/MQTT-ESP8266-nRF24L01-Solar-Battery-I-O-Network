

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jul 12 16:38:41 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 2.00
    72                           ; Generated 27/05/2018 GMT
    73                           ; 
    74                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16LF18325 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0097                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010E                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0115                     	;# 
   159  0116                     	;# 
   160  0117                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  018C                     	;# 
   164  018E                     	;# 
   165  0199                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019A                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019D                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019E                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  020C                     	;# 
   191  020E                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  0219                     	;# 
   209  021A                     	;# 
   210  021B                     	;# 
   211  021C                     	;# 
   212  021D                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  028C                     	;# 
   217  028E                     	;# 
   218  0291                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0294                     	;# 
   223  0295                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0297                     	;# 
   227  0298                     	;# 
   228  029F                     	;# 
   229  030C                     	;# 
   230  030E                     	;# 
   231  0311                     	;# 
   232  0311                     	;# 
   233  0312                     	;# 
   234  0313                     	;# 
   235  0314                     	;# 
   236  0315                     	;# 
   237  0315                     	;# 
   238  0316                     	;# 
   239  0317                     	;# 
   240  0318                     	;# 
   241  038C                     	;# 
   242  038E                     	;# 
   243  0391                     	;# 
   244  0392                     	;# 
   245  0393                     	;# 
   246  0397                     	;# 
   247  0398                     	;# 
   248  0399                     	;# 
   249  039A                     	;# 
   250  039C                     	;# 
   251  039D                     	;# 
   252  039E                     	;# 
   253  039F                     	;# 
   254  0411                     	;# 
   255  0411                     	;# 
   256  0412                     	;# 
   257  0413                     	;# 
   258  0414                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  0418                     	;# 
   264  0419                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  0498                     	;# 
   272  0498                     	;# 
   273  0499                     	;# 
   274  049A                     	;# 
   275  049B                     	;# 
   276  049B                     	;# 
   277  049C                     	;# 
   278  049D                     	;# 
   279  049E                     	;# 
   280  049F                     	;# 
   281  0617                     	;# 
   282  0618                     	;# 
   283  0619                     	;# 
   284  0619                     	;# 
   285  061A                     	;# 
   286  061B                     	;# 
   287  061C                     	;# 
   288  061C                     	;# 
   289  061F                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0696                     	;# 
   296  0697                     	;# 
   297  0698                     	;# 
   298  0699                     	;# 
   299  0711                     	;# 
   300  0712                     	;# 
   301  0713                     	;# 
   302  0714                     	;# 
   303  0715                     	;# 
   304  0716                     	;# 
   305  0717                     	;# 
   306  0718                     	;# 
   307  0719                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0891                     	;# 
   311  0891                     	;# 
   312  0891                     	;# 
   313  0891                     	;# 
   314  0892                     	;# 
   315  0892                     	;# 
   316  0892                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0893                     	;# 
   320  0893                     	;# 
   321  0893                     	;# 
   322  0893                     	;# 
   323  0894                     	;# 
   324  0894                     	;# 
   325  0894                     	;# 
   326  0895                     	;# 
   327  0895                     	;# 
   328  0895                     	;# 
   329  0896                     	;# 
   330  0896                     	;# 
   331  0896                     	;# 
   332  089B                     	;# 
   333  0911                     	;# 
   334  0912                     	;# 
   335  0913                     	;# 
   336  0914                     	;# 
   337  0915                     	;# 
   338  0916                     	;# 
   339  0918                     	;# 
   340  0919                     	;# 
   341  091A                     	;# 
   342  091B                     	;# 
   343  091C                     	;# 
   344  091D                     	;# 
   345  091E                     	;# 
   346  091F                     	;# 
   347  0E0F                     	;# 
   348  0E10                     	;# 
   349  0E11                     	;# 
   350  0E12                     	;# 
   351  0E13                     	;# 
   352  0E14                     	;# 
   353  0E15                     	;# 
   354  0E16                     	;# 
   355  0E17                     	;# 
   356  0E18                     	;# 
   357  0E19                     	;# 
   358  0E1A                     	;# 
   359  0E1B                     	;# 
   360  0E1C                     	;# 
   361  0E1D                     	;# 
   362  0E1E                     	;# 
   363  0E1F                     	;# 
   364  0E20                     	;# 
   365  0E21                     	;# 
   366  0E22                     	;# 
   367  0E24                     	;# 
   368  0E25                     	;# 
   369  0E28                     	;# 
   370  0E29                     	;# 
   371  0E2A                     	;# 
   372  0E2B                     	;# 
   373  0E2C                     	;# 
   374  0E2D                     	;# 
   375  0E2E                     	;# 
   376  0E2F                     	;# 
   377  0E90                     	;# 
   378  0E91                     	;# 
   379  0E92                     	;# 
   380  0E94                     	;# 
   381  0E95                     	;# 
   382  0EA0                     	;# 
   383  0EA1                     	;# 
   384  0EA2                     	;# 
   385  0EA3                     	;# 
   386  0EA4                     	;# 
   387  0EA5                     	;# 
   388  0F0F                     	;# 
   389  0F10                     	;# 
   390  0F11                     	;# 
   391  0F12                     	;# 
   392  0F13                     	;# 
   393  0F14                     	;# 
   394  0F15                     	;# 
   395  0F16                     	;# 
   396  0F17                     	;# 
   397  0F18                     	;# 
   398  0F19                     	;# 
   399  0F1A                     	;# 
   400  0F1B                     	;# 
   401  0F1C                     	;# 
   402  0F1D                     	;# 
   403  0F1E                     	;# 
   404  0F1F                     	;# 
   405  0F20                     	;# 
   406  0F21                     	;# 
   407  0F22                     	;# 
   408  0F23                     	;# 
   409  0F24                     	;# 
   410  0F25                     	;# 
   411  0F26                     	;# 
   412  0F27                     	;# 
   413  0F28                     	;# 
   414  0F29                     	;# 
   415  0F2A                     	;# 
   416  0F2B                     	;# 
   417  0F2C                     	;# 
   418  0F2D                     	;# 
   419  0F2E                     	;# 
   420  0F2F                     	;# 
   421  0F30                     	;# 
   422  0F31                     	;# 
   423  0F32                     	;# 
   424  0F33                     	;# 
   425  0F34                     	;# 
   426  0F35                     	;# 
   427  0F36                     	;# 
   428  0F37                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000E                     	;# 
   454  0010                     	;# 
   455  0011                     	;# 
   456  0012                     	;# 
   457  0013                     	;# 
   458  0014                     	;# 
   459  0015                     	;# 
   460  0015                     	;# 
   461  0016                     	;# 
   462  0016                     	;# 
   463  0017                     	;# 
   464  0018                     	;# 
   465  0019                     	;# 
   466  0019                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001C                     	;# 
   470  001D                     	;# 
   471  001E                     	;# 
   472  001F                     	;# 
   473  008C                     	;# 
   474  008E                     	;# 
   475  0090                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0094                     	;# 
   480  0097                     	;# 
   481  009B                     	;# 
   482  009B                     	;# 
   483  009C                     	;# 
   484  009D                     	;# 
   485  009E                     	;# 
   486  009F                     	;# 
   487  010C                     	;# 
   488  010E                     	;# 
   489  0111                     	;# 
   490  0112                     	;# 
   491  0113                     	;# 
   492  0114                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  018C                     	;# 
   499  018E                     	;# 
   500  0199                     	;# 
   501  0199                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019A                     	;# 
   505  019A                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019C                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019D                     	;# 
   516  019D                     	;# 
   517  019E                     	;# 
   518  019E                     	;# 
   519  019E                     	;# 
   520  019F                     	;# 
   521  019F                     	;# 
   522  019F                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  020C                     	;# 
   526  020E                     	;# 
   527  0211                     	;# 
   528  0211                     	;# 
   529  0212                     	;# 
   530  0212                     	;# 
   531  0213                     	;# 
   532  0213                     	;# 
   533  0214                     	;# 
   534  0214                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0216                     	;# 
   540  0216                     	;# 
   541  0217                     	;# 
   542  0217                     	;# 
   543  0219                     	;# 
   544  021A                     	;# 
   545  021B                     	;# 
   546  021C                     	;# 
   547  021D                     	;# 
   548  021D                     	;# 
   549  021E                     	;# 
   550  021F                     	;# 
   551  028C                     	;# 
   552  028E                     	;# 
   553  0291                     	;# 
   554  0291                     	;# 
   555  0292                     	;# 
   556  0293                     	;# 
   557  0294                     	;# 
   558  0295                     	;# 
   559  0295                     	;# 
   560  0296                     	;# 
   561  0297                     	;# 
   562  0298                     	;# 
   563  029F                     	;# 
   564  030C                     	;# 
   565  030E                     	;# 
   566  0311                     	;# 
   567  0311                     	;# 
   568  0312                     	;# 
   569  0313                     	;# 
   570  0314                     	;# 
   571  0315                     	;# 
   572  0315                     	;# 
   573  0316                     	;# 
   574  0317                     	;# 
   575  0318                     	;# 
   576  038C                     	;# 
   577  038E                     	;# 
   578  0391                     	;# 
   579  0392                     	;# 
   580  0393                     	;# 
   581  0397                     	;# 
   582  0398                     	;# 
   583  0399                     	;# 
   584  039A                     	;# 
   585  039C                     	;# 
   586  039D                     	;# 
   587  039E                     	;# 
   588  039F                     	;# 
   589  0411                     	;# 
   590  0411                     	;# 
   591  0412                     	;# 
   592  0413                     	;# 
   593  0414                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  0418                     	;# 
   598  0418                     	;# 
   599  0419                     	;# 
   600  041A                     	;# 
   601  041B                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  041F                     	;# 
   606  0498                     	;# 
   607  0498                     	;# 
   608  0499                     	;# 
   609  049A                     	;# 
   610  049B                     	;# 
   611  049B                     	;# 
   612  049C                     	;# 
   613  049D                     	;# 
   614  049E                     	;# 
   615  049F                     	;# 
   616  0617                     	;# 
   617  0618                     	;# 
   618  0619                     	;# 
   619  0619                     	;# 
   620  061A                     	;# 
   621  061B                     	;# 
   622  061C                     	;# 
   623  061C                     	;# 
   624  061F                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0711                     	;# 
   635  0712                     	;# 
   636  0713                     	;# 
   637  0714                     	;# 
   638  0715                     	;# 
   639  0716                     	;# 
   640  0717                     	;# 
   641  0718                     	;# 
   642  0719                     	;# 
   643  0891                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0892                     	;# 
   650  0892                     	;# 
   651  0892                     	;# 
   652  0893                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0894                     	;# 
   659  0894                     	;# 
   660  0894                     	;# 
   661  0895                     	;# 
   662  0895                     	;# 
   663  0895                     	;# 
   664  0896                     	;# 
   665  0896                     	;# 
   666  0896                     	;# 
   667  089B                     	;# 
   668  0911                     	;# 
   669  0912                     	;# 
   670  0913                     	;# 
   671  0914                     	;# 
   672  0915                     	;# 
   673  0916                     	;# 
   674  0918                     	;# 
   675  0919                     	;# 
   676  091A                     	;# 
   677  091B                     	;# 
   678  091C                     	;# 
   679  091D                     	;# 
   680  091E                     	;# 
   681  091F                     	;# 
   682  0E0F                     	;# 
   683  0E10                     	;# 
   684  0E11                     	;# 
   685  0E12                     	;# 
   686  0E13                     	;# 
   687  0E14                     	;# 
   688  0E15                     	;# 
   689  0E16                     	;# 
   690  0E17                     	;# 
   691  0E18                     	;# 
   692  0E19                     	;# 
   693  0E1A                     	;# 
   694  0E1B                     	;# 
   695  0E1C                     	;# 
   696  0E1D                     	;# 
   697  0E1E                     	;# 
   698  0E1F                     	;# 
   699  0E20                     	;# 
   700  0E21                     	;# 
   701  0E22                     	;# 
   702  0E24                     	;# 
   703  0E25                     	;# 
   704  0E28                     	;# 
   705  0E29                     	;# 
   706  0E2A                     	;# 
   707  0E2B                     	;# 
   708  0E2C                     	;# 
   709  0E2D                     	;# 
   710  0E2E                     	;# 
   711  0E2F                     	;# 
   712  0E90                     	;# 
   713  0E91                     	;# 
   714  0E92                     	;# 
   715  0E94                     	;# 
   716  0E95                     	;# 
   717  0EA0                     	;# 
   718  0EA1                     	;# 
   719  0EA2                     	;# 
   720  0EA3                     	;# 
   721  0EA4                     	;# 
   722  0EA5                     	;# 
   723  0F0F                     	;# 
   724  0F10                     	;# 
   725  0F11                     	;# 
   726  0F12                     	;# 
   727  0F13                     	;# 
   728  0F14                     	;# 
   729  0F15                     	;# 
   730  0F16                     	;# 
   731  0F17                     	;# 
   732  0F18                     	;# 
   733  0F19                     	;# 
   734  0F1A                     	;# 
   735  0F1B                     	;# 
   736  0F1C                     	;# 
   737  0F1D                     	;# 
   738  0F1E                     	;# 
   739  0F1F                     	;# 
   740  0F20                     	;# 
   741  0F21                     	;# 
   742  0F22                     	;# 
   743  0F23                     	;# 
   744  0F24                     	;# 
   745  0F25                     	;# 
   746  0F26                     	;# 
   747  0F27                     	;# 
   748  0F28                     	;# 
   749  0F29                     	;# 
   750  0F2A                     	;# 
   751  0F2B                     	;# 
   752  0F2C                     	;# 
   753  0F2D                     	;# 
   754  0F2E                     	;# 
   755  0F2F                     	;# 
   756  0F30                     	;# 
   757  0F31                     	;# 
   758  0F32                     	;# 
   759  0F33                     	;# 
   760  0F34                     	;# 
   761  0F35                     	;# 
   762  0F36                     	;# 
   763  0F37                     	;# 
   764  0FE4                     	;# 
   765  0FE5                     	;# 
   766  0FE6                     	;# 
   767  0FE7                     	;# 
   768  0FE8                     	;# 
   769  0FE9                     	;# 
   770  0FEA                     	;# 
   771  0FEB                     	;# 
   772  0FED                     	;# 
   773  0FEE                     	;# 
   774  0FEF                     	;# 
   775  0000                     	;# 
   776  0001                     	;# 
   777  0002                     	;# 
   778  0003                     	;# 
   779  0004                     	;# 
   780  0005                     	;# 
   781  0006                     	;# 
   782  0007                     	;# 
   783  0008                     	;# 
   784  0009                     	;# 
   785  000A                     	;# 
   786  000B                     	;# 
   787  000C                     	;# 
   788  000E                     	;# 
   789  0010                     	;# 
   790  0011                     	;# 
   791  0012                     	;# 
   792  0013                     	;# 
   793  0014                     	;# 
   794  0015                     	;# 
   795  0015                     	;# 
   796  0016                     	;# 
   797  0016                     	;# 
   798  0017                     	;# 
   799  0018                     	;# 
   800  0019                     	;# 
   801  0019                     	;# 
   802  001A                     	;# 
   803  001B                     	;# 
   804  001C                     	;# 
   805  001D                     	;# 
   806  001E                     	;# 
   807  001F                     	;# 
   808  008C                     	;# 
   809  008E                     	;# 
   810  0090                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0097                     	;# 
   816  009B                     	;# 
   817  009B                     	;# 
   818  009C                     	;# 
   819  009D                     	;# 
   820  009E                     	;# 
   821  009F                     	;# 
   822  010C                     	;# 
   823  010E                     	;# 
   824  0111                     	;# 
   825  0112                     	;# 
   826  0113                     	;# 
   827  0114                     	;# 
   828  0115                     	;# 
   829  0116                     	;# 
   830  0117                     	;# 
   831  0118                     	;# 
   832  0119                     	;# 
   833  018C                     	;# 
   834  018E                     	;# 
   835  0199                     	;# 
   836  0199                     	;# 
   837  0199                     	;# 
   838  019A                     	;# 
   839  019A                     	;# 
   840  019A                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019C                     	;# 
   847  019C                     	;# 
   848  019C                     	;# 
   849  019D                     	;# 
   850  019D                     	;# 
   851  019D                     	;# 
   852  019E                     	;# 
   853  019E                     	;# 
   854  019E                     	;# 
   855  019F                     	;# 
   856  019F                     	;# 
   857  019F                     	;# 
   858  019F                     	;# 
   859  019F                     	;# 
   860  020C                     	;# 
   861  020E                     	;# 
   862  0211                     	;# 
   863  0211                     	;# 
   864  0212                     	;# 
   865  0212                     	;# 
   866  0213                     	;# 
   867  0213                     	;# 
   868  0214                     	;# 
   869  0214                     	;# 
   870  0215                     	;# 
   871  0215                     	;# 
   872  0215                     	;# 
   873  0215                     	;# 
   874  0216                     	;# 
   875  0216                     	;# 
   876  0217                     	;# 
   877  0217                     	;# 
   878  0219                     	;# 
   879  021A                     	;# 
   880  021B                     	;# 
   881  021C                     	;# 
   882  021D                     	;# 
   883  021D                     	;# 
   884  021E                     	;# 
   885  021F                     	;# 
   886  028C                     	;# 
   887  028E                     	;# 
   888  0291                     	;# 
   889  0291                     	;# 
   890  0292                     	;# 
   891  0293                     	;# 
   892  0294                     	;# 
   893  0295                     	;# 
   894  0295                     	;# 
   895  0296                     	;# 
   896  0297                     	;# 
   897  0298                     	;# 
   898  029F                     	;# 
   899  030C                     	;# 
   900  030E                     	;# 
   901  0311                     	;# 
   902  0311                     	;# 
   903  0312                     	;# 
   904  0313                     	;# 
   905  0314                     	;# 
   906  0315                     	;# 
   907  0315                     	;# 
   908  0316                     	;# 
   909  0317                     	;# 
   910  0318                     	;# 
   911  038C                     	;# 
   912  038E                     	;# 
   913  0391                     	;# 
   914  0392                     	;# 
   915  0393                     	;# 
   916  0397                     	;# 
   917  0398                     	;# 
   918  0399                     	;# 
   919  039A                     	;# 
   920  039C                     	;# 
   921  039D                     	;# 
   922  039E                     	;# 
   923  039F                     	;# 
   924  0411                     	;# 
   925  0411                     	;# 
   926  0412                     	;# 
   927  0413                     	;# 
   928  0414                     	;# 
   929  0415                     	;# 
   930  0416                     	;# 
   931  0417                     	;# 
   932  0418                     	;# 
   933  0418                     	;# 
   934  0419                     	;# 
   935  041A                     	;# 
   936  041B                     	;# 
   937  041C                     	;# 
   938  041D                     	;# 
   939  041E                     	;# 
   940  041F                     	;# 
   941  0498                     	;# 
   942  0498                     	;# 
   943  0499                     	;# 
   944  049A                     	;# 
   945  049B                     	;# 
   946  049B                     	;# 
   947  049C                     	;# 
   948  049D                     	;# 
   949  049E                     	;# 
   950  049F                     	;# 
   951  0617                     	;# 
   952  0618                     	;# 
   953  0619                     	;# 
   954  0619                     	;# 
   955  061A                     	;# 
   956  061B                     	;# 
   957  061C                     	;# 
   958  061C                     	;# 
   959  061F                     	;# 
   960  0691                     	;# 
   961  0692                     	;# 
   962  0693                     	;# 
   963  0694                     	;# 
   964  0695                     	;# 
   965  0696                     	;# 
   966  0697                     	;# 
   967  0698                     	;# 
   968  0699                     	;# 
   969  0711                     	;# 
   970  0712                     	;# 
   971  0713                     	;# 
   972  0714                     	;# 
   973  0715                     	;# 
   974  0716                     	;# 
   975  0717                     	;# 
   976  0718                     	;# 
   977  0719                     	;# 
   978  0891                     	;# 
   979  0891                     	;# 
   980  0891                     	;# 
   981  0891                     	;# 
   982  0891                     	;# 
   983  0891                     	;# 
   984  0892                     	;# 
   985  0892                     	;# 
   986  0892                     	;# 
   987  0893                     	;# 
   988  0893                     	;# 
   989  0893                     	;# 
   990  0893                     	;# 
   991  0893                     	;# 
   992  0893                     	;# 
   993  0894                     	;# 
   994  0894                     	;# 
   995  0894                     	;# 
   996  0895                     	;# 
   997  0895                     	;# 
   998  0895                     	;# 
   999  0896                     	;# 
  1000  0896                     	;# 
  1001  0896                     	;# 
  1002  089B                     	;# 
  1003  0911                     	;# 
  1004  0912                     	;# 
  1005  0913                     	;# 
  1006  0914                     	;# 
  1007  0915                     	;# 
  1008  0916                     	;# 
  1009  0918                     	;# 
  1010  0919                     	;# 
  1011  091A                     	;# 
  1012  091B                     	;# 
  1013  091C                     	;# 
  1014  091D                     	;# 
  1015  091E                     	;# 
  1016  091F                     	;# 
  1017  0E0F                     	;# 
  1018  0E10                     	;# 
  1019  0E11                     	;# 
  1020  0E12                     	;# 
  1021  0E13                     	;# 
  1022  0E14                     	;# 
  1023  0E15                     	;# 
  1024  0E16                     	;# 
  1025  0E17                     	;# 
  1026  0E18                     	;# 
  1027  0E19                     	;# 
  1028  0E1A                     	;# 
  1029  0E1B                     	;# 
  1030  0E1C                     	;# 
  1031  0E1D                     	;# 
  1032  0E1E                     	;# 
  1033  0E1F                     	;# 
  1034  0E20                     	;# 
  1035  0E21                     	;# 
  1036  0E22                     	;# 
  1037  0E24                     	;# 
  1038  0E25                     	;# 
  1039  0E28                     	;# 
  1040  0E29                     	;# 
  1041  0E2A                     	;# 
  1042  0E2B                     	;# 
  1043  0E2C                     	;# 
  1044  0E2D                     	;# 
  1045  0E2E                     	;# 
  1046  0E2F                     	;# 
  1047  0E90                     	;# 
  1048  0E91                     	;# 
  1049  0E92                     	;# 
  1050  0E94                     	;# 
  1051  0E95                     	;# 
  1052  0EA0                     	;# 
  1053  0EA1                     	;# 
  1054  0EA2                     	;# 
  1055  0EA3                     	;# 
  1056  0EA4                     	;# 
  1057  0EA5                     	;# 
  1058  0F0F                     	;# 
  1059  0F10                     	;# 
  1060  0F11                     	;# 
  1061  0F12                     	;# 
  1062  0F13                     	;# 
  1063  0F14                     	;# 
  1064  0F15                     	;# 
  1065  0F16                     	;# 
  1066  0F17                     	;# 
  1067  0F18                     	;# 
  1068  0F19                     	;# 
  1069  0F1A                     	;# 
  1070  0F1B                     	;# 
  1071  0F1C                     	;# 
  1072  0F1D                     	;# 
  1073  0F1E                     	;# 
  1074  0F1F                     	;# 
  1075  0F20                     	;# 
  1076  0F21                     	;# 
  1077  0F22                     	;# 
  1078  0F23                     	;# 
  1079  0F24                     	;# 
  1080  0F25                     	;# 
  1081  0F26                     	;# 
  1082  0F27                     	;# 
  1083  0F28                     	;# 
  1084  0F29                     	;# 
  1085  0F2A                     	;# 
  1086  0F2B                     	;# 
  1087  0F2C                     	;# 
  1088  0F2D                     	;# 
  1089  0F2E                     	;# 
  1090  0F2F                     	;# 
  1091  0F30                     	;# 
  1092  0F31                     	;# 
  1093  0F32                     	;# 
  1094  0F33                     	;# 
  1095  0F34                     	;# 
  1096  0F35                     	;# 
  1097  0F36                     	;# 
  1098  0F37                     	;# 
  1099  0FE4                     	;# 
  1100  0FE5                     	;# 
  1101  0FE6                     	;# 
  1102  0FE7                     	;# 
  1103  0FE8                     	;# 
  1104  0FE9                     	;# 
  1105  0FEA                     	;# 
  1106  0FEB                     	;# 
  1107  0FED                     	;# 
  1108  0FEE                     	;# 
  1109  0FEF                     	;# 
  1110  0000                     	;# 
  1111  0001                     	;# 
  1112  0002                     	;# 
  1113  0003                     	;# 
  1114  0004                     	;# 
  1115  0005                     	;# 
  1116  0006                     	;# 
  1117  0007                     	;# 
  1118  0008                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000E                     	;# 
  1124  0010                     	;# 
  1125  0011                     	;# 
  1126  0012                     	;# 
  1127  0013                     	;# 
  1128  0014                     	;# 
  1129  0015                     	;# 
  1130  0015                     	;# 
  1131  0016                     	;# 
  1132  0016                     	;# 
  1133  0017                     	;# 
  1134  0018                     	;# 
  1135  0019                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  001B                     	;# 
  1139  001C                     	;# 
  1140  001D                     	;# 
  1141  001E                     	;# 
  1142  001F                     	;# 
  1143  008C                     	;# 
  1144  008E                     	;# 
  1145  0090                     	;# 
  1146  0091                     	;# 
  1147  0092                     	;# 
  1148  0093                     	;# 
  1149  0094                     	;# 
  1150  0097                     	;# 
  1151  009B                     	;# 
  1152  009B                     	;# 
  1153  009C                     	;# 
  1154  009D                     	;# 
  1155  009E                     	;# 
  1156  009F                     	;# 
  1157  010C                     	;# 
  1158  010E                     	;# 
  1159  0111                     	;# 
  1160  0112                     	;# 
  1161  0113                     	;# 
  1162  0114                     	;# 
  1163  0115                     	;# 
  1164  0116                     	;# 
  1165  0117                     	;# 
  1166  0118                     	;# 
  1167  0119                     	;# 
  1168  018C                     	;# 
  1169  018E                     	;# 
  1170  0199                     	;# 
  1171  0199                     	;# 
  1172  0199                     	;# 
  1173  019A                     	;# 
  1174  019A                     	;# 
  1175  019A                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019C                     	;# 
  1184  019D                     	;# 
  1185  019D                     	;# 
  1186  019D                     	;# 
  1187  019E                     	;# 
  1188  019E                     	;# 
  1189  019E                     	;# 
  1190  019F                     	;# 
  1191  019F                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  020C                     	;# 
  1196  020E                     	;# 
  1197  0211                     	;# 
  1198  0211                     	;# 
  1199  0212                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0213                     	;# 
  1203  0214                     	;# 
  1204  0214                     	;# 
  1205  0215                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0216                     	;# 
  1210  0216                     	;# 
  1211  0217                     	;# 
  1212  0217                     	;# 
  1213  0219                     	;# 
  1214  021A                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021D                     	;# 
  1218  021D                     	;# 
  1219  021E                     	;# 
  1220  021F                     	;# 
  1221  028C                     	;# 
  1222  028E                     	;# 
  1223  0291                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0293                     	;# 
  1227  0294                     	;# 
  1228  0295                     	;# 
  1229  0295                     	;# 
  1230  0296                     	;# 
  1231  0297                     	;# 
  1232  0298                     	;# 
  1233  029F                     	;# 
  1234  030C                     	;# 
  1235  030E                     	;# 
  1236  0311                     	;# 
  1237  0311                     	;# 
  1238  0312                     	;# 
  1239  0313                     	;# 
  1240  0314                     	;# 
  1241  0315                     	;# 
  1242  0315                     	;# 
  1243  0316                     	;# 
  1244  0317                     	;# 
  1245  0318                     	;# 
  1246  038C                     	;# 
  1247  038E                     	;# 
  1248  0391                     	;# 
  1249  0392                     	;# 
  1250  0393                     	;# 
  1251  0397                     	;# 
  1252  0398                     	;# 
  1253  0399                     	;# 
  1254  039A                     	;# 
  1255  039C                     	;# 
  1256  039D                     	;# 
  1257  039E                     	;# 
  1258  039F                     	;# 
  1259  0411                     	;# 
  1260  0411                     	;# 
  1261  0412                     	;# 
  1262  0413                     	;# 
  1263  0414                     	;# 
  1264  0415                     	;# 
  1265  0416                     	;# 
  1266  0417                     	;# 
  1267  0418                     	;# 
  1268  0418                     	;# 
  1269  0419                     	;# 
  1270  041A                     	;# 
  1271  041B                     	;# 
  1272  041C                     	;# 
  1273  041D                     	;# 
  1274  041E                     	;# 
  1275  041F                     	;# 
  1276  0498                     	;# 
  1277  0498                     	;# 
  1278  0499                     	;# 
  1279  049A                     	;# 
  1280  049B                     	;# 
  1281  049B                     	;# 
  1282  049C                     	;# 
  1283  049D                     	;# 
  1284  049E                     	;# 
  1285  049F                     	;# 
  1286  0617                     	;# 
  1287  0618                     	;# 
  1288  0619                     	;# 
  1289  0619                     	;# 
  1290  061A                     	;# 
  1291  061B                     	;# 
  1292  061C                     	;# 
  1293  061C                     	;# 
  1294  061F                     	;# 
  1295  0691                     	;# 
  1296  0692                     	;# 
  1297  0693                     	;# 
  1298  0694                     	;# 
  1299  0695                     	;# 
  1300  0696                     	;# 
  1301  0697                     	;# 
  1302  0698                     	;# 
  1303  0699                     	;# 
  1304  0711                     	;# 
  1305  0712                     	;# 
  1306  0713                     	;# 
  1307  0714                     	;# 
  1308  0715                     	;# 
  1309  0716                     	;# 
  1310  0717                     	;# 
  1311  0718                     	;# 
  1312  0719                     	;# 
  1313  0891                     	;# 
  1314  0891                     	;# 
  1315  0891                     	;# 
  1316  0891                     	;# 
  1317  0891                     	;# 
  1318  0891                     	;# 
  1319  0892                     	;# 
  1320  0892                     	;# 
  1321  0892                     	;# 
  1322  0893                     	;# 
  1323  0893                     	;# 
  1324  0893                     	;# 
  1325  0893                     	;# 
  1326  0893                     	;# 
  1327  0893                     	;# 
  1328  0894                     	;# 
  1329  0894                     	;# 
  1330  0894                     	;# 
  1331  0895                     	;# 
  1332  0895                     	;# 
  1333  0895                     	;# 
  1334  0896                     	;# 
  1335  0896                     	;# 
  1336  0896                     	;# 
  1337  089B                     	;# 
  1338  0911                     	;# 
  1339  0912                     	;# 
  1340  0913                     	;# 
  1341  0914                     	;# 
  1342  0915                     	;# 
  1343  0916                     	;# 
  1344  0918                     	;# 
  1345  0919                     	;# 
  1346  091A                     	;# 
  1347  091B                     	;# 
  1348  091C                     	;# 
  1349  091D                     	;# 
  1350  091E                     	;# 
  1351  091F                     	;# 
  1352  0E0F                     	;# 
  1353  0E10                     	;# 
  1354  0E11                     	;# 
  1355  0E12                     	;# 
  1356  0E13                     	;# 
  1357  0E14                     	;# 
  1358  0E15                     	;# 
  1359  0E16                     	;# 
  1360  0E17                     	;# 
  1361  0E18                     	;# 
  1362  0E19                     	;# 
  1363  0E1A                     	;# 
  1364  0E1B                     	;# 
  1365  0E1C                     	;# 
  1366  0E1D                     	;# 
  1367  0E1E                     	;# 
  1368  0E1F                     	;# 
  1369  0E20                     	;# 
  1370  0E21                     	;# 
  1371  0E22                     	;# 
  1372  0E24                     	;# 
  1373  0E25                     	;# 
  1374  0E28                     	;# 
  1375  0E29                     	;# 
  1376  0E2A                     	;# 
  1377  0E2B                     	;# 
  1378  0E2C                     	;# 
  1379  0E2D                     	;# 
  1380  0E2E                     	;# 
  1381  0E2F                     	;# 
  1382  0E90                     	;# 
  1383  0E91                     	;# 
  1384  0E92                     	;# 
  1385  0E94                     	;# 
  1386  0E95                     	;# 
  1387  0EA0                     	;# 
  1388  0EA1                     	;# 
  1389  0EA2                     	;# 
  1390  0EA3                     	;# 
  1391  0EA4                     	;# 
  1392  0EA5                     	;# 
  1393  0F0F                     	;# 
  1394  0F10                     	;# 
  1395  0F11                     	;# 
  1396  0F12                     	;# 
  1397  0F13                     	;# 
  1398  0F14                     	;# 
  1399  0F15                     	;# 
  1400  0F16                     	;# 
  1401  0F17                     	;# 
  1402  0F18                     	;# 
  1403  0F19                     	;# 
  1404  0F1A                     	;# 
  1405  0F1B                     	;# 
  1406  0F1C                     	;# 
  1407  0F1D                     	;# 
  1408  0F1E                     	;# 
  1409  0F1F                     	;# 
  1410  0F20                     	;# 
  1411  0F21                     	;# 
  1412  0F22                     	;# 
  1413  0F23                     	;# 
  1414  0F24                     	;# 
  1415  0F25                     	;# 
  1416  0F26                     	;# 
  1417  0F27                     	;# 
  1418  0F28                     	;# 
  1419  0F29                     	;# 
  1420  0F2A                     	;# 
  1421  0F2B                     	;# 
  1422  0F2C                     	;# 
  1423  0F2D                     	;# 
  1424  0F2E                     	;# 
  1425  0F2F                     	;# 
  1426  0F30                     	;# 
  1427  0F31                     	;# 
  1428  0F32                     	;# 
  1429  0F33                     	;# 
  1430  0F34                     	;# 
  1431  0F35                     	;# 
  1432  0F36                     	;# 
  1433  0F37                     	;# 
  1434  0FE4                     	;# 
  1435  0FE5                     	;# 
  1436  0FE6                     	;# 
  1437  0FE7                     	;# 
  1438  0FE8                     	;# 
  1439  0FE9                     	;# 
  1440  0FEA                     	;# 
  1441  0FEB                     	;# 
  1442  0FED                     	;# 
  1443  0FEE                     	;# 
  1444  0FEF                     	;# 
  1445  0000                     	;# 
  1446  0001                     	;# 
  1447  0002                     	;# 
  1448  0003                     	;# 
  1449  0004                     	;# 
  1450  0005                     	;# 
  1451  0006                     	;# 
  1452  0007                     	;# 
  1453  0008                     	;# 
  1454  0009                     	;# 
  1455  000A                     	;# 
  1456  000B                     	;# 
  1457  000C                     	;# 
  1458  000E                     	;# 
  1459  0010                     	;# 
  1460  0011                     	;# 
  1461  0012                     	;# 
  1462  0013                     	;# 
  1463  0014                     	;# 
  1464  0015                     	;# 
  1465  0015                     	;# 
  1466  0016                     	;# 
  1467  0016                     	;# 
  1468  0017                     	;# 
  1469  0018                     	;# 
  1470  0019                     	;# 
  1471  0019                     	;# 
  1472  001A                     	;# 
  1473  001B                     	;# 
  1474  001C                     	;# 
  1475  001D                     	;# 
  1476  001E                     	;# 
  1477  001F                     	;# 
  1478  008C                     	;# 
  1479  008E                     	;# 
  1480  0090                     	;# 
  1481  0091                     	;# 
  1482  0092                     	;# 
  1483  0093                     	;# 
  1484  0094                     	;# 
  1485  0097                     	;# 
  1486  009B                     	;# 
  1487  009B                     	;# 
  1488  009C                     	;# 
  1489  009D                     	;# 
  1490  009E                     	;# 
  1491  009F                     	;# 
  1492  010C                     	;# 
  1493  010E                     	;# 
  1494  0111                     	;# 
  1495  0112                     	;# 
  1496  0113                     	;# 
  1497  0114                     	;# 
  1498  0115                     	;# 
  1499  0116                     	;# 
  1500  0117                     	;# 
  1501  0118                     	;# 
  1502  0119                     	;# 
  1503  018C                     	;# 
  1504  018E                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  020C                     	;# 
  1531  020E                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  0219                     	;# 
  1549  021A                     	;# 
  1550  021B                     	;# 
  1551  021C                     	;# 
  1552  021D                     	;# 
  1553  021D                     	;# 
  1554  021E                     	;# 
  1555  021F                     	;# 
  1556  028C                     	;# 
  1557  028E                     	;# 
  1558  0291                     	;# 
  1559  0291                     	;# 
  1560  0292                     	;# 
  1561  0293                     	;# 
  1562  0294                     	;# 
  1563  0295                     	;# 
  1564  0295                     	;# 
  1565  0296                     	;# 
  1566  0297                     	;# 
  1567  0298                     	;# 
  1568  029F                     	;# 
  1569  030C                     	;# 
  1570  030E                     	;# 
  1571  0311                     	;# 
  1572  0311                     	;# 
  1573  0312                     	;# 
  1574  0313                     	;# 
  1575  0314                     	;# 
  1576  0315                     	;# 
  1577  0315                     	;# 
  1578  0316                     	;# 
  1579  0317                     	;# 
  1580  0318                     	;# 
  1581  038C                     	;# 
  1582  038E                     	;# 
  1583  0391                     	;# 
  1584  0392                     	;# 
  1585  0393                     	;# 
  1586  0397                     	;# 
  1587  0398                     	;# 
  1588  0399                     	;# 
  1589  039A                     	;# 
  1590  039C                     	;# 
  1591  039D                     	;# 
  1592  039E                     	;# 
  1593  039F                     	;# 
  1594  0411                     	;# 
  1595  0411                     	;# 
  1596  0412                     	;# 
  1597  0413                     	;# 
  1598  0414                     	;# 
  1599  0415                     	;# 
  1600  0416                     	;# 
  1601  0417                     	;# 
  1602  0418                     	;# 
  1603  0418                     	;# 
  1604  0419                     	;# 
  1605  041A                     	;# 
  1606  041B                     	;# 
  1607  041C                     	;# 
  1608  041D                     	;# 
  1609  041E                     	;# 
  1610  041F                     	;# 
  1611  0498                     	;# 
  1612  0498                     	;# 
  1613  0499                     	;# 
  1614  049A                     	;# 
  1615  049B                     	;# 
  1616  049B                     	;# 
  1617  049C                     	;# 
  1618  049D                     	;# 
  1619  049E                     	;# 
  1620  049F                     	;# 
  1621  0617                     	;# 
  1622  0618                     	;# 
  1623  0619                     	;# 
  1624  0619                     	;# 
  1625  061A                     	;# 
  1626  061B                     	;# 
  1627  061C                     	;# 
  1628  061C                     	;# 
  1629  061F                     	;# 
  1630  0691                     	;# 
  1631  0692                     	;# 
  1632  0693                     	;# 
  1633  0694                     	;# 
  1634  0695                     	;# 
  1635  0696                     	;# 
  1636  0697                     	;# 
  1637  0698                     	;# 
  1638  0699                     	;# 
  1639  0711                     	;# 
  1640  0712                     	;# 
  1641  0713                     	;# 
  1642  0714                     	;# 
  1643  0715                     	;# 
  1644  0716                     	;# 
  1645  0717                     	;# 
  1646  0718                     	;# 
  1647  0719                     	;# 
  1648  0891                     	;# 
  1649  0891                     	;# 
  1650  0891                     	;# 
  1651  0891                     	;# 
  1652  0891                     	;# 
  1653  0891                     	;# 
  1654  0892                     	;# 
  1655  0892                     	;# 
  1656  0892                     	;# 
  1657  0893                     	;# 
  1658  0893                     	;# 
  1659  0893                     	;# 
  1660  0893                     	;# 
  1661  0893                     	;# 
  1662  0893                     	;# 
  1663  0894                     	;# 
  1664  0894                     	;# 
  1665  0894                     	;# 
  1666  0895                     	;# 
  1667  0895                     	;# 
  1668  0895                     	;# 
  1669  0896                     	;# 
  1670  0896                     	;# 
  1671  0896                     	;# 
  1672  089B                     	;# 
  1673  0911                     	;# 
  1674  0912                     	;# 
  1675  0913                     	;# 
  1676  0914                     	;# 
  1677  0915                     	;# 
  1678  0916                     	;# 
  1679  0918                     	;# 
  1680  0919                     	;# 
  1681  091A                     	;# 
  1682  091B                     	;# 
  1683  091C                     	;# 
  1684  091D                     	;# 
  1685  091E                     	;# 
  1686  091F                     	;# 
  1687  0E0F                     	;# 
  1688  0E10                     	;# 
  1689  0E11                     	;# 
  1690  0E12                     	;# 
  1691  0E13                     	;# 
  1692  0E14                     	;# 
  1693  0E15                     	;# 
  1694  0E16                     	;# 
  1695  0E17                     	;# 
  1696  0E18                     	;# 
  1697  0E19                     	;# 
  1698  0E1A                     	;# 
  1699  0E1B                     	;# 
  1700  0E1C                     	;# 
  1701  0E1D                     	;# 
  1702  0E1E                     	;# 
  1703  0E1F                     	;# 
  1704  0E20                     	;# 
  1705  0E21                     	;# 
  1706  0E22                     	;# 
  1707  0E24                     	;# 
  1708  0E25                     	;# 
  1709  0E28                     	;# 
  1710  0E29                     	;# 
  1711  0E2A                     	;# 
  1712  0E2B                     	;# 
  1713  0E2C                     	;# 
  1714  0E2D                     	;# 
  1715  0E2E                     	;# 
  1716  0E2F                     	;# 
  1717  0E90                     	;# 
  1718  0E91                     	;# 
  1719  0E92                     	;# 
  1720  0E94                     	;# 
  1721  0E95                     	;# 
  1722  0EA0                     	;# 
  1723  0EA1                     	;# 
  1724  0EA2                     	;# 
  1725  0EA3                     	;# 
  1726  0EA4                     	;# 
  1727  0EA5                     	;# 
  1728  0F0F                     	;# 
  1729  0F10                     	;# 
  1730  0F11                     	;# 
  1731  0F12                     	;# 
  1732  0F13                     	;# 
  1733  0F14                     	;# 
  1734  0F15                     	;# 
  1735  0F16                     	;# 
  1736  0F17                     	;# 
  1737  0F18                     	;# 
  1738  0F19                     	;# 
  1739  0F1A                     	;# 
  1740  0F1B                     	;# 
  1741  0F1C                     	;# 
  1742  0F1D                     	;# 
  1743  0F1E                     	;# 
  1744  0F1F                     	;# 
  1745  0F20                     	;# 
  1746  0F21                     	;# 
  1747  0F22                     	;# 
  1748  0F23                     	;# 
  1749  0F24                     	;# 
  1750  0F25                     	;# 
  1751  0F26                     	;# 
  1752  0F27                     	;# 
  1753  0F28                     	;# 
  1754  0F29                     	;# 
  1755  0F2A                     	;# 
  1756  0F2B                     	;# 
  1757  0F2C                     	;# 
  1758  0F2D                     	;# 
  1759  0F2E                     	;# 
  1760  0F2F                     	;# 
  1761  0F30                     	;# 
  1762  0F31                     	;# 
  1763  0F32                     	;# 
  1764  0F33                     	;# 
  1765  0F34                     	;# 
  1766  0F35                     	;# 
  1767  0F36                     	;# 
  1768  0F37                     	;# 
  1769  0FE4                     	;# 
  1770  0FE5                     	;# 
  1771  0FE6                     	;# 
  1772  0FE7                     	;# 
  1773  0FE8                     	;# 
  1774  0FE9                     	;# 
  1775  0FEA                     	;# 
  1776  0FEB                     	;# 
  1777  0FED                     	;# 
  1778  0FEE                     	;# 
  1779  0FEF                     	;# 
  1780  0000                     	;# 
  1781  0001                     	;# 
  1782  0002                     	;# 
  1783  0003                     	;# 
  1784  0004                     	;# 
  1785  0005                     	;# 
  1786  0006                     	;# 
  1787  0007                     	;# 
  1788  0008                     	;# 
  1789  0009                     	;# 
  1790  000A                     	;# 
  1791  000B                     	;# 
  1792  000C                     	;# 
  1793  000E                     	;# 
  1794  0010                     	;# 
  1795  0011                     	;# 
  1796  0012                     	;# 
  1797  0013                     	;# 
  1798  0014                     	;# 
  1799  0015                     	;# 
  1800  0015                     	;# 
  1801  0016                     	;# 
  1802  0016                     	;# 
  1803  0017                     	;# 
  1804  0018                     	;# 
  1805  0019                     	;# 
  1806  0019                     	;# 
  1807  001A                     	;# 
  1808  001B                     	;# 
  1809  001C                     	;# 
  1810  001D                     	;# 
  1811  001E                     	;# 
  1812  001F                     	;# 
  1813  008C                     	;# 
  1814  008E                     	;# 
  1815  0090                     	;# 
  1816  0091                     	;# 
  1817  0092                     	;# 
  1818  0093                     	;# 
  1819  0094                     	;# 
  1820  0097                     	;# 
  1821  009B                     	;# 
  1822  009B                     	;# 
  1823  009C                     	;# 
  1824  009D                     	;# 
  1825  009E                     	;# 
  1826  009F                     	;# 
  1827  010C                     	;# 
  1828  010E                     	;# 
  1829  0111                     	;# 
  1830  0112                     	;# 
  1831  0113                     	;# 
  1832  0114                     	;# 
  1833  0115                     	;# 
  1834  0116                     	;# 
  1835  0117                     	;# 
  1836  0118                     	;# 
  1837  0119                     	;# 
  1838  018C                     	;# 
  1839  018E                     	;# 
  1840  0199                     	;# 
  1841  0199                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019A                     	;# 
  1845  019A                     	;# 
  1846  019B                     	;# 
  1847  019B                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019C                     	;# 
  1852  019C                     	;# 
  1853  019C                     	;# 
  1854  019D                     	;# 
  1855  019D                     	;# 
  1856  019D                     	;# 
  1857  019E                     	;# 
  1858  019E                     	;# 
  1859  019E                     	;# 
  1860  019F                     	;# 
  1861  019F                     	;# 
  1862  019F                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  020C                     	;# 
  1866  020E                     	;# 
  1867  0211                     	;# 
  1868  0211                     	;# 
  1869  0212                     	;# 
  1870  0212                     	;# 
  1871  0213                     	;# 
  1872  0213                     	;# 
  1873  0214                     	;# 
  1874  0214                     	;# 
  1875  0215                     	;# 
  1876  0215                     	;# 
  1877  0215                     	;# 
  1878  0215                     	;# 
  1879  0216                     	;# 
  1880  0216                     	;# 
  1881  0217                     	;# 
  1882  0217                     	;# 
  1883  0219                     	;# 
  1884  021A                     	;# 
  1885  021B                     	;# 
  1886  021C                     	;# 
  1887  021D                     	;# 
  1888  021D                     	;# 
  1889  021E                     	;# 
  1890  021F                     	;# 
  1891  028C                     	;# 
  1892  028E                     	;# 
  1893  0291                     	;# 
  1894  0291                     	;# 
  1895  0292                     	;# 
  1896  0293                     	;# 
  1897  0294                     	;# 
  1898  0295                     	;# 
  1899  0295                     	;# 
  1900  0296                     	;# 
  1901  0297                     	;# 
  1902  0298                     	;# 
  1903  029F                     	;# 
  1904  030C                     	;# 
  1905  030E                     	;# 
  1906  0311                     	;# 
  1907  0311                     	;# 
  1908  0312                     	;# 
  1909  0313                     	;# 
  1910  0314                     	;# 
  1911  0315                     	;# 
  1912  0315                     	;# 
  1913  0316                     	;# 
  1914  0317                     	;# 
  1915  0318                     	;# 
  1916  038C                     	;# 
  1917  038E                     	;# 
  1918  0391                     	;# 
  1919  0392                     	;# 
  1920  0393                     	;# 
  1921  0397                     	;# 
  1922  0398                     	;# 
  1923  0399                     	;# 
  1924  039A                     	;# 
  1925  039C                     	;# 
  1926  039D                     	;# 
  1927  039E                     	;# 
  1928  039F                     	;# 
  1929  0411                     	;# 
  1930  0411                     	;# 
  1931  0412                     	;# 
  1932  0413                     	;# 
  1933  0414                     	;# 
  1934  0415                     	;# 
  1935  0416                     	;# 
  1936  0417                     	;# 
  1937  0418                     	;# 
  1938  0418                     	;# 
  1939  0419                     	;# 
  1940  041A                     	;# 
  1941  041B                     	;# 
  1942  041C                     	;# 
  1943  041D                     	;# 
  1944  041E                     	;# 
  1945  041F                     	;# 
  1946  0498                     	;# 
  1947  0498                     	;# 
  1948  0499                     	;# 
  1949  049A                     	;# 
  1950  049B                     	;# 
  1951  049B                     	;# 
  1952  049C                     	;# 
  1953  049D                     	;# 
  1954  049E                     	;# 
  1955  049F                     	;# 
  1956  0617                     	;# 
  1957  0618                     	;# 
  1958  0619                     	;# 
  1959  0619                     	;# 
  1960  061A                     	;# 
  1961  061B                     	;# 
  1962  061C                     	;# 
  1963  061C                     	;# 
  1964  061F                     	;# 
  1965  0691                     	;# 
  1966  0692                     	;# 
  1967  0693                     	;# 
  1968  0694                     	;# 
  1969  0695                     	;# 
  1970  0696                     	;# 
  1971  0697                     	;# 
  1972  0698                     	;# 
  1973  0699                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0714                     	;# 
  1978  0715                     	;# 
  1979  0716                     	;# 
  1980  0717                     	;# 
  1981  0718                     	;# 
  1982  0719                     	;# 
  1983  0891                     	;# 
  1984  0891                     	;# 
  1985  0891                     	;# 
  1986  0891                     	;# 
  1987  0891                     	;# 
  1988  0891                     	;# 
  1989  0892                     	;# 
  1990  0892                     	;# 
  1991  0892                     	;# 
  1992  0893                     	;# 
  1993  0893                     	;# 
  1994  0893                     	;# 
  1995  0893                     	;# 
  1996  0893                     	;# 
  1997  0893                     	;# 
  1998  0894                     	;# 
  1999  0894                     	;# 
  2000  0894                     	;# 
  2001  0895                     	;# 
  2002  0895                     	;# 
  2003  0895                     	;# 
  2004  0896                     	;# 
  2005  0896                     	;# 
  2006  0896                     	;# 
  2007  089B                     	;# 
  2008  0911                     	;# 
  2009  0912                     	;# 
  2010  0913                     	;# 
  2011  0914                     	;# 
  2012  0915                     	;# 
  2013  0916                     	;# 
  2014  0918                     	;# 
  2015  0919                     	;# 
  2016  091A                     	;# 
  2017  091B                     	;# 
  2018  091C                     	;# 
  2019  091D                     	;# 
  2020  091E                     	;# 
  2021  091F                     	;# 
  2022  0E0F                     	;# 
  2023  0E10                     	;# 
  2024  0E11                     	;# 
  2025  0E12                     	;# 
  2026  0E13                     	;# 
  2027  0E14                     	;# 
  2028  0E15                     	;# 
  2029  0E16                     	;# 
  2030  0E17                     	;# 
  2031  0E18                     	;# 
  2032  0E19                     	;# 
  2033  0E1A                     	;# 
  2034  0E1B                     	;# 
  2035  0E1C                     	;# 
  2036  0E1D                     	;# 
  2037  0E1E                     	;# 
  2038  0E1F                     	;# 
  2039  0E20                     	;# 
  2040  0E21                     	;# 
  2041  0E22                     	;# 
  2042  0E24                     	;# 
  2043  0E25                     	;# 
  2044  0E28                     	;# 
  2045  0E29                     	;# 
  2046  0E2A                     	;# 
  2047  0E2B                     	;# 
  2048  0E2C                     	;# 
  2049  0E2D                     	;# 
  2050  0E2E                     	;# 
  2051  0E2F                     	;# 
  2052  0E90                     	;# 
  2053  0E91                     	;# 
  2054  0E92                     	;# 
  2055  0E94                     	;# 
  2056  0E95                     	;# 
  2057  0EA0                     	;# 
  2058  0EA1                     	;# 
  2059  0EA2                     	;# 
  2060  0EA3                     	;# 
  2061  0EA4                     	;# 
  2062  0EA5                     	;# 
  2063  0F0F                     	;# 
  2064  0F10                     	;# 
  2065  0F11                     	;# 
  2066  0F12                     	;# 
  2067  0F13                     	;# 
  2068  0F14                     	;# 
  2069  0F15                     	;# 
  2070  0F16                     	;# 
  2071  0F17                     	;# 
  2072  0F18                     	;# 
  2073  0F19                     	;# 
  2074  0F1A                     	;# 
  2075  0F1B                     	;# 
  2076  0F1C                     	;# 
  2077  0F1D                     	;# 
  2078  0F1E                     	;# 
  2079  0F1F                     	;# 
  2080  0F20                     	;# 
  2081  0F21                     	;# 
  2082  0F22                     	;# 
  2083  0F23                     	;# 
  2084  0F24                     	;# 
  2085  0F25                     	;# 
  2086  0F26                     	;# 
  2087  0F27                     	;# 
  2088  0F28                     	;# 
  2089  0F29                     	;# 
  2090  0F2A                     	;# 
  2091  0F2B                     	;# 
  2092  0F2C                     	;# 
  2093  0F2D                     	;# 
  2094  0F2E                     	;# 
  2095  0F2F                     	;# 
  2096  0F30                     	;# 
  2097  0F31                     	;# 
  2098  0F32                     	;# 
  2099  0F33                     	;# 
  2100  0F34                     	;# 
  2101  0F35                     	;# 
  2102  0F36                     	;# 
  2103  0F37                     	;# 
  2104  0FE4                     	;# 
  2105  0FE5                     	;# 
  2106  0FE6                     	;# 
  2107  0FE7                     	;# 
  2108  0FE8                     	;# 
  2109  0FE9                     	;# 
  2110  0FEA                     	;# 
  2111  0FEB                     	;# 
  2112  0FED                     	;# 
  2113  0FEE                     	;# 
  2114  0FEF                     	;# 
  2115  1FE0                     _romArray_absaddr	set	8160
  2116                           
  2117                           	psect	stringtext1
  2118  1000                     __pstringtext1:	
  2119  1000                     _resetRomData:	
  2120  1000  34AA               	retlw	170
  2121  1001  3455               	retlw	85
  2122  1002  346E               	retlw	110
  2123  1003  3463               	retlw	99
  2124  1004  346F               	retlw	111
  2125  1005  346E               	retlw	110
  2126  1006  3466               	retlw	102
  2127  1007  3469               	retlw	105
  2128  1008  3467               	retlw	103
  2129  1009  3475               	retlw	117
  2130  100A  3472               	retlw	114
  2131  100B  3465               	retlw	101
  2132  100C  3464               	retlw	100
  2133  100D  3400               	retlw	0
  2134  100E  3400               	retlw	0
  2135  100F  3400               	retlw	0
  2136  1010  3400               	retlw	0
  2137  1011  3400               	retlw	0
  2138  1012  3400               	retlw	0
  2139  1013                     __end_of_resetRomData:	
  2140                           
  2141                           	psect	stringtext2
  2142  102B                     __pstringtext2:	
  2143  102B                     _n_ADDRESS_P0:	
  2144  102B  34AD               	retlw	173
  2145  102C  3487               	retlw	135
  2146  102D  3466               	retlw	102
  2147  102E  34BC               	retlw	188
  2148  102F  34BB               	retlw	187
  2149  1030                     __end_of_n_ADDRESS_P0:	
  2150                           
  2151                           	psect	stringtext3
  2152  103E                     __pstringtext3:	
  2153  103E                     _n_ADDRESS_MUL:	
  2154  103E  3421               	retlw	33
  2155  103F                     __end_of_n_ADDRESS_MUL:	
  2156  1FE0                     _romArray_absaddr	set	8160
  2157                           
  2158                           	psect	_romArray_text
  2159  1FE0                     __p_romArray_text:	
  2160  1FE0                     _romArray:	
  2161  1FE0  3400               	retlw	0
  2162  1FE1  3400               	retlw	0
  2163  1FE2  3400               	retlw	0
  2164  1FE3  3400               	retlw	0
  2165  1FE4  3400               	retlw	0
  2166  1FE5  3400               	retlw	0
  2167  1FE6  3400               	retlw	0
  2168  1FE7  3400               	retlw	0
  2169  1FE8  3400               	retlw	0
  2170  1FE9  3400               	retlw	0
  2171  1FEA  3400               	retlw	0
  2172  1FEB  3400               	retlw	0
  2173  1FEC  3400               	retlw	0
  2174  1FED  3400               	retlw	0
  2175  1FEE  3400               	retlw	0
  2176  1FEF  3400               	retlw	0
  2177  1FF0  3400               	retlw	0
  2178  1FF1  3400               	retlw	0
  2179  1FF2  3400               	retlw	0
  2180  1FF3  3400               	retlw	0
  2181  1FF4  3400               	retlw	0
  2182  1FF5  3400               	retlw	0
  2183  1FF6  3400               	retlw	0
  2184  1FF7  3400               	retlw	0
  2185  1FF8  3400               	retlw	0
  2186  1FF9  3400               	retlw	0
  2187  1FFA  3400               	retlw	0
  2188  1FFB  3400               	retlw	0
  2189  1FFC  3400               	retlw	0
  2190  1FFD  3400               	retlw	0
  2191  1FFE  3400               	retlw	0
  2192  1FFF  3400               	retlw	0
  2193  2000                     __end_of_romArray:	
  2194  0003                     _STATUSbits	set	3
  2195  0010                     _PIR0bits	set	16
  2196  000E                     _PORTCbits	set	14
  2197  000C                     _PORTAbits	set	12
  2198  000B                     _INTCONbits	set	11
  2199  0097                     _WDTCONbits	set	151
  2200  009E                     _ADCON1bits	set	158
  2201  009C                     _ADRESH	set	156
  2202  009B                     _ADRESL	set	155
  2203  009D                     _ADCON0bits	set	157
  2204  0090                     _PIE0bits	set	144
  2205  008E                     _TRISCbits	set	142
  2206  008C                     _TRISAbits	set	140
  2207  0117                     _FVRCONbits	set	279
  2208  018E                     _ANSELCbits	set	398
  2209  018C                     _ANSELAbits	set	396
  2210  018E                     _ANSELC	set	398
  2211  018C                     _ANSELA	set	396
  2212  020C                     _WPUAbits	set	524
  2213  020E                     _WPUC	set	526
  2214  020C                     _WPUA	set	524
  2215  0211                     _SSP1BUF	set	529
  2216  0214                     _SSP1STATbits	set	532
  2217  0215                     _SSP1CON1bits	set	533
  2218  028E                     _ODCONC	set	654
  2219  028C                     _ODCONA	set	652
  2220  038E                     _INLVLC	set	910
  2221  038C                     _INLVLA	set	908
  2222  0894                     _PMDATH	set	2196
  2223  0893                     _PMDATL	set	2195
  2224  0896                     _PMCON2	set	2198
  2225  0895                     _PMCON1bits	set	2197
  2226  0892                     _PMADRH	set	2194
  2227  0891                     _PMADRL	set	2193
  2228  0895                     _PMCON1	set	2197
  2229  0919                     _OSCCON1bits	set	2329
  2230  0EA0                     _RC0PPSbits	set	3744
  2231  0EA2                     _RC2PPSbits	set	3746
  2232  0EA1                     _RC1PPSbits	set	3745
  2233                           
  2234                           	psect	stringtext4
  2235  1013                     __pstringtext4:	
  2236  1013                     STR_4:	
  2237  1013  3441               	retlw	65	;'A'
  2238  1014  344E               	retlw	78	;'N'
  2239  1015  3443               	retlw	67	;'C'
  2240  1016  3433               	retlw	51	;'3'
  2241  1017  342F               	retlw	47	;'/'
  2242  1018  3400               	retlw	0
  2243                           
  2244                           	psect	stringtext5
  2245  1019                     __pstringtext5:	
  2246  1019                     STR_6:	
  2247  1019  3454               	retlw	84	;'T'
  2248  101A  3445               	retlw	69	;'E'
  2249  101B  344D               	retlw	77	;'M'
  2250  101C  3450               	retlw	80	;'P'
  2251  101D  342F               	retlw	47	;'/'
  2252  101E  3400               	retlw	0
  2253                           
  2254                           	psect	stringtext6
  2255  101F                     __pstringtext6:	
  2256  101F                     STR_3:	
  2257  101F  3456               	retlw	86	;'V'
  2258  1020  3442               	retlw	66	;'B'
  2259  1021  3441               	retlw	65	;'A'
  2260  1022  3454               	retlw	84	;'T'
  2261  1023  342F               	retlw	47	;'/'
  2262  1024  3400               	retlw	0
  2263                           
  2264                           	psect	stringtext7
  2265  1025                     __pstringtext7:	
  2266  1025                     STR_8:	
  2267  1025  3442               	retlw	66	;'B'
  2268  1026  344F               	retlw	79	;'O'
  2269  1027  344F               	retlw	79	;'O'
  2270  1028  3454               	retlw	84	;'T'
  2271  1029  342F               	retlw	47	;'/'
  2272  102A  3400               	retlw	0
  2273                           
  2274                           	psect	stringtext8
  2275  1030                     __pstringtext8:	
  2276  1030                     STR_2:	
  2277  1030  3444               	retlw	68	;'D'
  2278  1031  3442               	retlw	66	;'B'
  2279  1032  3447               	retlw	71	;'G'
  2280  1033  342F               	retlw	47	;'/'
  2281  1034  3400               	retlw	0
  2282                           
  2283                           	psect	stringtext9
  2284  1035                     __pstringtext9:	
  2285  1035                     STR_5:	
  2286  1035  3446               	retlw	70	;'F'
  2287  1036  3456               	retlw	86	;'V'
  2288  1037  3452               	retlw	82	;'R'
  2289  1038  342F               	retlw	47	;'/'
  2290  1039  3400               	retlw	0
  2291                           
  2292                           	psect	stringtext10
  2293  103A                     __pstringtext10:	
  2294  103A                     STR_7:	
  2295  103A  3455               	retlw	85	;'U'
  2296  103B  3457               	retlw	87	;'W'
  2297  103C  3431               	retlw	49	;'1'
  2298  103D  3400               	retlw	0
  2299                           
  2300                           	psect	stringtext11
  2301  0000                     __pstringtext11:	
  2302  1017                     
  2303                           ; #config settings
  2304  0000                     
  2305                           	psect	cinit
  2306  0011                     start_initialization:	
  2307  0011                     __initialization:	
  2308                           
  2309                           ; Clear objects allocated to BANK0
  2310  0011  304D               	movlw	low __pbssBANK0
  2311  0012  0084               	movwf	4
  2312  0013  3000               	movlw	high __pbssBANK0
  2313  0014  0085               	movwf	5
  2314  0015  3016               	movlw	22
  2315  0016  318F  2721  3180   	fcall	clear_ram0
  2316                           
  2317                           ; Clear objects allocated to BANK1
  2318  0019  30A0               	movlw	low __pbssBANK1
  2319  001A  0084               	movwf	4
  2320  001B  3000               	movlw	high __pbssBANK1
  2321  001C  0085               	movwf	5
  2322  001D  3033               	movlw	51
  2323  001E  318F  2721  3180   	fcall	clear_ram0
  2324                           
  2325                           ; Clear objects allocated to BANK2
  2326  0021  3020               	movlw	low __pbssBANK2
  2327  0022  0084               	movwf	4
  2328  0023  3001               	movlw	high __pbssBANK2
  2329  0024  0085               	movwf	5
  2330  0025  3040               	movlw	64
  2331  0026  318F  2721  3180   	fcall	clear_ram0
  2332                           
  2333                           ; Clear objects allocated to BANK3
  2334  0029  30A0               	movlw	low __pbssBANK3
  2335  002A  0084               	movwf	4
  2336  002B  3001               	movlw	high __pbssBANK3
  2337  002C  0085               	movwf	5
  2338  002D  3040               	movlw	64
  2339  002E  318F  2721         	fcall	clear_ram0
  2340  0030                     end_of_initialization:	
  2341                           ;End of C runtime variable initialization code
  2342                           
  2343  0030                     __end_of__initialization:	
  2344  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2345  0031  0020               	movlb	0
  2346  0032  3181  29EE         	ljmp	_main	;jump to C main() function
  2347                           
  2348                           	psect	bssBANK0
  2349  004D                     __pbssBANK0:	
  2350  004D                     _counter:	
  2351  004D                     	ds	2
  2352  004F                     _nrf24l01RXPacketData:	
  2353  004F                     	ds	1
  2354  0050                     _sleepLoop:	
  2355  0050                     	ds	1
  2356  0051                     _nrf24l01:	
  2357  0051                     	ds	1
  2358  0052                     _nrf24l01TXPacketData:	
  2359  0052                     	ds	1
  2360  0053                     _tempString:	
  2361  0053                     	ds	16
  2362                           
  2363                           	psect	bssBANK1
  2364  00A0                     __pbssBANK1:	
  2365  00A0                     _romHolder:	
  2366  00A0                     	ds	32
  2367  00C0                     _romData:	
  2368  00C0                     	ds	19
  2369                           
  2370                           	psect	bssBANK2
  2371  0120                     __pbssBANK2:	
  2372  0120                     _nrf24l01TXBuffer:	
  2373  0120                     	ds	64
  2374                           
  2375                           	psect	bssBANK3
  2376  01A0                     __pbssBANK3:	
  2377  01A0                     _nrf24l01RXBuffer:	
  2378  01A0                     	ds	64
  2379                           
  2380                           	psect	clrtext
  2381  0F21                     clear_ram0:	
  2382                           ;	Called with FSR0 containing the base address, and
  2383                           ;	WREG with the size to clear
  2384                           
  2385  0F21  0064               	clrwdt	;clear the watchdog before getting into this loop
  2386  0F22                     clrloop0:	
  2387  0F22  0180               	clrf	0	;clear RAM location pointed to by FSR
  2388  0F23  3101               	addfsr 0,1
  2389  0F24  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2390  0F25  2F22               	goto	clrloop0	;have we reached the end yet?
  2391  0F26  3400               	retlw	0	;all done for this memory range, return
  2392                           
  2393                           	psect	cstackCOMMON
  2394  0070                     __pcstackCOMMON:	
  2395  0070                     ?_nrf24l01ISR:	
  2396  0070                     ?_nrf24l01SetRXMode:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_nrf24l01SendString:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ?_nrf24l01Init:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_flashRealod:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?_flashUpdate:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_nrf24l01CELow:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ??_nrf24l01CELow:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_nrf24l01CEHigh:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ??_nrf24l01CEHigh:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_nrf24l01CSLow:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ??_nrf24l01CSLow:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_nrf24l01CSHigh:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ??_nrf24l01CSHigh:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_nrf24l01InterfaceInit:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_nrf24l01SPISend:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ??_nrf24l01SPISend:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_nrf24l01SPIStart:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ??_nrf24l01SPIStart:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_nrf24l01SPIEnd:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ??_nrf24l01SPIEnd:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_enableInterrupts:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ??_enableInterrupts:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_exception:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_ISR:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_sleep:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_setName:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_loop:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_main:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_nrf24l01CheckACK:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_nrf24l01ReceiveString:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_nrf24l01InitRegisters:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?i1_flashWriteByte:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?i1_flashUpdate:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?i1_nrf24l01SetRXMode:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_strcmp:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?___wmul:	
  2502                           ; 2 bytes @ 0x0
  2503                           
  2504  0070                     ?i1_strlen:	
  2505                           ; 2 bytes @ 0x0
  2506                           
  2507  0070                     nrf24l01SPISend@data:	
  2508                           ; 2 bytes @ 0x0
  2509                           
  2510  0070                     enableInterrupts@enable:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     nrf24l01InitRegisters@isReciever:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     strcmp@s2:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ___wmul@multiplier:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     i1flashWriteByte@offset:	
  2523                           ; 2 bytes @ 0x0
  2524                           
  2525                           
  2526                           ; 2 bytes @ 0x0
  2527  0070                     	ds	1
  2528  0071                     ?i1_nrf24l01Send:	
  2529  0071                     i1nrf24l01Send@data:	
  2530                           ; 1 bytes @ 0x1
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x1
  2534  0071                     	ds	1
  2535  0072                     ??_strcmp:	
  2536  0072                     ??i1_nrf24l01Send:	
  2537                           ; 1 bytes @ 0x2
  2538                           
  2539  0072                     ??i1_strlen:	
  2540                           ; 1 bytes @ 0x2
  2541                           
  2542  0072                     ___wmul@multiplicand:	
  2543                           ; 1 bytes @ 0x2
  2544                           
  2545  0072                     i1flashWriteByte@data:	
  2546                           ; 2 bytes @ 0x2
  2547                           
  2548                           
  2549                           ; 2 bytes @ 0x2
  2550  0072                     	ds	1
  2551  0073                     strcmp@r:	
  2552  0073                     i1nrf24l01Send@command:	
  2553                           ; 1 bytes @ 0x3
  2554                           
  2555                           
  2556                           ; 1 bytes @ 0x3
  2557  0073                     	ds	1
  2558  0074                     ??___wmul:	
  2559  0074                     ??i1_flashWriteByte:	
  2560                           ; 1 bytes @ 0x4
  2561                           
  2562  0074                     ??i1_nrf24l01SetRXMode:	
  2563                           ; 1 bytes @ 0x4
  2564                           
  2565  0074                     strcmp@s1:	
  2566                           ; 1 bytes @ 0x4
  2567                           
  2568  0074                     ___wmul@product:	
  2569                           ; 1 bytes @ 0x4
  2570                           
  2571  0074                     i1flashWriteByte@address:	
  2572                           ; 2 bytes @ 0x4
  2573                           
  2574                           
  2575                           ; 2 bytes @ 0x4
  2576  0074                     	ds	1
  2577  0075                     i1nrf24l01SetRXMode@config:	
  2578                           
  2579                           ; 1 bytes @ 0x5
  2580  0075                     	ds	1
  2581  0076                     ??i1_flashUpdate:	
  2582  0076                     i1nrf24l01SetRXMode@rxMode:	
  2583                           ; 1 bytes @ 0x6
  2584                           
  2585  0076                     i1strlen@s:	
  2586                           ; 1 bytes @ 0x6
  2587                           
  2588                           
  2589                           ; 1 bytes @ 0x6
  2590  0076                     	ds	1
  2591  0077                     ??_nrf24l01CheckACK:	
  2592  0077                     i1strlen@cp:	
  2593                           ; 1 bytes @ 0x7
  2594                           
  2595                           
  2596                           ; 1 bytes @ 0x7
  2597  0077                     	ds	1
  2598  0078                     ?i1_memset:	
  2599  0078                     i1flashUpdate@i:	
  2600                           ; 2 bytes @ 0x8
  2601                           
  2602  0078                     i1memset@c:	
  2603                           ; 2 bytes @ 0x8
  2604                           
  2605                           
  2606                           ; 2 bytes @ 0x8
  2607  0078                     	ds	2
  2608  007A                     ??_exception:	
  2609  007A                     i1memset@n:	
  2610                           ; 1 bytes @ 0xA
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0xA
  2614  007A                     	ds	2
  2615  007C                     ??i1_memset:	
  2616  007C                     exception@exception:	
  2617                           ; 1 bytes @ 0xC
  2618                           
  2619                           
  2620                           ; 1 bytes @ 0xC
  2621  007C                     	ds	1
  2622  007D                     ??_nrf24l01ReceiveString:	
  2623                           
  2624                           ; 1 bytes @ 0xD
  2625  007D                     	ds	1
  2626  007E                     ??_ISR:	
  2627                           
  2628                           	psect	cstackBANK0
  2629  0020                     __pcstackBANK0:	
  2630                           ; 1 bytes @ 0xE
  2631                           
  2632  0020                     i1memset@p:	
  2633                           
  2634                           ; 1 bytes @ 0x0
  2635  0020                     	ds	1
  2636  0021                     i1memset@p1:	
  2637                           
  2638                           ; 1 bytes @ 0x1
  2639  0021                     	ds	1
  2640  0022                     nrf24l01ReceiveString@offset:	
  2641                           
  2642                           ; 1 bytes @ 0x2
  2643  0022                     	ds	1
  2644  0023                     nrf24l01ReceiveString@width:	
  2645                           
  2646                           ; 1 bytes @ 0x3
  2647  0023                     	ds	1
  2648  0024                     nrf24l01ReceiveString@i:	
  2649                           
  2650                           ; 1 bytes @ 0x4
  2651  0024                     	ds	1
  2652  0025                     ??_nrf24l01ISR:	
  2653                           
  2654                           ; 1 bytes @ 0x5
  2655  0025                     	ds	1
  2656  0026                     nrf24l01ISR@status:	
  2657                           
  2658                           ; 1 bytes @ 0x6
  2659  0026                     	ds	1
  2660  0027                     ?_memset:	
  2661  0027                     ?_strcat:	
  2662                           ; 1 bytes @ 0x7
  2663                           
  2664  0027                     ?_strcpy:	
  2665                           ; 1 bytes @ 0x7
  2666                           
  2667  0027                     ?_flashWriteByte:	
  2668                           ; 1 bytes @ 0x7
  2669                           
  2670  0027                     ??_nrf24l01InterfaceInit:	
  2671                           ; 1 bytes @ 0x7
  2672                           
  2673  0027                     ??_sleep:	
  2674                           ; 1 bytes @ 0x7
  2675                           
  2676  0027                     ?_nrf24l01Send:	
  2677                           ; 1 bytes @ 0x7
  2678                           
  2679  0027                     ?_strlen:	
  2680                           ; 1 bytes @ 0x7
  2681                           
  2682  0027                     ?_flashReadByte:	
  2683                           ; 2 bytes @ 0x7
  2684                           
  2685  0027                     ?___lwdiv:	
  2686                           ; 2 bytes @ 0x7
  2687                           
  2688  0027                     ?___lwmod:	
  2689                           ; 2 bytes @ 0x7
  2690                           
  2691  0027                     ?___lmul:	
  2692                           ; 2 bytes @ 0x7
  2693                           
  2694  0027                     ?___lldiv:	
  2695                           ; 4 bytes @ 0x7
  2696                           
  2697  0027                     nrf24l01Send@data:	
  2698                           ; 4 bytes @ 0x7
  2699                           
  2700  0027                     flashWriteByte@offset:	
  2701                           ; 1 bytes @ 0x7
  2702                           
  2703  0027                     flashReadByte@offset:	
  2704                           ; 2 bytes @ 0x7
  2705                           
  2706  0027                     ___lwdiv@divisor:	
  2707                           ; 2 bytes @ 0x7
  2708                           
  2709  0027                     ___lwmod@divisor:	
  2710                           ; 2 bytes @ 0x7
  2711                           
  2712  0027                     memset@c:	
  2713                           ; 2 bytes @ 0x7
  2714                           
  2715  0027                     strcat@from:	
  2716                           ; 2 bytes @ 0x7
  2717                           
  2718  0027                     strcpy@from:	
  2719                           ; 2 bytes @ 0x7
  2720                           
  2721  0027                     ___lmul@multiplier:	
  2722                           ; 2 bytes @ 0x7
  2723                           
  2724  0027                     ___lldiv@divisor:	
  2725                           ; 4 bytes @ 0x7
  2726                           
  2727                           
  2728                           ; 4 bytes @ 0x7
  2729  0027                     	ds	1
  2730  0028                     ??_nrf24l01Send:	
  2731                           
  2732                           ; 1 bytes @ 0x8
  2733  0028                     	ds	1
  2734  0029                     ??_strcat:	
  2735  0029                     ??_strcpy:	
  2736                           ; 1 bytes @ 0x9
  2737                           
  2738  0029                     ??_strlen:	
  2739                           ; 1 bytes @ 0x9
  2740                           
  2741  0029                     ??_flashReadByte:	
  2742                           ; 1 bytes @ 0x9
  2743                           
  2744  0029                     nrf24l01Send@command:	
  2745                           ; 1 bytes @ 0x9
  2746                           
  2747  0029                     flashWriteByte@data:	
  2748                           ; 1 bytes @ 0x9
  2749                           
  2750  0029                     ___lwdiv@dividend:	
  2751                           ; 2 bytes @ 0x9
  2752                           
  2753  0029                     ___lwmod@dividend:	
  2754                           ; 2 bytes @ 0x9
  2755                           
  2756  0029                     memset@n:	
  2757                           ; 2 bytes @ 0x9
  2758                           
  2759                           
  2760                           ; 2 bytes @ 0x9
  2761  0029                     	ds	1
  2762  002A                     ??_nrf24l01SetRXMode:	
  2763  002A                     ??_nrf24l01InitRegisters:	
  2764                           ; 1 bytes @ 0xA
  2765                           
  2766  002A                     strcat@cp:	
  2767                           ; 1 bytes @ 0xA
  2768                           
  2769  002A                     strcpy@to:	
  2770                           ; 1 bytes @ 0xA
  2771                           
  2772                           
  2773                           ; 1 bytes @ 0xA
  2774  002A                     	ds	1
  2775  002B                     ??_memset:	
  2776  002B                     ??_flashWriteByte:	
  2777                           ; 1 bytes @ 0xB
  2778                           
  2779  002B                     ??___lwdiv:	
  2780                           ; 1 bytes @ 0xB
  2781                           
  2782  002B                     ??___lwmod:	
  2783                           ; 1 bytes @ 0xB
  2784                           
  2785  002B                     nrf24l01SetRXMode@config:	
  2786                           ; 1 bytes @ 0xB
  2787                           
  2788  002B                     nrf24l01InitRegisters@channel:	
  2789                           ; 1 bytes @ 0xB
  2790                           
  2791  002B                     strcat@to:	
  2792                           ; 1 bytes @ 0xB
  2793                           
  2794  002B                     strcpy@cp:	
  2795                           ; 1 bytes @ 0xB
  2796                           
  2797  002B                     flashWriteByte@address:	
  2798                           ; 1 bytes @ 0xB
  2799                           
  2800  002B                     ___lmul@multiplicand:	
  2801                           ; 2 bytes @ 0xB
  2802                           
  2803  002B                     ___lldiv@dividend:	
  2804                           ; 4 bytes @ 0xB
  2805                           
  2806                           
  2807                           ; 4 bytes @ 0xB
  2808  002B                     	ds	1
  2809  002C                     nrf24l01SetRXMode@rxMode:	
  2810  002C                     nrf24l01InitRegisters@setupAW:	
  2811                           ; 1 bytes @ 0xC
  2812                           
  2813  002C                     ___lwmod@counter:	
  2814                           ; 1 bytes @ 0xC
  2815                           
  2816  002C                     memset@p:	
  2817                           ; 1 bytes @ 0xC
  2818                           
  2819  002C                     flashReadByte@result:	
  2820                           ; 1 bytes @ 0xC
  2821                           
  2822  002C                     ___lwdiv@quotient:	
  2823                           ; 2 bytes @ 0xC
  2824                           
  2825                           
  2826                           ; 2 bytes @ 0xC
  2827  002C                     	ds	1
  2828  002D                     ??_flashUpdate:	
  2829  002D                     nrf24l01InitRegisters@feature:	
  2830                           ; 1 bytes @ 0xD
  2831                           
  2832  002D                     memset@p1:	
  2833                           ; 1 bytes @ 0xD
  2834                           
  2835  002D                     strlen@cp:	
  2836                           ; 1 bytes @ 0xD
  2837                           
  2838                           
  2839                           ; 1 bytes @ 0xD
  2840  002D                     	ds	1
  2841  002E                     ??_setName:	
  2842  002E                     nrf24l01InitRegisters@rfSetup:	
  2843                           ; 1 bytes @ 0xE
  2844                           
  2845  002E                     ___lwdiv@counter:	
  2846                           ; 1 bytes @ 0xE
  2847                           
  2848  002E                     strlen@s:	
  2849                           ; 1 bytes @ 0xE
  2850                           
  2851  002E                     flashReadByte@address:	
  2852                           ; 1 bytes @ 0xE
  2853                           
  2854                           
  2855                           ; 2 bytes @ 0xE
  2856  002E                     	ds	1
  2857  002F                     ??_nrf24l01SendString:	
  2858  002F                     ??___lmul:	
  2859                           ; 1 bytes @ 0xF
  2860                           
  2861  002F                     ??___lldiv:	
  2862                           ; 1 bytes @ 0xF
  2863                           
  2864  002F                     nrf24l01InitRegisters@status:	
  2865                           ; 1 bytes @ 0xF
  2866                           
  2867  002F                     flashUpdate@i:	
  2868                           ; 1 bytes @ 0xF
  2869                           
  2870  002F                     ___lmul@product:	
  2871                           ; 2 bytes @ 0xF
  2872                           
  2873                           
  2874                           ; 4 bytes @ 0xF
  2875  002F                     	ds	1
  2876  0030                     ??_flashRealod:	
  2877  0030                     nrf24l01InitRegisters@enRXAddr:	
  2878                           ; 1 bytes @ 0x10
  2879                           
  2880  0030                     ___lldiv@quotient:	
  2881                           ; 1 bytes @ 0x10
  2882                           
  2883                           
  2884                           ; 4 bytes @ 0x10
  2885  0030                     	ds	1
  2886  0031                     nrf24l01SendString@i:	
  2887  0031                     nrf24l01InitRegisters@enAA:	
  2888                           ; 1 bytes @ 0x11
  2889                           
  2890  0031                     flashRealod@i:	
  2891                           ; 1 bytes @ 0x11
  2892                           
  2893                           
  2894                           ; 2 bytes @ 0x11
  2895  0031                     	ds	1
  2896  0032                     nrf24l01InitRegisters@DynPD:	
  2897                           
  2898                           ; 1 bytes @ 0x12
  2899  0032                     	ds	1
  2900  0033                     nrf24l01InitRegisters@config:	
  2901                           
  2902                           ; 1 bytes @ 0x13
  2903  0033                     	ds	1
  2904  0034                     ??_nrf24l01Init:	
  2905  0034                     ___lldiv@counter:	
  2906                           ; 1 bytes @ 0x14
  2907                           
  2908                           
  2909                           ; 1 bytes @ 0x14
  2910  0034                     	ds	1
  2911  0035                     ?_getADCValue:	
  2912  0035                     getADCValue@divider:	
  2913                           ; 4 bytes @ 0x15
  2914                           
  2915                           
  2916                           ; 4 bytes @ 0x15
  2917  0035                     	ds	1
  2918  0036                     nrf24l01Init@isReciever:	
  2919                           
  2920                           ; 1 bytes @ 0x16
  2921  0036                     	ds	3
  2922  0039                     ??_getADCValue:	
  2923                           
  2924                           ; 1 bytes @ 0x19
  2925  0039                     	ds	4
  2926  003D                     getADCValue@channel:	
  2927                           
  2928                           ; 1 bytes @ 0x1D
  2929  003D                     	ds	1
  2930  003E                     getADCValue@adcLoop:	
  2931                           
  2932                           ; 1 bytes @ 0x1E
  2933  003E                     	ds	1
  2934  003F                     getADCValue@adcSum:	
  2935                           
  2936                           ; 4 bytes @ 0x1F
  2937  003F                     	ds	4
  2938  0043                     ?_utoa:	
  2939  0043                     utoa@val:	
  2940                           ; 1 bytes @ 0x23
  2941                           
  2942                           
  2943                           ; 2 bytes @ 0x23
  2944  0043                     	ds	2
  2945  0045                     utoa@base:	
  2946                           
  2947                           ; 2 bytes @ 0x25
  2948  0045                     	ds	2
  2949  0047                     ??_utoa:	
  2950                           
  2951                           ; 1 bytes @ 0x27
  2952  0047                     	ds	1
  2953  0048                     utoa@v:	
  2954                           
  2955                           ; 2 bytes @ 0x28
  2956  0048                     	ds	2
  2957  004A                     utoa@c:	
  2958                           
  2959                           ; 1 bytes @ 0x2A
  2960  004A                     	ds	1
  2961  004B                     utoa@buf:	
  2962                           
  2963                           ; 1 bytes @ 0x2B
  2964  004B                     	ds	1
  2965  004C                     ??_loop:	
  2966  004C                     ??_main:	
  2967                           ; 1 bytes @ 0x2C
  2968                           
  2969                           
  2970                           ; 1 bytes @ 0x2C
  2971  004C                     	ds	1
  2972                           
  2973                           	psect	maintext
  2974  01EE                     __pmaintext:	
  2975 ;;
  2976 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2977 ;;
  2978 ;; *************** function _main *****************
  2979 ;; Defined at:
  2980 ;;		line 134 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : B1F/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels required when called:   13
  3000 ;; This function calls:
  3001 ;;		_flashRealod
  3002 ;;		_flashUpdate
  3003 ;;		_loop
  3004 ;;		_nrf24l01Init
  3005 ;;		_nrf24l01SendString
  3006 ;;		_setName
  3007 ;;		_sleep
  3008 ;;		_strcat
  3009 ;;		_strcpy
  3010 ;;		_utoa
  3011 ;; This function is called by:
  3012 ;;		Startup code after reset
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _main
  3018  01EE                     _main:	
  3019                           
  3020                           ;main.c: 137: ANSELA = 0x00;
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3024  01EE  0023               	movlb	3	; select bank3
  3025  01EF  018C               	clrf	12	;volatile
  3026                           
  3027                           ;main.c: 138: ANSELC = 0x00;
  3028  01F0  018E               	clrf	14	;volatile
  3029                           
  3030                           ;main.c: 140: ODCONA = 0x00;
  3031  01F1  0025               	movlb	5	; select bank5
  3032  01F2  018C               	clrf	12	;volatile
  3033                           
  3034                           ;main.c: 141: ODCONC = 0x00;
  3035  01F3  018E               	clrf	14	;volatile
  3036                           
  3037                           ;main.c: 146: INLVLA = 0x00;
  3038  01F4  0027               	movlb	7	; select bank7
  3039  01F5  018C               	clrf	12	;volatile
  3040                           
  3041                           ;main.c: 147: INLVLC = 0x00;
  3042  01F6  018E               	clrf	14	;volatile
  3043                           
  3044                           ;main.c: 149: WPUA = 0x00;
  3045  01F7  0024               	movlb	4	; select bank4
  3046  01F8  018C               	clrf	12	;volatile
  3047                           
  3048                           ;main.c: 150: WPUC = 0x00;
  3049  01F9  018E               	clrf	14	;volatile
  3050                           
  3051                           ;main.c: 152: TRISCbits.TRISC5 = 0;
  3052  01FA  0021               	movlb	1	; select bank1
  3053  01FB  128E               	bcf	14,5	;volatile
  3054                           
  3055                           ;main.c: 153: TRISCbits.TRISC4 = 0;
  3056  01FC  120E               	bcf	14,4	;volatile
  3057                           
  3058                           ;main.c: 155: PORTCbits.RC4 = 0;
  3059  01FD  0020               	movlb	0	; select bank0
  3060  01FE  120E               	bcf	14,4	;volatile
  3061                           
  3062                           ;main.c: 162: INTCONbits.PEIE = 0;
  3063  01FF  130B               	bcf	11,6	;volatile
  3064                           
  3065                           ;main.c: 163: INTCONbits.GIE = 0;
  3066  0200  138B               	bcf	11,7	;volatile
  3067                           
  3068                           ;main.c: 165: OSCCON1bits.NOSC = 0b000;
  3069  0201  308F               	movlw	-113
  3070  0202  0032               	movlb	18	; select bank18
  3071  0203  0599               	andwf	25,f	;volatile
  3072                           
  3073                           ;main.c: 166: OSCCON1bits.NDIV = 0b000;
  3074  0204  30F0               	movlw	-16
  3075  0205  0599               	andwf	25,f	;volatile
  3076                           
  3077                           ;main.c: 168: _delay((unsigned long)((10)*(16000000/4000.0)));
  3078  0206  3034               	movlw	52
  3079  0207  0020               	movlb	0	; select bank0
  3080  0208  00CC               	movwf	??_main
  3081  0209  30F1               	movlw	241
  3082  020A                     u1817:	
  3083  020A  0B89               	decfsz	9,f
  3084  020B  2A0A               	goto	u1817
  3085  020C  0BCC               	decfsz	??_main,f
  3086  020D  2A0A               	goto	u1817
  3087  020E  3200               	nop2
  3088                           
  3089                           ;main.c: 170: flashRealod();
  3090  020F  3187  2799  3181   	fcall	_flashRealod
  3091                           
  3092                           ;main.c: 174: if (romData.check != 0x05){
  3093  0212  3005               	movlw	5
  3094  0213  0021               	movlb	1	; select bank1
  3095  0214  0640               	xorwf	_romData^(0+128),w
  3096  0215  1903               	btfsc	3,2
  3097  0216  2A2C               	goto	l3317
  3098                           
  3099                           ;main.c: 175: romData.check = 0x05;
  3100  0217  3005               	movlw	5
  3101  0218  0020               	movlb	0	; select bank0
  3102  0219  00CC               	movwf	??_main
  3103  021A  084C               	movf	??_main,w
  3104  021B  0021               	movlb	1	; select bank1
  3105  021C  00C0               	movwf	_romData^(0+128)
  3106                           
  3107                           ;main.c: 176: strcpy(romData.name, "UW1");
  3108  021D  303A               	movlw	low (STR_7| (0+32768))
  3109  021E  0020               	movlb	0	; select bank0
  3110  021F  00A7               	movwf	strcpy@from
  3111  0220  3090               	movlw	high (STR_7| (0+32768))
  3112  0221  00A8               	movwf	strcpy@from+1
  3113  0222  30C1               	movlw	(low ((_romData| 0+1)))& (0+255)
  3114  0223  318F  27AD  3181   	fcall	_strcpy
  3115                           
  3116                           ;main.c: 177: romData.bootMode = 0x00;
  3117  0226  0021               	movlb	1	; select bank1
  3118  0227  01D1               	clrf	(_romData^(0+128)+17)
  3119  0228  01D2               	clrf	((_romData+1)^(0+128)+17)
  3120                           
  3121                           ;main.c: 178: flashUpdate();
  3122  0229  3187  2737  3181   	fcall	_flashUpdate
  3123  022C                     l3317:	
  3124                           
  3125                           ;main.c: 179: };main.c: 181: nrf24l01Init(0);
  3126  022C  3000               	movlw	0
  3127  022D  3186  2672  3181   	fcall	_nrf24l01Init
  3128                           
  3129                           ;main.c: 188: ADCON0bits.ADON = 0;
  3130  0230  0021               	movlb	1	; select bank1
  3131  0231  101D               	bcf	29,0	;volatile
  3132                           
  3133                           ;main.c: 191: ANSELAbits.ANSA4 = 1;
  3134  0232  0023               	movlb	3	; select bank3
  3135  0233  160C               	bsf	12,4	;volatile
  3136                           
  3137                           ;main.c: 192: TRISAbits.TRISA4 = 1;
  3138  0234  0021               	movlb	1	; select bank1
  3139  0235  160C               	bsf	12,4	;volatile
  3140                           
  3141                           ;main.c: 193: WPUAbits.WPUA4 = 0;
  3142  0236  0024               	movlb	4	; select bank4
  3143  0237  120C               	bcf	12,4	;volatile
  3144                           
  3145                           ;main.c: 196: ANSELCbits.ANSC3 = 1;
  3146  0238  0023               	movlb	3	; select bank3
  3147  0239  158E               	bsf	14,3	;volatile
  3148                           
  3149                           ;main.c: 197: TRISCbits.TRISC3 = 1;
  3150  023A  0021               	movlb	1	; select bank1
  3151  023B  158E               	bsf	14,3	;volatile
  3152                           
  3153                           ;main.c: 200: FVRCONbits.TSEN = 0;
  3154  023C  0022               	movlb	2	; select bank2
  3155  023D  1297               	bcf	23,5	;volatile
  3156                           
  3157                           ;main.c: 201: FVRCONbits.TSRNG = 0;
  3158  023E  1217               	bcf	23,4	;volatile
  3159                           
  3160                           ;main.c: 202: FVRCONbits.TSEN = 1;
  3161  023F  1697               	bsf	23,5	;volatile
  3162                           
  3163                           ;main.c: 205: FVRCONbits.FVREN = 0;
  3164  0240  1397               	bcf	23,7	;volatile
  3165                           
  3166                           ;main.c: 206: FVRCONbits.ADFVR = 1;
  3167  0241  0817               	movf	23,w	;volatile
  3168  0242  39FC               	andlw	-4
  3169  0243  3801               	iorlw	1
  3170  0244  0097               	movwf	23	;volatile
  3171                           
  3172                           ;main.c: 207: FVRCONbits.FVREN = 1;
  3173  0245  1797               	bsf	23,7	;volatile
  3174                           
  3175                           ;main.c: 209: ADCON1bits.ADCS = 0b111;
  3176  0246  3070               	movlw	112
  3177  0247  0021               	movlb	1	; select bank1
  3178  0248  049E               	iorwf	30,f	;volatile
  3179                           
  3180                           ;main.c: 210: ADCON1bits.ADFM = 1;
  3181  0249  179E               	bsf	30,7	;volatile
  3182                           
  3183                           ;main.c: 211: ADCON1bits.ADPREF = 0b00;
  3184  024A  30FC               	movlw	-4
  3185  024B  059E               	andwf	30,f	;volatile
  3186                           
  3187                           ;main.c: 213: ADCON0bits.CHS = 3;
  3188  024C  081D               	movf	29,w	;volatile
  3189  024D  3903               	andlw	-253
  3190  024E  380C               	iorlw	12
  3191  024F  009D               	movwf	29	;volatile
  3192                           
  3193                           ;main.c: 214: ADCON0bits.ADON = 1;
  3194  0250  141D               	bsf	29,0	;volatile
  3195                           
  3196                           ;main.c: 219: TRISAbits.TRISA2 = 1;
  3197  0251  150C               	bsf	12,2	;volatile
  3198                           
  3199                           ;main.c: 220: PIE0bits.INTE = 1;
  3200  0252  1410               	bsf	16,0	;volatile
  3201                           
  3202                           ;main.c: 221: INTCONbits.INTEDG = 0;
  3203  0253  100B               	bcf	11,0	;volatile
  3204                           
  3205                           ;main.c: 225: WDTCONbits.WDTPS = 10;
  3206  0254  0817               	movf	23,w	;volatile
  3207  0255  39C1               	andlw	-63
  3208  0256  3814               	iorlw	20
  3209  0257  0097               	movwf	23	;volatile
  3210                           
  3211                           ;main.c: 228: TRISAbits.TRISA5 = 0;
  3212  0258  128C               	bcf	12,5	;volatile
  3213                           
  3214                           ;main.c: 229: PORTAbits.RA5 = 0;
  3215  0259  0020               	movlb	0	; select bank0
  3216  025A  128C               	bcf	12,5	;volatile
  3217                           
  3218                           ;main.c: 232: INTCONbits.PEIE = 1;
  3219  025B  170B               	bsf	11,6	;volatile
  3220                           
  3221                           ;main.c: 233: INTCONbits.GIE = 1;
  3222  025C  178B               	bsf	11,7	;volatile
  3223                           
  3224                           ;main.c: 235: setName();
  3225  025D  3187  27B8  3181   	fcall	_setName
  3226                           
  3227                           ;main.c: 236: utoa(tempString, romData.bootMode, 10);
  3228  0260  0021               	movlb	1	; select bank1
  3229  0261  0852               	movf	((_romData+1)^(0+128)+17),w
  3230  0262  0020               	movlb	0	; select bank0
  3231  0263  00C4               	movwf	utoa@val+1
  3232  0264  0021               	movlb	1	; select bank1
  3233  0265  0851               	movf	(_romData^(0+128)+17),w
  3234  0266  0020               	movlb	0	; select bank0
  3235  0267  00C3               	movwf	utoa@val
  3236  0268  300A               	movlw	10
  3237  0269  00C5               	movwf	utoa@base
  3238  026A  3000               	movlw	0
  3239  026B  00C6               	movwf	utoa@base+1
  3240  026C  3053               	movlw	(low (_tempString| 0))& (0+255)
  3241  026D  3183  239D  3181   	fcall	_utoa
  3242                           
  3243                           ;main.c: 237: strcat(nrf24l01TXBuffer, "BOOT/");
  3244  0270  3025               	movlw	low (STR_8| (0+32768))
  3245  0271  0020               	movlb	0	; select bank0
  3246  0272  00A7               	movwf	strcat@from
  3247  0273  3090               	movlw	high (STR_8| (0+32768))
  3248  0274  00A8               	movwf	strcat@from+1
  3249  0275  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3250  0276  3186  269C  3181   	fcall	_strcat
  3251                           
  3252                           ;main.c: 238: strcat(nrf24l01TXBuffer, tempString);
  3253  0279  3053               	movlw	low _tempString
  3254  027A  0020               	movlb	0	; select bank0
  3255  027B  00A7               	movwf	strcat@from
  3256  027C  3000               	movlw	high _tempString
  3257  027D  00A8               	movwf	strcat@from+1
  3258  027E  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3259  027F  3186  269C  3181   	fcall	_strcat
  3260                           
  3261                           ;main.c: 239: nrf24l01TXPacketData.byte = 0;
  3262  0282  0020               	movlb	0	; select bank0
  3263  0283  01D2               	clrf	_nrf24l01TXPacketData
  3264                           
  3265                           ;main.c: 240: nrf24l01TXPacketData.ACKRequest = 0;
  3266  0284  1052               	bcf	_nrf24l01TXPacketData,0
  3267                           
  3268                           ;main.c: 241: nrf24l01SendString();
  3269  0285  3183  2317  3181   	fcall	_nrf24l01SendString
  3270                           
  3271                           ;main.c: 242: sleep();
  3272  0288  318F  273E  3181   	fcall	_sleep
  3273  028B                     l3385:	
  3274                           ;main.c: 244: while(1){
  3275                           
  3276                           
  3277                           ;main.c: 245: loop();
  3278  028B  3180  2034  3181   	fcall	_loop
  3279  028E  2A8B               	goto	l3385
  3280  028F                     __end_of_main:	
  3281                           ;main.c: 246: };main.c: 248: return;
  3282                           
  3283                           
  3284                           	psect	text1
  3285  0FAD                     __ptext1:	
  3286 ;; *************** function _strcpy *****************
  3287 ;; Defined at:
  3288 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  to              1    wreg     PTR unsigned char 
  3291 ;;		 -> romData(19), 
  3292 ;;  from            2    7[BANK0 ] PTR const unsigned char 
  3293 ;;		 -> STR_7(4), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  to              1   10[BANK0 ] PTR unsigned char 
  3296 ;;		 -> romData(19), 
  3297 ;;  cp              1   11[BANK0 ] PTR unsigned char 
  3298 ;;		 -> romData(19), 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      PTR unsigned char 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:        5 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    7
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _strcpy
  3324  0FAD                     _strcpy:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  3328                           ;strcpy@to stored from wreg
  3329  0FAD  0020               	movlb	0	; select bank0
  3330  0FAE  00AA               	movwf	strcpy@to
  3331  0FAF  082A               	movf	strcpy@to,w
  3332  0FB0  00A9               	movwf	??_strcpy
  3333  0FB1  0829               	movf	??_strcpy,w
  3334  0FB2  00AB               	movwf	strcpy@cp
  3335  0FB3                     l2671:	
  3336  0FB3  082B               	movf	strcpy@cp,w
  3337  0FB4  0086               	movwf	6
  3338  0FB5  0187               	clrf	7
  3339  0FB6  0827               	movf	strcpy@from,w
  3340  0FB7  0084               	movwf	4
  3341  0FB8  0828               	movf	strcpy@from+1,w
  3342  0FB9  0085               	movwf	5
  3343  0FBA  0800               	movf	0,w	;code access
  3344  0FBB  3FC0               	movwi [0]fsr1
  3345  0FBC  0889               	movf	9,f
  3346  0FBD  1903               	btfsc	3,2
  3347  0FBE  0008               	return
  3348  0FBF  3001               	movlw	1
  3349  0FC0  00A9               	movwf	??_strcpy
  3350  0FC1  0829               	movf	??_strcpy,w
  3351  0FC2  07AB               	addwf	strcpy@cp,f
  3352  0FC3  3001               	movlw	1
  3353  0FC4  07A7               	addwf	strcpy@from,f
  3354  0FC5  3000               	movlw	0
  3355  0FC6  3DA8               	addwfc	strcpy@from+1,f
  3356  0FC7  2FB3               	goto	l2671
  3357  0FC8                     __end_of_strcpy:	
  3358                           ;	Return value of _strcpy is never used
  3359                           
  3360                           
  3361                           	psect	text2
  3362  0672                     __ptext2:	
  3363 ;; *************** function _nrf24l01Init *****************
  3364 ;; Defined at:
  3365 ;;		line 366 in file "nrf24l01.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  isReciever      1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  isReciever      1   22[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        3 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:   11
  3386 ;; This function calls:
  3387 ;;		_nrf24l01CEHigh
  3388 ;;		_nrf24l01CELow
  3389 ;;		_nrf24l01InitRegisters
  3390 ;;		_nrf24l01InterfaceInit
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _nrf24l01Init
  3398  0672                     _nrf24l01Init:	
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3402                           ;nrf24l01Init@isReciever stored from wreg
  3403  0672  0020               	movlb	0	; select bank0
  3404  0673  00B6               	movwf	nrf24l01Init@isReciever
  3405                           
  3406                           ;nrf24l01.c: 369: nrf24l01InterfaceInit();
  3407  0674  3187  27D6  3186   	fcall	_nrf24l01InterfaceInit
  3408                           
  3409                           ;nrf24l01.c: 374: nrf24l01CELow();
  3410  0677  318F  2718  3186   	fcall	_nrf24l01CELow
  3411                           
  3412                           ;nrf24l01.c: 376: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3413  067A  3002               	movlw	2
  3414  067B  0020               	movlb	0	; select bank0
  3415  067C  00B5               	movwf	??_nrf24l01Init+1
  3416  067D  3004               	movlw	4
  3417  067E  00B4               	movwf	??_nrf24l01Init
  3418  067F  30BA               	movlw	186
  3419  0680                     u1827:	
  3420  0680  0B89               	decfsz	9,f
  3421  0681  2E80               	goto	u1827
  3422  0682  0BB4               	decfsz	??_nrf24l01Init,f
  3423  0683  2E80               	goto	u1827
  3424  0684  0BB5               	decfsz	??_nrf24l01Init+1,f
  3425  0685  2E80               	goto	u1827
  3426  0686  0000               	nop
  3427                           
  3428                           ;nrf24l01.c: 378: nrf24l01InitRegisters(isReciever);
  3429  0687  0020               	movlb	0	; select bank0
  3430  0688  0836               	movf	nrf24l01Init@isReciever,w
  3431  0689  3181  2144  3186   	fcall	_nrf24l01InitRegisters
  3432                           
  3433                           ;nrf24l01.c: 380: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3434  068C  3002               	movlw	2
  3435  068D  0020               	movlb	0	; select bank0
  3436  068E  00B5               	movwf	??_nrf24l01Init+1
  3437  068F  3004               	movlw	4
  3438  0690  00B4               	movwf	??_nrf24l01Init
  3439  0691  30BA               	movlw	186
  3440  0692                     u1837:	
  3441  0692  0B89               	decfsz	9,f
  3442  0693  2E92               	goto	u1837
  3443  0694  0BB4               	decfsz	??_nrf24l01Init,f
  3444  0695  2E92               	goto	u1837
  3445  0696  0BB5               	decfsz	??_nrf24l01Init+1,f
  3446  0697  2E92               	goto	u1837
  3447  0698  0000               	nop
  3448                           
  3449                           ;nrf24l01.c: 382: nrf24l01CEHigh();
  3450  0699  318F  2715         	fcall	_nrf24l01CEHigh
  3451  069B  0008               	return
  3452  069C                     __end_of_nrf24l01Init:	
  3453                           
  3454                           	psect	text3
  3455  07D6                     __ptext3:	
  3456 ;; *************** function _nrf24l01InterfaceInit *****************
  3457 ;; Defined at:
  3458 ;;		line 28 in file "interface.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    7
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_nrf24l01Init
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _nrf24l01InterfaceInit
  3488  07D6                     _nrf24l01InterfaceInit:	
  3489                           
  3490                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3494  07D6  0021               	movlb	1	; select bank1
  3495  07D7  100C               	bcf	12,0	;volatile
  3496                           
  3497                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3498  07D8  108C               	bcf	12,1	;volatile
  3499                           
  3500                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3501  07D9  148E               	bsf	14,1	;volatile
  3502                           
  3503                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3504  07DA  110E               	bcf	14,2	;volatile
  3505                           
  3506                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3507  07DB  100E               	bcf	14,0	;volatile
  3508                           
  3509                           ;interface.c: 37: SSP1CON1bits.SSPEN = 0;
  3510  07DC  0024               	movlb	4	; select bank4
  3511  07DD  1295               	bcf	21,5	;volatile
  3512                           
  3513                           ;interface.c: 39: RC1PPSbits.RC1PPS = 0b10001;
  3514  07DE  003D               	movlb	29	; select bank29
  3515  07DF  0821               	movf	33,w	;volatile
  3516  07E0  39E0               	andlw	-32
  3517  07E1  3811               	iorlw	17
  3518  07E2  00A1               	movwf	33	;volatile
  3519                           
  3520                           ;interface.c: 40: RC2PPSbits.RC2PPS = 0b11001;
  3521  07E3  0822               	movf	34,w	;volatile
  3522  07E4  39E0               	andlw	-32
  3523  07E5  3819               	iorlw	25
  3524  07E6  00A2               	movwf	34	;volatile
  3525                           
  3526                           ;interface.c: 41: RC0PPSbits.RC0PPS = 0b11000;
  3527  07E7  0820               	movf	32,w	;volatile
  3528  07E8  39E0               	andlw	-32
  3529  07E9  3818               	iorlw	24
  3530  07EA  00A0               	movwf	32	;volatile
  3531                           
  3532                           ;interface.c: 43: SSP1CON1bits.CKP = 0;
  3533  07EB  0024               	movlb	4	; select bank4
  3534  07EC  1215               	bcf	21,4	;volatile
  3535                           
  3536                           ;interface.c: 44: SSP1STATbits.CKE = 1;
  3537  07ED  1714               	bsf	20,6	;volatile
  3538                           
  3539                           ;interface.c: 45: SSP1CON1bits.SSPM = 0b0000;
  3540  07EE  30F0               	movlw	-16
  3541  07EF  0595               	andwf	21,f	;volatile
  3542                           
  3543                           ;interface.c: 47: SSP1CON1bits.SSPEN = 1;
  3544  07F0  1695               	bsf	21,5	;volatile
  3545  07F1  0008               	return
  3546  07F2                     __end_of_nrf24l01InterfaceInit:	
  3547                           
  3548                           	psect	text4
  3549  0144                     __ptext4:	
  3550 ;; *************** function _nrf24l01InitRegisters *****************
  3551 ;; Defined at:
  3552 ;;		line 281 in file "nrf24l01.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  isReciever      1    wreg     unsigned char 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  isReciever      1    0[COMMON] unsigned char 
  3557 ;;  config          1   19[BANK0 ] struct .
  3558 ;;  DynPD           1   18[BANK0 ] struct .
  3559 ;;  enAA            1   17[BANK0 ] struct .
  3560 ;;  enRXAddr        1   16[BANK0 ] struct .
  3561 ;;  status          1   15[BANK0 ] struct .
  3562 ;;  rfSetup         1   14[BANK0 ] struct .
  3563 ;;  feature         1   13[BANK0 ] struct .
  3564 ;;  setupAW         1   12[BANK0 ] struct .
  3565 ;;  channel         1   11[BANK0 ] struct .
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:       10 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:   10
  3582 ;; This function calls:
  3583 ;;		_nrf24l01Send
  3584 ;; This function is called by:
  3585 ;;		_nrf24l01Init
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _nrf24l01InitRegisters
  3591  0144                     _nrf24l01InitRegisters:	
  3592                           
  3593                           ;nrf24l01.c: 283: n_CONFIG_t config;;nrf24l01.c: 285: config.PWR_UP = 0;
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3597  0144  0020               	movlb	0	; select bank0
  3598  0145  10B3               	bcf	nrf24l01InitRegisters@config,1
  3599                           
  3600                           ;nrf24l01.c: 286: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3601  0146  0833               	movf	nrf24l01InitRegisters@config,w
  3602  0147  00AA               	movwf	??_nrf24l01InitRegisters
  3603  0148  082A               	movf	??_nrf24l01InitRegisters,w
  3604  0149  00A7               	movwf	nrf24l01Send@data
  3605  014A  3020               	movlw	32
  3606  014B  3187  2759  3181   	fcall	_nrf24l01Send
  3607                           
  3608                           ;nrf24l01.c: 288: n_SETUP_AW_t setupAW;;nrf24l01.c: 289: setupAW.byte = 0x00;
  3609  014E  0020               	movlb	0	; select bank0
  3610  014F  01AC               	clrf	nrf24l01InitRegisters@setupAW
  3611                           
  3612                           ;nrf24l01.c: 290: setupAW.AW = 0b11;
  3613  0150  3003               	movlw	3
  3614  0151  04AC               	iorwf	nrf24l01InitRegisters@setupAW,f
  3615                           
  3616                           ;nrf24l01.c: 291: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3617  0152  082C               	movf	nrf24l01InitRegisters@setupAW,w
  3618  0153  00AA               	movwf	??_nrf24l01InitRegisters
  3619  0154  082A               	movf	??_nrf24l01InitRegisters,w
  3620  0155  00A7               	movwf	nrf24l01Send@data
  3621  0156  3022               	movlw	34
  3622  0157  3187  2759  3181   	fcall	_nrf24l01Send
  3623                           
  3624                           ;nrf24l01.c: 294: n_RF_CH_t channel;;nrf24l01.c: 295: channel.RF_CH = 2;
  3625  015A  0020               	movlb	0	; select bank0
  3626  015B  082B               	movf	nrf24l01InitRegisters@channel,w
  3627  015C  3980               	andlw	-128
  3628  015D  3802               	iorlw	2
  3629  015E  00AB               	movwf	nrf24l01InitRegisters@channel
  3630                           
  3631                           ;nrf24l01.c: 296: nrf24l01Send(0b00100000 | 0x05, channel.byte);
  3632  015F  082B               	movf	nrf24l01InitRegisters@channel,w
  3633  0160  00AA               	movwf	??_nrf24l01InitRegisters
  3634  0161  082A               	movf	??_nrf24l01InitRegisters,w
  3635  0162  00A7               	movwf	nrf24l01Send@data
  3636  0163  3025               	movlw	37
  3637  0164  3187  2759  3181   	fcall	_nrf24l01Send
  3638                           
  3639                           ;nrf24l01.c: 299: n_RF_SETUP_t rfSetup;;nrf24l01.c: 300: rfSetup.byte = 0x00;
  3640  0167  0020               	movlb	0	; select bank0
  3641  0168  01AE               	clrf	nrf24l01InitRegisters@rfSetup
  3642                           
  3643                           ;nrf24l01.c: 301: rfSetup.RF_DR_LOW = 0;
  3644  0169  12AE               	bcf	nrf24l01InitRegisters@rfSetup,5
  3645                           
  3646                           ;nrf24l01.c: 302: rfSetup.RF_DR_HIGH = 1;
  3647  016A  15AE               	bsf	nrf24l01InitRegisters@rfSetup,3
  3648                           
  3649                           ;nrf24l01.c: 303: rfSetup.RF_PWR = 3;
  3650  016B  3006               	movlw	6
  3651  016C  04AE               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3652                           
  3653                           ;nrf24l01.c: 304: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3654  016D  082E               	movf	nrf24l01InitRegisters@rfSetup,w
  3655  016E  00AA               	movwf	??_nrf24l01InitRegisters
  3656  016F  082A               	movf	??_nrf24l01InitRegisters,w
  3657  0170  00A7               	movwf	nrf24l01Send@data
  3658  0171  3026               	movlw	38
  3659  0172  3187  2759  3181   	fcall	_nrf24l01Send
  3660                           
  3661                           ;nrf24l01.c: 307: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 308: enRXAddr.ERX_P0 = 1;
  3662  0175  0020               	movlb	0	; select bank0
  3663  0176  1430               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3664                           
  3665                           ;nrf24l01.c: 309: enRXAddr.ERX_P1 = 1;
  3666  0177  14B0               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3667                           
  3668                           ;nrf24l01.c: 310: enRXAddr.ERX_P2 = 1;
  3669  0178  1530               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3670                           
  3671                           ;nrf24l01.c: 311: enRXAddr.ERX_P3 = 1;
  3672  0179  15B0               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3673                           
  3674                           ;nrf24l01.c: 312: enRXAddr.ERX_P4 = 1;
  3675  017A  1630               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3676                           
  3677                           ;nrf24l01.c: 313: enRXAddr.ERX_P5 = 1;
  3678  017B  16B0               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3679                           
  3680                           ;nrf24l01.c: 314: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3681  017C  0830               	movf	nrf24l01InitRegisters@enRXAddr,w
  3682  017D  00AA               	movwf	??_nrf24l01InitRegisters
  3683  017E  082A               	movf	??_nrf24l01InitRegisters,w
  3684  017F  00A7               	movwf	nrf24l01Send@data
  3685  0180  3022               	movlw	34
  3686  0181  3187  2759  3181   	fcall	_nrf24l01Send
  3687                           
  3688                           ;nrf24l01.c: 317: n_EN_AA_t enAA;;nrf24l01.c: 318: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3689  0184  0020               	movlb	0	; select bank0
  3690  0185  01A7               	clrf	nrf24l01Send@data
  3691  0186  3001               	movlw	1
  3692  0187  3187  2759  3181   	fcall	_nrf24l01Send
  3693  018A  0020               	movlb	0	; select bank0
  3694  018B  00AA               	movwf	??_nrf24l01InitRegisters
  3695  018C  082A               	movf	??_nrf24l01InitRegisters,w
  3696  018D  00B1               	movwf	nrf24l01InitRegisters@enAA
  3697                           
  3698                           ;nrf24l01.c: 319: enAA.ENAA_P0 = 0;
  3699  018E  1031               	bcf	nrf24l01InitRegisters@enAA,0
  3700                           
  3701                           ;nrf24l01.c: 320: enAA.ENAA_P1 = 0;
  3702  018F  10B1               	bcf	nrf24l01InitRegisters@enAA,1
  3703                           
  3704                           ;nrf24l01.c: 321: enAA.ENAA_P2 = 0;
  3705  0190  1131               	bcf	nrf24l01InitRegisters@enAA,2
  3706                           
  3707                           ;nrf24l01.c: 322: enAA.ENAA_P3 = 0;
  3708  0191  11B1               	bcf	nrf24l01InitRegisters@enAA,3
  3709                           
  3710                           ;nrf24l01.c: 323: enAA.ENAA_P4 = 0;
  3711  0192  1231               	bcf	nrf24l01InitRegisters@enAA,4
  3712                           
  3713                           ;nrf24l01.c: 324: enAA.ENAA_P5 = 0;
  3714  0193  12B1               	bcf	nrf24l01InitRegisters@enAA,5
  3715                           
  3716                           ;nrf24l01.c: 325: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3717  0194  0831               	movf	nrf24l01InitRegisters@enAA,w
  3718  0195  00AA               	movwf	??_nrf24l01InitRegisters
  3719  0196  082A               	movf	??_nrf24l01InitRegisters,w
  3720  0197  00A7               	movwf	nrf24l01Send@data
  3721  0198  3021               	movlw	33
  3722  0199  3187  2759  3181   	fcall	_nrf24l01Send
  3723                           
  3724                           ;nrf24l01.c: 329: n_FEATURE_t feature;;nrf24l01.c: 330: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3725  019C  0020               	movlb	0	; select bank0
  3726  019D  01A7               	clrf	nrf24l01Send@data
  3727  019E  301D               	movlw	29
  3728  019F  3187  2759  3181   	fcall	_nrf24l01Send
  3729  01A2  0020               	movlb	0	; select bank0
  3730  01A3  00AA               	movwf	??_nrf24l01InitRegisters
  3731  01A4  082A               	movf	??_nrf24l01InitRegisters,w
  3732  01A5  00AD               	movwf	nrf24l01InitRegisters@feature
  3733                           
  3734                           ;nrf24l01.c: 331: feature.EN_DPL = 1;
  3735  01A6  152D               	bsf	nrf24l01InitRegisters@feature,2
  3736                           
  3737                           ;nrf24l01.c: 332: feature.EN_DYN_ACK = 1;
  3738  01A7  142D               	bsf	nrf24l01InitRegisters@feature,0
  3739                           
  3740                           ;nrf24l01.c: 333: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3741  01A8  082D               	movf	nrf24l01InitRegisters@feature,w
  3742  01A9  00AA               	movwf	??_nrf24l01InitRegisters
  3743  01AA  082A               	movf	??_nrf24l01InitRegisters,w
  3744  01AB  00A7               	movwf	nrf24l01Send@data
  3745  01AC  303D               	movlw	61
  3746  01AD  3187  2759  3181   	fcall	_nrf24l01Send
  3747                           
  3748                           ;nrf24l01.c: 335: n_DYNPD_t DynPD;;nrf24l01.c: 336: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3749  01B0  0020               	movlb	0	; select bank0
  3750  01B1  01A7               	clrf	nrf24l01Send@data
  3751  01B2  301C               	movlw	28
  3752  01B3  3187  2759  3181   	fcall	_nrf24l01Send
  3753  01B6  0020               	movlb	0	; select bank0
  3754  01B7  00AA               	movwf	??_nrf24l01InitRegisters
  3755  01B8  082A               	movf	??_nrf24l01InitRegisters,w
  3756  01B9  00B2               	movwf	nrf24l01InitRegisters@DynPD
  3757                           
  3758                           ;nrf24l01.c: 337: DynPD.DPL_P0 = 1;
  3759  01BA  1432               	bsf	nrf24l01InitRegisters@DynPD,0
  3760                           
  3761                           ;nrf24l01.c: 338: DynPD.DPL_P1 = 1;
  3762  01BB  14B2               	bsf	nrf24l01InitRegisters@DynPD,1
  3763                           
  3764                           ;nrf24l01.c: 339: DynPD.DPL_P2 = 1;
  3765  01BC  1532               	bsf	nrf24l01InitRegisters@DynPD,2
  3766                           
  3767                           ;nrf24l01.c: 340: DynPD.DPL_P3 = 1;
  3768  01BD  15B2               	bsf	nrf24l01InitRegisters@DynPD,3
  3769                           
  3770                           ;nrf24l01.c: 341: DynPD.DPL_P4 = 1;
  3771  01BE  1632               	bsf	nrf24l01InitRegisters@DynPD,4
  3772                           
  3773                           ;nrf24l01.c: 342: DynPD.DPL_P5 = 1;
  3774  01BF  16B2               	bsf	nrf24l01InitRegisters@DynPD,5
  3775                           
  3776                           ;nrf24l01.c: 343: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3777  01C0  0832               	movf	nrf24l01InitRegisters@DynPD,w
  3778  01C1  00AA               	movwf	??_nrf24l01InitRegisters
  3779  01C2  082A               	movf	??_nrf24l01InitRegisters,w
  3780  01C3  00A7               	movwf	nrf24l01Send@data
  3781  01C4  303C               	movlw	60
  3782  01C5  3187  2759  3181   	fcall	_nrf24l01Send
  3783                           
  3784                           ;nrf24l01.c: 346: n_STATUS_t status;;nrf24l01.c: 347: status.byte = 0x00;
  3785  01C8  0020               	movlb	0	; select bank0
  3786  01C9  01AF               	clrf	nrf24l01InitRegisters@status
  3787                           
  3788                           ;nrf24l01.c: 348: status.RX_DR = 1;
  3789  01CA  172F               	bsf	nrf24l01InitRegisters@status,6
  3790                           
  3791                           ;nrf24l01.c: 349: status.TX_DS = 1;
  3792  01CB  16AF               	bsf	nrf24l01InitRegisters@status,5
  3793                           
  3794                           ;nrf24l01.c: 350: status.MAX_RT = 1;
  3795  01CC  162F               	bsf	nrf24l01InitRegisters@status,4
  3796                           
  3797                           ;nrf24l01.c: 351: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3798  01CD  082F               	movf	nrf24l01InitRegisters@status,w
  3799  01CE  00AA               	movwf	??_nrf24l01InitRegisters
  3800  01CF  082A               	movf	??_nrf24l01InitRegisters,w
  3801  01D0  00A7               	movwf	nrf24l01Send@data
  3802  01D1  3027               	movlw	39
  3803  01D2  3187  2759  3181   	fcall	_nrf24l01Send
  3804                           
  3805                           ;nrf24l01.c: 354: nrf24l01Send(0b11100001, 0);
  3806  01D5  0020               	movlb	0	; select bank0
  3807  01D6  01A7               	clrf	nrf24l01Send@data
  3808  01D7  30E1               	movlw	225
  3809  01D8  3187  2759  3181   	fcall	_nrf24l01Send
  3810                           
  3811                           ;nrf24l01.c: 355: nrf24l01Send(0b11100010, 0);
  3812  01DB  0020               	movlb	0	; select bank0
  3813  01DC  01A7               	clrf	nrf24l01Send@data
  3814  01DD  30E2               	movlw	226
  3815  01DE  3187  2759  3181   	fcall	_nrf24l01Send
  3816                           
  3817                           ;nrf24l01.c: 358: config.PRIM_RX = 1;
  3818  01E1  0020               	movlb	0	; select bank0
  3819  01E2  1433               	bsf	nrf24l01InitRegisters@config,0
  3820                           
  3821                           ;nrf24l01.c: 359: config.EN_CRC = 1;
  3822  01E3  15B3               	bsf	nrf24l01InitRegisters@config,3
  3823                           
  3824                           ;nrf24l01.c: 360: config.CRCO = 1;
  3825  01E4  1533               	bsf	nrf24l01InitRegisters@config,2
  3826                           
  3827                           ;nrf24l01.c: 361: config.PWR_UP = 1;
  3828  01E5  14B3               	bsf	nrf24l01InitRegisters@config,1
  3829                           
  3830                           ;nrf24l01.c: 362: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3831  01E6  0833               	movf	nrf24l01InitRegisters@config,w
  3832  01E7  00AA               	movwf	??_nrf24l01InitRegisters
  3833  01E8  082A               	movf	??_nrf24l01InitRegisters,w
  3834  01E9  00A7               	movwf	nrf24l01Send@data
  3835  01EA  3020               	movlw	32
  3836  01EB  3187  2759         	fcall	_nrf24l01Send
  3837  01ED  0008               	return
  3838  01EE                     __end_of_nrf24l01InitRegisters:	
  3839                           
  3840                           	psect	text5
  3841  0034                     __ptext5:	
  3842 ;; *************** function _loop *****************
  3843 ;; Defined at:
  3844 ;;		line 80 in file "main.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:   12
  3865 ;; This function calls:
  3866 ;;		_getADCValue
  3867 ;;		_nrf24l01SendString
  3868 ;;		_setName
  3869 ;;		_sleep
  3870 ;;		_strcat
  3871 ;;		_utoa
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _loop
  3879  0034                     _loop:	
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3883  0034  0064               	clrwdt	;# 
  3884                           
  3885                           ;main.c: 85: setName();
  3886  0035  3187  27B8  3180   	fcall	_setName
  3887                           
  3888                           ;main.c: 86: utoa(tempString, counter, 10);
  3889  0038  0020               	movlb	0	; select bank0
  3890  0039  084E               	movf	_counter+1,w
  3891  003A  00C4               	movwf	utoa@val+1
  3892  003B  084D               	movf	_counter,w
  3893  003C  00C3               	movwf	utoa@val
  3894  003D  300A               	movlw	10
  3895  003E  00C5               	movwf	utoa@base
  3896  003F  3000               	movlw	0
  3897  0040  00C6               	movwf	utoa@base+1
  3898  0041  3053               	movlw	(low (_tempString| 0))& (0+255)
  3899  0042  3183  239D  3180   	fcall	_utoa
  3900                           
  3901                           ;main.c: 87: strcat(nrf24l01TXBuffer, "DBG/");
  3902  0045  3030               	movlw	low (STR_2| (0+32768))
  3903  0046  0020               	movlb	0	; select bank0
  3904  0047  00A7               	movwf	strcat@from
  3905  0048  3090               	movlw	high (STR_2| (0+32768))
  3906  0049  00A8               	movwf	strcat@from+1
  3907  004A  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3908  004B  3186  269C  3180   	fcall	_strcat
  3909                           
  3910                           ;main.c: 88: strcat(nrf24l01TXBuffer, tempString);
  3911  004E  3053               	movlw	low _tempString
  3912  004F  0020               	movlb	0	; select bank0
  3913  0050  00A7               	movwf	strcat@from
  3914  0051  3000               	movlw	high _tempString
  3915  0052  00A8               	movwf	strcat@from+1
  3916  0053  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3917  0054  3186  269C  3180   	fcall	_strcat
  3918                           
  3919                           ;main.c: 89: counter = 0;
  3920  0057  0020               	movlb	0	; select bank0
  3921  0058  01CD               	clrf	_counter
  3922  0059  01CE               	clrf	_counter+1
  3923                           
  3924                           ;main.c: 90: nrf24l01TXPacketData.byte = 0;
  3925  005A  01D2               	clrf	_nrf24l01TXPacketData
  3926                           
  3927                           ;main.c: 91: nrf24l01TXPacketData.ACKRequest = 0;
  3928  005B  1052               	bcf	_nrf24l01TXPacketData,0
  3929                           
  3930                           ;main.c: 92: nrf24l01SendString();
  3931  005C  3183  2317  3180   	fcall	_nrf24l01SendString
  3932                           
  3933                           ;main.c: 93: sleep();
  3934  005F  318F  273E  3180   	fcall	_sleep
  3935                           
  3936                           ;main.c: 95: setName();
  3937  0062  3187  27B8  3180   	fcall	_setName
  3938                           
  3939                           ;main.c: 96: utoa(tempString, getADCValue(0b000100, 2505), 10);
  3940  0065  3000               	movlw	0
  3941  0066  0020               	movlb	0	; select bank0
  3942  0067  00B8               	movwf	getADCValue@divider+3
  3943  0068  3000               	movlw	0
  3944  0069  00B7               	movwf	getADCValue@divider+2
  3945  006A  3009               	movlw	9
  3946  006B  00B6               	movwf	getADCValue@divider+1
  3947  006C  30C9               	movlw	201
  3948  006D  00B5               	movwf	getADCValue@divider
  3949  006E  3004               	movlw	4
  3950  006F  3182  228F  3180   	fcall	_getADCValue
  3951  0072  0020               	movlb	0	; select bank0
  3952  0073  0836               	movf	?_getADCValue+1,w
  3953  0074  00C4               	movwf	utoa@val+1
  3954  0075  0835               	movf	?_getADCValue,w
  3955  0076  00C3               	movwf	utoa@val
  3956  0077  300A               	movlw	10
  3957  0078  00C5               	movwf	utoa@base
  3958  0079  3000               	movlw	0
  3959  007A  00C6               	movwf	utoa@base+1
  3960  007B  3053               	movlw	(low (_tempString| 0))& (0+255)
  3961  007C  3183  239D  3180   	fcall	_utoa
  3962                           
  3963                           ;main.c: 97: strcat(nrf24l01TXBuffer, "VBAT/");
  3964  007F  301F               	movlw	low (STR_3| (0+32768))
  3965  0080  0020               	movlb	0	; select bank0
  3966  0081  00A7               	movwf	strcat@from
  3967  0082  3090               	movlw	high (STR_3| (0+32768))
  3968  0083  00A8               	movwf	strcat@from+1
  3969  0084  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3970  0085  3186  269C  3180   	fcall	_strcat
  3971                           
  3972                           ;main.c: 98: strcat(nrf24l01TXBuffer, tempString);
  3973  0088  3053               	movlw	low _tempString
  3974  0089  0020               	movlb	0	; select bank0
  3975  008A  00A7               	movwf	strcat@from
  3976  008B  3000               	movlw	high _tempString
  3977  008C  00A8               	movwf	strcat@from+1
  3978  008D  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  3979  008E  3186  269C  3180   	fcall	_strcat
  3980                           
  3981                           ;main.c: 99: nrf24l01TXPacketData.byte = 0;
  3982  0091  0020               	movlb	0	; select bank0
  3983  0092  01D2               	clrf	_nrf24l01TXPacketData
  3984                           
  3985                           ;main.c: 100: nrf24l01TXPacketData.ACKRequest = 1;
  3986  0093  1452               	bsf	_nrf24l01TXPacketData,0
  3987                           
  3988                           ;main.c: 101: nrf24l01SendString();
  3989  0094  3183  2317  3180   	fcall	_nrf24l01SendString
  3990                           
  3991                           ;main.c: 102: sleep();
  3992  0097  318F  273E  3180   	fcall	_sleep
  3993                           
  3994                           ;main.c: 104: setName();
  3995  009A  3187  27B8  3180   	fcall	_setName
  3996                           
  3997                           ;main.c: 105: utoa(tempString, getADCValue(0b010011, 2500), 10);
  3998  009D  3000               	movlw	0
  3999  009E  0020               	movlb	0	; select bank0
  4000  009F  00B8               	movwf	getADCValue@divider+3
  4001  00A0  3000               	movlw	0
  4002  00A1  00B7               	movwf	getADCValue@divider+2
  4003  00A2  3009               	movlw	9
  4004  00A3  00B6               	movwf	getADCValue@divider+1
  4005  00A4  30C4               	movlw	196
  4006  00A5  00B5               	movwf	getADCValue@divider
  4007  00A6  3013               	movlw	19
  4008  00A7  3182  228F  3180   	fcall	_getADCValue
  4009  00AA  0020               	movlb	0	; select bank0
  4010  00AB  0836               	movf	?_getADCValue+1,w
  4011  00AC  00C4               	movwf	utoa@val+1
  4012  00AD  0835               	movf	?_getADCValue,w
  4013  00AE  00C3               	movwf	utoa@val
  4014  00AF  300A               	movlw	10
  4015  00B0  00C5               	movwf	utoa@base
  4016  00B1  3000               	movlw	0
  4017  00B2  00C6               	movwf	utoa@base+1
  4018  00B3  3053               	movlw	(low (_tempString| 0))& (0+255)
  4019  00B4  3183  239D  3180   	fcall	_utoa
  4020                           
  4021                           ;main.c: 106: strcat(nrf24l01TXBuffer, "ANC3/");
  4022  00B7  3013               	movlw	low (STR_4| (0+32768))
  4023  00B8  0020               	movlb	0	; select bank0
  4024  00B9  00A7               	movwf	strcat@from
  4025  00BA  3090               	movlw	high (STR_4| (0+32768))
  4026  00BB  00A8               	movwf	strcat@from+1
  4027  00BC  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4028  00BD  3186  269C  3180   	fcall	_strcat
  4029                           
  4030                           ;main.c: 107: strcat(nrf24l01TXBuffer, tempString);
  4031  00C0  3053               	movlw	low _tempString
  4032  00C1  0020               	movlb	0	; select bank0
  4033  00C2  00A7               	movwf	strcat@from
  4034  00C3  3000               	movlw	high _tempString
  4035  00C4  00A8               	movwf	strcat@from+1
  4036  00C5  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4037  00C6  3186  269C  3180   	fcall	_strcat
  4038                           
  4039                           ;main.c: 108: nrf24l01TXPacketData.byte = 0;
  4040  00C9  0020               	movlb	0	; select bank0
  4041  00CA  01D2               	clrf	_nrf24l01TXPacketData
  4042                           
  4043                           ;main.c: 109: nrf24l01TXPacketData.ACKRequest = 0;
  4044  00CB  1052               	bcf	_nrf24l01TXPacketData,0
  4045                           
  4046                           ;main.c: 110: nrf24l01SendString();
  4047  00CC  3183  2317  3180   	fcall	_nrf24l01SendString
  4048                           
  4049                           ;main.c: 111: sleep();
  4050  00CF  318F  273E  3180   	fcall	_sleep
  4051                           
  4052                           ;main.c: 113: setName();
  4053  00D2  3187  27B8  3180   	fcall	_setName
  4054                           
  4055                           ;main.c: 114: utoa(tempString, getADCValue(0b111111, 208900) - 40, 10);
  4056  00D5  3000               	movlw	0
  4057  00D6  0020               	movlb	0	; select bank0
  4058  00D7  00B8               	movwf	getADCValue@divider+3
  4059  00D8  3003               	movlw	3
  4060  00D9  00B7               	movwf	getADCValue@divider+2
  4061  00DA  3030               	movlw	48
  4062  00DB  00B6               	movwf	getADCValue@divider+1
  4063  00DC  3004               	movlw	4
  4064  00DD  00B5               	movwf	getADCValue@divider
  4065  00DE  303F               	movlw	63
  4066  00DF  3182  228F  3180   	fcall	_getADCValue
  4067  00E2  0020               	movlb	0	; select bank0
  4068  00E3  0835               	movf	?_getADCValue,w
  4069  00E4  3ED8               	addlw	216
  4070  00E5  00C3               	movwf	utoa@val
  4071  00E6  30FF               	movlw	255
  4072  00E7  3D36               	addwfc	?_getADCValue+1,w
  4073  00E8  00C4               	movwf	utoa@val+1
  4074  00E9  300A               	movlw	10
  4075  00EA  00C5               	movwf	utoa@base
  4076  00EB  3000               	movlw	0
  4077  00EC  00C6               	movwf	utoa@base+1
  4078  00ED  3053               	movlw	(low (_tempString| 0))& (0+255)
  4079  00EE  3183  239D  3180   	fcall	_utoa
  4080                           
  4081                           ;main.c: 115: strcat(nrf24l01TXBuffer, "FVR/");
  4082  00F1  3035               	movlw	low (STR_5| (0+32768))
  4083  00F2  0020               	movlb	0	; select bank0
  4084  00F3  00A7               	movwf	strcat@from
  4085  00F4  3090               	movlw	high (STR_5| (0+32768))
  4086  00F5  00A8               	movwf	strcat@from+1
  4087  00F6  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4088  00F7  3186  269C  3180   	fcall	_strcat
  4089                           
  4090                           ;main.c: 116: strcat(nrf24l01TXBuffer, tempString);
  4091  00FA  3053               	movlw	low _tempString
  4092  00FB  0020               	movlb	0	; select bank0
  4093  00FC  00A7               	movwf	strcat@from
  4094  00FD  3000               	movlw	high _tempString
  4095  00FE  00A8               	movwf	strcat@from+1
  4096  00FF  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4097  0100  3186  269C  3180   	fcall	_strcat
  4098                           
  4099                           ;main.c: 117: nrf24l01TXPacketData.byte = 0;
  4100  0103  0020               	movlb	0	; select bank0
  4101  0104  01D2               	clrf	_nrf24l01TXPacketData
  4102                           
  4103                           ;main.c: 118: nrf24l01TXPacketData.ACKRequest = 0;
  4104  0105  1052               	bcf	_nrf24l01TXPacketData,0
  4105                           
  4106                           ;main.c: 119: nrf24l01SendString();
  4107  0106  3183  2317  3180   	fcall	_nrf24l01SendString
  4108                           
  4109                           ;main.c: 120: sleep();
  4110  0109  318F  273E  3180   	fcall	_sleep
  4111                           
  4112                           ;main.c: 122: setName();
  4113  010C  3187  27B8  3180   	fcall	_setName
  4114                           
  4115                           ;main.c: 123: utoa(tempString, getADCValue(0b111101, 2475), 10);
  4116  010F  3000               	movlw	0
  4117  0110  0020               	movlb	0	; select bank0
  4118  0111  00B8               	movwf	getADCValue@divider+3
  4119  0112  3000               	movlw	0
  4120  0113  00B7               	movwf	getADCValue@divider+2
  4121  0114  3009               	movlw	9
  4122  0115  00B6               	movwf	getADCValue@divider+1
  4123  0116  30AB               	movlw	171
  4124  0117  00B5               	movwf	getADCValue@divider
  4125  0118  303D               	movlw	61
  4126  0119  3182  228F  3180   	fcall	_getADCValue
  4127  011C  0020               	movlb	0	; select bank0
  4128  011D  0836               	movf	?_getADCValue+1,w
  4129  011E  00C4               	movwf	utoa@val+1
  4130  011F  0835               	movf	?_getADCValue,w
  4131  0120  00C3               	movwf	utoa@val
  4132  0121  300A               	movlw	10
  4133  0122  00C5               	movwf	utoa@base
  4134  0123  3000               	movlw	0
  4135  0124  00C6               	movwf	utoa@base+1
  4136  0125  3053               	movlw	(low (_tempString| 0))& (0+255)
  4137  0126  3183  239D  3180   	fcall	_utoa
  4138                           
  4139                           ;main.c: 124: strcat(nrf24l01TXBuffer, "TEMP/");
  4140  0129  3019               	movlw	low (STR_6| (0+32768))
  4141  012A  0020               	movlb	0	; select bank0
  4142  012B  00A7               	movwf	strcat@from
  4143  012C  3090               	movlw	high (STR_6| (0+32768))
  4144  012D  00A8               	movwf	strcat@from+1
  4145  012E  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4146  012F  3186  269C  3180   	fcall	_strcat
  4147                           
  4148                           ;main.c: 125: strcat(nrf24l01TXBuffer, tempString);
  4149  0132  3053               	movlw	low _tempString
  4150  0133  0020               	movlb	0	; select bank0
  4151  0134  00A7               	movwf	strcat@from
  4152  0135  3000               	movlw	high _tempString
  4153  0136  00A8               	movwf	strcat@from+1
  4154  0137  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4155  0138  3186  269C  3180   	fcall	_strcat
  4156                           
  4157                           ;main.c: 126: nrf24l01TXPacketData.byte = 0;
  4158  013B  0020               	movlb	0	; select bank0
  4159  013C  01D2               	clrf	_nrf24l01TXPacketData
  4160                           
  4161                           ;main.c: 127: nrf24l01TXPacketData.ACKRequest = 0;
  4162  013D  1052               	bcf	_nrf24l01TXPacketData,0
  4163                           
  4164                           ;main.c: 128: nrf24l01SendString();
  4165  013E  3183  2317  3180   	fcall	_nrf24l01SendString
  4166                           
  4167                           ;main.c: 129: sleep();
  4168  0141  318F  273E         	fcall	_sleep
  4169  0143  0008               	return
  4170  0144                     __end_of_loop:	
  4171                           
  4172                           	psect	text6
  4173  039D                     __ptext6:	
  4174 ;; *************** function _utoa *****************
  4175 ;; Defined at:
  4176 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  buf             1    wreg     PTR unsigned char 
  4179 ;;		 -> tempString(16), 
  4180 ;;  val             2   35[BANK0 ] unsigned int 
  4181 ;;  base            2   37[BANK0 ] int 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  buf             1   43[BANK0 ] PTR unsigned char 
  4184 ;;		 -> tempString(16), 
  4185 ;;  v               2   40[BANK0 ] unsigned int 
  4186 ;;  c               1   42[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      PTR unsigned char 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;Total ram usage:        9 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    8
  4203 ;; This function calls:
  4204 ;;		___lwdiv
  4205 ;;		___lwmod
  4206 ;; This function is called by:
  4207 ;;		_loop
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _utoa
  4214  039D                     _utoa:	
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4218                           ;utoa@buf stored from wreg
  4219  039D  0020               	movlb	0	; select bank0
  4220  039E  00CB               	movwf	utoa@buf
  4221  039F  0844               	movf	utoa@val+1,w
  4222  03A0  00C9               	movwf	utoa@v+1
  4223  03A1  0843               	movf	utoa@val,w
  4224  03A2  00C8               	movwf	utoa@v
  4225  03A3                     l2309:	
  4226  03A3  0846               	movf	utoa@base+1,w
  4227  03A4  00A8               	movwf	___lwdiv@divisor+1
  4228  03A5  0845               	movf	utoa@base,w
  4229  03A6  00A7               	movwf	___lwdiv@divisor
  4230  03A7  0849               	movf	utoa@v+1,w
  4231  03A8  00AA               	movwf	___lwdiv@dividend+1
  4232  03A9  0848               	movf	utoa@v,w
  4233  03AA  00A9               	movwf	___lwdiv@dividend
  4234  03AB  3185  2550  3183   	fcall	___lwdiv
  4235  03AE  0020               	movlb	0	; select bank0
  4236  03AF  0828               	movf	?___lwdiv+1,w
  4237  03B0  00C9               	movwf	utoa@v+1
  4238  03B1  0827               	movf	?___lwdiv,w
  4239  03B2  00C8               	movwf	utoa@v
  4240  03B3  3001               	movlw	1
  4241  03B4  00C7               	movwf	??_utoa
  4242  03B5  0847               	movf	??_utoa,w
  4243  03B6  07CB               	addwf	utoa@buf,f
  4244  03B7  0848               	movf	utoa@v,w
  4245  03B8  0449               	iorwf	utoa@v+1,w
  4246  03B9  1D03               	btfss	3,2
  4247  03BA  2BA3               	goto	l2309
  4248  03BB  084B               	movf	utoa@buf,w
  4249  03BC  0086               	movwf	6
  4250  03BD  0187               	clrf	7
  4251  03BE  0181               	clrf	1
  4252  03BF  3001               	movlw	1
  4253  03C0  02CB               	subwf	utoa@buf,f
  4254  03C1                     l2319:	
  4255  03C1  0846               	movf	utoa@base+1,w
  4256  03C2  00A8               	movwf	___lwmod@divisor+1
  4257  03C3  0845               	movf	utoa@base,w
  4258  03C4  00A7               	movwf	___lwmod@divisor
  4259  03C5  0844               	movf	utoa@val+1,w
  4260  03C6  00AA               	movwf	___lwmod@dividend+1
  4261  03C7  0843               	movf	utoa@val,w
  4262  03C8  00A9               	movwf	___lwmod@dividend
  4263  03C9  3186  2645  3183   	fcall	___lwmod
  4264  03CC  0020               	movlb	0	; select bank0
  4265  03CD  0827               	movf	?___lwmod,w
  4266  03CE  00C7               	movwf	??_utoa
  4267  03CF  0847               	movf	??_utoa,w
  4268  03D0  00CA               	movwf	utoa@c
  4269  03D1  0846               	movf	utoa@base+1,w
  4270  03D2  00A8               	movwf	___lwdiv@divisor+1
  4271  03D3  0845               	movf	utoa@base,w
  4272  03D4  00A7               	movwf	___lwdiv@divisor
  4273  03D5  0844               	movf	utoa@val+1,w
  4274  03D6  00AA               	movwf	___lwdiv@dividend+1
  4275  03D7  0843               	movf	utoa@val,w
  4276  03D8  00A9               	movwf	___lwdiv@dividend
  4277  03D9  3185  2550  3183   	fcall	___lwdiv
  4278  03DC  0020               	movlb	0	; select bank0
  4279  03DD  0828               	movf	?___lwdiv+1,w
  4280  03DE  00C4               	movwf	utoa@val+1
  4281  03DF  0827               	movf	?___lwdiv,w
  4282  03E0  00C3               	movwf	utoa@val
  4283  03E1  300A               	movlw	10
  4284  03E2  024A               	subwf	utoa@c,w
  4285  03E3  1C03               	skipc
  4286  03E4  2BE9               	goto	l850
  4287  03E5  3007               	movlw	7
  4288  03E6  00C7               	movwf	??_utoa
  4289  03E7  0847               	movf	??_utoa,w
  4290  03E8  07CA               	addwf	utoa@c,f
  4291  03E9                     l850:	
  4292  03E9  3030               	movlw	48
  4293  03EA  00C7               	movwf	??_utoa
  4294  03EB  0847               	movf	??_utoa,w
  4295  03EC  07CA               	addwf	utoa@c,f
  4296  03ED  084A               	movf	utoa@c,w
  4297  03EE  00C7               	movwf	??_utoa
  4298  03EF  084B               	movf	utoa@buf,w
  4299  03F0  0086               	movwf	6
  4300  03F1  0187               	clrf	7
  4301  03F2  0847               	movf	??_utoa,w
  4302  03F3  0081               	movwf	1
  4303  03F4  3001               	movlw	1
  4304  03F5  02CB               	subwf	utoa@buf,f
  4305  03F6  0843               	movf	utoa@val,w
  4306  03F7  0444               	iorwf	utoa@val+1,w
  4307  03F8  1D03               	btfss	3,2
  4308  03F9  2BC1               	goto	l2319
  4309                           
  4310                           ;	Return value of _utoa is never used
  4311  03FA  3001               	movlw	1
  4312  03FB  00C7               	movwf	??_utoa
  4313  03FC  0847               	movf	??_utoa,w
  4314  03FD  07CB               	addwf	utoa@buf,f
  4315  03FE  0008               	return
  4316  03FF                     __end_of_utoa:	
  4317                           
  4318                           	psect	text7
  4319  0645                     __ptext7:	
  4320 ;; *************** function ___lwmod *****************
  4321 ;; Defined at:
  4322 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  divisor         2    7[BANK0 ] unsigned int 
  4325 ;;  dividend        2    9[BANK0 ] unsigned int 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  counter         1   12[BANK0 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    7[BANK0 ] unsigned int 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;Total ram usage:        6 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    7
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_utoa
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function ___lwmod
  4353  0645                     ___lwmod:	
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4357  0645  0020               	movlb	0	; select bank0
  4358  0646  0827               	movf	___lwmod@divisor,w
  4359  0647  0428               	iorwf	___lwmod@divisor+1,w
  4360  0648  1903               	btfsc	3,2
  4361  0649  2E6D               	goto	l2125
  4362  064A  01AC               	clrf	___lwmod@counter
  4363  064B  0AAC               	incf	___lwmod@counter,f
  4364  064C                     l2115:	
  4365  064C  1BA8               	btfsc	___lwmod@divisor+1,7
  4366  064D  2E58               	goto	l2117
  4367  064E  3001               	movlw	1
  4368  064F                     u1055:	
  4369  064F  35A7               	lslf	___lwmod@divisor,f
  4370  0650  0DA8               	rlf	___lwmod@divisor+1,f
  4371  0651  0B89               	decfsz	9,f
  4372  0652  2E4F               	goto	u1055
  4373  0653  3001               	movlw	1
  4374  0654  00AB               	movwf	??___lwmod
  4375  0655  082B               	movf	??___lwmod,w
  4376  0656  07AC               	addwf	___lwmod@counter,f
  4377  0657  2E4C               	goto	l2115
  4378  0658                     l2117:	
  4379  0658  0828               	movf	___lwmod@divisor+1,w
  4380  0659  022A               	subwf	___lwmod@dividend+1,w
  4381  065A  1D03               	skipz
  4382  065B  2E5E               	goto	u1075
  4383  065C  0827               	movf	___lwmod@divisor,w
  4384  065D  0229               	subwf	___lwmod@dividend,w
  4385  065E                     u1075:	
  4386  065E  1C03               	skipc
  4387  065F  2E64               	goto	l2121
  4388  0660  0827               	movf	___lwmod@divisor,w
  4389  0661  02A9               	subwf	___lwmod@dividend,f
  4390  0662  0828               	movf	___lwmod@divisor+1,w
  4391  0663  3BAA               	subwfb	___lwmod@dividend+1,f
  4392  0664                     l2121:	
  4393  0664  3001               	movlw	1
  4394  0665                     u1085:	
  4395  0665  36A8               	lsrf	___lwmod@divisor+1,f
  4396  0666  0CA7               	rrf	___lwmod@divisor,f
  4397  0667  0B89               	decfsz	9,f
  4398  0668  2E65               	goto	u1085
  4399  0669  3001               	movlw	1
  4400  066A  02AC               	subwf	___lwmod@counter,f
  4401  066B  1D03               	btfss	3,2
  4402  066C  2E58               	goto	l2117
  4403  066D                     l2125:	
  4404  066D  082A               	movf	___lwmod@dividend+1,w
  4405  066E  00A8               	movwf	?___lwmod+1
  4406  066F  0829               	movf	___lwmod@dividend,w
  4407  0670  00A7               	movwf	?___lwmod
  4408  0671  0008               	return
  4409  0672                     __end_of___lwmod:	
  4410                           
  4411                           	psect	text8
  4412  0550                     __ptext8:	
  4413 ;; *************** function ___lwdiv *****************
  4414 ;; Defined at:
  4415 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  divisor         2    7[BANK0 ] unsigned int 
  4418 ;;  dividend        2    9[BANK0 ] unsigned int 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  quotient        2   12[BANK0 ] unsigned int 
  4421 ;;  counter         1   14[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2    7[BANK0 ] unsigned int 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;Total ram usage:        8 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    7
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_utoa
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function ___lwdiv
  4447  0550                     ___lwdiv:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4451  0550  0020               	movlb	0	; select bank0
  4452  0551  01AC               	clrf	___lwdiv@quotient
  4453  0552  01AD               	clrf	___lwdiv@quotient+1
  4454  0553  0827               	movf	___lwdiv@divisor,w
  4455  0554  0428               	iorwf	___lwdiv@divisor+1,w
  4456  0555  1903               	btfsc	3,2
  4457  0556  2D80               	goto	l2103
  4458  0557  01AE               	clrf	___lwdiv@counter
  4459  0558  0AAE               	incf	___lwdiv@counter,f
  4460  0559                     l2091:	
  4461  0559  1BA8               	btfsc	___lwdiv@divisor+1,7
  4462  055A  2D65               	goto	l2093
  4463  055B  3001               	movlw	1
  4464  055C                     u985:	
  4465  055C  35A7               	lslf	___lwdiv@divisor,f
  4466  055D  0DA8               	rlf	___lwdiv@divisor+1,f
  4467  055E  0B89               	decfsz	9,f
  4468  055F  2D5C               	goto	u985
  4469  0560  3001               	movlw	1
  4470  0561  00AB               	movwf	??___lwdiv
  4471  0562  082B               	movf	??___lwdiv,w
  4472  0563  07AE               	addwf	___lwdiv@counter,f
  4473  0564  2D59               	goto	l2091
  4474  0565                     l2093:	
  4475  0565  3001               	movlw	1
  4476  0566                     u1005:	
  4477  0566  35AC               	lslf	___lwdiv@quotient,f
  4478  0567  0DAD               	rlf	___lwdiv@quotient+1,f
  4479  0568  0B89               	decfsz	9,f
  4480  0569  2D66               	goto	u1005
  4481  056A  0828               	movf	___lwdiv@divisor+1,w
  4482  056B  022A               	subwf	___lwdiv@dividend+1,w
  4483  056C  1D03               	skipz
  4484  056D  2D70               	goto	u1015
  4485  056E  0827               	movf	___lwdiv@divisor,w
  4486  056F  0229               	subwf	___lwdiv@dividend,w
  4487  0570                     u1015:	
  4488  0570  1C03               	skipc
  4489  0571  2D77               	goto	l2099
  4490  0572  0827               	movf	___lwdiv@divisor,w
  4491  0573  02A9               	subwf	___lwdiv@dividend,f
  4492  0574  0828               	movf	___lwdiv@divisor+1,w
  4493  0575  3BAA               	subwfb	___lwdiv@dividend+1,f
  4494  0576  142C               	bsf	___lwdiv@quotient,0
  4495  0577                     l2099:	
  4496  0577  3001               	movlw	1
  4497  0578                     u1025:	
  4498  0578  36A8               	lsrf	___lwdiv@divisor+1,f
  4499  0579  0CA7               	rrf	___lwdiv@divisor,f
  4500  057A  0B89               	decfsz	9,f
  4501  057B  2D78               	goto	u1025
  4502  057C  3001               	movlw	1
  4503  057D  02AE               	subwf	___lwdiv@counter,f
  4504  057E  1D03               	btfss	3,2
  4505  057F  2D65               	goto	l2093
  4506  0580                     l2103:	
  4507  0580  082D               	movf	___lwdiv@quotient+1,w
  4508  0581  00A8               	movwf	?___lwdiv+1
  4509  0582  082C               	movf	___lwdiv@quotient,w
  4510  0583  00A7               	movwf	?___lwdiv
  4511  0584  0008               	return
  4512  0585                     __end_of___lwdiv:	
  4513                           
  4514                           	psect	text9
  4515  0F3E                     __ptext9:	
  4516 ;; *************** function _sleep *****************
  4517 ;; Defined at:
  4518 ;;		line 50 in file "main.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		None
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    7
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_loop
  4543 ;;		_main
  4544 ;;		_checkRxData
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _sleep
  4550  0F3E                     _sleep:	
  4551  0F3E                     l221:	
  4552                           ;incstack = 0
  4553                           ; Regs used in _sleep: []
  4554                           ;main.c: 51: while (1){
  4555                           
  4556  0F3E  0063               	sleep	;# 
  4557                           
  4558                           ;main.c: 54: __nop();
  4559  0F3F  0000               	nop
  4560                           
  4561                           ;main.c: 55: __nop();
  4562  0F40  0000               	nop
  4563                           
  4564                           ;main.c: 57: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4565  0F41  0020               	movlb	0	; select bank0
  4566  0F42  1A03               	btfsc	3,4	;volatile
  4567  0F43  2F3E               	goto	l221
  4568  0F44  1D83               	btfss	3,3	;volatile
  4569  0F45  0008               	return
  4570  0F46  2F3E               	goto	l221
  4571  0F47                     __end_of_sleep:	
  4572                           ;main.c: 58: return;
  4573                           
  4574                           
  4575                           	psect	text10
  4576  07B8                     __ptext10:	
  4577 ;; *************** function _setName *****************
  4578 ;; Defined at:
  4579 ;;		line 75 in file "main.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    8
  4600 ;; This function calls:
  4601 ;;		_memset
  4602 ;;		_strcat
  4603 ;; This function is called by:
  4604 ;;		_loop
  4605 ;;		_main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _setName
  4611  07B8                     _setName:	
  4612                           
  4613                           ;main.c: 76: memset(nrf24l01TXBuffer, 0, sizeof(nrf24l01TXBuffer));
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _setName: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4617  07B8  3000               	movlw	0
  4618  07B9  0020               	movlb	0	; select bank0
  4619  07BA  00A7               	movwf	memset@c
  4620  07BB  00A8               	movwf	memset@c+1
  4621  07BC  3040               	movlw	64
  4622  07BD  00A9               	movwf	memset@n
  4623  07BE  3000               	movlw	0
  4624  07BF  00AA               	movwf	memset@n+1
  4625  07C0  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4626  07C1  318F  27E4  3187   	fcall	_memset
  4627                           
  4628                           ;main.c: 77: strcat(nrf24l01TXBuffer, romData.name);
  4629  07C4  30C1               	movlw	low (_romData+1)
  4630  07C5  0020               	movlb	0	; select bank0
  4631  07C6  00A7               	movwf	strcat@from
  4632  07C7  3000               	movlw	high (_romData+1)
  4633  07C8  00A8               	movwf	strcat@from+1
  4634  07C9  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4635  07CA  3186  269C  3187   	fcall	_strcat
  4636                           
  4637                           ;main.c: 78: strcat(nrf24l01TXBuffer, "/");
  4638  07CD  3017               	movlw	low ((STR_4+4)| (0+32768))
  4639  07CE  0020               	movlb	0	; select bank0
  4640  07CF  00A7               	movwf	strcat@from
  4641  07D0  3090               	movlw	high ((STR_4+4)| (0+32768))
  4642  07D1  00A8               	movwf	strcat@from+1
  4643  07D2  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4644  07D3  3186  269C         	fcall	_strcat
  4645  07D5  0008               	return
  4646  07D6                     __end_of_setName:	
  4647                           
  4648                           	psect	text11
  4649  069C                     __ptext11:	
  4650 ;; *************** function _strcat *****************
  4651 ;; Defined at:
  4652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcat.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  to              1    wreg     PTR unsigned char 
  4655 ;;		 -> nrf24l01TXBuffer(64), 
  4656 ;;  from            2    7[BANK0 ] PTR const unsigned char 
  4657 ;;		 -> STR_8(6), STR_6(6), STR_5(5), STR_4(6), 
  4658 ;;		 -> STR_3(6), STR_2(5), tempString(16), STR_1(2), 
  4659 ;;		 -> romData.name(16), romData(19), 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  to              1   11[BANK0 ] PTR unsigned char 
  4662 ;;		 -> nrf24l01TXBuffer(64), 
  4663 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  4664 ;;		 -> nrf24l01TXBuffer(64), 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      PTR unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;Total ram usage:        5 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    7
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_setName
  4685 ;;		_loop
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _strcat
  4692  069C                     _strcat:	
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  4696                           ;strcat@to stored from wreg
  4697  069C  0020               	movlb	0	; select bank0
  4698  069D  00AB               	movwf	strcat@to
  4699  069E  082B               	movf	strcat@to,w
  4700  069F  00A9               	movwf	??_strcat
  4701  06A0  0829               	movf	??_strcat,w
  4702  06A1  00AA               	movwf	strcat@cp
  4703  06A2                     l2881:	
  4704  06A2  082A               	movf	strcat@cp,w
  4705  06A3  0086               	movwf	6
  4706  06A4  3001               	movlw	1	; select bank2/3
  4707  06A5  0087               	movwf	7
  4708  06A6  0801               	movf	1,w
  4709  06A7  1903               	btfsc	3,2
  4710  06A8  2EB6               	goto	l2887
  4711  06A9  3001               	movlw	1
  4712  06AA  00A9               	movwf	??_strcat
  4713  06AB  0829               	movf	??_strcat,w
  4714  06AC  07AA               	addwf	strcat@cp,f
  4715  06AD  2EA2               	goto	l2881
  4716  06AE                     l2883:	
  4717  06AE  3001               	movlw	1
  4718  06AF  00A9               	movwf	??_strcat
  4719  06B0  0829               	movf	??_strcat,w
  4720  06B1  07AA               	addwf	strcat@cp,f
  4721  06B2  3001               	movlw	1
  4722  06B3  07A7               	addwf	strcat@from,f
  4723  06B4  3000               	movlw	0
  4724  06B5  3DA8               	addwfc	strcat@from+1,f
  4725  06B6                     l2887:	
  4726  06B6  082A               	movf	strcat@cp,w
  4727  06B7  0086               	movwf	6
  4728  06B8  3001               	movlw	1	; select bank2/3
  4729  06B9  0087               	movwf	7
  4730  06BA  0827               	movf	strcat@from,w
  4731  06BB  0084               	movwf	4
  4732  06BC  0828               	movf	strcat@from+1,w
  4733  06BD  0085               	movwf	5
  4734  06BE  0800               	movf	0,w	;code access
  4735  06BF  3FC0               	movwi [0]fsr1
  4736  06C0  0889               	movf	9,f
  4737  06C1  1903               	btfsc	3,2
  4738  06C2  0008               	return
  4739  06C3  2EAE               	goto	l2883
  4740  06C4                     __end_of_strcat:	
  4741                           ;	Return value of _strcat is never used
  4742                           
  4743                           
  4744                           	psect	text12
  4745  0FE4                     __ptext12:	
  4746 ;; *************** function _memset *****************
  4747 ;; Defined at:
  4748 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  p1              1    wreg     PTR void 
  4751 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  4752 ;;  c               2    7[BANK0 ] int 
  4753 ;;  n               2    9[BANK0 ] unsigned int 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  p1              1   13[BANK0 ] PTR void 
  4756 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  4757 ;;  p               1   12[BANK0 ] PTR unsigned char 
  4758 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      PTR void 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:        7 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    7
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_setName
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _memset
  4784  0FE4                     _memset:	
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4788                           ;memset@p1 stored from wreg
  4789  0FE4  0020               	movlb	0	; select bank0
  4790  0FE5  00AD               	movwf	memset@p1
  4791  0FE6  082D               	movf	memset@p1,w
  4792  0FE7  00AB               	movwf	??_memset
  4793  0FE8  082B               	movf	??_memset,w
  4794  0FE9  00AC               	movwf	memset@p
  4795  0FEA                     l2875:	
  4796  0FEA  3001               	movlw	1
  4797  0FEB  02A9               	subwf	memset@n,f
  4798  0FEC  3000               	movlw	0
  4799  0FED  3BAA               	subwfb	memset@n+1,f
  4800  0FEE  0A29               	incf	memset@n,w
  4801  0FEF  1903               	btfsc	3,2
  4802  0FF0  0A2A               	incf	memset@n+1,w
  4803  0FF1  1903               	btfsc	3,2
  4804  0FF2  0008               	return
  4805  0FF3  0827               	movf	memset@c,w
  4806  0FF4  00AB               	movwf	??_memset
  4807  0FF5  082C               	movf	memset@p,w
  4808  0FF6  0086               	movwf	6
  4809  0FF7  3001               	movlw	1	; select bank2/3
  4810  0FF8  0087               	movwf	7
  4811  0FF9  082B               	movf	??_memset,w
  4812  0FFA  0081               	movwf	1
  4813  0FFB  3001               	movlw	1
  4814  0FFC  00AB               	movwf	??_memset
  4815  0FFD  082B               	movf	??_memset,w
  4816  0FFE  07AC               	addwf	memset@p,f
  4817  0FFF  2FEA               	goto	l2875
  4818  1000                     __end_of_memset:	
  4819                           ;	Return value of _memset is never used
  4820                           
  4821                           
  4822                           	psect	text13
  4823  0317                     __ptext13:	
  4824 ;; *************** function _nrf24l01SendString *****************
  4825 ;; Defined at:
  4826 ;;		line 166 in file "nrf24l01.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  i               1   17[BANK0 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;Total ram usage:        3 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:   11
  4847 ;; This function calls:
  4848 ;;		_enableInterrupts
  4849 ;;		_nrf24l01CEHigh
  4850 ;;		_nrf24l01CELow
  4851 ;;		_nrf24l01SPIEnd
  4852 ;;		_nrf24l01SPISend
  4853 ;;		_nrf24l01SPIStart
  4854 ;;		_nrf24l01SetRXMode
  4855 ;;		_strlen
  4856 ;; This function is called by:
  4857 ;;		_loop
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _nrf24l01SendString
  4864  0317                     _nrf24l01SendString:	
  4865  0317                     l311:	
  4866                           ;incstack = 0
  4867                           ; Regs used in _nrf24l01SendString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4868                           ;nrf24l01.c: 169: unsigned char i;;nrf24l01.c: 173: RESEND:
  4869                           
  4870                           
  4871                           ;nrf24l01.c: 176: i = 0xFF;
  4872  0317  30FF               	movlw	255
  4873  0318  0020               	movlb	0	; select bank0
  4874  0319  00AF               	movwf	??_nrf24l01SendString
  4875  031A  082F               	movf	??_nrf24l01SendString,w
  4876  031B  00B1               	movwf	nrf24l01SendString@i
  4877  031C                     l2967:	
  4878                           ;nrf24l01.c: 177: while (nrf24l01.TXBusy){
  4879                           
  4880  031C  0020               	movlb	0	; select bank0
  4881  031D  1CD1               	btfss	_nrf24l01,1	;volatile
  4882  031E  2B28               	goto	l315
  4883                           
  4884                           ;nrf24l01.c: 178: if (!--i) {
  4885  031F  3001               	movlw	1
  4886  0320  02B1               	subwf	nrf24l01SendString@i,f
  4887  0321  1903               	btfsc	3,2
  4888  0322  2B17               	goto	l311
  4889                           
  4890                           ;nrf24l01.c: 180: };nrf24l01.c: 181: _delay((unsigned long)((50)*(16000000/4000000.0)));
  4891                           
  4892                           ;nrf24l01.c: 179: goto RESEND;
  4893  0323  3042               	movlw	66
  4894  0324                     u1847:	
  4895  0324  0B89               	decfsz	9,f
  4896  0325  2B24               	goto	u1847
  4897  0326  3200               	nop2
  4898  0327  2B1C               	goto	l2967
  4899  0328                     l315:	
  4900                           
  4901                           ;nrf24l01.c: 182: };nrf24l01.c: 185: nrf24l01.TXBusy = 1;
  4902  0328  14D1               	bsf	_nrf24l01,1	;volatile
  4903                           
  4904                           ;nrf24l01.c: 188: enableInterrupts(0);
  4905  0329  3000               	movlw	0
  4906  032A  318F  272E  3183   	fcall	_enableInterrupts
  4907                           
  4908                           ;nrf24l01.c: 191: nrf24l01SetRXMode(0);
  4909  032D  3000               	movlw	0
  4910  032E  3184  24DE  3183   	fcall	_nrf24l01SetRXMode
  4911                           
  4912                           ;nrf24l01.c: 194: nrf24l01SPIStart();
  4913  0331  318F  2736  3183   	fcall	_nrf24l01SPIStart
  4914                           
  4915                           ;nrf24l01.c: 197: nrf24l01SPISend(0b10110000);
  4916  0334  30B0               	movlw	176
  4917  0335  3187  27F2  3183   	fcall	_nrf24l01SPISend
  4918                           
  4919                           ;nrf24l01.c: 199: nrf24l01SPISend(nrf24l01TXPacketData.byte);
  4920  0338  0020               	movlb	0	; select bank0
  4921  0339  0852               	movf	_nrf24l01TXPacketData,w
  4922  033A  3187  27F2  3183   	fcall	_nrf24l01SPISend
  4923                           
  4924                           ;nrf24l01.c: 202: for (i = 0; (i < strlen(nrf24l01TXBuffer)) && (i < sizeof(nrf24l01TXBu
      +                          ffer)); i++){
  4925  033D  0020               	movlb	0	; select bank0
  4926  033E  01B1               	clrf	nrf24l01SendString@i
  4927  033F  2B4E               	goto	l2977
  4928  0340                     l2973:	
  4929                           
  4930                           ;nrf24l01.c: 203: nrf24l01SPISend(nrf24l01TXBuffer[i]);
  4931  0340  0831               	movf	nrf24l01SendString@i,w
  4932  0341  3E20               	addlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4933  0342  0086               	movwf	6
  4934  0343  3001               	movlw	1	; select bank2/3
  4935  0344  0087               	movwf	7
  4936  0345  0801               	movf	1,w
  4937  0346  3187  27F2  3183   	fcall	_nrf24l01SPISend
  4938  0349  3001               	movlw	1
  4939  034A  0020               	movlb	0	; select bank0
  4940  034B  00AF               	movwf	??_nrf24l01SendString
  4941  034C  082F               	movf	??_nrf24l01SendString,w
  4942  034D  07B1               	addwf	nrf24l01SendString@i,f
  4943  034E                     l2977:	
  4944  034E  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  4945  034F  3186  26EC  3183   	fcall	_strlen
  4946  0352  0020               	movlb	0	; select bank0
  4947  0353  0831               	movf	nrf24l01SendString@i,w
  4948  0354  00AF               	movwf	??_nrf24l01SendString
  4949  0355  01B0               	clrf	??_nrf24l01SendString+1
  4950  0356  0828               	movf	?_strlen+1,w
  4951  0357  0230               	subwf	??_nrf24l01SendString+1,w
  4952  0358  1D03               	skipz
  4953  0359  2B5C               	goto	u1635
  4954  035A  0827               	movf	?_strlen,w
  4955  035B  022F               	subwf	??_nrf24l01SendString,w
  4956  035C                     u1635:	
  4957  035C  1803               	skipnc
  4958  035D  2B62               	goto	l2981
  4959  035E  3040               	movlw	64
  4960  035F  0231               	subwf	nrf24l01SendString@i,w
  4961  0360  1C03               	skipc
  4962  0361  2B40               	goto	l2973
  4963  0362                     l2981:	
  4964                           
  4965                           ;nrf24l01.c: 204: };nrf24l01.c: 207: nrf24l01SPIEnd();
  4966  0362  318F  2727  3183   	fcall	_nrf24l01SPIEnd
  4967                           
  4968                           ;nrf24l01.c: 210: nrf24l01CEHigh();
  4969  0365  318F  2715  3183   	fcall	_nrf24l01CEHigh
  4970                           
  4971                           ;nrf24l01.c: 211: _delay((unsigned long)((20)*(16000000/4000000.0)));
  4972  0368  301A               	movlw	26
  4973  0369                     u1857:	
  4974  0369  0B89               	decfsz	9,f
  4975  036A  2B69               	goto	u1857
  4976  036B  3200               	nop2
  4977                           
  4978                           ;nrf24l01.c: 212: nrf24l01CELow();
  4979  036C  318F  2718  3183   	fcall	_nrf24l01CELow
  4980                           
  4981                           ;nrf24l01.c: 215: enableInterrupts(1);
  4982  036F  3001               	movlw	1
  4983  0370  318F  272E  3183   	fcall	_enableInterrupts
  4984                           
  4985                           ;nrf24l01.c: 218: i = 0xFF;
  4986  0373  30FF               	movlw	255
  4987  0374  0020               	movlb	0	; select bank0
  4988  0375  00AF               	movwf	??_nrf24l01SendString
  4989  0376  082F               	movf	??_nrf24l01SendString,w
  4990  0377  00B1               	movwf	nrf24l01SendString@i
  4991  0378                     l2995:	
  4992                           ;nrf24l01.c: 219: while (nrf24l01.TXBusy){
  4993                           
  4994  0378  0020               	movlb	0	; select bank0
  4995  0379  1CD1               	btfss	_nrf24l01,1	;volatile
  4996  037A  2B84               	goto	l2997
  4997                           
  4998                           ;nrf24l01.c: 220: if (!--i) {
  4999  037B  3001               	movlw	1
  5000  037C  02B1               	subwf	nrf24l01SendString@i,f
  5001  037D  1903               	btfsc	3,2
  5002  037E  2B17               	goto	l311
  5003                           
  5004                           ;nrf24l01.c: 222: };nrf24l01.c: 223: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5005                           
  5006                           ;nrf24l01.c: 221: goto RESEND;
  5007  037F  301A               	movlw	26
  5008  0380                     u1867:	
  5009  0380  0B89               	decfsz	9,f
  5010  0381  2B80               	goto	u1867
  5011  0382  3200               	nop2
  5012  0383  2B78               	goto	l2995
  5013  0384                     l2997:	
  5014                           
  5015                           ;nrf24l01.c: 224: };nrf24l01.c: 228: i = 0xFF;
  5016  0384  30FF               	movlw	255
  5017  0385  00AF               	movwf	??_nrf24l01SendString
  5018  0386  082F               	movf	??_nrf24l01SendString,w
  5019  0387  00B1               	movwf	nrf24l01SendString@i
  5020  0388                     l3005:	
  5021                           ;nrf24l01.c: 229: while (nrf24l01TXPacketData.ACKRequest){
  5022                           
  5023  0388  0020               	movlb	0	; select bank0
  5024  0389  1C52               	btfss	_nrf24l01TXPacketData,0
  5025  038A  0008               	return
  5026                           
  5027                           ;nrf24l01.c: 230: if (!--i) {
  5028  038B  3001               	movlw	1
  5029  038C  02B1               	subwf	nrf24l01SendString@i,f
  5030  038D  1903               	btfsc	3,2
  5031  038E  2B17               	goto	l311
  5032                           
  5033                           ;nrf24l01.c: 232: };nrf24l01.c: 233: counter++;
  5034                           
  5035                           ;nrf24l01.c: 231: goto RESEND;
  5036  038F  3001               	movlw	1
  5037  0390  07CD               	addwf	_counter,f
  5038  0391  3000               	movlw	0
  5039  0392  3DCE               	addwfc	_counter+1,f
  5040                           
  5041                           ;nrf24l01.c: 234: _delay((unsigned long)((500)*(16000000/4000000.0)));
  5042  0393  3003               	movlw	3
  5043  0394  0020               	movlb	0	; select bank0
  5044  0395  00AF               	movwf	??_nrf24l01SendString
  5045  0396  3097               	movlw	151
  5046  0397                     u1877:	
  5047  0397  0B89               	decfsz	9,f
  5048  0398  2B97               	goto	u1877
  5049  0399  0BAF               	decfsz	??_nrf24l01SendString,f
  5050  039A  2B97               	goto	u1877
  5051  039B  3200               	nop2
  5052  039C  2B88               	goto	l3005
  5053  039D                     __end_of_nrf24l01SendString:	
  5054                           
  5055                           	psect	text14
  5056  06EC                     __ptext14:	
  5057 ;; *************** function _strlen *****************
  5058 ;; Defined at:
  5059 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  s               1    wreg     PTR const unsigned char 
  5062 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  5065 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  5066 ;;  cp              1   13[BANK0 ] PTR const unsigned char 
  5067 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  2    7[BANK0 ] unsigned int 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;Total ram usage:        8 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    7
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_nrf24l01SendString
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function _strlen
  5093  06EC                     _strlen:	
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5097                           ;strlen@s stored from wreg
  5098  06EC  0020               	movlb	0	; select bank0
  5099  06ED  00AE               	movwf	strlen@s
  5100  06EE  082E               	movf	strlen@s,w
  5101  06EF  00A9               	movwf	??_strlen
  5102  06F0  0829               	movf	??_strlen,w
  5103  06F1  00AD               	movwf	strlen@cp
  5104  06F2                     l2907:	
  5105  06F2  082D               	movf	strlen@cp,w
  5106  06F3  0086               	movwf	6
  5107  06F4  3001               	movlw	1	; select bank2/3
  5108  06F5  0087               	movwf	7
  5109  06F6  0801               	movf	1,w
  5110  06F7  1903               	btfsc	3,2
  5111  06F8  2EFE               	goto	l2909
  5112  06F9  3001               	movlw	1
  5113  06FA  00A9               	movwf	??_strlen
  5114  06FB  0829               	movf	??_strlen,w
  5115  06FC  07AD               	addwf	strlen@cp,f
  5116  06FD  2EF2               	goto	l2907
  5117  06FE                     l2909:	
  5118  06FE  082E               	movf	strlen@s,w
  5119  06FF  00A9               	movwf	??_strlen
  5120  0700  3001               	movlw	1
  5121  0701  00AA               	movwf	??_strlen+1
  5122  0702  09A9               	comf	??_strlen,f
  5123  0703  09AA               	comf	??_strlen+1,f
  5124  0704  0AA9               	incf	??_strlen,f
  5125  0705  1903               	skipnz
  5126  0706  0AAA               	incf	??_strlen+1,f
  5127  0707  082D               	movf	strlen@cp,w
  5128  0708  00AB               	movwf	??_strlen+2
  5129  0709  3001               	movlw	1
  5130  070A  00AC               	movwf	??_strlen+3
  5131  070B  0829               	movf	??_strlen,w
  5132  070C  072B               	addwf	??_strlen+2,w
  5133  070D  00A7               	movwf	?_strlen
  5134  070E  082A               	movf	??_strlen+1,w
  5135  070F  3D2C               	addwfc	??_strlen+3,w
  5136  0710  00A8               	movwf	?_strlen+1
  5137  0711  0008               	return
  5138  0712                     __end_of_strlen:	
  5139                           
  5140                           	psect	text15
  5141  04DE                     __ptext15:	
  5142 ;; *************** function _nrf24l01SetRXMode *****************
  5143 ;; Defined at:
  5144 ;;		line 41 in file "nrf24l01.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  rxMode          1    wreg     unsigned char 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  rxMode          1   12[BANK0 ] unsigned char 
  5149 ;;  config          1   11[BANK0 ] struct .
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;Total ram usage:        3 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:   10
  5166 ;; This function calls:
  5167 ;;		_nrf24l01CEHigh
  5168 ;;		_nrf24l01CELow
  5169 ;;		_nrf24l01Send
  5170 ;; This function is called by:
  5171 ;;		_nrf24l01SendString
  5172 ;;		_checkRxData
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _nrf24l01SetRXMode
  5178  04DE                     _nrf24l01SetRXMode:	
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5182                           ;nrf24l01SetRXMode@rxMode stored from wreg
  5183  04DE  0020               	movlb	0	; select bank0
  5184  04DF  00AC               	movwf	nrf24l01SetRXMode@rxMode
  5185                           
  5186                           ;nrf24l01.c: 43: n_CONFIG_t config;;nrf24l01.c: 46: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5187  04E0  01A7               	clrf	nrf24l01Send@data
  5188  04E1  3000               	movlw	0
  5189  04E2  3187  2759  3184   	fcall	_nrf24l01Send
  5190  04E5  0020               	movlb	0	; select bank0
  5191  04E6  00AA               	movwf	??_nrf24l01SetRXMode
  5192  04E7  082A               	movf	??_nrf24l01SetRXMode,w
  5193  04E8  00AB               	movwf	nrf24l01SetRXMode@config
  5194                           
  5195                           ;nrf24l01.c: 49: if (config.PRIM_RX != rxMode){
  5196  04E9  082B               	movf	nrf24l01SetRXMode@config,w
  5197  04EA  3901               	andlw	1
  5198  04EB  062C               	xorwf	nrf24l01SetRXMode@rxMode,w
  5199  04EC  1903               	skipnz
  5200  04ED  2D12               	goto	l2867
  5201                           
  5202                           ;nrf24l01.c: 52: nrf24l01CELow();
  5203  04EE  318F  2718  3184   	fcall	_nrf24l01CELow
  5204                           
  5205                           ;nrf24l01.c: 53: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5206  04F1  30A0               	movlw	160
  5207  04F2                     u1887:	
  5208  04F2  3200               	nop2
  5209  04F3  0B89               	decfsz	9,f
  5210  04F4  2CF2               	goto	u1887
  5211                           
  5212                           ;nrf24l01.c: 60: config.PRIM_RX = rxMode;
  5213  04F5  0020               	movlb	0	; select bank0
  5214  04F6  082C               	movf	nrf24l01SetRXMode@rxMode,w
  5215  04F7  3901               	andlw	1
  5216  04F8  102B               	bcf	nrf24l01SetRXMode@config,0
  5217  04F9  1D03               	skipz
  5218  04FA  142B               	bsf	nrf24l01SetRXMode@config,0
  5219                           
  5220                           ;nrf24l01.c: 61: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5221  04FB  082B               	movf	nrf24l01SetRXMode@config,w
  5222  04FC  00AA               	movwf	??_nrf24l01SetRXMode
  5223  04FD  082A               	movf	??_nrf24l01SetRXMode,w
  5224  04FE  00A7               	movwf	nrf24l01Send@data
  5225  04FF  3020               	movlw	32
  5226  0500  3187  2759  3184   	fcall	_nrf24l01Send
  5227                           
  5228                           ;nrf24l01.c: 64: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5229  0503  30A0               	movlw	160
  5230  0504                     u1897:	
  5231  0504  3200               	nop2
  5232  0505  0B89               	decfsz	9,f
  5233  0506  2D04               	goto	u1897
  5234                           
  5235                           ;nrf24l01.c: 67: if (rxMode){
  5236  0507  0020               	movlb	0	; select bank0
  5237  0508  082C               	movf	nrf24l01SetRXMode@rxMode,w
  5238  0509  1903               	btfsc	3,2
  5239  050A  2D12               	goto	l2867
  5240                           
  5241                           ;nrf24l01.c: 68: nrf24l01CEHigh();
  5242  050B  318F  2715  3184   	fcall	_nrf24l01CEHigh
  5243                           
  5244                           ;nrf24l01.c: 69: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5245  050E  30A0               	movlw	160
  5246  050F                     u1907:	
  5247  050F  3200               	nop2
  5248  0510  0B89               	decfsz	9,f
  5249  0511  2D0F               	goto	u1907
  5250  0512                     l2867:	
  5251                           
  5252                           ;nrf24l01.c: 70: };nrf24l01.c: 71: };nrf24l01.c: 74: nrf24l01.RXMode = rxMode;
  5253  0512  0020               	movlb	0	; select bank0
  5254  0513  082C               	movf	nrf24l01SetRXMode@rxMode,w
  5255  0514  3901               	andlw	1
  5256  0515  11D1               	bcf	_nrf24l01,3	;volatile
  5257  0516  1D03               	skipz
  5258  0517  15D1               	bsf	_nrf24l01,3	;volatile
  5259  0518  0008               	return
  5260  0519                     __end_of_nrf24l01SetRXMode:	
  5261                           
  5262                           	psect	text16
  5263  0759                     __ptext16:	
  5264 ;; *************** function _nrf24l01Send *****************
  5265 ;; Defined at:
  5266 ;;		line 15 in file "nrf24l01.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  command         1    wreg     unsigned char 
  5269 ;;  data            1    7[BANK0 ] unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  command         1    9[BANK0 ] unsigned char 
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      unsigned char 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0, pclath, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5281 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;Total ram usage:        3 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    9
  5288 ;; This function calls:
  5289 ;;		_enableInterrupts
  5290 ;;		_nrf24l01SPIEnd
  5291 ;;		_nrf24l01SPISend
  5292 ;;		_nrf24l01SPIStart
  5293 ;; This function is called by:
  5294 ;;		_nrf24l01SetRXMode
  5295 ;;		_nrf24l01InitRegisters
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function _nrf24l01Send
  5301  0759                     _nrf24l01Send:	
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  5305                           ;nrf24l01Send@command stored from wreg
  5306  0759  0020               	movlb	0	; select bank0
  5307  075A  00A9               	movwf	nrf24l01Send@command
  5308                           
  5309                           ;nrf24l01.c: 18: enableInterrupts(0);
  5310  075B  3000               	movlw	0
  5311  075C  318F  272E  3187   	fcall	_enableInterrupts
  5312                           
  5313                           ;nrf24l01.c: 21: nrf24l01SPIStart();
  5314  075F  318F  2736  3187   	fcall	_nrf24l01SPIStart
  5315                           
  5316                           ;nrf24l01.c: 24: nrf24l01SPISend(command);
  5317  0762  0020               	movlb	0	; select bank0
  5318  0763  0829               	movf	nrf24l01Send@command,w
  5319  0764  3187  27F2  3187   	fcall	_nrf24l01SPISend
  5320                           
  5321                           ;nrf24l01.c: 27: data = nrf24l01SPISend(data);
  5322  0767  0020               	movlb	0	; select bank0
  5323  0768  0827               	movf	nrf24l01Send@data,w
  5324  0769  3187  27F2  3187   	fcall	_nrf24l01SPISend
  5325  076C  0020               	movlb	0	; select bank0
  5326  076D  00A8               	movwf	??_nrf24l01Send
  5327  076E  0828               	movf	??_nrf24l01Send,w
  5328  076F  00A7               	movwf	nrf24l01Send@data
  5329                           
  5330                           ;nrf24l01.c: 30: nrf24l01SPIEnd();
  5331  0770  318F  2727  3187   	fcall	_nrf24l01SPIEnd
  5332                           
  5333                           ;nrf24l01.c: 33: enableInterrupts(1);
  5334  0773  3001               	movlw	1
  5335  0774  318F  272E         	fcall	_enableInterrupts
  5336                           
  5337                           ;nrf24l01.c: 35: return data;
  5338  0776  0020               	movlb	0	; select bank0
  5339  0777  0827               	movf	nrf24l01Send@data,w
  5340  0778  0008               	return
  5341  0779                     __end_of_nrf24l01Send:	
  5342                           
  5343                           	psect	text17
  5344  028F                     __ptext17:	
  5345 ;; *************** function _getADCValue *****************
  5346 ;; Defined at:
  5347 ;;		line 23 in file "main.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  channel         1    wreg     unsigned char 
  5350 ;;  divider         4   21[BANK0 ] unsigned long 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  channel         1   29[BANK0 ] unsigned char 
  5353 ;;  adcSum          4   31[BANK0 ] unsigned long 
  5354 ;;  adcLoop         1   30[BANK0 ] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  4   21[BANK0 ] unsigned long 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, pclath, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;Total ram usage:       14 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    8
  5371 ;; This function calls:
  5372 ;;		___lldiv
  5373 ;;		___lmul
  5374 ;; This function is called by:
  5375 ;;		_loop
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function _getADCValue
  5381  028F                     _getADCValue:	
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  5385                           ;getADCValue@channel stored from wreg
  5386  028F  0020               	movlb	0	; select bank0
  5387  0290  00BD               	movwf	getADCValue@channel
  5388                           
  5389                           ;main.c: 25: unsigned long adcSum = 0;
  5390  0291  3000               	movlw	0
  5391  0292  00C2               	movwf	getADCValue@adcSum+3
  5392  0293  3000               	movlw	0
  5393  0294  00C1               	movwf	getADCValue@adcSum+2
  5394  0295  3000               	movlw	0
  5395  0296  00C0               	movwf	getADCValue@adcSum+1
  5396  0297  3000               	movlw	0
  5397  0298  00BF               	movwf	getADCValue@adcSum
  5398                           
  5399                           ;main.c: 26: unsigned char adcLoop = 255;
  5400  0299  30FF               	movlw	255
  5401  029A  00B9               	movwf	??_getADCValue
  5402  029B  0839               	movf	??_getADCValue,w
  5403  029C  00BE               	movwf	getADCValue@adcLoop
  5404                           
  5405                           ;main.c: 28: ADCON0bits.CHS = channel;
  5406  029D  083D               	movf	getADCValue@channel,w
  5407  029E  00B9               	movwf	??_getADCValue
  5408  029F  0DB9               	rlf	??_getADCValue,f
  5409  02A0  0DB9               	rlf	??_getADCValue,f
  5410  02A1  0021               	movlb	1	; select bank1
  5411  02A2  081D               	movf	29,w	;volatile
  5412  02A3  0020               	movlb	0	; select bank0
  5413  02A4  0639               	xorwf	??_getADCValue,w
  5414  02A5  3903               	andlw	-253
  5415  02A6  0639               	xorwf	??_getADCValue,w
  5416  02A7  0021               	movlb	1	; select bank1
  5417  02A8  009D               	movwf	29	;volatile
  5418                           
  5419                           ;main.c: 29: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5420  02A9  30A0               	movlw	160
  5421  02AA                     u1917:	
  5422  02AA  3200               	nop2
  5423  02AB  0B89               	decfsz	9,f
  5424  02AC  2AAA               	goto	u1917
  5425  02AD                     l2289:	
  5426                           ;main.c: 31: while (--adcLoop){
  5427                           
  5428  02AD  3001               	movlw	1
  5429  02AE  0020               	movlb	0	; select bank0
  5430  02AF  02BE               	subwf	getADCValue@adcLoop,f
  5431  02B0  1903               	btfsc	3,2
  5432  02B1  2AD7               	goto	l2291
  5433                           
  5434                           ;main.c: 33: ADCON0bits.ADGO = 1;
  5435  02B2  0021               	movlb	1	; select bank1
  5436  02B3  149D               	bsf	29,1	;volatile
  5437  02B4                     l214:	
  5438                           ;main.c: 35: while (ADCON0bits.ADGO){
  5439                           
  5440  02B4  0021               	movlb	1	; select bank1
  5441  02B5  1C9D               	btfss	29,1	;volatile
  5442  02B6  2AB9               	goto	l2287
  5443                           
  5444                           ;main.c: 36: __nop();
  5445  02B7  0000               	nop
  5446  02B8  2AB4               	goto	l214
  5447  02B9                     l2287:	
  5448                           
  5449                           ;main.c: 37: };main.c: 39: adcSum+= ADRESL;
  5450  02B9  081B               	movf	27,w	;volatile
  5451  02BA  0020               	movlb	0	; select bank0
  5452  02BB  00B9               	movwf	??_getADCValue
  5453  02BC  01BA               	clrf	??_getADCValue+1
  5454  02BD  01BB               	clrf	??_getADCValue+2
  5455  02BE  01BC               	clrf	??_getADCValue+3
  5456  02BF  0839               	movf	??_getADCValue,w
  5457  02C0  07BF               	addwf	getADCValue@adcSum,f
  5458  02C1  083A               	movf	??_getADCValue+1,w
  5459  02C2  3DC0               	addwfc	getADCValue@adcSum+1,f
  5460  02C3  083B               	movf	??_getADCValue+2,w
  5461  02C4  3DC1               	addwfc	getADCValue@adcSum+2,f
  5462  02C5  083C               	movf	??_getADCValue+3,w
  5463  02C6  3DC2               	addwfc	getADCValue@adcSum+3,f
  5464                           
  5465                           ;main.c: 40: adcSum+= (unsigned) (ADRESH << 8);
  5466  02C7  0021               	movlb	1	; select bank1
  5467  02C8  081C               	movf	28,w	;volatile
  5468  02C9  0020               	movlb	0	; select bank0
  5469  02CA  00B9               	movwf	??_getADCValue
  5470  02CB  01BA               	clrf	??_getADCValue+1
  5471  02CC  0839               	movf	??_getADCValue,w
  5472  02CD  00BA               	movwf	??_getADCValue+1
  5473  02CE  01B9               	clrf	??_getADCValue
  5474  02CF  0839               	movf	??_getADCValue,w
  5475  02D0  07BF               	addwf	getADCValue@adcSum,f
  5476  02D1  083A               	movf	??_getADCValue+1,w
  5477  02D2  3DC0               	addwfc	getADCValue@adcSum+1,f
  5478  02D3  3000               	movlw	0
  5479  02D4  3DC1               	addwfc	getADCValue@adcSum+2,f
  5480  02D5  3DC2               	addwfc	getADCValue@adcSum+3,f
  5481  02D6  2AAD               	goto	l2289
  5482  02D7                     l2291:	
  5483                           
  5484                           ;main.c: 41: };main.c: 44: adcSum*= 100;
  5485  02D7  3000               	movlw	0
  5486  02D8  00AA               	movwf	___lmul@multiplier+3
  5487  02D9  3000               	movlw	0
  5488  02DA  00A9               	movwf	___lmul@multiplier+2
  5489  02DB  3000               	movlw	0
  5490  02DC  00A8               	movwf	___lmul@multiplier+1
  5491  02DD  3064               	movlw	100
  5492  02DE  00A7               	movwf	___lmul@multiplier
  5493  02DF  0842               	movf	getADCValue@adcSum+3,w
  5494  02E0  00AE               	movwf	___lmul@multiplicand+3
  5495  02E1  0841               	movf	getADCValue@adcSum+2,w
  5496  02E2  00AD               	movwf	___lmul@multiplicand+2
  5497  02E3  0840               	movf	getADCValue@adcSum+1,w
  5498  02E4  00AC               	movwf	___lmul@multiplicand+1
  5499  02E5  083F               	movf	getADCValue@adcSum,w
  5500  02E6  00AB               	movwf	___lmul@multiplicand
  5501  02E7  3185  25B7  3182   	fcall	___lmul
  5502  02EA  0020               	movlb	0	; select bank0
  5503  02EB  082A               	movf	?___lmul+3,w
  5504  02EC  00C2               	movwf	getADCValue@adcSum+3
  5505  02ED  0829               	movf	?___lmul+2,w
  5506  02EE  00C1               	movwf	getADCValue@adcSum+2
  5507  02EF  0828               	movf	?___lmul+1,w
  5508  02F0  00C0               	movwf	getADCValue@adcSum+1
  5509  02F1  0827               	movf	?___lmul,w
  5510  02F2  00BF               	movwf	getADCValue@adcSum
  5511                           
  5512                           ;main.c: 45: adcSum/= divider;
  5513  02F3  0838               	movf	getADCValue@divider+3,w
  5514  02F4  00AA               	movwf	___lldiv@divisor+3
  5515  02F5  0837               	movf	getADCValue@divider+2,w
  5516  02F6  00A9               	movwf	___lldiv@divisor+2
  5517  02F7  0836               	movf	getADCValue@divider+1,w
  5518  02F8  00A8               	movwf	___lldiv@divisor+1
  5519  02F9  0835               	movf	getADCValue@divider,w
  5520  02FA  00A7               	movwf	___lldiv@divisor
  5521  02FB  0842               	movf	getADCValue@adcSum+3,w
  5522  02FC  00AE               	movwf	___lldiv@dividend+3
  5523  02FD  0841               	movf	getADCValue@adcSum+2,w
  5524  02FE  00AD               	movwf	___lldiv@dividend+2
  5525  02FF  0840               	movf	getADCValue@adcSum+1,w
  5526  0300  00AC               	movwf	___lldiv@dividend+1
  5527  0301  083F               	movf	getADCValue@adcSum,w
  5528  0302  00AB               	movwf	___lldiv@dividend
  5529  0303  3183  23FF         	fcall	___lldiv
  5530  0305  0020               	movlb	0	; select bank0
  5531  0306  082A               	movf	?___lldiv+3,w
  5532  0307  00C2               	movwf	getADCValue@adcSum+3
  5533  0308  0829               	movf	?___lldiv+2,w
  5534  0309  00C1               	movwf	getADCValue@adcSum+2
  5535  030A  0828               	movf	?___lldiv+1,w
  5536  030B  00C0               	movwf	getADCValue@adcSum+1
  5537  030C  0827               	movf	?___lldiv,w
  5538  030D  00BF               	movwf	getADCValue@adcSum
  5539                           
  5540                           ;main.c: 47: return adcSum;
  5541  030E  0842               	movf	getADCValue@adcSum+3,w
  5542  030F  00B8               	movwf	?_getADCValue+3
  5543  0310  0841               	movf	getADCValue@adcSum+2,w
  5544  0311  00B7               	movwf	?_getADCValue+2
  5545  0312  0840               	movf	getADCValue@adcSum+1,w
  5546  0313  00B6               	movwf	?_getADCValue+1
  5547  0314  083F               	movf	getADCValue@adcSum,w
  5548  0315  00B5               	movwf	?_getADCValue
  5549  0316  0008               	return
  5550  0317                     __end_of_getADCValue:	
  5551                           
  5552                           	psect	text18
  5553  05B7                     __ptext18:	
  5554 ;; *************** function ___lmul *****************
  5555 ;; Defined at:
  5556 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  multiplier      4    7[BANK0 ] unsigned long 
  5559 ;;  multiplicand    4   11[BANK0 ] unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  product         4   15[BANK0 ] unsigned long 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  4    7[BANK0 ] unsigned long 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5571 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;Total ram usage:       12 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    7
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_getADCValue
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function ___lmul
  5587  05B7                     ___lmul:	
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5591  05B7  3000               	movlw	0
  5592  05B8  0020               	movlb	0	; select bank0
  5593  05B9  00B2               	movwf	___lmul@product+3
  5594  05BA  3000               	movlw	0
  5595  05BB  00B1               	movwf	___lmul@product+2
  5596  05BC  3000               	movlw	0
  5597  05BD  00B0               	movwf	___lmul@product+1
  5598  05BE  3000               	movlw	0
  5599  05BF  00AF               	movwf	___lmul@product
  5600  05C0                     l2045:	
  5601  05C0  1C27               	btfss	___lmul@multiplier,0
  5602  05C1  2DCA               	goto	l2049
  5603  05C2  082B               	movf	___lmul@multiplicand,w
  5604  05C3  07AF               	addwf	___lmul@product,f
  5605  05C4  082C               	movf	___lmul@multiplicand+1,w
  5606  05C5  3DB0               	addwfc	___lmul@product+1,f
  5607  05C6  082D               	movf	___lmul@multiplicand+2,w
  5608  05C7  3DB1               	addwfc	___lmul@product+2,f
  5609  05C8  082E               	movf	___lmul@multiplicand+3,w
  5610  05C9  3DB2               	addwfc	___lmul@product+3,f
  5611  05CA                     l2049:	
  5612  05CA  3001               	movlw	1
  5613  05CB                     u875:	
  5614  05CB  35AB               	lslf	___lmul@multiplicand,f
  5615  05CC  0DAC               	rlf	___lmul@multiplicand+1,f
  5616  05CD  0DAD               	rlf	___lmul@multiplicand+2,f
  5617  05CE  0DAE               	rlf	___lmul@multiplicand+3,f
  5618  05CF  0B89               	decfsz	9,f
  5619  05D0  2DCB               	goto	u875
  5620  05D1  3001               	movlw	1
  5621  05D2                     u885:	
  5622  05D2  36AA               	lsrf	___lmul@multiplier+3,f
  5623  05D3  0CA9               	rrf	___lmul@multiplier+2,f
  5624  05D4  0CA8               	rrf	___lmul@multiplier+1,f
  5625  05D5  0CA7               	rrf	___lmul@multiplier,f
  5626  05D6  0B89               	decfsz	9,f
  5627  05D7  2DD2               	goto	u885
  5628  05D8  082A               	movf	___lmul@multiplier+3,w
  5629  05D9  0429               	iorwf	___lmul@multiplier+2,w
  5630  05DA  0428               	iorwf	___lmul@multiplier+1,w
  5631  05DB  0427               	iorwf	___lmul@multiplier,w
  5632  05DC  1D03               	skipz
  5633  05DD  2DC0               	goto	l2045
  5634  05DE  0832               	movf	___lmul@product+3,w
  5635  05DF  00AA               	movwf	?___lmul+3
  5636  05E0  0831               	movf	___lmul@product+2,w
  5637  05E1  00A9               	movwf	?___lmul+2
  5638  05E2  0830               	movf	___lmul@product+1,w
  5639  05E3  00A8               	movwf	?___lmul+1
  5640  05E4  082F               	movf	___lmul@product,w
  5641  05E5  00A7               	movwf	?___lmul
  5642  05E6  0008               	return
  5643  05E7                     __end_of___lmul:	
  5644                           
  5645                           	psect	text19
  5646  03FF                     __ptext19:	
  5647 ;; *************** function ___lldiv *****************
  5648 ;; Defined at:
  5649 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  divisor         4    7[BANK0 ] unsigned long 
  5652 ;;  dividend        4   11[BANK0 ] unsigned long 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  quotient        4   16[BANK0 ] unsigned long 
  5655 ;;  counter         1   20[BANK0 ] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  4    7[BANK0 ] unsigned long 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5665 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;Total ram usage:       14 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    7
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_getADCValue
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function ___lldiv
  5681  03FF                     ___lldiv:	
  5682                           
  5683                           ;incstack = 0
  5684                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5685  03FF  3000               	movlw	0
  5686  0400  0020               	movlb	0	; select bank0
  5687  0401  00B3               	movwf	___lldiv@quotient+3
  5688  0402  3000               	movlw	0
  5689  0403  00B2               	movwf	___lldiv@quotient+2
  5690  0404  3000               	movlw	0
  5691  0405  00B1               	movwf	___lldiv@quotient+1
  5692  0406  3000               	movlw	0
  5693  0407  00B0               	movwf	___lldiv@quotient
  5694  0408  082A               	movf	___lldiv@divisor+3,w
  5695  0409  0429               	iorwf	___lldiv@divisor+2,w
  5696  040A  0428               	iorwf	___lldiv@divisor+1,w
  5697  040B  0427               	iorwf	___lldiv@divisor,w
  5698  040C  1903               	skipnz
  5699  040D  2C49               	goto	l2077
  5700  040E  01B4               	clrf	___lldiv@counter
  5701  040F  0AB4               	incf	___lldiv@counter,f
  5702  0410                     l2063:	
  5703  0410  1BAA               	btfsc	___lldiv@divisor+3,7
  5704  0411  2C1E               	goto	l2065
  5705  0412  3001               	movlw	1
  5706  0413                     u915:	
  5707  0413  35A7               	lslf	___lldiv@divisor,f
  5708  0414  0DA8               	rlf	___lldiv@divisor+1,f
  5709  0415  0DA9               	rlf	___lldiv@divisor+2,f
  5710  0416  0DAA               	rlf	___lldiv@divisor+3,f
  5711  0417  0B89               	decfsz	9,f
  5712  0418  2C13               	goto	u915
  5713  0419  3001               	movlw	1
  5714  041A  00AF               	movwf	??___lldiv
  5715  041B  082F               	movf	??___lldiv,w
  5716  041C  07B4               	addwf	___lldiv@counter,f
  5717  041D  2C10               	goto	l2063
  5718  041E                     l2065:	
  5719  041E  3001               	movlw	1
  5720  041F                     u935:	
  5721  041F  35B0               	lslf	___lldiv@quotient,f
  5722  0420  0DB1               	rlf	___lldiv@quotient+1,f
  5723  0421  0DB2               	rlf	___lldiv@quotient+2,f
  5724  0422  0DB3               	rlf	___lldiv@quotient+3,f
  5725  0423  0B89               	decfsz	9,f
  5726  0424  2C1F               	goto	u935
  5727  0425  082A               	movf	___lldiv@divisor+3,w
  5728  0426  022E               	subwf	___lldiv@dividend+3,w
  5729  0427  1D03               	skipz
  5730  0428  2C33               	goto	u945
  5731  0429  0829               	movf	___lldiv@divisor+2,w
  5732  042A  022D               	subwf	___lldiv@dividend+2,w
  5733  042B  1D03               	skipz
  5734  042C  2C33               	goto	u945
  5735  042D  0828               	movf	___lldiv@divisor+1,w
  5736  042E  022C               	subwf	___lldiv@dividend+1,w
  5737  042F  1D03               	skipz
  5738  0430  2C33               	goto	u945
  5739  0431  0827               	movf	___lldiv@divisor,w
  5740  0432  022B               	subwf	___lldiv@dividend,w
  5741  0433                     u945:	
  5742  0433  1C03               	skipc
  5743  0434  2C3E               	goto	l2073
  5744  0435  0827               	movf	___lldiv@divisor,w
  5745  0436  02AB               	subwf	___lldiv@dividend,f
  5746  0437  0828               	movf	___lldiv@divisor+1,w
  5747  0438  3BAC               	subwfb	___lldiv@dividend+1,f
  5748  0439  0829               	movf	___lldiv@divisor+2,w
  5749  043A  3BAD               	subwfb	___lldiv@dividend+2,f
  5750  043B  082A               	movf	___lldiv@divisor+3,w
  5751  043C  3BAE               	subwfb	___lldiv@dividend+3,f
  5752  043D  1430               	bsf	___lldiv@quotient,0
  5753  043E                     l2073:	
  5754  043E  3001               	movlw	1
  5755  043F                     u955:	
  5756  043F  36AA               	lsrf	___lldiv@divisor+3,f
  5757  0440  0CA9               	rrf	___lldiv@divisor+2,f
  5758  0441  0CA8               	rrf	___lldiv@divisor+1,f
  5759  0442  0CA7               	rrf	___lldiv@divisor,f
  5760  0443  0B89               	decfsz	9,f
  5761  0444  2C3F               	goto	u955
  5762  0445  3001               	movlw	1
  5763  0446  02B4               	subwf	___lldiv@counter,f
  5764  0447  1D03               	btfss	3,2
  5765  0448  2C1E               	goto	l2065
  5766  0449                     l2077:	
  5767  0449  0833               	movf	___lldiv@quotient+3,w
  5768  044A  00AA               	movwf	?___lldiv+3
  5769  044B  0832               	movf	___lldiv@quotient+2,w
  5770  044C  00A9               	movwf	?___lldiv+2
  5771  044D  0831               	movf	___lldiv@quotient+1,w
  5772  044E  00A8               	movwf	?___lldiv+1
  5773  044F  0830               	movf	___lldiv@quotient,w
  5774  0450  00A7               	movwf	?___lldiv
  5775  0451  0008               	return
  5776  0452                     __end_of___lldiv:	
  5777                           
  5778                           	psect	text20
  5779  0737                     __ptext20:	
  5780 ;; *************** function _flashUpdate *****************
  5781 ;; Defined at:
  5782 ;;		line 97 in file "flash.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  i               2   15[BANK0 ] unsigned int 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;Total ram usage:        4 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    8
  5803 ;; This function calls:
  5804 ;;		_flashWriteByte
  5805 ;; This function is called by:
  5806 ;;		_main
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _flashUpdate
  5812  0737                     _flashUpdate:	
  5813                           
  5814                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5818  0737  0020               	movlb	0	; select bank0
  5819  0738  01AF               	clrf	flashUpdate@i
  5820  0739  01B0               	clrf	flashUpdate@i+1
  5821  073A                     L1:	
  5822  073A  3000               	movlw	0
  5823  073B  0230               	subwf	flashUpdate@i+1,w
  5824  073C  3020               	movlw	32
  5825  073D  1903               	skipnz
  5826  073E  022F               	subwf	flashUpdate@i,w
  5827  073F  1803               	btfsc	3,0
  5828  0740  0008               	return
  5829                           
  5830                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  5831  0741  0830               	movf	flashUpdate@i+1,w
  5832  0742  00A8               	movwf	flashWriteByte@offset+1
  5833  0743  082F               	movf	flashUpdate@i,w
  5834  0744  00A7               	movwf	flashWriteByte@offset
  5835  0745  082F               	movf	flashUpdate@i,w
  5836  0746  3EA0               	addlw	(low (_romHolder| 0))& (0+255)
  5837  0747  0086               	movwf	6
  5838  0748  0187               	clrf	7
  5839  0749  0801               	movf	1,w
  5840  074A  00AD               	movwf	??_flashUpdate
  5841  074B  01AE               	clrf	??_flashUpdate+1
  5842  074C  082D               	movf	??_flashUpdate,w
  5843  074D  00A9               	movwf	flashWriteByte@data
  5844  074E  082E               	movf	??_flashUpdate+1,w
  5845  074F  00AA               	movwf	flashWriteByte@data+1
  5846  0750  3184  24A2  3187   	fcall	_flashWriteByte
  5847  0753  3001               	movlw	1
  5848  0754  0020               	movlb	0	; select bank0
  5849  0755  07AF               	addwf	flashUpdate@i,f
  5850  0756  3000               	movlw	0
  5851  0757  3DB0               	addwfc	flashUpdate@i+1,f
  5852  0758  2F3A               	goto	L1
  5853  0759                     __end_of_flashUpdate:	
  5854                           
  5855                           	psect	text21
  5856  04A2                     __ptext21:	
  5857 ;; *************** function _flashWriteByte *****************
  5858 ;; Defined at:
  5859 ;;		line 8 in file "flash.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  offset          2    7[BANK0 ] unsigned int 
  5862 ;;  data            2    9[BANK0 ] unsigned int 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  address         2   11[BANK0 ] unsigned int 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      void 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;Total ram usage:        6 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    7
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_flashUpdate
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _flashWriteByte
  5890  04A2                     _flashWriteByte:	
  5891                           
  5892                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  5896  04A2  138B               	bcf	11,7	;volatile
  5897                           
  5898                           ;flash.c: 15: PMCON1 = 0x00;
  5899  04A3  0031               	movlb	17	; select bank17
  5900  04A4  0195               	clrf	21	;volsfr
  5901                           
  5902                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  5903  04A5  0020               	movlb	0	; select bank0
  5904  04A6  0827               	movf	flashWriteByte@offset,w
  5905  04A7  3EE0               	addlw	224
  5906  04A8  00AB               	movwf	flashWriteByte@address
  5907  04A9  301F               	movlw	31
  5908  04AA  3D28               	addwfc	flashWriteByte@offset+1,w
  5909  04AB  00AC               	movwf	flashWriteByte@address+1
  5910                           
  5911                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  5912  04AC  082B               	movf	flashWriteByte@address,w
  5913  04AD  0031               	movlb	17	; select bank17
  5914  04AE  0091               	movwf	17	;volatile
  5915                           
  5916                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  5917  04AF  0020               	movlb	0	; select bank0
  5918  04B0  082C               	movf	flashWriteByte@address+1,w
  5919  04B1  0031               	movlb	17	; select bank17
  5920  04B2  0092               	movwf	18	;volatile
  5921                           
  5922                           ;flash.c: 21: PMCON1bits.FREE = 1;
  5923  04B3  1615               	bsf	21,4	;volsfr
  5924                           
  5925                           ;flash.c: 22: PMCON1bits.WREN = 1;
  5926  04B4  1515               	bsf	21,2	;volsfr
  5927                           
  5928                           ;flash.c: 24: PMCON2 = 0x55;
  5929  04B5  3055               	movlw	85
  5930  04B6  0096               	movwf	22	;volsfr
  5931                           
  5932                           ;flash.c: 25: PMCON2 = 0xAA;
  5933  04B7  30AA               	movlw	170
  5934  04B8  0096               	movwf	22	;volsfr
  5935                           
  5936                           ;flash.c: 27: PMCON1bits.WR = 1;
  5937  04B9  1495               	bsf	21,1	;volsfr
  5938                           
  5939                           ;flash.c: 29: __nop();
  5940  04BA  0000               	nop
  5941                           
  5942                           ;flash.c: 30: __nop();
  5943  04BB  0000               	nop
  5944                           
  5945                           ;flash.c: 32: PMCON1bits.WREN = 0;
  5946  04BC  0031               	movlb	17	; select bank17
  5947  04BD  1115               	bcf	21,2	;volsfr
  5948                           
  5949                           ;flash.c: 36: PMCON1 = 0x00;
  5950  04BE  0195               	clrf	21	;volsfr
  5951                           
  5952                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  5953  04BF  0020               	movlb	0	; select bank0
  5954  04C0  082B               	movf	flashWriteByte@address,w
  5955  04C1  0031               	movlb	17	; select bank17
  5956  04C2  0091               	movwf	17	;volatile
  5957                           
  5958                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  5959  04C3  0020               	movlb	0	; select bank0
  5960  04C4  082C               	movf	flashWriteByte@address+1,w
  5961  04C5  0031               	movlb	17	; select bank17
  5962  04C6  0092               	movwf	18	;volatile
  5963                           
  5964                           ;flash.c: 41: PMCON1bits.FREE = 0;
  5965  04C7  1215               	bcf	21,4	;volsfr
  5966                           
  5967                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  5968  04C8  1695               	bsf	21,5	;volsfr
  5969                           
  5970                           ;flash.c: 43: PMCON1bits.WREN = 1;
  5971  04C9  1515               	bsf	21,2	;volsfr
  5972                           
  5973                           ;flash.c: 45: PMDATL = (data >> 0);
  5974  04CA  0020               	movlb	0	; select bank0
  5975  04CB  0829               	movf	flashWriteByte@data,w
  5976  04CC  0031               	movlb	17	; select bank17
  5977  04CD  0093               	movwf	19	;volatile
  5978                           
  5979                           ;flash.c: 46: PMDATH = (data >> 8);
  5980  04CE  0020               	movlb	0	; select bank0
  5981  04CF  082A               	movf	flashWriteByte@data+1,w
  5982  04D0  0031               	movlb	17	; select bank17
  5983  04D1  0094               	movwf	20	;volatile
  5984                           
  5985                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  5986  04D2  1295               	bcf	21,5	;volsfr
  5987                           
  5988                           ;flash.c: 50: PMCON2 = 0x55;
  5989  04D3  3055               	movlw	85
  5990  04D4  0096               	movwf	22	;volsfr
  5991                           
  5992                           ;flash.c: 51: PMCON2 = 0xAA;
  5993  04D5  30AA               	movlw	170
  5994  04D6  0096               	movwf	22	;volsfr
  5995                           
  5996                           ;flash.c: 53: PMCON1bits.WR = 1;
  5997  04D7  1495               	bsf	21,1	;volsfr
  5998                           
  5999                           ;flash.c: 55: __nop();
  6000  04D8  0000               	nop
  6001                           
  6002                           ;flash.c: 56: __nop();
  6003  04D9  0000               	nop
  6004                           
  6005                           ;flash.c: 58: PMCON1bits.WREN = 0;
  6006  04DA  0031               	movlb	17	; select bank17
  6007  04DB  1115               	bcf	21,2	;volsfr
  6008                           
  6009                           ;flash.c: 61: INTCONbits.GIE = 1;
  6010  04DC  178B               	bsf	11,7	;volatile
  6011  04DD  0008               	return
  6012  04DE                     __end_of_flashWriteByte:	
  6013                           
  6014                           	psect	text22
  6015  0799                     __ptext22:	
  6016 ;; *************** function _flashRealod *****************
  6017 ;; Defined at:
  6018 ;;		line 90 in file "flash.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  i               2   17[BANK0 ] unsigned int 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;Total ram usage:        3 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    8
  6039 ;; This function calls:
  6040 ;;		_flashReadByte
  6041 ;; This function is called by:
  6042 ;;		_main
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           
  6047                           ;psect for function _flashRealod
  6048  0799                     _flashRealod:	
  6049                           
  6050                           ;flash.c: 92: for (unsigned int i = 0; i < 32; i++){
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in _flashRealod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6054  0799  0020               	movlb	0	; select bank0
  6055  079A  01B1               	clrf	flashRealod@i
  6056  079B  01B2               	clrf	flashRealod@i+1
  6057  079C                     L2:	
  6058  079C  3000               	movlw	0
  6059  079D  0232               	subwf	flashRealod@i+1,w
  6060  079E  3020               	movlw	32
  6061  079F  1903               	skipnz
  6062  07A0  0231               	subwf	flashRealod@i,w
  6063  07A1  1803               	btfsc	3,0
  6064  07A2  0008               	return
  6065                           
  6066                           ;flash.c: 93: romHolder.array[i] = flashReadByte(i);
  6067  07A3  0832               	movf	flashRealod@i+1,w
  6068  07A4  00A8               	movwf	flashReadByte@offset+1
  6069  07A5  0831               	movf	flashRealod@i,w
  6070  07A6  00A7               	movwf	flashReadByte@offset
  6071  07A7  3185  2585  3187   	fcall	_flashReadByte
  6072  07AA  0020               	movlb	0	; select bank0
  6073  07AB  0827               	movf	?_flashReadByte,w
  6074  07AC  00B0               	movwf	??_flashRealod
  6075  07AD  0831               	movf	flashRealod@i,w
  6076  07AE  3EA0               	addlw	(low (_romHolder| 0))& (0+255)
  6077  07AF  0086               	movwf	6
  6078  07B0  0187               	clrf	7
  6079  07B1  0830               	movf	??_flashRealod,w
  6080  07B2  0081               	movwf	1
  6081  07B3  3001               	movlw	1
  6082  07B4  07B1               	addwf	flashRealod@i,f
  6083  07B5  3000               	movlw	0
  6084  07B6  3DB2               	addwfc	flashRealod@i+1,f
  6085  07B7  2F9C               	goto	L2
  6086  07B8                     __end_of_flashRealod:	
  6087                           
  6088                           	psect	text23
  6089  0585                     __ptext23:	
  6090 ;; *************** function _flashReadByte *****************
  6091 ;; Defined at:
  6092 ;;		line 64 in file "flash.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  offset          2    7[BANK0 ] unsigned int 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  address         2   14[BANK0 ] unsigned int 
  6097 ;;  result          2   12[BANK0 ] unsigned int 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  2    7[BANK0 ] unsigned int 
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;Total ram usage:        9 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    7
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_flashRealod
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function _flashReadByte
  6123  0585                     _flashReadByte:	
  6124                           
  6125                           ;flash.c: 66: unsigned int address;;flash.c: 68: INTCONbits.GIE = 0;
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _flashReadByte: [wreg+status,2+status,0]
  6129  0585  138B               	bcf	11,7	;volatile
  6130                           
  6131                           ;flash.c: 70: PMCON1 = 0x00;
  6132  0586  0031               	movlb	17	; select bank17
  6133  0587  0195               	clrf	21	;volsfr
  6134                           
  6135                           ;flash.c: 72: address = (0x2000U - 32) + offset;
  6136  0588  0020               	movlb	0	; select bank0
  6137  0589  0827               	movf	flashReadByte@offset,w
  6138  058A  3EE0               	addlw	224
  6139  058B  00AE               	movwf	flashReadByte@address
  6140  058C  301F               	movlw	31
  6141  058D  3D28               	addwfc	flashReadByte@offset+1,w
  6142  058E  00AF               	movwf	flashReadByte@address+1
  6143                           
  6144                           ;flash.c: 73: PMADRL = (char) (address >> 0);
  6145  058F  082E               	movf	flashReadByte@address,w
  6146  0590  0031               	movlb	17	; select bank17
  6147  0591  0091               	movwf	17	;volatile
  6148                           
  6149                           ;flash.c: 74: PMADRH = (char) (address >> 8);
  6150  0592  0020               	movlb	0	; select bank0
  6151  0593  082F               	movf	flashReadByte@address+1,w
  6152  0594  0031               	movlb	17	; select bank17
  6153  0595  0092               	movwf	18	;volatile
  6154                           
  6155                           ;flash.c: 76: PMCON1bits.RD = 1;
  6156  0596  1415               	bsf	21,0	;volsfr
  6157                           
  6158                           ;flash.c: 78: __nop();
  6159  0597  0000               	nop
  6160                           
  6161                           ;flash.c: 79: __nop();
  6162  0598  0000               	nop
  6163                           
  6164                           ;flash.c: 81: unsigned int result = 0;
  6165  0599  0020               	movlb	0	; select bank0
  6166  059A  01AC               	clrf	flashReadByte@result
  6167  059B  01AD               	clrf	flashReadByte@result+1
  6168                           
  6169                           ;flash.c: 82: result = PMDATL;
  6170  059C  0031               	movlb	17	; select bank17
  6171  059D  0813               	movf	19,w	;volatile
  6172  059E  0020               	movlb	0	; select bank0
  6173  059F  00A9               	movwf	??_flashReadByte
  6174  05A0  01AA               	clrf	??_flashReadByte+1
  6175  05A1  0829               	movf	??_flashReadByte,w
  6176  05A2  00AC               	movwf	flashReadByte@result
  6177  05A3  082A               	movf	??_flashReadByte+1,w
  6178  05A4  00AD               	movwf	flashReadByte@result+1
  6179                           
  6180                           ;flash.c: 83: result|= ( (unsigned) (PMDATH) << 8);
  6181  05A5  0031               	movlb	17	; select bank17
  6182  05A6  0814               	movf	20,w	;volatile
  6183  05A7  0020               	movlb	0	; select bank0
  6184  05A8  00A9               	movwf	??_flashReadByte
  6185  05A9  01AA               	clrf	??_flashReadByte+1
  6186  05AA  0829               	movf	??_flashReadByte,w
  6187  05AB  00AA               	movwf	??_flashReadByte+1
  6188  05AC  01A9               	clrf	??_flashReadByte
  6189  05AD  0829               	movf	??_flashReadByte,w
  6190  05AE  04AC               	iorwf	flashReadByte@result,f
  6191  05AF  082A               	movf	??_flashReadByte+1,w
  6192  05B0  04AD               	iorwf	flashReadByte@result+1,f
  6193                           
  6194                           ;flash.c: 85: INTCONbits.GIE = 1;
  6195  05B1  178B               	bsf	11,7	;volatile
  6196                           
  6197                           ;flash.c: 87: return result;
  6198  05B2  082D               	movf	flashReadByte@result+1,w
  6199  05B3  00A8               	movwf	?_flashReadByte+1
  6200  05B4  082C               	movf	flashReadByte@result,w
  6201  05B5  00A7               	movwf	?_flashReadByte
  6202  05B6  0008               	return
  6203  05B7                     __end_of_flashReadByte:	
  6204                           
  6205                           	psect	intentry
  6206  0004                     __pintentry:	
  6207 ;; *************** function _ISR *****************
  6208 ;; Defined at:
  6209 ;;		line 15 in file "main.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;Total ram usage:        0 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    6
  6230 ;; This function calls:
  6231 ;;		_nrf24l01ISR
  6232 ;; This function is called by:
  6233 ;;		Interrupt level 1
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237  0004                     _ISR:	
  6238                           
  6239                           ;incstack = 0
  6240  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6241                           
  6242                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6243  0005  3180               	pagesel	$
  6244                           
  6245                           ;main.c: 17: if (PIR0bits.INTF){
  6246  0006  0020               	movlb	0	; select bank0
  6247  0007  1C10               	btfss	16,0	;volatile
  6248  0008  280D               	goto	i1l209
  6249                           
  6250                           ;main.c: 18: nrf24l01ISR();
  6251  0009  3186  2617         	fcall	_nrf24l01ISR
  6252                           
  6253                           ;main.c: 19: PIR0bits.INTF = 0;
  6254  000B  0020               	movlb	0	; select bank0
  6255  000C  1010               	bcf	16,0	;volatile
  6256  000D                     i1l209:	
  6257  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6258  000E  0009               	retfie
  6259  000F                     __end_of_ISR:	
  6260                           
  6261                           	psect	text25
  6262  0617                     __ptext25:	
  6263 ;; *************** function _nrf24l01ISR *****************
  6264 ;; Defined at:
  6265 ;;		line 238 in file "nrf24l01.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  status          1    6[BANK0 ] struct .
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;Total ram usage:        2 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    5
  6286 ;; This function calls:
  6287 ;;		_exception
  6288 ;;		_nrf24l01CheckACK
  6289 ;;		_nrf24l01ReceiveString
  6290 ;;		i1_nrf24l01Send
  6291 ;;		i1_nrf24l01SetRXMode
  6292 ;; This function is called by:
  6293 ;;		_ISR
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _nrf24l01ISR
  6299  0617                     _nrf24l01ISR:	
  6300                           
  6301                           ;nrf24l01.c: 240: n_STATUS_t status;;nrf24l01.c: 241: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _nrf24l01ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6305  0617  01F1               	clrf	i1nrf24l01Send@data
  6306  0618  3007               	movlw	7
  6307  0619  318F  2792  3186   	fcall	i1_nrf24l01Send
  6308  061C  0020               	movlb	0	; select bank0
  6309  061D  00A5               	movwf	??_nrf24l01ISR
  6310  061E  0825               	movf	??_nrf24l01ISR,w
  6311  061F  00A6               	movwf	nrf24l01ISR@status
  6312                           
  6313                           ;nrf24l01.c: 246: };nrf24l01.c: 249: if (status.byte == 0xFF){
  6314  0620  0A26               	incf	nrf24l01ISR@status,w
  6315  0621  1D03               	btfss	3,2
  6316  0622  2E27               	goto	i1l3161
  6317                           
  6318                           ;nrf24l01.c: 250: exception(2);
  6319  0623  3002               	movlw	2
  6320  0624  318F  2747  3186   	fcall	_exception
  6321  0627                     i1l3161:	
  6322                           
  6323                           ;nrf24l01.c: 251: };nrf24l01.c: 253: if (status.TX_DS){
  6324  0627  0020               	movlb	0	; select bank0
  6325  0628  1EA6               	btfss	nrf24l01ISR@status,5
  6326  0629  2E32               	goto	i1l3169
  6327                           
  6328                           ;nrf24l01.c: 256: nrf24l01.TXBusy = 0;
  6329  062A  10D1               	bcf	_nrf24l01,1	;volatile
  6330                           
  6331                           ;nrf24l01.c: 259: if (!nrf24l01.RXMode){
  6332  062B  1DD1               	btfss	_nrf24l01,3	;volatile
  6333                           
  6334                           ;nrf24l01.c: 260: if (nrf24l01TXPacketData.ACKRequest){
  6335  062C  1C52               	btfss	_nrf24l01TXPacketData,0
  6336  062D  2E32               	goto	i1l3169
  6337                           
  6338                           ;nrf24l01.c: 262: nrf24l01SetRXMode(1);
  6339  062E  3001               	movlw	1
  6340  062F  3185  2519  3186   	fcall	i1_nrf24l01SetRXMode
  6341  0632                     i1l3169:	
  6342                           
  6343                           ;nrf24l01.c: 263: };nrf24l01.c: 264: };nrf24l01.c: 265: };nrf24l01.c: 268: if (status.RX
      +                          _DR){
  6344  0632  0020               	movlb	0	; select bank0
  6345  0633  1F26               	btfss	nrf24l01ISR@status,6
  6346  0634  2E3C               	goto	i1l3177
  6347                           
  6348                           ;nrf24l01.c: 270: nrf24l01.RXPending = 1;
  6349  0635  1551               	bsf	_nrf24l01,2	;volatile
  6350                           
  6351                           ;nrf24l01.c: 272: nrf24l01ReceiveString();
  6352  0636  3184  2452  3186   	fcall	_nrf24l01ReceiveString
  6353                           
  6354                           ;nrf24l01.c: 273: nrf24l01CheckACK();
  6355  0639  318F  275F  3186   	fcall	_nrf24l01CheckACK
  6356  063C                     i1l3177:	
  6357                           
  6358                           ;nrf24l01.c: 274: };nrf24l01.c: 277: nrf24l01Send(0b00100000 | 0x07, status.byte);
  6359  063C  0020               	movlb	0	; select bank0
  6360  063D  0826               	movf	nrf24l01ISR@status,w
  6361  063E  00A5               	movwf	??_nrf24l01ISR
  6362  063F  0825               	movf	??_nrf24l01ISR,w
  6363  0640  00F1               	movwf	i1nrf24l01Send@data
  6364  0641  3027               	movlw	39
  6365  0642  318F  2792         	fcall	i1_nrf24l01Send
  6366  0644  0008               	return
  6367  0645                     __end_of_nrf24l01ISR:	
  6368                           
  6369                           	psect	text26
  6370  0452                     __ptext26:	
  6371 ;; *************** function _nrf24l01ReceiveString *****************
  6372 ;; Defined at:
  6373 ;;		line 107 in file "nrf24l01.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  i               1    4[BANK0 ] unsigned char 
  6378 ;;  width           1    3[BANK0 ] unsigned char 
  6379 ;;  offset          1    2[BANK0 ] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:        4 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    3
  6396 ;; This function calls:
  6397 ;;		_nrf24l01CEHigh
  6398 ;;		_nrf24l01CELow
  6399 ;;		_nrf24l01SPIEnd
  6400 ;;		_nrf24l01SPISend
  6401 ;;		_nrf24l01SPIStart
  6402 ;;		i1_memset
  6403 ;;		i1_nrf24l01Send
  6404 ;;		i1_strlen
  6405 ;; This function is called by:
  6406 ;;		_nrf24l01ISR
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function _nrf24l01ReceiveString
  6412  0452                     _nrf24l01ReceiveString:	
  6413                           
  6414                           ;nrf24l01.c: 110: unsigned char offset = 0;
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _nrf24l01ReceiveString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6418  0452  0020               	movlb	0	; select bank0
  6419  0453  01A2               	clrf	nrf24l01ReceiveString@offset
  6420                           
  6421                           ;nrf24l01.c: 113: memset(nrf24l01RXBuffer, 0 ,strlen(nrf24l01RXBuffer));
  6422  0454  3000               	movlw	0
  6423  0455  00F8               	movwf	i1memset@c
  6424  0456  00F9               	movwf	i1memset@c+1
  6425  0457  30A0               	movlw	(low (_nrf24l01RXBuffer| (0+256)))& (0+255)
  6426  0458  3187  2712  3184   	fcall	i1_strlen
  6427  045B  0871               	movf	?i1_strlen+1,w
  6428  045C  00FB               	movwf	i1memset@n+1
  6429  045D  0870               	movf	?i1_strlen,w
  6430  045E  00FA               	movwf	i1memset@n
  6431  045F  30A0               	movlw	(low (_nrf24l01RXBuffer| (0+256)))& (0+255)
  6432  0460  318F  27C8  3184   	fcall	i1_memset
  6433                           
  6434                           ;nrf24l01.c: 116: unsigned char width = nrf24l01Send(0b01100000, 0);
  6435  0463  01F1               	clrf	i1nrf24l01Send@data
  6436  0464  3060               	movlw	96
  6437  0465  318F  2792  3184   	fcall	i1_nrf24l01Send
  6438  0468  00FD               	movwf	??_nrf24l01ReceiveString
  6439  0469  087D               	movf	??_nrf24l01ReceiveString,w
  6440  046A  0020               	movlb	0	; select bank0
  6441  046B  00A3               	movwf	nrf24l01ReceiveString@width
  6442                           
  6443                           ;nrf24l01.c: 117: unsigned char i = 0;
  6444  046C  01A4               	clrf	nrf24l01ReceiveString@i
  6445                           
  6446                           ;nrf24l01.c: 120: nrf24l01CELow();
  6447  046D  318F  2718  3184   	fcall	_nrf24l01CELow
  6448                           
  6449                           ;nrf24l01.c: 123: nrf24l01SPIStart();
  6450  0470  318F  2736  3184   	fcall	_nrf24l01SPIStart
  6451                           
  6452                           ;nrf24l01.c: 126: nrf24l01SPISend(0b01100001);
  6453  0473  3061               	movlw	97
  6454  0474  3187  27F2  3184   	fcall	_nrf24l01SPISend
  6455                           
  6456                           ;nrf24l01.c: 129: nrf24l01RXPacketData.byte = nrf24l01SPISend(0);
  6457  0477  3000               	movlw	0
  6458  0478  3187  27F2  3184   	fcall	_nrf24l01SPISend
  6459  047B  00FD               	movwf	??_nrf24l01ReceiveString
  6460  047C  087D               	movf	??_nrf24l01ReceiveString,w
  6461  047D  0020               	movlb	0	; select bank0
  6462  047E  00CF               	movwf	_nrf24l01RXPacketData
  6463                           
  6464                           ;nrf24l01.c: 130: width--;
  6465  047F  3001               	movlw	1
  6466  0480  02A3               	subwf	nrf24l01ReceiveString@width,f
  6467                           
  6468                           ;nrf24l01.c: 132: for (i = 0; (i < width) && (i < sizeof(nrf24l01RXBuffer)); i++){
  6469  0481  01A4               	clrf	nrf24l01ReceiveString@i
  6470  0482  2C94               	goto	i1l3043
  6471  0483                     i1l3039:	
  6472                           
  6473                           ;nrf24l01.c: 134: nrf24l01RXBuffer[i] = nrf24l01SPISend(0);
  6474  0483  3000               	movlw	0
  6475  0484  3187  27F2  3184   	fcall	_nrf24l01SPISend
  6476  0487  00FD               	movwf	??_nrf24l01ReceiveString
  6477  0488  0020               	movlb	0	; select bank0
  6478  0489  0824               	movf	nrf24l01ReceiveString@i,w
  6479  048A  3EA0               	addlw	(low (_nrf24l01RXBuffer| (0+256)))& (0+255)
  6480  048B  0086               	movwf	6
  6481  048C  3001               	movlw	1	; select bank3/4
  6482  048D  0087               	movwf	7
  6483  048E  087D               	movf	??_nrf24l01ReceiveString,w
  6484  048F  0081               	movwf	1
  6485  0490  3001               	movlw	1
  6486  0491  00FD               	movwf	??_nrf24l01ReceiveString
  6487  0492  087D               	movf	??_nrf24l01ReceiveString,w
  6488  0493  07A4               	addwf	nrf24l01ReceiveString@i,f
  6489  0494                     i1l3043:	
  6490  0494  0823               	movf	nrf24l01ReceiveString@width,w
  6491  0495  0224               	subwf	nrf24l01ReceiveString@i,w
  6492  0496  1803               	skipnc
  6493  0497  2C9C               	goto	i1l3047
  6494  0498  3040               	movlw	64
  6495  0499  0224               	subwf	nrf24l01ReceiveString@i,w
  6496  049A  1C03               	skipc
  6497  049B  2C83               	goto	i1l3039
  6498  049C                     i1l3047:	
  6499                           
  6500                           ;nrf24l01.c: 135: };nrf24l01.c: 138: nrf24l01SPIEnd();
  6501  049C  318F  2727  3184   	fcall	_nrf24l01SPIEnd
  6502                           
  6503                           ;nrf24l01.c: 141: nrf24l01CEHigh();
  6504  049F  318F  2715         	fcall	_nrf24l01CEHigh
  6505  04A1  0008               	return
  6506  04A2                     __end_of_nrf24l01ReceiveString:	
  6507                           
  6508                           	psect	text27
  6509  0712                     __ptext27:	
  6510 ;; *************** function i1_strlen *****************
  6511 ;; Defined at:
  6512 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  s               1    wreg     PTR const unsigned char 
  6515 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  s               1    6[COMMON] PTR const unsigned char 
  6518 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6519 ;;  strlen          1    7[COMMON] PTR const unsigned char 
  6520 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  2    0[COMMON] unsigned int 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;Total ram usage:        8 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_nrf24l01ReceiveString
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           
  6544                           ;psect for function i1_strlen
  6545  0712                     i1_strlen:	
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in i1_strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6549                           ;i1strlen@s stored from wreg
  6550  0712  00F6               	movwf	i1strlen@s
  6551  0713  0876               	movf	i1strlen@s,w
  6552  0714  00F2               	movwf	??i1_strlen
  6553  0715  0872               	movf	??i1_strlen,w
  6554  0716  00F7               	movwf	i1strlen@cp
  6555  0717                     i1l2947:	
  6556  0717  0877               	movf	i1strlen@cp,w
  6557  0718  0086               	movwf	6
  6558  0719  3001               	movlw	1	; select bank2/3
  6559  071A  0087               	movwf	7
  6560  071B  0801               	movf	1,w
  6561  071C  1903               	btfsc	3,2
  6562  071D  2F23               	goto	i1l2949
  6563  071E  3001               	movlw	1
  6564  071F  00F2               	movwf	??i1_strlen
  6565  0720  0872               	movf	??i1_strlen,w
  6566  0721  07F7               	addwf	i1strlen@cp,f
  6567  0722  2F17               	goto	i1l2947
  6568  0723                     i1l2949:	
  6569  0723  0876               	movf	i1strlen@s,w
  6570  0724  00F2               	movwf	??i1_strlen
  6571  0725  3001               	movlw	1
  6572  0726  00F3               	movwf	??i1_strlen+1
  6573  0727  09F2               	comf	??i1_strlen,f
  6574  0728  09F3               	comf	??i1_strlen+1,f
  6575  0729  0AF2               	incf	??i1_strlen,f
  6576  072A  1903               	skipnz
  6577  072B  0AF3               	incf	??i1_strlen+1,f
  6578  072C  0877               	movf	i1strlen@cp,w
  6579  072D  00F4               	movwf	??i1_strlen+2
  6580  072E  3001               	movlw	1
  6581  072F  00F5               	movwf	??i1_strlen+3
  6582  0730  0872               	movf	??i1_strlen,w
  6583  0731  0774               	addwf	??i1_strlen+2,w
  6584  0732  00F0               	movwf	?i1_strlen
  6585  0733  0873               	movf	??i1_strlen+1,w
  6586  0734  3D75               	addwfc	??i1_strlen+3,w
  6587  0735  00F1               	movwf	?i1_strlen+1
  6588  0736  0008               	return
  6589  0737                     __end_ofi1_strlen:	
  6590                           
  6591                           	psect	text28
  6592  0FC8                     __ptext28:	
  6593 ;; *************** function i1_memset *****************
  6594 ;; Defined at:
  6595 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  p1              1    wreg     PTR void 
  6598 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6599 ;;  c               2    8[COMMON] int 
  6600 ;;  n               2   10[COMMON] unsigned int 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  p1              1    1[BANK0 ] PTR void 
  6603 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6604 ;;  memset          1    0[BANK0 ] PTR unsigned char 
  6605 ;;		 -> nrf24l01RXBuffer(64), nrf24l01TXBuffer(64), 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2    8[COMMON] PTR void 
  6608 ;; Registers used:
  6609 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;Total ram usage:        7 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_nrf24l01ReceiveString
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function i1_memset
  6630  0FC8                     i1_memset:	
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6634                           ;i1memset@p1 stored from wreg
  6635  0FC8  0020               	movlb	0	; select bank0
  6636  0FC9  00A1               	movwf	i1memset@p1
  6637  0FCA  0821               	movf	i1memset@p1,w
  6638  0FCB  00FC               	movwf	??i1_memset
  6639  0FCC  087C               	movf	??i1_memset,w
  6640  0FCD  00A0               	movwf	i1memset@p
  6641  0FCE                     i1l2941:	
  6642  0FCE  3001               	movlw	1
  6643  0FCF  02FA               	subwf	i1memset@n,f
  6644  0FD0  3000               	movlw	0
  6645  0FD1  3BFB               	subwfb	i1memset@n+1,f
  6646  0FD2  0A7A               	incf	i1memset@n,w
  6647  0FD3  1903               	btfsc	3,2
  6648  0FD4  0A7B               	incf	i1memset@n+1,w
  6649  0FD5  1903               	btfsc	3,2
  6650  0FD6  0008               	return
  6651  0FD7  0878               	movf	i1memset@c,w
  6652  0FD8  00FC               	movwf	??i1_memset
  6653  0FD9  0820               	movf	i1memset@p,w
  6654  0FDA  0086               	movwf	6
  6655  0FDB  3001               	movlw	1	; select bank2/3
  6656  0FDC  0087               	movwf	7
  6657  0FDD  087C               	movf	??i1_memset,w
  6658  0FDE  0081               	movwf	1
  6659  0FDF  3001               	movlw	1
  6660  0FE0  00FC               	movwf	??i1_memset
  6661  0FE1  087C               	movf	??i1_memset,w
  6662  0FE2  07A0               	addwf	i1memset@p,f
  6663  0FE3  2FCE               	goto	i1l2941
  6664  0FE4                     __end_ofi1_memset:	
  6665                           ;	Return value of i1_memset is never used
  6666                           
  6667                           
  6668                           	psect	text29
  6669  0F5F                     __ptext29:	
  6670 ;; *************** function _nrf24l01CheckACK *****************
  6671 ;; Defined at:
  6672 ;;		line 77 in file "nrf24l01.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;Total ram usage:        1 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    4
  6693 ;; This function calls:
  6694 ;;		_strcmp
  6695 ;;		i1_nrf24l01SetRXMode
  6696 ;; This function is called by:
  6697 ;;		_nrf24l01ISR
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function _nrf24l01CheckACK
  6703  0F5F                     _nrf24l01CheckACK:	
  6704                           
  6705                           ;nrf24l01.c: 80: if (!nrf24l01RXPacketData.IsACK){
  6706                           
  6707                           ;incstack = 0
  6708                           ; Regs used in _nrf24l01CheckACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6709  0F5F  0020               	movlb	0	; select bank0
  6710  0F60  1CCF               	btfss	_nrf24l01RXPacketData,1
  6711  0F61  0008               	return
  6712                           
  6713                           ;nrf24l01.c: 82: };nrf24l01.c: 85: nrf24l01.RXPending = 0;
  6714                           
  6715                           ;nrf24l01.c: 81: return;
  6716  0F62  1151               	bcf	_nrf24l01,2	;volatile
  6717                           
  6718                           ;nrf24l01.c: 88: if (!nrf24l01TXPacketData.ACKRequest){
  6719  0F63  1C52               	btfss	_nrf24l01TXPacketData,0
  6720  0F64  0008               	return
  6721                           
  6722                           ;nrf24l01.c: 90: };nrf24l01.c: 93: if (strcmp(nrf24l01TXBuffer, nrf24l01RXBuffer) != 0){
  6723                           
  6724                           ;nrf24l01.c: 89: return;
  6725  0F65  30A0               	movlw	(low (_nrf24l01RXBuffer| (0+256)))& (0+255)
  6726  0F66  00F7               	movwf	??_nrf24l01CheckACK
  6727  0F67  0877               	movf	??_nrf24l01CheckACK,w
  6728  0F68  00F0               	movwf	strcmp@s2
  6729  0F69  3020               	movlw	(low (_nrf24l01TXBuffer| (0+256)))& (0+255)
  6730  0F6A  3186  26C4  318F   	fcall	_strcmp
  6731  0F6D  0870               	movf	?_strcmp,w
  6732  0F6E  0471               	iorwf	?_strcmp+1,w
  6733  0F6F  1D03               	btfss	3,2
  6734  0F70  0008               	return
  6735                           
  6736                           ;nrf24l01.c: 95: };nrf24l01.c: 100: nrf24l01TXPacketData.ACKRequest = 0;
  6737                           
  6738                           ;nrf24l01.c: 94: return;
  6739  0F71  0020               	movlb	0	; select bank0
  6740  0F72  1052               	bcf	_nrf24l01TXPacketData,0
  6741                           
  6742                           ;nrf24l01.c: 103: nrf24l01SetRXMode(0);
  6743  0F73  3000               	movlw	0
  6744  0F74  3185  2519         	fcall	i1_nrf24l01SetRXMode
  6745  0F76  0008               	return
  6746  0F77                     __end_of_nrf24l01CheckACK:	
  6747                           
  6748                           	psect	text30
  6749  0519                     __ptext30:	
  6750 ;; *************** function i1_nrf24l01SetRXMode *****************
  6751 ;; Defined at:
  6752 ;;		line 41 in file "nrf24l01.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  rxMode          1    wreg     unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  rxMode          1    6[COMMON] unsigned char 
  6757 ;;  nrf24l01SetR    1    5[COMMON] struct .
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, pclath, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;Total ram usage:        3 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    3
  6774 ;; This function calls:
  6775 ;;		_nrf24l01CEHigh
  6776 ;;		_nrf24l01CELow
  6777 ;;		i1_nrf24l01Send
  6778 ;; This function is called by:
  6779 ;;		_nrf24l01CheckACK
  6780 ;;		_nrf24l01ISR
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function i1_nrf24l01SetRXMode
  6786  0519                     i1_nrf24l01SetRXMode:	
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  6790                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  6791  0519  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  6792                           
  6793                           ;nrf24l01.c: 43: n_CONFIG_t config;;nrf24l01.c: 46: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  6794  051A  01F1               	clrf	i1nrf24l01Send@data
  6795  051B  3000               	movlw	0
  6796  051C  318F  2792  3185   	fcall	i1_nrf24l01Send
  6797  051F  00F4               	movwf	??i1_nrf24l01SetRXMode
  6798  0520  0874               	movf	??i1_nrf24l01SetRXMode,w
  6799  0521  00F5               	movwf	i1nrf24l01SetRXMode@config
  6800                           
  6801                           ;nrf24l01.c: 49: if (config.PRIM_RX != rxMode){
  6802  0522  0875               	movf	i1nrf24l01SetRXMode@config,w
  6803  0523  3901               	andlw	1
  6804  0524  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  6805  0525  1903               	skipnz
  6806  0526  2D49               	goto	i1l2933
  6807                           
  6808                           ;nrf24l01.c: 52: nrf24l01CELow();
  6809  0527  318F  2718  3185   	fcall	_nrf24l01CELow
  6810                           
  6811                           ;nrf24l01.c: 53: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6812  052A  30A0               	movlw	160
  6813  052B                     u192_27:	
  6814  052B  3200               	nop2
  6815  052C  0B89               	decfsz	9,f
  6816  052D  2D2B               	goto	u192_27
  6817                           
  6818                           ;nrf24l01.c: 60: config.PRIM_RX = rxMode;
  6819  052E  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6820  052F  3901               	andlw	1
  6821  0530  1075               	bcf	i1nrf24l01SetRXMode@config,0
  6822  0531  1D03               	skipz
  6823  0532  1475               	bsf	i1nrf24l01SetRXMode@config,0
  6824                           
  6825                           ;nrf24l01.c: 61: nrf24l01Send(0b00100000 | 0x00, config.byte);
  6826  0533  0875               	movf	i1nrf24l01SetRXMode@config,w
  6827  0534  00F4               	movwf	??i1_nrf24l01SetRXMode
  6828  0535  0874               	movf	??i1_nrf24l01SetRXMode,w
  6829  0536  00F1               	movwf	i1nrf24l01Send@data
  6830  0537  3020               	movlw	32
  6831  0538  318F  2792  3185   	fcall	i1_nrf24l01Send
  6832                           
  6833                           ;nrf24l01.c: 64: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6834  053B  30A0               	movlw	160
  6835  053C                     u193_27:	
  6836  053C  3200               	nop2
  6837  053D  0B89               	decfsz	9,f
  6838  053E  2D3C               	goto	u193_27
  6839                           
  6840                           ;nrf24l01.c: 67: if (rxMode){
  6841  053F  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6842  0540  1903               	btfsc	3,2
  6843  0541  2D49               	goto	i1l2933
  6844                           
  6845                           ;nrf24l01.c: 68: nrf24l01CEHigh();
  6846  0542  318F  2715  3185   	fcall	_nrf24l01CEHigh
  6847                           
  6848                           ;nrf24l01.c: 69: _delay((unsigned long)((200)*(16000000/4000000.0)));
  6849  0545  30A0               	movlw	160
  6850  0546                     u194_27:	
  6851  0546  3200               	nop2
  6852  0547  0B89               	decfsz	9,f
  6853  0548  2D46               	goto	u194_27
  6854  0549                     i1l2933:	
  6855                           
  6856                           ;nrf24l01.c: 70: };nrf24l01.c: 71: };nrf24l01.c: 74: nrf24l01.RXMode = rxMode;
  6857  0549  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  6858  054A  3901               	andlw	1
  6859  054B  0020               	movlb	0	; select bank0
  6860  054C  11D1               	bcf	_nrf24l01,3	;volatile
  6861  054D  1D03               	skipz
  6862  054E  15D1               	bsf	_nrf24l01,3	;volatile
  6863  054F  0008               	return
  6864  0550                     __end_ofi1_nrf24l01SetRXMode:	
  6865                           
  6866                           	psect	text31
  6867  0F92                     __ptext31:	
  6868 ;; *************** function i1_nrf24l01Send *****************
  6869 ;; Defined at:
  6870 ;;		line 15 in file "nrf24l01.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  command         1    wreg     unsigned char 
  6873 ;;  data            1    1[COMMON] unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  command         1    3[COMMON] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      unsigned char 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, pclath, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;Total ram usage:        3 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    2
  6892 ;; This function calls:
  6893 ;;		_enableInterrupts
  6894 ;;		_nrf24l01SPIEnd
  6895 ;;		_nrf24l01SPISend
  6896 ;;		_nrf24l01SPIStart
  6897 ;; This function is called by:
  6898 ;;		_nrf24l01ReceiveString
  6899 ;;		_nrf24l01ISR
  6900 ;;		i1_nrf24l01SetRXMode
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function i1_nrf24l01Send
  6906  0F92                     i1_nrf24l01Send:	
  6907                           
  6908                           ;incstack = 0
  6909                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  6910                           ;i1nrf24l01Send@command stored from wreg
  6911  0F92  00F3               	movwf	i1nrf24l01Send@command
  6912                           
  6913                           ;nrf24l01.c: 18: enableInterrupts(0);
  6914  0F93  3000               	movlw	0
  6915  0F94  318F  272E  318F   	fcall	_enableInterrupts
  6916                           
  6917                           ;nrf24l01.c: 21: nrf24l01SPIStart();
  6918  0F97  318F  2736  318F   	fcall	_nrf24l01SPIStart
  6919                           
  6920                           ;nrf24l01.c: 24: nrf24l01SPISend(command);
  6921  0F9A  0873               	movf	i1nrf24l01Send@command,w
  6922  0F9B  3187  27F2  318F   	fcall	_nrf24l01SPISend
  6923                           
  6924                           ;nrf24l01.c: 27: data = nrf24l01SPISend(data);
  6925  0F9E  0871               	movf	i1nrf24l01Send@data,w
  6926  0F9F  3187  27F2  318F   	fcall	_nrf24l01SPISend
  6927  0FA2  00F2               	movwf	??i1_nrf24l01Send
  6928  0FA3  0872               	movf	??i1_nrf24l01Send,w
  6929  0FA4  00F1               	movwf	i1nrf24l01Send@data
  6930                           
  6931                           ;nrf24l01.c: 30: nrf24l01SPIEnd();
  6932  0FA5  318F  2727  318F   	fcall	_nrf24l01SPIEnd
  6933                           
  6934                           ;nrf24l01.c: 33: enableInterrupts(1);
  6935  0FA8  3001               	movlw	1
  6936  0FA9  318F  272E         	fcall	_enableInterrupts
  6937                           
  6938                           ;nrf24l01.c: 35: return data;
  6939  0FAB  0871               	movf	i1nrf24l01Send@data,w
  6940  0FAC  0008               	return
  6941  0FAD                     __end_ofi1_nrf24l01Send:	
  6942                           
  6943                           	psect	text32
  6944  0F36                     __ptext32:	
  6945 ;; *************** function _nrf24l01SPIStart *****************
  6946 ;; Defined at:
  6947 ;;		line 65 in file "interface.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    8
  6968 ;; This function calls:
  6969 ;;		_nrf24l01CSLow
  6970 ;; This function is called by:
  6971 ;;		_nrf24l01Send
  6972 ;;		_nrf24l01ReceiveString
  6973 ;;		_nrf24l01SendString
  6974 ;;		i1_nrf24l01Send
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _nrf24l01SPIStart
  6980  0F36                     _nrf24l01SPIStart:	
  6981                           
  6982                           ;interface.c: 66: nrf24l01CSLow();
  6983                           
  6984                           ;incstack = 0
  6985 ;; hardware stack exceeded
  6986                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  6987  0F36  318F  271E  318F   	fcall	_nrf24l01CSLow
  6988                           
  6989                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6990  0F39  300D               	movlw	13
  6991  0F3A                     u195_27:	
  6992  0F3A  0B89               	decfsz	9,f
  6993  0F3B  2F3A               	goto	u195_27
  6994  0F3C  0000               	nop
  6995  0F3D  0008               	return
  6996  0F3E                     __end_of_nrf24l01SPIStart:	
  6997                           
  6998                           	psect	text33
  6999  0F1E                     __ptext33:	
  7000 ;; *************** function _nrf24l01CSLow *****************
  7001 ;; Defined at:
  7002 ;;		line 18 in file "interface.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		None
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:    7
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_nrf24l01SPIStart
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function _nrf24l01CSLow
  7032  0F1E                     _nrf24l01CSLow:	
  7033                           
  7034                           ;interface.c: 19: PORTAbits.RA1 = 0;
  7035                           
  7036                           ;incstack = 0
  7037 ;; hardware stack exceeded
  7038                           ; Regs used in _nrf24l01CSLow: []
  7039  0F1E  0020               	movlb	0	; select bank0
  7040  0F1F  108C               	bcf	12,1	;volatile
  7041  0F20  0008               	return
  7042  0F21                     __end_of_nrf24l01CSLow:	
  7043                           
  7044                           	psect	text34
  7045  07F2                     __ptext34:	
  7046 ;; *************** function _nrf24l01SPISend *****************
  7047 ;; Defined at:
  7048 ;;		line 52 in file "interface.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  data            1    wreg     unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  data            1    0[COMMON] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      unsigned char 
  7055 ;; Registers used:
  7056 ;;		wreg
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;Total ram usage:        0 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    7
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_nrf24l01Send
  7073 ;;		_nrf24l01ReceiveString
  7074 ;;		_nrf24l01SendString
  7075 ;;		i1_nrf24l01Send
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _nrf24l01SPISend
  7081  07F2                     _nrf24l01SPISend:	
  7082                           
  7083                           ;incstack = 0
  7084 ;; hardware stack exceeded
  7085                           ; Regs used in _nrf24l01SPISend: [wreg]
  7086                           ;nrf24l01SPISend@data stored from wreg
  7087  07F2  00F0               	movwf	nrf24l01SPISend@data
  7088                           
  7089                           ;interface.c: 53: SSP1BUF = data;
  7090  07F3  0870               	movf	nrf24l01SPISend@data,w
  7091  07F4  0024               	movlb	4	; select bank4
  7092  07F5  0091               	movwf	17	;volatile
  7093                           
  7094                           ;interface.c: 55: PORTCbits.RC4 = 1;
  7095  07F6  0020               	movlb	0	; select bank0
  7096  07F7  160E               	bsf	14,4	;volatile
  7097  07F8                     i1l94:	
  7098                           ;interface.c: 57: while (!SSP1STATbits.BF){
  7099                           
  7100  07F8  0024               	movlb	4	; select bank4
  7101  07F9  1814               	btfsc	20,0	;volatile
  7102  07FA  2FFD               	goto	i1l2805
  7103                           
  7104                           ;interface.c: 58: __nop();
  7105  07FB  0000               	nop
  7106  07FC  2FF8               	goto	i1l94
  7107  07FD                     i1l2805:	
  7108                           
  7109                           ;interface.c: 59: };interface.c: 61: return SSP1BUF;
  7110  07FD  0811               	movf	17,w	;volatile
  7111  07FE  0008               	return
  7112  07FF                     __end_of_nrf24l01SPISend:	
  7113                           
  7114                           	psect	text35
  7115  0F27                     __ptext35:	
  7116 ;; *************** function _nrf24l01SPIEnd *****************
  7117 ;; Defined at:
  7118 ;;		line 71 in file "interface.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      void 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0, pclath, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;Total ram usage:        0 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    8
  7139 ;; This function calls:
  7140 ;;		_nrf24l01CSHigh
  7141 ;; This function is called by:
  7142 ;;		_nrf24l01Send
  7143 ;;		_nrf24l01ReceiveString
  7144 ;;		_nrf24l01SendString
  7145 ;;		i1_nrf24l01Send
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           
  7150                           ;psect for function _nrf24l01SPIEnd
  7151  0F27                     _nrf24l01SPIEnd:	
  7152                           
  7153                           ;interface.c: 72: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7154                           
  7155                           ;incstack = 0
  7156 ;; hardware stack exceeded
  7157                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  7158  0F27  300D               	movlw	13
  7159  0F28                     u196_27:	
  7160  0F28  0B89               	decfsz	9,f
  7161  0F29  2F28               	goto	u196_27
  7162  0F2A  0000               	nop
  7163                           
  7164                           ;interface.c: 73: nrf24l01CSHigh();
  7165  0F2B  318F  271B         	fcall	_nrf24l01CSHigh
  7166  0F2D  0008               	return
  7167  0F2E                     __end_of_nrf24l01SPIEnd:	
  7168                           
  7169                           	psect	text36
  7170  0F1B                     __ptext36:	
  7171 ;; *************** function _nrf24l01CSHigh *****************
  7172 ;; Defined at:
  7173 ;;		line 23 in file "interface.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		None
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    7
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_nrf24l01SPIEnd
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           
  7202                           ;psect for function _nrf24l01CSHigh
  7203  0F1B                     _nrf24l01CSHigh:	
  7204                           
  7205                           ;interface.c: 24: PORTAbits.RA1 = 1;
  7206                           
  7207                           ;incstack = 0
  7208 ;; hardware stack exceeded
  7209                           ; Regs used in _nrf24l01CSHigh: []
  7210  0F1B  0020               	movlb	0	; select bank0
  7211  0F1C  148C               	bsf	12,1	;volatile
  7212  0F1D  0008               	return
  7213  0F1E                     __end_of_nrf24l01CSHigh:	
  7214                           
  7215                           	psect	text37
  7216  0F2E                     __ptext37:	
  7217 ;; *************** function _enableInterrupts *****************
  7218 ;; Defined at:
  7219 ;;		line 77 in file "interface.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  enable          1    wreg     unsigned char 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  enable          1    0[COMMON] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, status,0
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    7
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_nrf24l01Send
  7244 ;;		_nrf24l01SendString
  7245 ;;		i1_nrf24l01Send
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           
  7250                           ;psect for function _enableInterrupts
  7251  0F2E                     _enableInterrupts:	
  7252                           
  7253                           ;incstack = 0
  7254 ;; hardware stack exceeded
  7255                           ; Regs used in _enableInterrupts: [wreg+status,0]
  7256                           ;enableInterrupts@enable stored from wreg
  7257  0F2E  00F0               	movwf	enableInterrupts@enable
  7258                           
  7259                           ;interface.c: 78: PIE0bits.INTE = enable;
  7260  0F2F  0C70               	rrf	enableInterrupts@enable,w
  7261  0F30  0021               	movlb	1	; select bank1
  7262  0F31  1C03               	skipc
  7263  0F32  1010               	bcf	16,0	;volatile
  7264  0F33  1803               	skipnc
  7265  0F34  1410               	bsf	16,0	;volatile
  7266  0F35  0008               	return
  7267  0F36                     __end_of_enableInterrupts:	
  7268                           
  7269                           	psect	text38
  7270  0F18                     __ptext38:	
  7271 ;; *************** function _nrf24l01CELow *****************
  7272 ;; Defined at:
  7273 ;;		line 8 in file "interface.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		None
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    7
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_nrf24l01SetRXMode
  7298 ;;		_nrf24l01ReceiveString
  7299 ;;		_nrf24l01SendString
  7300 ;;		_nrf24l01Init
  7301 ;;		i1_nrf24l01SetRXMode
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           
  7306                           ;psect for function _nrf24l01CELow
  7307  0F18                     _nrf24l01CELow:	
  7308                           
  7309                           ;interface.c: 9: PORTAbits.RA0 = 0;
  7310                           
  7311                           ;incstack = 0
  7312 ;; hardware stack exceeded
  7313                           ; Regs used in _nrf24l01CELow: []
  7314  0F18  0020               	movlb	0	; select bank0
  7315  0F19  100C               	bcf	12,0	;volatile
  7316  0F1A  0008               	return
  7317  0F1B                     __end_of_nrf24l01CELow:	
  7318                           
  7319                           	psect	text39
  7320  0F15                     __ptext39:	
  7321 ;; *************** function _nrf24l01CEHigh *****************
  7322 ;; Defined at:
  7323 ;;		line 13 in file "interface.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		None
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    7
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_nrf24l01SetRXMode
  7348 ;;		_nrf24l01ReceiveString
  7349 ;;		_nrf24l01SendString
  7350 ;;		_nrf24l01Init
  7351 ;;		i1_nrf24l01SetRXMode
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function _nrf24l01CEHigh
  7357  0F15                     _nrf24l01CEHigh:	
  7358                           
  7359                           ;interface.c: 14: PORTAbits.RA0 = 1;
  7360                           
  7361                           ;incstack = 0
  7362 ;; hardware stack exceeded
  7363                           ; Regs used in _nrf24l01CEHigh: []
  7364  0F15  0020               	movlb	0	; select bank0
  7365  0F16  140C               	bsf	12,0	;volatile
  7366  0F17  0008               	return
  7367  0F18                     __end_of_nrf24l01CEHigh:	
  7368                           
  7369                           	psect	text40
  7370  06C4                     __ptext40:	
  7371 ;; *************** function _strcmp *****************
  7372 ;; Defined at:
  7373 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcmp.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  s1              1    wreg     PTR const unsigned char 
  7376 ;;		 -> nrf24l01TXBuffer(64), 
  7377 ;;  s2              1    0[COMMON] PTR const unsigned char 
  7378 ;;		 -> nrf24l01RXBuffer(64), 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  s1              1    4[COMMON] PTR const unsigned char 
  7381 ;;		 -> nrf24l01TXBuffer(64), 
  7382 ;;  r               1    3[COMMON] char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2    0[COMMON] int 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        5 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_nrf24l01CheckACK
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function _strcmp
  7407  06C4                     _strcmp:	
  7408                           
  7409                           ;incstack = 0
  7410                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
  7411                           ;strcmp@s1 stored from wreg
  7412  06C4  00F4               	movwf	strcmp@s1
  7413  06C5  2ECE               	goto	i1l2895
  7414  06C6                     i1l2891:	
  7415  06C6  3001               	movlw	1
  7416  06C7  00F2               	movwf	??_strcmp
  7417  06C8  0872               	movf	??_strcmp,w
  7418  06C9  07F4               	addwf	strcmp@s1,f
  7419  06CA  3001               	movlw	1
  7420  06CB  00F2               	movwf	??_strcmp
  7421  06CC  0872               	movf	??_strcmp,w
  7422  06CD  07F0               	addwf	strcmp@s2,f
  7423  06CE                     i1l2895:	
  7424  06CE  0874               	movf	strcmp@s1,w
  7425  06CF  0086               	movwf	6
  7426  06D0  3001               	movlw	1	; select bank2/3
  7427  06D1  0087               	movwf	7
  7428  06D2  0870               	movf	strcmp@s2,w
  7429  06D3  0084               	movwf	4
  7430  06D4  3001               	movlw	1	; select bank2/3
  7431  06D5  0085               	movwf	5
  7432  06D6  0300               	decf	0,w
  7433  06D7  3AFF               	xorlw	255
  7434  06D8  0701               	addwf	1,w
  7435  06D9  00F2               	movwf	??_strcmp
  7436  06DA  0872               	movf	??_strcmp,w
  7437  06DB  00F3               	movwf	strcmp@r
  7438  06DC  0873               	movf	strcmp@r,w
  7439  06DD  1D03               	btfss	3,2
  7440  06DE  2EE6               	goto	i1l2899
  7441  06DF  0874               	movf	strcmp@s1,w
  7442  06E0  0086               	movwf	6
  7443  06E1  3001               	movlw	1	; select bank2/3
  7444  06E2  0087               	movwf	7
  7445  06E3  0801               	movf	1,w
  7446  06E4  1D03               	btfss	3,2
  7447  06E5  2EC6               	goto	i1l2891
  7448  06E6                     i1l2899:	
  7449  06E6  0873               	movf	strcmp@r,w
  7450  06E7  00F0               	movwf	?_strcmp
  7451  06E8  01F1               	clrf	?_strcmp+1
  7452  06E9  1BF0               	btfsc	?_strcmp,7
  7453  06EA  03F1               	decf	?_strcmp+1,f
  7454  06EB  0008               	return
  7455  06EC                     __end_of_strcmp:	
  7456                           
  7457                           	psect	text41
  7458  0F47                     __ptext41:	
  7459 ;; *************** function _exception *****************
  7460 ;; Defined at:
  7461 ;;		line 81 in file "interface.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  exception       1    wreg     unsigned char 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  exception       1   12[COMMON] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        3 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    2
  7482 ;; This function calls:
  7483 ;;		___wmul
  7484 ;;		i1_flashUpdate
  7485 ;; This function is called by:
  7486 ;;		_nrf24l01ISR
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _exception
  7492  0F47                     _exception:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7496                           ;exception@exception stored from wreg
  7497  0F47  00FC               	movwf	exception@exception
  7498                           
  7499                           ;interface.c: 82: romData.bootMode = (unsigned) (exception * 10);
  7500  0F48  087C               	movf	exception@exception,w
  7501  0F49  00FA               	movwf	??_exception
  7502  0F4A  01FB               	clrf	??_exception+1
  7503  0F4B  087A               	movf	??_exception,w
  7504  0F4C  00F0               	movwf	___wmul@multiplier
  7505  0F4D  087B               	movf	??_exception+1,w
  7506  0F4E  00F1               	movwf	___wmul@multiplier+1
  7507  0F4F  300A               	movlw	10
  7508  0F50  00F2               	movwf	___wmul@multiplicand
  7509  0F51  3000               	movlw	0
  7510  0F52  00F3               	movwf	___wmul@multiplicand+1
  7511  0F53  318F  2777  318F   	fcall	___wmul
  7512  0F56  0871               	movf	?___wmul+1,w
  7513  0F57  0021               	movlb	1	; select bank1
  7514  0F58  00D2               	movwf	((_romData+1)^(0+128)+17)
  7515  0F59  0870               	movf	?___wmul,w
  7516  0F5A  00D1               	movwf	(_romData^(0+128)+17)
  7517                           
  7518                           ;interface.c: 83: flashUpdate();
  7519  0F5B  3187  2779         	fcall	i1_flashUpdate
  7520  0F5D  0001               	reset	;# 
  7521  0F5E  0008               	return
  7522  0F5F                     __end_of_exception:	
  7523                           
  7524                           	psect	text42
  7525  0779                     __ptext42:	
  7526 ;; *************** function i1_flashUpdate *****************
  7527 ;; Defined at:
  7528 ;;		line 97 in file "flash.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  flashUpdate     2    8[COMMON] unsigned int 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;Total ram usage:        4 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    1
  7549 ;; This function calls:
  7550 ;;		i1_flashWriteByte
  7551 ;; This function is called by:
  7552 ;;		_exception
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           
  7557                           ;psect for function i1_flashUpdate
  7558  0779                     i1_flashUpdate:	
  7559                           
  7560                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  7561                           
  7562                           ;incstack = 0
  7563                           ; Regs used in i1_flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7564  0779  01F8               	clrf	i1flashUpdate@i
  7565  077A  01F9               	clrf	i1flashUpdate@i+1
  7566  077B                     L3:	
  7567  077B  3000               	movlw	0
  7568  077C  0279               	subwf	i1flashUpdate@i+1,w
  7569  077D  3020               	movlw	32
  7570  077E  1903               	skipnz
  7571  077F  0278               	subwf	i1flashUpdate@i,w
  7572  0780  1803               	btfsc	3,0
  7573  0781  0008               	return
  7574                           
  7575                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  7576  0782  0879               	movf	i1flashUpdate@i+1,w
  7577  0783  00F1               	movwf	i1flashWriteByte@offset+1
  7578  0784  0878               	movf	i1flashUpdate@i,w
  7579  0785  00F0               	movwf	i1flashWriteByte@offset
  7580  0786  0878               	movf	i1flashUpdate@i,w
  7581  0787  3EA0               	addlw	(low (_romHolder| 0))& (0+255)
  7582  0788  0086               	movwf	6
  7583  0789  0187               	clrf	7
  7584  078A  0801               	movf	1,w
  7585  078B  00F6               	movwf	??i1_flashUpdate
  7586  078C  01F7               	clrf	??i1_flashUpdate+1
  7587  078D  0876               	movf	??i1_flashUpdate,w
  7588  078E  00F2               	movwf	i1flashWriteByte@data
  7589  078F  0877               	movf	??i1_flashUpdate+1,w
  7590  0790  00F3               	movwf	i1flashWriteByte@data+1
  7591  0791  3185  25E7  3187   	fcall	i1_flashWriteByte
  7592  0794  3001               	movlw	1
  7593  0795  07F8               	addwf	i1flashUpdate@i,f
  7594  0796  3000               	movlw	0
  7595  0797  3DF9               	addwfc	i1flashUpdate@i+1,f
  7596  0798  2F7B               	goto	L3
  7597  0799                     __end_ofi1_flashUpdate:	
  7598                           
  7599                           	psect	text43
  7600  05E7                     __ptext43:	
  7601 ;; *************** function i1_flashWriteByte *****************
  7602 ;; Defined at:
  7603 ;;		line 8 in file "flash.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  offset          2    0[COMMON] unsigned int 
  7606 ;;  data            2    2[COMMON] unsigned int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  flashWriteBy    2    4[COMMON] unsigned int 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;Total ram usage:        6 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		i1_flashUpdate
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function i1_flashWriteByte
  7633  05E7                     i1_flashWriteByte:	
  7634                           
  7635                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  7636                           
  7637                           ;incstack = 0
  7638                           ; Regs used in i1_flashWriteByte: [wreg+status,2+status,0]
  7639  05E7  138B               	bcf	11,7	;volatile
  7640                           
  7641                           ;flash.c: 15: PMCON1 = 0x00;
  7642  05E8  0031               	movlb	17	; select bank17
  7643  05E9  0195               	clrf	21	;volsfr
  7644                           
  7645                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  7646  05EA  0870               	movf	i1flashWriteByte@offset,w
  7647  05EB  3EE0               	addlw	224
  7648  05EC  00F4               	movwf	i1flashWriteByte@address
  7649  05ED  301F               	movlw	31
  7650  05EE  3D71               	addwfc	i1flashWriteByte@offset+1,w
  7651  05EF  00F5               	movwf	i1flashWriteByte@address+1
  7652                           
  7653                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  7654  05F0  0874               	movf	i1flashWriteByte@address,w
  7655  05F1  0091               	movwf	17	;volatile
  7656                           
  7657                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  7658  05F2  0875               	movf	i1flashWriteByte@address+1,w
  7659  05F3  0092               	movwf	18	;volatile
  7660                           
  7661                           ;flash.c: 21: PMCON1bits.FREE = 1;
  7662  05F4  1615               	bsf	21,4	;volsfr
  7663                           
  7664                           ;flash.c: 22: PMCON1bits.WREN = 1;
  7665  05F5  1515               	bsf	21,2	;volsfr
  7666                           
  7667                           ;flash.c: 24: PMCON2 = 0x55;
  7668  05F6  3055               	movlw	85
  7669  05F7  0096               	movwf	22	;volsfr
  7670                           
  7671                           ;flash.c: 25: PMCON2 = 0xAA;
  7672  05F8  30AA               	movlw	170
  7673  05F9  0096               	movwf	22	;volsfr
  7674                           
  7675                           ;flash.c: 27: PMCON1bits.WR = 1;
  7676  05FA  1495               	bsf	21,1	;volsfr
  7677                           
  7678                           ;flash.c: 29: __nop();
  7679  05FB  0000               	nop
  7680                           
  7681                           ;flash.c: 30: __nop();
  7682  05FC  0000               	nop
  7683                           
  7684                           ;flash.c: 32: PMCON1bits.WREN = 0;
  7685  05FD  0031               	movlb	17	; select bank17
  7686  05FE  1115               	bcf	21,2	;volsfr
  7687                           
  7688                           ;flash.c: 36: PMCON1 = 0x00;
  7689  05FF  0195               	clrf	21	;volsfr
  7690                           
  7691                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  7692  0600  0874               	movf	i1flashWriteByte@address,w
  7693  0601  0091               	movwf	17	;volatile
  7694                           
  7695                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  7696  0602  0875               	movf	i1flashWriteByte@address+1,w
  7697  0603  0092               	movwf	18	;volatile
  7698                           
  7699                           ;flash.c: 41: PMCON1bits.FREE = 0;
  7700  0604  1215               	bcf	21,4	;volsfr
  7701                           
  7702                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  7703  0605  1695               	bsf	21,5	;volsfr
  7704                           
  7705                           ;flash.c: 43: PMCON1bits.WREN = 1;
  7706  0606  1515               	bsf	21,2	;volsfr
  7707                           
  7708                           ;flash.c: 45: PMDATL = (data >> 0);
  7709  0607  0872               	movf	i1flashWriteByte@data,w
  7710  0608  0093               	movwf	19	;volatile
  7711                           
  7712                           ;flash.c: 46: PMDATH = (data >> 8);
  7713  0609  0873               	movf	i1flashWriteByte@data+1,w
  7714  060A  0094               	movwf	20	;volatile
  7715                           
  7716                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  7717  060B  1295               	bcf	21,5	;volsfr
  7718                           
  7719                           ;flash.c: 50: PMCON2 = 0x55;
  7720  060C  3055               	movlw	85
  7721  060D  0096               	movwf	22	;volsfr
  7722                           
  7723                           ;flash.c: 51: PMCON2 = 0xAA;
  7724  060E  30AA               	movlw	170
  7725  060F  0096               	movwf	22	;volsfr
  7726                           
  7727                           ;flash.c: 53: PMCON1bits.WR = 1;
  7728  0610  1495               	bsf	21,1	;volsfr
  7729                           
  7730                           ;flash.c: 55: __nop();
  7731  0611  0000               	nop
  7732                           
  7733                           ;flash.c: 56: __nop();
  7734  0612  0000               	nop
  7735                           
  7736                           ;flash.c: 58: PMCON1bits.WREN = 0;
  7737  0613  0031               	movlb	17	; select bank17
  7738  0614  1115               	bcf	21,2	;volsfr
  7739                           
  7740                           ;flash.c: 61: INTCONbits.GIE = 1;
  7741  0615  178B               	bsf	11,7	;volatile
  7742  0616  0008               	return
  7743  0617                     __end_ofi1_flashWriteByte:	
  7744                           
  7745                           	psect	text44
  7746  0F77                     __ptext44:	
  7747 ;; *************** function ___wmul *****************
  7748 ;; Defined at:
  7749 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  multiplier      2    0[COMMON] unsigned int 
  7752 ;;  multiplicand    2    2[COMMON] unsigned int 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  product         2    4[COMMON] unsigned int 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  2    0[COMMON] unsigned int 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;Total ram usage:        6 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_exception
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function ___wmul
  7779  0F77                     ___wmul:	
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7783  0F77  01F4               	clrf	___wmul@product
  7784  0F78  01F5               	clrf	___wmul@product+1
  7785  0F79                     i1l2031:	
  7786  0F79  1C70               	btfss	___wmul@multiplier,0
  7787  0F7A  2F7F               	goto	i1l432
  7788  0F7B  0872               	movf	___wmul@multiplicand,w
  7789  0F7C  07F4               	addwf	___wmul@product,f
  7790  0F7D  0873               	movf	___wmul@multiplicand+1,w
  7791  0F7E  3DF5               	addwfc	___wmul@product+1,f
  7792  0F7F                     i1l432:	
  7793  0F7F  3001               	movlw	1
  7794  0F80                     u83_25:	
  7795  0F80  35F2               	lslf	___wmul@multiplicand,f
  7796  0F81  0DF3               	rlf	___wmul@multiplicand+1,f
  7797  0F82  0B89               	decfsz	9,f
  7798  0F83  2F80               	goto	u83_25
  7799  0F84  3001               	movlw	1
  7800  0F85                     u84_25:	
  7801  0F85  36F1               	lsrf	___wmul@multiplier+1,f
  7802  0F86  0CF0               	rrf	___wmul@multiplier,f
  7803  0F87  0B89               	decfsz	9,f
  7804  0F88  2F85               	goto	u84_25
  7805  0F89  0870               	movf	___wmul@multiplier,w
  7806  0F8A  0471               	iorwf	___wmul@multiplier+1,w
  7807  0F8B  1D03               	btfss	3,2
  7808  0F8C  2F79               	goto	i1l2031
  7809  0F8D  0875               	movf	___wmul@product+1,w
  7810  0F8E  00F1               	movwf	?___wmul+1
  7811  0F8F  0874               	movf	___wmul@product,w
  7812  0F90  00F0               	movwf	?___wmul
  7813  0F91  0008               	return
  7814  0F92                     __end_of___wmul:	
  7815  007E                     btemp	set	126	;btemp
  7816  007E                     int$flags	set	126
  7817  007E                     wtemp0	set	126


Data Sizes:
    Strings     38
    Constant    25
    Data        0
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      67
    BANK1            80      0      51
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), nrf24l01TXBuffer(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), nrf24l01TXBuffer(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK1[19]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK1[19]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> nrf24l01TXBuffer(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_8(CODE[6]), STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[5]), tempString(BANK0[16]), STR_1(CODE[2]), 
		 -> romData.name(BANK1[16]), romData(BANK1[19]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 64
		 -> nrf24l01TXBuffer(BANK2[64]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 64
		 -> nrf24l01TXBuffer(BANK2[64]), 

    memset@p1	PTR void  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), nrf24l01TXBuffer(BANK2[64]), 

    memset@p	PTR unsigned char  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), nrf24l01TXBuffer(BANK2[64]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> tempString(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__strcpy	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK1[19]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> tempString(BANK0[16]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 64
		 -> nrf24l01TXBuffer(BANK2[64]), 

    sp__memset	PTR void  size(1) Largest target is 64
		 -> nrf24l01RXBuffer(BANK3[64]), nrf24l01TXBuffer(BANK2[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _nrf24l01ISR->_nrf24l01ReceiveString
    _nrf24l01ReceiveString->i1_memset
    i1_memset->i1_strlen
    _nrf24l01CheckACK->i1_nrf24l01SetRXMode
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->i1_flashUpdate
    i1_flashUpdate->i1_flashWriteByte

Critical Paths under _main in BANK0

    _main->_utoa
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_utoa
    _utoa->_getADCValue
    _setName->_memset
    _nrf24l01SendString->_strlen
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv
    _flashUpdate->_flashWriteByte
    _flashRealod->_flashReadByte

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_nrf24l01ReceiveString
    _nrf24l01ReceiveString->i1_memset

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   22455
                                             44 BANK0      1     1      0
                        _flashRealod
                        _flashUpdate
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendString
                            _setName
                              _sleep
                             _strcat
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2     169
                                              7 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    2051
                                             20 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               11    11      0    2020
                                             10 BANK0     10    10      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   10260
                        _getADCValue
                 _nrf24l01SendString
                            _setName
                              _sleep
                             _strcat
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _utoa                                                 9     5      4    2087
                                             35 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                        _getADCValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              7 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              7 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setName                                              0     0      0    2733
                             _memset
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               5     3      2    2243
                                              7 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     490
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendString                                   3     3      0    2293
                                             15 BANK0      3     3      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               8     6      2     245
                                              7 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    1785
                                             10 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    1593
                                              7 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      31
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      31
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4     904
                                             21 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              7 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              7 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _flashUpdate                                          4     4      0     373
                                             13 BANK0      4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (2) _flashWriteByte                                       6     2      4     283
                                              7 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _flashRealod                                          3     3      0     246
                                             16 BANK0      3     3      0
                      _flashReadByte
 ---------------------------------------------------------------------------------
 (2) _flashReadByte                                        9     7      2     156
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    3268
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    3268
                                              5 BANK0      2     2      0
                          _exception
                   _nrf24l01CheckACK
              _nrf24l01ReceiveString
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) _nrf24l01ReceiveString                                4     4      0     905
                                             13 COMMON     1     1      0
                                              2 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                           i1_memset
                     i1_nrf24l01Send
                           i1_strlen
 ---------------------------------------------------------------------------------
 (10) i1_strlen                                            8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (10) i1_memset                                            7     3      4     238
                                              8 COMMON     5     1      4
                                              0 BANK0      2     2      0
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (9) _nrf24l01CheckACK                                     1     1      0     808
                                              7 COMMON     1     1      0
                             _strcmp
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     525
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     333
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      31
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      31
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              5     3      2     283
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     539
                                             10 COMMON     3     3      0
                             ___wmul
                      i1_flashUpdate
 ---------------------------------------------------------------------------------
 (10) i1_flashUpdate                                       4     4      0     297
                                              6 COMMON     4     4      0
                   i1_flashWriteByte
 ---------------------------------------------------------------------------------
 (11) i1_flashWriteByte                                    6     2      4     207
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flashRealod
     _flashReadByte
   _flashUpdate
     _flashWriteByte
   _loop
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01SendString
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
       _strlen
     _setName
       _memset
       _strcat
     _sleep
     _strcat
     _utoa
       ___lwdiv
       ___lwmod
       _getADCValue (ARG)
         ___lldiv
         ___lmul
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendString
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _strlen
   _setName
     _memset
     _strcat
   _sleep
   _strcat
   _strcpy
   _utoa
     ___lwdiv
     ___lwmod
     _getADCValue (ARG)
       ___lldiv
       ___lmul

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       ___wmul
       i1_flashUpdate
         i1_flashWriteByte
     _nrf24l01CheckACK
       _strcmp
       i1_nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         i1_nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _nrf24l01ReceiveString
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       i1_memset
         i1_strlen (ARG)
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
       i1_strlen
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      43       5       83.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      33       7       63.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     104      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     104      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jul 12 16:38:41 2018

            flashReadByte@result 002C                     flashRealod@i 0031                      __CFG_CP$OFF 0000  
            ___wmul@multiplicand 0072              nrf24l01Send@command 0029  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l221 0F3E                              l214 02B4  
                            l311 0317                              l315 0328                              l850 03E9  
                   flashUpdate@i 002F                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            u915 0413                              u935 041F                              u945 0433  
                            u955 043F                              u875 05CB                              u885 05D2  
                            u985 055C                              wreg 0009                             ?_ISR 0070  
                 ??_nrf24l01Init 0034                             l2103 0580                             l2121 0664  
                           l2115 064C                             l2045 05C0                             l3005 0388  
                           l2117 0658                             l2125 066D                             l2063 0410  
                           l2073 043E                             l2065 041E                             l2049 05CA  
                           l2091 0559                             l2077 0449                             l2093 0565  
                           l2309 03A3                             l2319 03C1                             l2291 02D7  
                           l2099 0577                             l3317 022C                             l2287 02B9  
                           l2289 02AD                   ??_nrf24l01Send 0028                             l2671 0FB3  
                           l3385 028B                             l2907 06F2                             l2909 06FE  
                           l2881 06A2                             l2867 0512                             l2875 0FEA  
                           l2883 06AE                             l2981 0362                             l2973 0340  
                           l2967 031C                             l2887 06B6                             l2977 034E  
                           l2995 0378                             l2997 0384                             STR_1 1017  
                   __CFG_WDTE$ON 0000                             STR_2 1030                             STR_3 101F  
                           STR_4 1013                             STR_5 1035                             STR_6 1019  
                           STR_7 103A                             STR_8 1025                             u1005 0566  
                           u1015 0570                             u1025 0578                             u1055 064F  
                           u1075 065E                             u1085 0665                             u1635 035C  
                           u1817 020A                             u1907 050F                             u1827 0680  
                           u1917 02AA                             u1837 0692                             u1847 0324  
                           u1857 0369                             u1867 0380                             u1877 0397  
                           u1887 04F2                             u1897 0504                             i1l94 07F8  
                           _WPUA 020C                             _WPUC 020E   __size_of_nrf24l01InterfaceInit 001C  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 07F2  
                           _main 01EE                             _loop 0034                  ??_flashReadByte 0029  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             _utoa 039D                    __CFG_BORV$LOW 0000  
                           start 000F                    __CFG_CSWEN$ON 0000   __size_of_nrf24l01ReceiveString 0050  
                  __CFG_MCLRE$ON 0000    __end_of_nrf24l01ReceiveString 04A2                            ??_ISR 007E  
            nrf24l01SendString@i 0031             __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070  
                ??_nrf24l01CSLow 0070      __size_of_nrf24l01SendString 0086                            ?_main 0070  
                          ?_loop 0070                  __end_of___lldiv 0452                            ?_utoa 0043  
                 __CFG_DEBUG$OFF 0000                  __end_of___lwdiv 0585                            i1l209 000D  
                          i1l432 0F7F                  __end_of___lwmod 0672           enableInterrupts@enable 0070  
                          u83_25 0F80                            u84_25 0F85                 i1_flashWriteByte 05E7  
                     i1memset@p1 0021                   i1flashUpdate@i 0078              ___lmul@multiplicand 002B  
                  __CFG_PWRTE$ON 0000                            _sleep 0F3E                  __end_of_setName 07D6  
                 __CFG_BOREN$OFF 0000                 _enableInterrupts 0F2E                            utoa@c 004A  
                          utoa@v 0048                            status 0003                            wtemp0 007E  
    __end_ofi1_nrf24l01SetRXMode 0550                 __end_ofi1_memset 0FE4                getADCValue@adcSum 003F  
               __end_ofi1_strlen 0737                 _nrf24l01SPIStart 0F36                  __initialization 0011  
               _nrf24l01CheckACK 0F5F                     __end_of_main 028F                     __end_of_loop 0144  
                   __end_of_utoa 03FF                 _nrf24l01RXBuffer 01A0                 _nrf24l01TXBuffer 0120  
               ??_nrf24l01CEHigh 0070                           ??_main 004C                           ??_loop 004C  
               ??_nrf24l01CSHigh 0070                       i1strlen@cp 0077                           ??_utoa 0047  
               ??_nrf24l01SPIEnd 0070           __size_ofi1_flashUpdate 0020         __size_of_nrf24l01SPISend 000D  
                         _ADRESH 009C                           _ADRESL 009B                           ?_sleep 0070  
                         _ANSELA 018C                           _ANSELC 018E                 ??_flashWriteByte 002B  
                         i1l2031 0F79                           _ODCONA 028C                           i1l3043 0494  
                         _ODCONC 028E                           i1l3047 049C                           i1l3039 0483  
                         i1l3161 0627                           i1l3177 063C                           i1l3169 0632  
                         i1l2805 07FD                           i1l2933 0549                           i1l2941 0FCE  
                         i1l2891 06C6                           i1l2947 0717                           i1l2949 0723  
                         i1l2895 06CE                           i1l2899 06E6                           _INLVLA 038C  
                         _INLVLC 038E                           _PMADRH 0892                           u192_27 052B  
                         _PMADRL 0891                           u193_27 053C                           _PMDATH 0894  
                         u194_27 0546                           _PMDATL 0893                           u195_27 0F3A  
                         _PMCON1 0895                           _PMCON2 0896                           u196_27 0F28  
           __size_of_flashRealod 001F               flashWriteByte@data 0029             __size_of_flashUpdate 0022  
           __size_of_nrf24l01ISR 002E          nrf24l01SetRXMode@config 002B                           ___lmul 05B7  
        nrf24l01SetRXMode@rxMode 002C                           ___wmul 0F77                   __CFG_STVREN$ON 0000  
                      ??___lldiv 002F                        ??___lwdiv 002B                        ??___lwmod 002B  
           __end_of_nrf24l01Init 069C             __end_of_nrf24l01Send 0779                           _memset 0FE4  
          _nrf24l01InitRegisters 0144                           _strcat 069C                           _strcmp 06C4  
                         _strcpy 0FAD                           _strlen 06EC        i1nrf24l01SetRXMode@config 0075  
               __end_of_romArray 2000                        ??_setName 002E        i1nrf24l01SetRXMode@rxMode 0076  
             getADCValue@adcLoop 003E          __end_of__initialization 0030               getADCValue@channel 003D  
                  i1_flashUpdate 0779               getADCValue@divider 0035                   __pcstackCOMMON 0070  
                  __end_of_sleep 0F47             _nrf24l01RXPacketData 004F    nrf24l01InitRegisters@enRXAddr 0030  
                      ?i1_memset 0078                        ?i1_strlen 0070                          ??_sleep 0027  
                     __pbssBANK0 004D                       __pbssBANK1 00A0                       __pbssBANK2 0120  
                     __pbssBANK3 01A0                ??_nrf24l01SPISend 0070               __size_of_exception 0018  
                 ?i1_flashUpdate 0070          __size_ofi1_nrf24l01Send 001B         __end_ofi1_flashWriteByte 0617  
                     __pmaintext 01EE                          ?___lmul 0027                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000                _nrf24l01SetRXMode 04DE           ?_nrf24l01InitRegisters 0070  
                     __pintentry 0004              nrf24l01SPISend@data 0070                          ?_memset 0027  
                 ___lmul@product 002F               ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 0F36  
           _nrf24l01TXPacketData 0052              __CFG_RSTOSC$HFINT32 0000                          ?_strcat 0027  
                        ?_strcmp 0070                          ?_strcpy 0027                          ?_strlen 0027  
          __end_of_n_ADDRESS_MUL 103F                       ??i1_memset 007C              ??_nrf24l01SetRXMode 002A  
       __end_of_nrf24l01SPIStart 0F3E                       ??i1_strlen 0072                          _SSP1BUF 0211  
       __end_of_nrf24l01CheckACK 0F77            _nrf24l01InterfaceInit 07D6            __end_of_flashReadByte 05B7  
               __p_romArray_text 1FE0                    ??_getADCValue 0039            __size_of_nrf24l01Init 002A  
          __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 0519       __end_of_nrf24l01SendString 039D  
                __size_of___lmul 0030                          ___lldiv 03FF                  __size_of___wmul 001B  
                        ___lwdiv 0550            _nrf24l01ReceiveString 0452                          ___lwmod 0645  
          __end_of_nrf24l01CELow 0F1B                  __size_of_memset 001C            __end_of_nrf24l01CSLow 0F21  
                        __ptext1 0FAD                          __ptext2 0672                          __ptext3 07D6  
                        __ptext4 0144                          __ptext5 0034                          __ptext6 039D  
                        __ptext7 0645                          __ptext8 0550                          __ptext9 0F3E  
                __size_of_strcat 0028                  __size_of_strcmp 0028                __end_of_exception 0F5F  
                __size_of_strcpy 001B                  __size_of_strlen 0026                     __size_of_ISR 000B  
                        _counter 004D          i1flashWriteByte@address 0074                          _setName 07B8  
               _romArray_absaddr 1FE0                          _romData 00C0                          clrloop0 0F22  
           end_of_initialization 0030                     _nrf24l01Init 0672                  ??i1_flashUpdate 0076  
                   _nrf24l01Send 0759                          memset@c 0027                          memset@n 0029  
                        memset@p 002C                  ___lldiv@divisor 0027                  ___lldiv@counter 0034  
                     _tempString 0053     __size_ofi1_nrf24l01SetRXMode 0037                          utoa@buf 004B  
                        utoa@val 0043                          strcmp@r 0073            i1nrf24l01Send@command 0073  
                        strlen@s 002E              __end_of_getADCValue 0317                        _PORTAbits 000C  
                      _PORTCbits 000E       nrf24l01ReceiveString@width 0023                        _TRISAbits 008C  
                      _TRISCbits 008E                 nrf24l01Send@data 0027                 __CFG_FEXTOSC$OFF 0000  
                  ??_flashRealod 0030                    ??_flashUpdate 002D                    ??_nrf24l01ISR 0025  
         ?_nrf24l01InterfaceInit 0070                   i1_nrf24l01Send 0F92       __size_of_nrf24l01SetRXMode 003B  
         ?_nrf24l01ReceiveString 0070                   __end_of___lmul 05E7                   __end_of___wmul 0F92  
                      i1memset@c 0078                        i1memset@n 007A                        i1memset@p 0020  
                 __end_of_memset 1000                   __end_of_strcat 06C4                   __end_of_strcmp 06EC  
                 __end_of_strcpy 0FC8                   __end_of_strlen 0712              start_initialization 0011  
                _nrf24l01SPISend 07F2                      __end_of_ISR 000F            flashWriteByte@address 002B  
              __size_ofi1_memset 001C          __size_of_nrf24l01CEHigh 0003                        i1strlen@s 0076  
              __size_ofi1_strlen 0025          __size_of_nrf24l01CSHigh 0003           __end_ofi1_nrf24l01Send 0FAD  
        __size_of_nrf24l01SPIEnd 0007          ??_nrf24l01InitRegisters 002A                 __CFG_LPBOREN$OFF 0000  
              ?i1_flashWriteByte 0070              __end_of_flashRealod 07B8                      _getADCValue 028F  
        __size_of_flashWriteByte 003C              __end_of_flashUpdate 0759                         ??___lmul 002F  
            __end_of_nrf24l01ISR 0645                         ??___wmul 0074               ??i1_flashWriteByte 0074  
           __end_of_resetRomData 1013                         ??_memset 002B                ?_enableInterrupts 0070  
                       ??_strcat 0029                         ??_strcmp 0072                         ??_strcpy 0029  
                       ??_strlen 0029               ??_enableInterrupts 0070                        ___latbits 0002  
                  __pcstackBANK0 0020                ?_nrf24l01SPIStart 0070                ?_nrf24l01CheckACK 0070  
             ??_nrf24l01SPIStart 0070               ??_nrf24l01CheckACK 0077                  ?i1_nrf24l01Send 0071  
               ___lwdiv@dividend 0029                         ?___lldiv 0027                         ?___lwdiv 0027  
                       ?___lwmod 0027             __end_of_n_ADDRESS_P0 1030          __end_of_nrf24l01SPISend 07FF  
             i1nrf24l01Send@data 0071        nrf24l01InitRegisters@enAA 0031                         ?_setName 0070  
             _nrf24l01SendString 0317                        _exception 0F47                 ___lwdiv@quotient 002C  
            i1_nrf24l01SetRXMode 0519                   __size_of_sleep 0009              ?_nrf24l01SendString 0070  
                    _flashRealod 0799                   ___wmul@product 0074           i1flashWriteByte@offset 0070  
                    _flashUpdate 0737                      _nrf24l01ISR 0617                        clear_ram0 0F21  
                       _PIE0bits 0090                         _PIR0bits 0010                        _romHolder 00A0  
                      _sleepLoop 0050             ?i1_nrf24l01SetRXMode 0070             ??_nrf24l01SendString 002F  
                     _ADCON0bits 009D                       _ADCON1bits 009E                ___wmul@multiplier 0070  
                       _WPUAbits 020C                         i1_memset 0FC8           __size_of_flashReadByte 0032  
                     ?_exception 0070                         i1_strlen 0712                   _nrf24l01CEHigh 0F15  
              ___lmul@multiplier 0027          ??_nrf24l01InterfaceInit 0027                   _nrf24l01CSHigh 0F1B  
              nrf24l01ISR@status 0026                   _nrf24l01SPIEnd 0F27           __size_of_nrf24l01CELow 0003  
          __end_ofi1_flashUpdate 0799           __size_of_nrf24l01CSLow 0003             flashWriteByte@offset 0027  
        ??_nrf24l01ReceiveString 007D                   _flashWriteByte 04A2            ??i1_nrf24l01SetRXMode 0074  
               __size_of___lldiv 0053                 __size_of___lwdiv 0035                 __size_of___lwmod 002D  
               ?_nrf24l01SPISend 0070                       _ANSELAbits 018C                       _ANSELCbits 018E  
                  _n_ADDRESS_MUL 103E                       strcat@from 0027           __end_of_nrf24l01CEHigh 0F18  
                ___lwdiv@divisor 0027           __end_of_nrf24l01CSHigh 0F1E                 __size_of_setName 001E  
                ___lwdiv@counter 002E                         __ptext10 07B8                         __ptext11 069C  
                       __ptext20 0737                         __ptext12 0FE4                         __ptext21 04A2  
                       __ptext13 0317                         __ptext30 0519                         __ptext22 0799  
                       __ptext14 06EC                         __ptext31 0F92                         __ptext23 0585  
                       __ptext15 04DE                         __ptext40 06C4                         __ptext32 0F36  
                       __ptext16 0759                         __ptext41 0F47                         __ptext33 0F1E  
                       __ptext25 0617                         __ptext17 028F                         __ptext42 0779  
                       __ptext34 07F2                         __ptext26 0452                         __ptext18 05B7  
                       __ptext43 05E7                         __ptext35 0F27                         __ptext27 0712  
                       __ptext19 03FF                         __ptext44 0F77                         __ptext36 0F1B  
                       __ptext28 0FC8                         __ptext37 0F2E                         __ptext29 0F5F  
                       __ptext38 0F18                         __ptext39 0F15                     _SSP1CON1bits 0215  
         __end_of_nrf24l01SPIEnd 0F2E                         _nrf24l01 0051                     _resetRomData 1000  
         nrf24l01Init@isReciever 0036                      _OSCCON1bits 0919                       strcpy@from 0027  
                  __size_of_main 00A1                    __size_of_loop 0110     nrf24l01InitRegisters@channel 002B  
                  __size_of_utoa 0062           __end_of_flashWriteByte 04DE     nrf24l01InitRegisters@feature 002D  
             exception@exception 007C                       _RC0PPSbits 0EA0                         _romArray 1FE0  
                  _flashReadByte 0585     nrf24l01InitRegisters@rfSetup 002E                       _RC1PPSbits 0EA1  
                   ?_getADCValue 0035                       _RC2PPSbits 0EA2   __size_of_nrf24l01InitRegisters 00AA  
  __end_of_nrf24l01InitRegisters 01EE                         int$flags 007E     nrf24l01InitRegisters@setupAW 002C  
                   _SSP1STATbits 0214                    _nrf24l01CELow 0F18                    _nrf24l01CSLow 0F1E  
                     _INTCONbits 000B        __size_ofi1_flashWriteByte 0030                  ?_nrf24l01CEHigh 0070  
                     _FVRCONbits 0117                 ??i1_nrf24l01Send 0072                      ??_exception 007A  
                ?_nrf24l01CSHigh 0070                   __pstringtext10 103A                   __pstringtext11 0000  
                       memset@p1 002D                  ?_nrf24l01SPIEnd 0070                         intlevel1 0000  
                   _n_ADDRESS_P0 102B        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lwmod@dividend 0029           nrf24l01ReceiveString@i 0024                 ___lldiv@dividend 002B  
              __CFG_CLKOUTEN$OFF 0000                  ?_flashWriteByte 0027                   ?_flashReadByte 0027  
           i1flashWriteByte@data 0072      nrf24l01InitRegisters@config 0033        __size_of_nrf24l01SPIStart 0008  
      __size_of_nrf24l01CheckACK 0018      nrf24l01InitRegisters@status 002F                   ?_nrf24l01CELow 0070  
                  __pstringtext1 1000                    __pstringtext2 102B                    __pstringtext3 103E  
                  __pstringtext4 1013                    __pstringtext5 1019                    __pstringtext6 101F  
                  __pstringtext7 1025                    __pstringtext8 1030                    __pstringtext9 1035  
                 ?_nrf24l01CSLow 0070                         utoa@base 0045       nrf24l01InitRegisters@DynPD 0032  
                       strcat@cp 002A                         strcat@to 002B                         strcmp@s1 0074  
                       strcmp@s2 0070                 ___lldiv@quotient 0030                  ___lwmod@divisor 0027  
                       strcpy@cp 002B                         strlen@cp 002D                         strcpy@to 002A  
                ___lwmod@counter 002C                       _WDTCONbits 0097      nrf24l01ReceiveString@offset 0022  
                  ?_nrf24l01Init 0070                    ?_nrf24l01Send 0027                     ?_flashRealod 0070  
                     _STATUSbits 0003             flashReadByte@address 002E                     ?_flashUpdate 0070  
                   ?_nrf24l01ISR 0070              flashReadByte@offset 0027  
