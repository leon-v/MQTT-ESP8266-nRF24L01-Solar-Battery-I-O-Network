

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jul 16 15:31:56 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16LF18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	_romArray_text,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 2.00
    75                           ; Generated 27/05/2018 GMT
    76                           ; 
    77                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16LF18325 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0097                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  018C                     	;# 
   167  018E                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020E                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0216                     	;# 
   208  0216                     	;# 
   209  0217                     	;# 
   210  0217                     	;# 
   211  0219                     	;# 
   212  021A                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021D                     	;# 
   217  021E                     	;# 
   218  021F                     	;# 
   219  028C                     	;# 
   220  028E                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0297                     	;# 
   230  0298                     	;# 
   231  029F                     	;# 
   232  030C                     	;# 
   233  030E                     	;# 
   234  0311                     	;# 
   235  0311                     	;# 
   236  0312                     	;# 
   237  0313                     	;# 
   238  0314                     	;# 
   239  0315                     	;# 
   240  0315                     	;# 
   241  0316                     	;# 
   242  0317                     	;# 
   243  0318                     	;# 
   244  038C                     	;# 
   245  038E                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  0393                     	;# 
   249  0397                     	;# 
   250  0398                     	;# 
   251  0399                     	;# 
   252  039A                     	;# 
   253  039C                     	;# 
   254  039D                     	;# 
   255  039E                     	;# 
   256  039F                     	;# 
   257  0411                     	;# 
   258  0411                     	;# 
   259  0412                     	;# 
   260  0413                     	;# 
   261  0414                     	;# 
   262  0415                     	;# 
   263  0416                     	;# 
   264  0417                     	;# 
   265  0418                     	;# 
   266  0418                     	;# 
   267  0419                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  0498                     	;# 
   275  0498                     	;# 
   276  0499                     	;# 
   277  049A                     	;# 
   278  049B                     	;# 
   279  049B                     	;# 
   280  049C                     	;# 
   281  049D                     	;# 
   282  049E                     	;# 
   283  049F                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061B                     	;# 
   290  061C                     	;# 
   291  061C                     	;# 
   292  061F                     	;# 
   293  0691                     	;# 
   294  0692                     	;# 
   295  0693                     	;# 
   296  0694                     	;# 
   297  0695                     	;# 
   298  0696                     	;# 
   299  0697                     	;# 
   300  0698                     	;# 
   301  0699                     	;# 
   302  0711                     	;# 
   303  0712                     	;# 
   304  0713                     	;# 
   305  0714                     	;# 
   306  0715                     	;# 
   307  0716                     	;# 
   308  0717                     	;# 
   309  0718                     	;# 
   310  0719                     	;# 
   311  0891                     	;# 
   312  0891                     	;# 
   313  0891                     	;# 
   314  0891                     	;# 
   315  0891                     	;# 
   316  0891                     	;# 
   317  0892                     	;# 
   318  0892                     	;# 
   319  0892                     	;# 
   320  0893                     	;# 
   321  0893                     	;# 
   322  0893                     	;# 
   323  0893                     	;# 
   324  0893                     	;# 
   325  0893                     	;# 
   326  0894                     	;# 
   327  0894                     	;# 
   328  0894                     	;# 
   329  0895                     	;# 
   330  0895                     	;# 
   331  0895                     	;# 
   332  0896                     	;# 
   333  0896                     	;# 
   334  0896                     	;# 
   335  089B                     	;# 
   336  0911                     	;# 
   337  0912                     	;# 
   338  0913                     	;# 
   339  0914                     	;# 
   340  0915                     	;# 
   341  0916                     	;# 
   342  0918                     	;# 
   343  0919                     	;# 
   344  091A                     	;# 
   345  091B                     	;# 
   346  091C                     	;# 
   347  091D                     	;# 
   348  091E                     	;# 
   349  091F                     	;# 
   350  0E0F                     	;# 
   351  0E10                     	;# 
   352  0E11                     	;# 
   353  0E12                     	;# 
   354  0E13                     	;# 
   355  0E14                     	;# 
   356  0E15                     	;# 
   357  0E16                     	;# 
   358  0E17                     	;# 
   359  0E18                     	;# 
   360  0E19                     	;# 
   361  0E1A                     	;# 
   362  0E1B                     	;# 
   363  0E1C                     	;# 
   364  0E1D                     	;# 
   365  0E1E                     	;# 
   366  0E1F                     	;# 
   367  0E20                     	;# 
   368  0E21                     	;# 
   369  0E22                     	;# 
   370  0E24                     	;# 
   371  0E25                     	;# 
   372  0E28                     	;# 
   373  0E29                     	;# 
   374  0E2A                     	;# 
   375  0E2B                     	;# 
   376  0E2C                     	;# 
   377  0E2D                     	;# 
   378  0E2E                     	;# 
   379  0E2F                     	;# 
   380  0E90                     	;# 
   381  0E91                     	;# 
   382  0E92                     	;# 
   383  0E94                     	;# 
   384  0E95                     	;# 
   385  0EA0                     	;# 
   386  0EA1                     	;# 
   387  0EA2                     	;# 
   388  0EA3                     	;# 
   389  0EA4                     	;# 
   390  0EA5                     	;# 
   391  0F0F                     	;# 
   392  0F10                     	;# 
   393  0F11                     	;# 
   394  0F12                     	;# 
   395  0F13                     	;# 
   396  0F14                     	;# 
   397  0F15                     	;# 
   398  0F16                     	;# 
   399  0F17                     	;# 
   400  0F18                     	;# 
   401  0F19                     	;# 
   402  0F1A                     	;# 
   403  0F1B                     	;# 
   404  0F1C                     	;# 
   405  0F1D                     	;# 
   406  0F1E                     	;# 
   407  0F1F                     	;# 
   408  0F20                     	;# 
   409  0F21                     	;# 
   410  0F22                     	;# 
   411  0F23                     	;# 
   412  0F24                     	;# 
   413  0F25                     	;# 
   414  0F26                     	;# 
   415  0F27                     	;# 
   416  0F28                     	;# 
   417  0F29                     	;# 
   418  0F2A                     	;# 
   419  0F2B                     	;# 
   420  0F2C                     	;# 
   421  0F2D                     	;# 
   422  0F2E                     	;# 
   423  0F2F                     	;# 
   424  0F30                     	;# 
   425  0F31                     	;# 
   426  0F32                     	;# 
   427  0F33                     	;# 
   428  0F34                     	;# 
   429  0F35                     	;# 
   430  0F36                     	;# 
   431  0F37                     	;# 
   432  0FE4                     	;# 
   433  0FE5                     	;# 
   434  0FE6                     	;# 
   435  0FE7                     	;# 
   436  0FE8                     	;# 
   437  0FE9                     	;# 
   438  0FEA                     	;# 
   439  0FEB                     	;# 
   440  0FED                     	;# 
   441  0FEE                     	;# 
   442  0FEF                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000E                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  008E                     	;# 
   478  0090                     	;# 
   479  0091                     	;# 
   480  0092                     	;# 
   481  0093                     	;# 
   482  0094                     	;# 
   483  0097                     	;# 
   484  009B                     	;# 
   485  009B                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010E                     	;# 
   492  0111                     	;# 
   493  0112                     	;# 
   494  0113                     	;# 
   495  0114                     	;# 
   496  0115                     	;# 
   497  0116                     	;# 
   498  0117                     	;# 
   499  0118                     	;# 
   500  0119                     	;# 
   501  018C                     	;# 
   502  018E                     	;# 
   503  0199                     	;# 
   504  0199                     	;# 
   505  0199                     	;# 
   506  019A                     	;# 
   507  019A                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019C                     	;# 
   517  019D                     	;# 
   518  019D                     	;# 
   519  019D                     	;# 
   520  019E                     	;# 
   521  019E                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  019F                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  019F                     	;# 
   528  020C                     	;# 
   529  020E                     	;# 
   530  0211                     	;# 
   531  0211                     	;# 
   532  0212                     	;# 
   533  0212                     	;# 
   534  0213                     	;# 
   535  0213                     	;# 
   536  0214                     	;# 
   537  0214                     	;# 
   538  0215                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0216                     	;# 
   543  0216                     	;# 
   544  0217                     	;# 
   545  0217                     	;# 
   546  0219                     	;# 
   547  021A                     	;# 
   548  021B                     	;# 
   549  021C                     	;# 
   550  021D                     	;# 
   551  021D                     	;# 
   552  021E                     	;# 
   553  021F                     	;# 
   554  028C                     	;# 
   555  028E                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0294                     	;# 
   561  0295                     	;# 
   562  0295                     	;# 
   563  0296                     	;# 
   564  0297                     	;# 
   565  0298                     	;# 
   566  029F                     	;# 
   567  030C                     	;# 
   568  030E                     	;# 
   569  0311                     	;# 
   570  0311                     	;# 
   571  0312                     	;# 
   572  0313                     	;# 
   573  0314                     	;# 
   574  0315                     	;# 
   575  0315                     	;# 
   576  0316                     	;# 
   577  0317                     	;# 
   578  0318                     	;# 
   579  038C                     	;# 
   580  038E                     	;# 
   581  0391                     	;# 
   582  0392                     	;# 
   583  0393                     	;# 
   584  0397                     	;# 
   585  0398                     	;# 
   586  0399                     	;# 
   587  039A                     	;# 
   588  039C                     	;# 
   589  039D                     	;# 
   590  039E                     	;# 
   591  039F                     	;# 
   592  0411                     	;# 
   593  0411                     	;# 
   594  0412                     	;# 
   595  0413                     	;# 
   596  0414                     	;# 
   597  0415                     	;# 
   598  0416                     	;# 
   599  0417                     	;# 
   600  0418                     	;# 
   601  0418                     	;# 
   602  0419                     	;# 
   603  041A                     	;# 
   604  041B                     	;# 
   605  041C                     	;# 
   606  041D                     	;# 
   607  041E                     	;# 
   608  041F                     	;# 
   609  0498                     	;# 
   610  0498                     	;# 
   611  0499                     	;# 
   612  049A                     	;# 
   613  049B                     	;# 
   614  049B                     	;# 
   615  049C                     	;# 
   616  049D                     	;# 
   617  049E                     	;# 
   618  049F                     	;# 
   619  0617                     	;# 
   620  0618                     	;# 
   621  0619                     	;# 
   622  0619                     	;# 
   623  061A                     	;# 
   624  061B                     	;# 
   625  061C                     	;# 
   626  061C                     	;# 
   627  061F                     	;# 
   628  0691                     	;# 
   629  0692                     	;# 
   630  0693                     	;# 
   631  0694                     	;# 
   632  0695                     	;# 
   633  0696                     	;# 
   634  0697                     	;# 
   635  0698                     	;# 
   636  0699                     	;# 
   637  0711                     	;# 
   638  0712                     	;# 
   639  0713                     	;# 
   640  0714                     	;# 
   641  0715                     	;# 
   642  0716                     	;# 
   643  0717                     	;# 
   644  0718                     	;# 
   645  0719                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0891                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0892                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0893                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0894                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0895                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  0896                     	;# 
   670  089B                     	;# 
   671  0911                     	;# 
   672  0912                     	;# 
   673  0913                     	;# 
   674  0914                     	;# 
   675  0915                     	;# 
   676  0916                     	;# 
   677  0918                     	;# 
   678  0919                     	;# 
   679  091A                     	;# 
   680  091B                     	;# 
   681  091C                     	;# 
   682  091D                     	;# 
   683  091E                     	;# 
   684  091F                     	;# 
   685  0E0F                     	;# 
   686  0E10                     	;# 
   687  0E11                     	;# 
   688  0E12                     	;# 
   689  0E13                     	;# 
   690  0E14                     	;# 
   691  0E15                     	;# 
   692  0E16                     	;# 
   693  0E17                     	;# 
   694  0E18                     	;# 
   695  0E19                     	;# 
   696  0E1A                     	;# 
   697  0E1B                     	;# 
   698  0E1C                     	;# 
   699  0E1D                     	;# 
   700  0E1E                     	;# 
   701  0E1F                     	;# 
   702  0E20                     	;# 
   703  0E21                     	;# 
   704  0E22                     	;# 
   705  0E24                     	;# 
   706  0E25                     	;# 
   707  0E28                     	;# 
   708  0E29                     	;# 
   709  0E2A                     	;# 
   710  0E2B                     	;# 
   711  0E2C                     	;# 
   712  0E2D                     	;# 
   713  0E2E                     	;# 
   714  0E2F                     	;# 
   715  0E90                     	;# 
   716  0E91                     	;# 
   717  0E92                     	;# 
   718  0E94                     	;# 
   719  0E95                     	;# 
   720  0EA0                     	;# 
   721  0EA1                     	;# 
   722  0EA2                     	;# 
   723  0EA3                     	;# 
   724  0EA4                     	;# 
   725  0EA5                     	;# 
   726  0F0F                     	;# 
   727  0F10                     	;# 
   728  0F11                     	;# 
   729  0F12                     	;# 
   730  0F13                     	;# 
   731  0F14                     	;# 
   732  0F15                     	;# 
   733  0F16                     	;# 
   734  0F17                     	;# 
   735  0F18                     	;# 
   736  0F19                     	;# 
   737  0F1A                     	;# 
   738  0F1B                     	;# 
   739  0F1C                     	;# 
   740  0F1D                     	;# 
   741  0F1E                     	;# 
   742  0F1F                     	;# 
   743  0F20                     	;# 
   744  0F21                     	;# 
   745  0F22                     	;# 
   746  0F23                     	;# 
   747  0F24                     	;# 
   748  0F25                     	;# 
   749  0F26                     	;# 
   750  0F27                     	;# 
   751  0F28                     	;# 
   752  0F29                     	;# 
   753  0F2A                     	;# 
   754  0F2B                     	;# 
   755  0F2C                     	;# 
   756  0F2D                     	;# 
   757  0F2E                     	;# 
   758  0F2F                     	;# 
   759  0F30                     	;# 
   760  0F31                     	;# 
   761  0F32                     	;# 
   762  0F33                     	;# 
   763  0F34                     	;# 
   764  0F35                     	;# 
   765  0F36                     	;# 
   766  0F37                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE9                     	;# 
   773  0FEA                     	;# 
   774  0FEB                     	;# 
   775  0FED                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000E                     	;# 
   792  0010                     	;# 
   793  0011                     	;# 
   794  0012                     	;# 
   795  0013                     	;# 
   796  0014                     	;# 
   797  0015                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  0019                     	;# 
   805  001A                     	;# 
   806  001B                     	;# 
   807  001C                     	;# 
   808  001D                     	;# 
   809  001E                     	;# 
   810  001F                     	;# 
   811  008C                     	;# 
   812  008E                     	;# 
   813  0090                     	;# 
   814  0091                     	;# 
   815  0092                     	;# 
   816  0093                     	;# 
   817  0094                     	;# 
   818  0097                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010E                     	;# 
   827  0111                     	;# 
   828  0112                     	;# 
   829  0113                     	;# 
   830  0114                     	;# 
   831  0115                     	;# 
   832  0116                     	;# 
   833  0117                     	;# 
   834  0118                     	;# 
   835  0119                     	;# 
   836  018C                     	;# 
   837  018E                     	;# 
   838  0199                     	;# 
   839  0199                     	;# 
   840  0199                     	;# 
   841  019A                     	;# 
   842  019A                     	;# 
   843  019A                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019B                     	;# 
   849  019C                     	;# 
   850  019C                     	;# 
   851  019C                     	;# 
   852  019D                     	;# 
   853  019D                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019E                     	;# 
   857  019E                     	;# 
   858  019F                     	;# 
   859  019F                     	;# 
   860  019F                     	;# 
   861  019F                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020E                     	;# 
   865  0211                     	;# 
   866  0211                     	;# 
   867  0212                     	;# 
   868  0212                     	;# 
   869  0213                     	;# 
   870  0213                     	;# 
   871  0214                     	;# 
   872  0214                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0216                     	;# 
   878  0216                     	;# 
   879  0217                     	;# 
   880  0217                     	;# 
   881  0219                     	;# 
   882  021A                     	;# 
   883  021B                     	;# 
   884  021C                     	;# 
   885  021D                     	;# 
   886  021D                     	;# 
   887  021E                     	;# 
   888  021F                     	;# 
   889  028C                     	;# 
   890  028E                     	;# 
   891  0291                     	;# 
   892  0291                     	;# 
   893  0292                     	;# 
   894  0293                     	;# 
   895  0294                     	;# 
   896  0295                     	;# 
   897  0295                     	;# 
   898  0296                     	;# 
   899  0297                     	;# 
   900  0298                     	;# 
   901  029F                     	;# 
   902  030C                     	;# 
   903  030E                     	;# 
   904  0311                     	;# 
   905  0311                     	;# 
   906  0312                     	;# 
   907  0313                     	;# 
   908  0314                     	;# 
   909  0315                     	;# 
   910  0315                     	;# 
   911  0316                     	;# 
   912  0317                     	;# 
   913  0318                     	;# 
   914  038C                     	;# 
   915  038E                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  0393                     	;# 
   919  0397                     	;# 
   920  0398                     	;# 
   921  0399                     	;# 
   922  039A                     	;# 
   923  039C                     	;# 
   924  039D                     	;# 
   925  039E                     	;# 
   926  039F                     	;# 
   927  0411                     	;# 
   928  0411                     	;# 
   929  0412                     	;# 
   930  0413                     	;# 
   931  0414                     	;# 
   932  0415                     	;# 
   933  0416                     	;# 
   934  0417                     	;# 
   935  0418                     	;# 
   936  0418                     	;# 
   937  0419                     	;# 
   938  041A                     	;# 
   939  041B                     	;# 
   940  041C                     	;# 
   941  041D                     	;# 
   942  041E                     	;# 
   943  041F                     	;# 
   944  0498                     	;# 
   945  0498                     	;# 
   946  0499                     	;# 
   947  049A                     	;# 
   948  049B                     	;# 
   949  049B                     	;# 
   950  049C                     	;# 
   951  049D                     	;# 
   952  049E                     	;# 
   953  049F                     	;# 
   954  0617                     	;# 
   955  0618                     	;# 
   956  0619                     	;# 
   957  0619                     	;# 
   958  061A                     	;# 
   959  061B                     	;# 
   960  061C                     	;# 
   961  061C                     	;# 
   962  061F                     	;# 
   963  0691                     	;# 
   964  0692                     	;# 
   965  0693                     	;# 
   966  0694                     	;# 
   967  0695                     	;# 
   968  0696                     	;# 
   969  0697                     	;# 
   970  0698                     	;# 
   971  0699                     	;# 
   972  0711                     	;# 
   973  0712                     	;# 
   974  0713                     	;# 
   975  0714                     	;# 
   976  0715                     	;# 
   977  0716                     	;# 
   978  0717                     	;# 
   979  0718                     	;# 
   980  0719                     	;# 
   981  0891                     	;# 
   982  0891                     	;# 
   983  0891                     	;# 
   984  0891                     	;# 
   985  0891                     	;# 
   986  0891                     	;# 
   987  0892                     	;# 
   988  0892                     	;# 
   989  0892                     	;# 
   990  0893                     	;# 
   991  0893                     	;# 
   992  0893                     	;# 
   993  0893                     	;# 
   994  0893                     	;# 
   995  0893                     	;# 
   996  0894                     	;# 
   997  0894                     	;# 
   998  0894                     	;# 
   999  0895                     	;# 
  1000  0895                     	;# 
  1001  0895                     	;# 
  1002  0896                     	;# 
  1003  0896                     	;# 
  1004  0896                     	;# 
  1005  089B                     	;# 
  1006  0911                     	;# 
  1007  0912                     	;# 
  1008  0913                     	;# 
  1009  0914                     	;# 
  1010  0915                     	;# 
  1011  0916                     	;# 
  1012  0918                     	;# 
  1013  0919                     	;# 
  1014  091A                     	;# 
  1015  091B                     	;# 
  1016  091C                     	;# 
  1017  091D                     	;# 
  1018  091E                     	;# 
  1019  091F                     	;# 
  1020  0E0F                     	;# 
  1021  0E10                     	;# 
  1022  0E11                     	;# 
  1023  0E12                     	;# 
  1024  0E13                     	;# 
  1025  0E14                     	;# 
  1026  0E15                     	;# 
  1027  0E16                     	;# 
  1028  0E17                     	;# 
  1029  0E18                     	;# 
  1030  0E19                     	;# 
  1031  0E1A                     	;# 
  1032  0E1B                     	;# 
  1033  0E1C                     	;# 
  1034  0E1D                     	;# 
  1035  0E1E                     	;# 
  1036  0E1F                     	;# 
  1037  0E20                     	;# 
  1038  0E21                     	;# 
  1039  0E22                     	;# 
  1040  0E24                     	;# 
  1041  0E25                     	;# 
  1042  0E28                     	;# 
  1043  0E29                     	;# 
  1044  0E2A                     	;# 
  1045  0E2B                     	;# 
  1046  0E2C                     	;# 
  1047  0E2D                     	;# 
  1048  0E2E                     	;# 
  1049  0E2F                     	;# 
  1050  0E90                     	;# 
  1051  0E91                     	;# 
  1052  0E92                     	;# 
  1053  0E94                     	;# 
  1054  0E95                     	;# 
  1055  0EA0                     	;# 
  1056  0EA1                     	;# 
  1057  0EA2                     	;# 
  1058  0EA3                     	;# 
  1059  0EA4                     	;# 
  1060  0EA5                     	;# 
  1061  0F0F                     	;# 
  1062  0F10                     	;# 
  1063  0F11                     	;# 
  1064  0F12                     	;# 
  1065  0F13                     	;# 
  1066  0F14                     	;# 
  1067  0F15                     	;# 
  1068  0F16                     	;# 
  1069  0F17                     	;# 
  1070  0F18                     	;# 
  1071  0F19                     	;# 
  1072  0F1A                     	;# 
  1073  0F1B                     	;# 
  1074  0F1C                     	;# 
  1075  0F1D                     	;# 
  1076  0F1E                     	;# 
  1077  0F1F                     	;# 
  1078  0F20                     	;# 
  1079  0F21                     	;# 
  1080  0F22                     	;# 
  1081  0F23                     	;# 
  1082  0F24                     	;# 
  1083  0F25                     	;# 
  1084  0F26                     	;# 
  1085  0F27                     	;# 
  1086  0F28                     	;# 
  1087  0F29                     	;# 
  1088  0F2A                     	;# 
  1089  0F2B                     	;# 
  1090  0F2C                     	;# 
  1091  0F2D                     	;# 
  1092  0F2E                     	;# 
  1093  0F2F                     	;# 
  1094  0F30                     	;# 
  1095  0F31                     	;# 
  1096  0F32                     	;# 
  1097  0F33                     	;# 
  1098  0F34                     	;# 
  1099  0F35                     	;# 
  1100  0F36                     	;# 
  1101  0F37                     	;# 
  1102  0FE4                     	;# 
  1103  0FE5                     	;# 
  1104  0FE6                     	;# 
  1105  0FE7                     	;# 
  1106  0FE8                     	;# 
  1107  0FE9                     	;# 
  1108  0FEA                     	;# 
  1109  0FEB                     	;# 
  1110  0FED                     	;# 
  1111  0FEE                     	;# 
  1112  0FEF                     	;# 
  1113  0000                     	;# 
  1114  0001                     	;# 
  1115  0002                     	;# 
  1116  0003                     	;# 
  1117  0004                     	;# 
  1118  0005                     	;# 
  1119  0006                     	;# 
  1120  0007                     	;# 
  1121  0008                     	;# 
  1122  0009                     	;# 
  1123  000A                     	;# 
  1124  000B                     	;# 
  1125  000C                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0016                     	;# 
  1136  0017                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  001D                     	;# 
  1144  001E                     	;# 
  1145  001F                     	;# 
  1146  008C                     	;# 
  1147  008E                     	;# 
  1148  0090                     	;# 
  1149  0091                     	;# 
  1150  0092                     	;# 
  1151  0093                     	;# 
  1152  0094                     	;# 
  1153  0097                     	;# 
  1154  009B                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  010C                     	;# 
  1161  010E                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0115                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0118                     	;# 
  1170  0119                     	;# 
  1171  018C                     	;# 
  1172  018E                     	;# 
  1173  0199                     	;# 
  1174  0199                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019A                     	;# 
  1178  019A                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019B                     	;# 
  1184  019C                     	;# 
  1185  019C                     	;# 
  1186  019C                     	;# 
  1187  019D                     	;# 
  1188  019D                     	;# 
  1189  019D                     	;# 
  1190  019E                     	;# 
  1191  019E                     	;# 
  1192  019E                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  019F                     	;# 
  1196  019F                     	;# 
  1197  019F                     	;# 
  1198  020C                     	;# 
  1199  020E                     	;# 
  1200  0211                     	;# 
  1201  0211                     	;# 
  1202  0212                     	;# 
  1203  0212                     	;# 
  1204  0213                     	;# 
  1205  0213                     	;# 
  1206  0214                     	;# 
  1207  0214                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0215                     	;# 
  1211  0215                     	;# 
  1212  0216                     	;# 
  1213  0216                     	;# 
  1214  0217                     	;# 
  1215  0217                     	;# 
  1216  0219                     	;# 
  1217  021A                     	;# 
  1218  021B                     	;# 
  1219  021C                     	;# 
  1220  021D                     	;# 
  1221  021D                     	;# 
  1222  021E                     	;# 
  1223  021F                     	;# 
  1224  028C                     	;# 
  1225  028E                     	;# 
  1226  0291                     	;# 
  1227  0291                     	;# 
  1228  0292                     	;# 
  1229  0293                     	;# 
  1230  0294                     	;# 
  1231  0295                     	;# 
  1232  0295                     	;# 
  1233  0296                     	;# 
  1234  0297                     	;# 
  1235  0298                     	;# 
  1236  029F                     	;# 
  1237  030C                     	;# 
  1238  030E                     	;# 
  1239  0311                     	;# 
  1240  0311                     	;# 
  1241  0312                     	;# 
  1242  0313                     	;# 
  1243  0314                     	;# 
  1244  0315                     	;# 
  1245  0315                     	;# 
  1246  0316                     	;# 
  1247  0317                     	;# 
  1248  0318                     	;# 
  1249  038C                     	;# 
  1250  038E                     	;# 
  1251  0391                     	;# 
  1252  0392                     	;# 
  1253  0393                     	;# 
  1254  0397                     	;# 
  1255  0398                     	;# 
  1256  0399                     	;# 
  1257  039A                     	;# 
  1258  039C                     	;# 
  1259  039D                     	;# 
  1260  039E                     	;# 
  1261  039F                     	;# 
  1262  0411                     	;# 
  1263  0411                     	;# 
  1264  0412                     	;# 
  1265  0413                     	;# 
  1266  0414                     	;# 
  1267  0415                     	;# 
  1268  0416                     	;# 
  1269  0417                     	;# 
  1270  0418                     	;# 
  1271  0418                     	;# 
  1272  0419                     	;# 
  1273  041A                     	;# 
  1274  041B                     	;# 
  1275  041C                     	;# 
  1276  041D                     	;# 
  1277  041E                     	;# 
  1278  041F                     	;# 
  1279  0498                     	;# 
  1280  0498                     	;# 
  1281  0499                     	;# 
  1282  049A                     	;# 
  1283  049B                     	;# 
  1284  049B                     	;# 
  1285  049C                     	;# 
  1286  049D                     	;# 
  1287  049E                     	;# 
  1288  049F                     	;# 
  1289  0617                     	;# 
  1290  0618                     	;# 
  1291  0619                     	;# 
  1292  0619                     	;# 
  1293  061A                     	;# 
  1294  061B                     	;# 
  1295  061C                     	;# 
  1296  061C                     	;# 
  1297  061F                     	;# 
  1298  0691                     	;# 
  1299  0692                     	;# 
  1300  0693                     	;# 
  1301  0694                     	;# 
  1302  0695                     	;# 
  1303  0696                     	;# 
  1304  0697                     	;# 
  1305  0698                     	;# 
  1306  0699                     	;# 
  1307  0711                     	;# 
  1308  0712                     	;# 
  1309  0713                     	;# 
  1310  0714                     	;# 
  1311  0715                     	;# 
  1312  0716                     	;# 
  1313  0717                     	;# 
  1314  0718                     	;# 
  1315  0719                     	;# 
  1316  0891                     	;# 
  1317  0891                     	;# 
  1318  0891                     	;# 
  1319  0891                     	;# 
  1320  0891                     	;# 
  1321  0891                     	;# 
  1322  0892                     	;# 
  1323  0892                     	;# 
  1324  0892                     	;# 
  1325  0893                     	;# 
  1326  0893                     	;# 
  1327  0893                     	;# 
  1328  0893                     	;# 
  1329  0893                     	;# 
  1330  0893                     	;# 
  1331  0894                     	;# 
  1332  0894                     	;# 
  1333  0894                     	;# 
  1334  0895                     	;# 
  1335  0895                     	;# 
  1336  0895                     	;# 
  1337  0896                     	;# 
  1338  0896                     	;# 
  1339  0896                     	;# 
  1340  089B                     	;# 
  1341  0911                     	;# 
  1342  0912                     	;# 
  1343  0913                     	;# 
  1344  0914                     	;# 
  1345  0915                     	;# 
  1346  0916                     	;# 
  1347  0918                     	;# 
  1348  0919                     	;# 
  1349  091A                     	;# 
  1350  091B                     	;# 
  1351  091C                     	;# 
  1352  091D                     	;# 
  1353  091E                     	;# 
  1354  091F                     	;# 
  1355  0E0F                     	;# 
  1356  0E10                     	;# 
  1357  0E11                     	;# 
  1358  0E12                     	;# 
  1359  0E13                     	;# 
  1360  0E14                     	;# 
  1361  0E15                     	;# 
  1362  0E16                     	;# 
  1363  0E17                     	;# 
  1364  0E18                     	;# 
  1365  0E19                     	;# 
  1366  0E1A                     	;# 
  1367  0E1B                     	;# 
  1368  0E1C                     	;# 
  1369  0E1D                     	;# 
  1370  0E1E                     	;# 
  1371  0E1F                     	;# 
  1372  0E20                     	;# 
  1373  0E21                     	;# 
  1374  0E22                     	;# 
  1375  0E24                     	;# 
  1376  0E25                     	;# 
  1377  0E28                     	;# 
  1378  0E29                     	;# 
  1379  0E2A                     	;# 
  1380  0E2B                     	;# 
  1381  0E2C                     	;# 
  1382  0E2D                     	;# 
  1383  0E2E                     	;# 
  1384  0E2F                     	;# 
  1385  0E90                     	;# 
  1386  0E91                     	;# 
  1387  0E92                     	;# 
  1388  0E94                     	;# 
  1389  0E95                     	;# 
  1390  0EA0                     	;# 
  1391  0EA1                     	;# 
  1392  0EA2                     	;# 
  1393  0EA3                     	;# 
  1394  0EA4                     	;# 
  1395  0EA5                     	;# 
  1396  0F0F                     	;# 
  1397  0F10                     	;# 
  1398  0F11                     	;# 
  1399  0F12                     	;# 
  1400  0F13                     	;# 
  1401  0F14                     	;# 
  1402  0F15                     	;# 
  1403  0F16                     	;# 
  1404  0F17                     	;# 
  1405  0F18                     	;# 
  1406  0F19                     	;# 
  1407  0F1A                     	;# 
  1408  0F1B                     	;# 
  1409  0F1C                     	;# 
  1410  0F1D                     	;# 
  1411  0F1E                     	;# 
  1412  0F1F                     	;# 
  1413  0F20                     	;# 
  1414  0F21                     	;# 
  1415  0F22                     	;# 
  1416  0F23                     	;# 
  1417  0F24                     	;# 
  1418  0F25                     	;# 
  1419  0F26                     	;# 
  1420  0F27                     	;# 
  1421  0F28                     	;# 
  1422  0F29                     	;# 
  1423  0F2A                     	;# 
  1424  0F2B                     	;# 
  1425  0F2C                     	;# 
  1426  0F2D                     	;# 
  1427  0F2E                     	;# 
  1428  0F2F                     	;# 
  1429  0F30                     	;# 
  1430  0F31                     	;# 
  1431  0F32                     	;# 
  1432  0F33                     	;# 
  1433  0F34                     	;# 
  1434  0F35                     	;# 
  1435  0F36                     	;# 
  1436  0F37                     	;# 
  1437  0FE4                     	;# 
  1438  0FE5                     	;# 
  1439  0FE6                     	;# 
  1440  0FE7                     	;# 
  1441  0FE8                     	;# 
  1442  0FE9                     	;# 
  1443  0FEA                     	;# 
  1444  0FEB                     	;# 
  1445  0FED                     	;# 
  1446  0FEE                     	;# 
  1447  0FEF                     	;# 
  1448  0000                     	;# 
  1449  0001                     	;# 
  1450  0002                     	;# 
  1451  0003                     	;# 
  1452  0004                     	;# 
  1453  0005                     	;# 
  1454  0006                     	;# 
  1455  0007                     	;# 
  1456  0008                     	;# 
  1457  0009                     	;# 
  1458  000A                     	;# 
  1459  000B                     	;# 
  1460  000C                     	;# 
  1461  000E                     	;# 
  1462  0010                     	;# 
  1463  0011                     	;# 
  1464  0012                     	;# 
  1465  0013                     	;# 
  1466  0014                     	;# 
  1467  0015                     	;# 
  1468  0015                     	;# 
  1469  0016                     	;# 
  1470  0016                     	;# 
  1471  0017                     	;# 
  1472  0018                     	;# 
  1473  0019                     	;# 
  1474  0019                     	;# 
  1475  001A                     	;# 
  1476  001B                     	;# 
  1477  001C                     	;# 
  1478  001D                     	;# 
  1479  001E                     	;# 
  1480  001F                     	;# 
  1481  008C                     	;# 
  1482  008E                     	;# 
  1483  0090                     	;# 
  1484  0091                     	;# 
  1485  0092                     	;# 
  1486  0093                     	;# 
  1487  0094                     	;# 
  1488  0097                     	;# 
  1489  009B                     	;# 
  1490  009B                     	;# 
  1491  009C                     	;# 
  1492  009D                     	;# 
  1493  009E                     	;# 
  1494  009F                     	;# 
  1495  010C                     	;# 
  1496  010E                     	;# 
  1497  0111                     	;# 
  1498  0112                     	;# 
  1499  0113                     	;# 
  1500  0114                     	;# 
  1501  0115                     	;# 
  1502  0116                     	;# 
  1503  0117                     	;# 
  1504  0118                     	;# 
  1505  0119                     	;# 
  1506  018C                     	;# 
  1507  018E                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  020C                     	;# 
  1534  020E                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  0219                     	;# 
  1552  021A                     	;# 
  1553  021B                     	;# 
  1554  021C                     	;# 
  1555  021D                     	;# 
  1556  021D                     	;# 
  1557  021E                     	;# 
  1558  021F                     	;# 
  1559  028C                     	;# 
  1560  028E                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0294                     	;# 
  1566  0295                     	;# 
  1567  0295                     	;# 
  1568  0296                     	;# 
  1569  0297                     	;# 
  1570  0298                     	;# 
  1571  029F                     	;# 
  1572  030C                     	;# 
  1573  030E                     	;# 
  1574  0311                     	;# 
  1575  0311                     	;# 
  1576  0312                     	;# 
  1577  0313                     	;# 
  1578  0314                     	;# 
  1579  0315                     	;# 
  1580  0315                     	;# 
  1581  0316                     	;# 
  1582  0317                     	;# 
  1583  0318                     	;# 
  1584  038C                     	;# 
  1585  038E                     	;# 
  1586  0391                     	;# 
  1587  0392                     	;# 
  1588  0393                     	;# 
  1589  0397                     	;# 
  1590  0398                     	;# 
  1591  0399                     	;# 
  1592  039A                     	;# 
  1593  039C                     	;# 
  1594  039D                     	;# 
  1595  039E                     	;# 
  1596  039F                     	;# 
  1597  0411                     	;# 
  1598  0411                     	;# 
  1599  0412                     	;# 
  1600  0413                     	;# 
  1601  0414                     	;# 
  1602  0415                     	;# 
  1603  0416                     	;# 
  1604  0417                     	;# 
  1605  0418                     	;# 
  1606  0418                     	;# 
  1607  0419                     	;# 
  1608  041A                     	;# 
  1609  041B                     	;# 
  1610  041C                     	;# 
  1611  041D                     	;# 
  1612  041E                     	;# 
  1613  041F                     	;# 
  1614  0498                     	;# 
  1615  0498                     	;# 
  1616  0499                     	;# 
  1617  049A                     	;# 
  1618  049B                     	;# 
  1619  049B                     	;# 
  1620  049C                     	;# 
  1621  049D                     	;# 
  1622  049E                     	;# 
  1623  049F                     	;# 
  1624  0617                     	;# 
  1625  0618                     	;# 
  1626  0619                     	;# 
  1627  0619                     	;# 
  1628  061A                     	;# 
  1629  061B                     	;# 
  1630  061C                     	;# 
  1631  061C                     	;# 
  1632  061F                     	;# 
  1633  0691                     	;# 
  1634  0692                     	;# 
  1635  0693                     	;# 
  1636  0694                     	;# 
  1637  0695                     	;# 
  1638  0696                     	;# 
  1639  0697                     	;# 
  1640  0698                     	;# 
  1641  0699                     	;# 
  1642  0711                     	;# 
  1643  0712                     	;# 
  1644  0713                     	;# 
  1645  0714                     	;# 
  1646  0715                     	;# 
  1647  0716                     	;# 
  1648  0717                     	;# 
  1649  0718                     	;# 
  1650  0719                     	;# 
  1651  0891                     	;# 
  1652  0891                     	;# 
  1653  0891                     	;# 
  1654  0891                     	;# 
  1655  0891                     	;# 
  1656  0891                     	;# 
  1657  0892                     	;# 
  1658  0892                     	;# 
  1659  0892                     	;# 
  1660  0893                     	;# 
  1661  0893                     	;# 
  1662  0893                     	;# 
  1663  0893                     	;# 
  1664  0893                     	;# 
  1665  0893                     	;# 
  1666  0894                     	;# 
  1667  0894                     	;# 
  1668  0894                     	;# 
  1669  0895                     	;# 
  1670  0895                     	;# 
  1671  0895                     	;# 
  1672  0896                     	;# 
  1673  0896                     	;# 
  1674  0896                     	;# 
  1675  089B                     	;# 
  1676  0911                     	;# 
  1677  0912                     	;# 
  1678  0913                     	;# 
  1679  0914                     	;# 
  1680  0915                     	;# 
  1681  0916                     	;# 
  1682  0918                     	;# 
  1683  0919                     	;# 
  1684  091A                     	;# 
  1685  091B                     	;# 
  1686  091C                     	;# 
  1687  091D                     	;# 
  1688  091E                     	;# 
  1689  091F                     	;# 
  1690  0E0F                     	;# 
  1691  0E10                     	;# 
  1692  0E11                     	;# 
  1693  0E12                     	;# 
  1694  0E13                     	;# 
  1695  0E14                     	;# 
  1696  0E15                     	;# 
  1697  0E16                     	;# 
  1698  0E17                     	;# 
  1699  0E18                     	;# 
  1700  0E19                     	;# 
  1701  0E1A                     	;# 
  1702  0E1B                     	;# 
  1703  0E1C                     	;# 
  1704  0E1D                     	;# 
  1705  0E1E                     	;# 
  1706  0E1F                     	;# 
  1707  0E20                     	;# 
  1708  0E21                     	;# 
  1709  0E22                     	;# 
  1710  0E24                     	;# 
  1711  0E25                     	;# 
  1712  0E28                     	;# 
  1713  0E29                     	;# 
  1714  0E2A                     	;# 
  1715  0E2B                     	;# 
  1716  0E2C                     	;# 
  1717  0E2D                     	;# 
  1718  0E2E                     	;# 
  1719  0E2F                     	;# 
  1720  0E90                     	;# 
  1721  0E91                     	;# 
  1722  0E92                     	;# 
  1723  0E94                     	;# 
  1724  0E95                     	;# 
  1725  0EA0                     	;# 
  1726  0EA1                     	;# 
  1727  0EA2                     	;# 
  1728  0EA3                     	;# 
  1729  0EA4                     	;# 
  1730  0EA5                     	;# 
  1731  0F0F                     	;# 
  1732  0F10                     	;# 
  1733  0F11                     	;# 
  1734  0F12                     	;# 
  1735  0F13                     	;# 
  1736  0F14                     	;# 
  1737  0F15                     	;# 
  1738  0F16                     	;# 
  1739  0F17                     	;# 
  1740  0F18                     	;# 
  1741  0F19                     	;# 
  1742  0F1A                     	;# 
  1743  0F1B                     	;# 
  1744  0F1C                     	;# 
  1745  0F1D                     	;# 
  1746  0F1E                     	;# 
  1747  0F1F                     	;# 
  1748  0F20                     	;# 
  1749  0F21                     	;# 
  1750  0F22                     	;# 
  1751  0F23                     	;# 
  1752  0F24                     	;# 
  1753  0F25                     	;# 
  1754  0F26                     	;# 
  1755  0F27                     	;# 
  1756  0F28                     	;# 
  1757  0F29                     	;# 
  1758  0F2A                     	;# 
  1759  0F2B                     	;# 
  1760  0F2C                     	;# 
  1761  0F2D                     	;# 
  1762  0F2E                     	;# 
  1763  0F2F                     	;# 
  1764  0F30                     	;# 
  1765  0F31                     	;# 
  1766  0F32                     	;# 
  1767  0F33                     	;# 
  1768  0F34                     	;# 
  1769  0F35                     	;# 
  1770  0F36                     	;# 
  1771  0F37                     	;# 
  1772  0FE4                     	;# 
  1773  0FE5                     	;# 
  1774  0FE6                     	;# 
  1775  0FE7                     	;# 
  1776  0FE8                     	;# 
  1777  0FE9                     	;# 
  1778  0FEA                     	;# 
  1779  0FEB                     	;# 
  1780  0FED                     	;# 
  1781  0FEE                     	;# 
  1782  0FEF                     	;# 
  1783  0000                     	;# 
  1784  0001                     	;# 
  1785  0002                     	;# 
  1786  0003                     	;# 
  1787  0004                     	;# 
  1788  0005                     	;# 
  1789  0006                     	;# 
  1790  0007                     	;# 
  1791  0008                     	;# 
  1792  0009                     	;# 
  1793  000A                     	;# 
  1794  000B                     	;# 
  1795  000C                     	;# 
  1796  000E                     	;# 
  1797  0010                     	;# 
  1798  0011                     	;# 
  1799  0012                     	;# 
  1800  0013                     	;# 
  1801  0014                     	;# 
  1802  0015                     	;# 
  1803  0015                     	;# 
  1804  0016                     	;# 
  1805  0016                     	;# 
  1806  0017                     	;# 
  1807  0018                     	;# 
  1808  0019                     	;# 
  1809  0019                     	;# 
  1810  001A                     	;# 
  1811  001B                     	;# 
  1812  001C                     	;# 
  1813  001D                     	;# 
  1814  001E                     	;# 
  1815  001F                     	;# 
  1816  008C                     	;# 
  1817  008E                     	;# 
  1818  0090                     	;# 
  1819  0091                     	;# 
  1820  0092                     	;# 
  1821  0093                     	;# 
  1822  0094                     	;# 
  1823  0097                     	;# 
  1824  009B                     	;# 
  1825  009B                     	;# 
  1826  009C                     	;# 
  1827  009D                     	;# 
  1828  009E                     	;# 
  1829  009F                     	;# 
  1830  010C                     	;# 
  1831  010E                     	;# 
  1832  0111                     	;# 
  1833  0112                     	;# 
  1834  0113                     	;# 
  1835  0114                     	;# 
  1836  0115                     	;# 
  1837  0116                     	;# 
  1838  0117                     	;# 
  1839  0118                     	;# 
  1840  0119                     	;# 
  1841  018C                     	;# 
  1842  018E                     	;# 
  1843  0199                     	;# 
  1844  0199                     	;# 
  1845  0199                     	;# 
  1846  019A                     	;# 
  1847  019A                     	;# 
  1848  019A                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019B                     	;# 
  1852  019B                     	;# 
  1853  019B                     	;# 
  1854  019C                     	;# 
  1855  019C                     	;# 
  1856  019C                     	;# 
  1857  019D                     	;# 
  1858  019D                     	;# 
  1859  019D                     	;# 
  1860  019E                     	;# 
  1861  019E                     	;# 
  1862  019E                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  019F                     	;# 
  1866  019F                     	;# 
  1867  019F                     	;# 
  1868  020C                     	;# 
  1869  020E                     	;# 
  1870  0211                     	;# 
  1871  0211                     	;# 
  1872  0212                     	;# 
  1873  0212                     	;# 
  1874  0213                     	;# 
  1875  0213                     	;# 
  1876  0214                     	;# 
  1877  0214                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0216                     	;# 
  1883  0216                     	;# 
  1884  0217                     	;# 
  1885  0217                     	;# 
  1886  0219                     	;# 
  1887  021A                     	;# 
  1888  021B                     	;# 
  1889  021C                     	;# 
  1890  021D                     	;# 
  1891  021D                     	;# 
  1892  021E                     	;# 
  1893  021F                     	;# 
  1894  028C                     	;# 
  1895  028E                     	;# 
  1896  0291                     	;# 
  1897  0291                     	;# 
  1898  0292                     	;# 
  1899  0293                     	;# 
  1900  0294                     	;# 
  1901  0295                     	;# 
  1902  0295                     	;# 
  1903  0296                     	;# 
  1904  0297                     	;# 
  1905  0298                     	;# 
  1906  029F                     	;# 
  1907  030C                     	;# 
  1908  030E                     	;# 
  1909  0311                     	;# 
  1910  0311                     	;# 
  1911  0312                     	;# 
  1912  0313                     	;# 
  1913  0314                     	;# 
  1914  0315                     	;# 
  1915  0315                     	;# 
  1916  0316                     	;# 
  1917  0317                     	;# 
  1918  0318                     	;# 
  1919  038C                     	;# 
  1920  038E                     	;# 
  1921  0391                     	;# 
  1922  0392                     	;# 
  1923  0393                     	;# 
  1924  0397                     	;# 
  1925  0398                     	;# 
  1926  0399                     	;# 
  1927  039A                     	;# 
  1928  039C                     	;# 
  1929  039D                     	;# 
  1930  039E                     	;# 
  1931  039F                     	;# 
  1932  0411                     	;# 
  1933  0411                     	;# 
  1934  0412                     	;# 
  1935  0413                     	;# 
  1936  0414                     	;# 
  1937  0415                     	;# 
  1938  0416                     	;# 
  1939  0417                     	;# 
  1940  0418                     	;# 
  1941  0418                     	;# 
  1942  0419                     	;# 
  1943  041A                     	;# 
  1944  041B                     	;# 
  1945  041C                     	;# 
  1946  041D                     	;# 
  1947  041E                     	;# 
  1948  041F                     	;# 
  1949  0498                     	;# 
  1950  0498                     	;# 
  1951  0499                     	;# 
  1952  049A                     	;# 
  1953  049B                     	;# 
  1954  049B                     	;# 
  1955  049C                     	;# 
  1956  049D                     	;# 
  1957  049E                     	;# 
  1958  049F                     	;# 
  1959  0617                     	;# 
  1960  0618                     	;# 
  1961  0619                     	;# 
  1962  0619                     	;# 
  1963  061A                     	;# 
  1964  061B                     	;# 
  1965  061C                     	;# 
  1966  061C                     	;# 
  1967  061F                     	;# 
  1968  0691                     	;# 
  1969  0692                     	;# 
  1970  0693                     	;# 
  1971  0694                     	;# 
  1972  0695                     	;# 
  1973  0696                     	;# 
  1974  0697                     	;# 
  1975  0698                     	;# 
  1976  0699                     	;# 
  1977  0711                     	;# 
  1978  0712                     	;# 
  1979  0713                     	;# 
  1980  0714                     	;# 
  1981  0715                     	;# 
  1982  0716                     	;# 
  1983  0717                     	;# 
  1984  0718                     	;# 
  1985  0719                     	;# 
  1986  0891                     	;# 
  1987  0891                     	;# 
  1988  0891                     	;# 
  1989  0891                     	;# 
  1990  0891                     	;# 
  1991  0891                     	;# 
  1992  0892                     	;# 
  1993  0892                     	;# 
  1994  0892                     	;# 
  1995  0893                     	;# 
  1996  0893                     	;# 
  1997  0893                     	;# 
  1998  0893                     	;# 
  1999  0893                     	;# 
  2000  0893                     	;# 
  2001  0894                     	;# 
  2002  0894                     	;# 
  2003  0894                     	;# 
  2004  0895                     	;# 
  2005  0895                     	;# 
  2006  0895                     	;# 
  2007  0896                     	;# 
  2008  0896                     	;# 
  2009  0896                     	;# 
  2010  089B                     	;# 
  2011  0911                     	;# 
  2012  0912                     	;# 
  2013  0913                     	;# 
  2014  0914                     	;# 
  2015  0915                     	;# 
  2016  0916                     	;# 
  2017  0918                     	;# 
  2018  0919                     	;# 
  2019  091A                     	;# 
  2020  091B                     	;# 
  2021  091C                     	;# 
  2022  091D                     	;# 
  2023  091E                     	;# 
  2024  091F                     	;# 
  2025  0E0F                     	;# 
  2026  0E10                     	;# 
  2027  0E11                     	;# 
  2028  0E12                     	;# 
  2029  0E13                     	;# 
  2030  0E14                     	;# 
  2031  0E15                     	;# 
  2032  0E16                     	;# 
  2033  0E17                     	;# 
  2034  0E18                     	;# 
  2035  0E19                     	;# 
  2036  0E1A                     	;# 
  2037  0E1B                     	;# 
  2038  0E1C                     	;# 
  2039  0E1D                     	;# 
  2040  0E1E                     	;# 
  2041  0E1F                     	;# 
  2042  0E20                     	;# 
  2043  0E21                     	;# 
  2044  0E22                     	;# 
  2045  0E24                     	;# 
  2046  0E25                     	;# 
  2047  0E28                     	;# 
  2048  0E29                     	;# 
  2049  0E2A                     	;# 
  2050  0E2B                     	;# 
  2051  0E2C                     	;# 
  2052  0E2D                     	;# 
  2053  0E2E                     	;# 
  2054  0E2F                     	;# 
  2055  0E90                     	;# 
  2056  0E91                     	;# 
  2057  0E92                     	;# 
  2058  0E94                     	;# 
  2059  0E95                     	;# 
  2060  0EA0                     	;# 
  2061  0EA1                     	;# 
  2062  0EA2                     	;# 
  2063  0EA3                     	;# 
  2064  0EA4                     	;# 
  2065  0EA5                     	;# 
  2066  0F0F                     	;# 
  2067  0F10                     	;# 
  2068  0F11                     	;# 
  2069  0F12                     	;# 
  2070  0F13                     	;# 
  2071  0F14                     	;# 
  2072  0F15                     	;# 
  2073  0F16                     	;# 
  2074  0F17                     	;# 
  2075  0F18                     	;# 
  2076  0F19                     	;# 
  2077  0F1A                     	;# 
  2078  0F1B                     	;# 
  2079  0F1C                     	;# 
  2080  0F1D                     	;# 
  2081  0F1E                     	;# 
  2082  0F1F                     	;# 
  2083  0F20                     	;# 
  2084  0F21                     	;# 
  2085  0F22                     	;# 
  2086  0F23                     	;# 
  2087  0F24                     	;# 
  2088  0F25                     	;# 
  2089  0F26                     	;# 
  2090  0F27                     	;# 
  2091  0F28                     	;# 
  2092  0F29                     	;# 
  2093  0F2A                     	;# 
  2094  0F2B                     	;# 
  2095  0F2C                     	;# 
  2096  0F2D                     	;# 
  2097  0F2E                     	;# 
  2098  0F2F                     	;# 
  2099  0F30                     	;# 
  2100  0F31                     	;# 
  2101  0F32                     	;# 
  2102  0F33                     	;# 
  2103  0F34                     	;# 
  2104  0F35                     	;# 
  2105  0F36                     	;# 
  2106  0F37                     	;# 
  2107  0FE4                     	;# 
  2108  0FE5                     	;# 
  2109  0FE6                     	;# 
  2110  0FE7                     	;# 
  2111  0FE8                     	;# 
  2112  0FE9                     	;# 
  2113  0FEA                     	;# 
  2114  0FEB                     	;# 
  2115  0FED                     	;# 
  2116  0FEE                     	;# 
  2117  0FEF                     	;# 
  2118  1FE0                     _romArray_absaddr	set	8160
  2119                           
  2120                           	psect	stringtext1
  2121  1000                     __pstringtext1:	
  2122  1000                     _resetRomData:	
  2123  1000  34AA               	retlw	170
  2124  1001  3455               	retlw	85
  2125  1002  346E               	retlw	110
  2126  1003  3463               	retlw	99
  2127  1004  346F               	retlw	111
  2128  1005  346E               	retlw	110
  2129  1006  3466               	retlw	102
  2130  1007  3469               	retlw	105
  2131  1008  3467               	retlw	103
  2132  1009  3475               	retlw	117
  2133  100A  3472               	retlw	114
  2134  100B  3465               	retlw	101
  2135  100C  3464               	retlw	100
  2136  100D  3400               	retlw	0
  2137  100E  3400               	retlw	0
  2138  100F  3400               	retlw	0
  2139  1010  3400               	retlw	0
  2140  1011  3400               	retlw	0
  2141  1012  3400               	retlw	0
  2142  1013                     __end_of_resetRomData:	
  2143                           
  2144                           	psect	stringtext2
  2145  1019                     __pstringtext2:	
  2146  1019                     _n_ADDRESS_P0:	
  2147  1019  34AD               	retlw	173
  2148  101A  3487               	retlw	135
  2149  101B  3466               	retlw	102
  2150  101C  34BC               	retlw	188
  2151  101D  34BB               	retlw	187
  2152  101E                     __end_of_n_ADDRESS_P0:	
  2153                           
  2154                           	psect	stringtext3
  2155  1040                     __pstringtext3:	
  2156  1040                     _n_ADDRESS_MUL:	
  2157  1040  3421               	retlw	33
  2158  1041                     __end_of_n_ADDRESS_MUL:	
  2159  1FE0                     _romArray_absaddr	set	8160
  2160                           
  2161                           	psect	_romArray_text
  2162  1FE0                     __p_romArray_text:	
  2163  1FE0                     _romArray:	
  2164  1FE0  3400               	retlw	0
  2165  1FE1  3400               	retlw	0
  2166  1FE2  3400               	retlw	0
  2167  1FE3  3400               	retlw	0
  2168  1FE4  3400               	retlw	0
  2169  1FE5  3400               	retlw	0
  2170  1FE6  3400               	retlw	0
  2171  1FE7  3400               	retlw	0
  2172  1FE8  3400               	retlw	0
  2173  1FE9  3400               	retlw	0
  2174  1FEA  3400               	retlw	0
  2175  1FEB  3400               	retlw	0
  2176  1FEC  3400               	retlw	0
  2177  1FED  3400               	retlw	0
  2178  1FEE  3400               	retlw	0
  2179  1FEF  3400               	retlw	0
  2180  1FF0  3400               	retlw	0
  2181  1FF1  3400               	retlw	0
  2182  1FF2  3400               	retlw	0
  2183  1FF3  3400               	retlw	0
  2184  1FF4  3400               	retlw	0
  2185  1FF5  3400               	retlw	0
  2186  1FF6  3400               	retlw	0
  2187  1FF7  3400               	retlw	0
  2188  1FF8  3400               	retlw	0
  2189  1FF9  3400               	retlw	0
  2190  1FFA  3400               	retlw	0
  2191  1FFB  3400               	retlw	0
  2192  1FFC  3400               	retlw	0
  2193  1FFD  3400               	retlw	0
  2194  1FFE  3400               	retlw	0
  2195  1FFF  3400               	retlw	0
  2196  2000                     __end_of_romArray:	
  2197  0003                     _STATUSbits	set	3
  2198  0010                     _PIR0bits	set	16
  2199  000E                     _PORTCbits	set	14
  2200  000C                     _PORTAbits	set	12
  2201  000B                     _INTCONbits	set	11
  2202  0097                     _WDTCONbits	set	151
  2203  009E                     _ADCON1bits	set	158
  2204  009C                     _ADRESH	set	156
  2205  009B                     _ADRESL	set	155
  2206  009D                     _ADCON0bits	set	157
  2207  0090                     _PIE0bits	set	144
  2208  008E                     _TRISCbits	set	142
  2209  008C                     _TRISAbits	set	140
  2210  0117                     _FVRCONbits	set	279
  2211  018E                     _ANSELCbits	set	398
  2212  018C                     _ANSELAbits	set	396
  2213  018E                     _ANSELC	set	398
  2214  018C                     _ANSELA	set	396
  2215  020C                     _WPUAbits	set	524
  2216  020E                     _WPUC	set	526
  2217  020C                     _WPUA	set	524
  2218  0211                     _SSP1BUF	set	529
  2219  0214                     _SSP1STATbits	set	532
  2220  0215                     _SSP1CON1bits	set	533
  2221  028E                     _ODCONC	set	654
  2222  028C                     _ODCONA	set	652
  2223  038E                     _INLVLC	set	910
  2224  038C                     _INLVLA	set	908
  2225  0894                     _PMDATH	set	2196
  2226  0893                     _PMDATL	set	2195
  2227  0896                     _PMCON2	set	2198
  2228  0895                     _PMCON1bits	set	2197
  2229  0892                     _PMADRH	set	2194
  2230  0891                     _PMADRL	set	2193
  2231  0895                     _PMCON1	set	2197
  2232  0919                     _OSCCON1bits	set	2329
  2233  0EA0                     _RC0PPSbits	set	3744
  2234  0EA2                     _RC2PPSbits	set	3746
  2235  0EA1                     _RC1PPSbits	set	3745
  2236                           
  2237                           	psect	stringtext4
  2238  1013                     __pstringtext4:	
  2239  1013                     STR_8:	
  2240  1013  3452               	retlw	82	;'R'
  2241  1014  3446               	retlw	70	;'F'
  2242  1015  3450               	retlw	80	;'P'
  2243  1016  3457               	retlw	87	;'W'
  2244  1017  3452               	retlw	82	;'R'
  2245  1018  3400               	retlw	0
  2246                           
  2247                           	psect	stringtext5
  2248  101E                     __pstringtext5:	
  2249  101E                     STR_5:	
  2250  101E  3441               	retlw	65	;'A'
  2251  101F  344E               	retlw	78	;'N'
  2252  1020  3443               	retlw	67	;'C'
  2253  1021  3433               	retlw	51	;'3'
  2254  1022  3400               	retlw	0
  2255                           
  2256                           	psect	stringtext6
  2257  1023                     __pstringtext6:	
  2258  1023                     STR_7:	
  2259  1023  3454               	retlw	84	;'T'
  2260  1024  3445               	retlw	69	;'E'
  2261  1025  344D               	retlw	77	;'M'
  2262  1026  3450               	retlw	80	;'P'
  2263  1027  3400               	retlw	0
  2264                           
  2265                           	psect	stringtext7
  2266  1028                     __pstringtext7:	
  2267  1028                     STR_4:	
  2268  1028  3456               	retlw	86	;'V'
  2269  1029  3442               	retlw	66	;'B'
  2270  102A  3441               	retlw	65	;'A'
  2271  102B  3454               	retlw	84	;'T'
  2272  102C  3400               	retlw	0
  2273                           
  2274                           	psect	stringtext8
  2275  102D                     __pstringtext8:	
  2276  102D                     STR_10:	
  2277  102D  3442               	retlw	66	;'B'
  2278  102E  344F               	retlw	79	;'O'
  2279  102F  344F               	retlw	79	;'O'
  2280  1030  3454               	retlw	84	;'T'
  2281  1031  3400               	retlw	0
  2282                           
  2283                           	psect	stringtext9
  2284  1032                     __pstringtext9:	
  2285  1032                     STR_9:	
  2286  1032  3455               	retlw	85	;'U'
  2287  1033  3448               	retlw	72	;'H'
  2288  1034  3431               	retlw	49	;'1'
  2289  1035  3400               	retlw	0
  2290                           
  2291                           	psect	stringtext10
  2292  1036                     __pstringtext10:	
  2293  1036                     STR_3:	
  2294  1036  3444               	retlw	68	;'D'
  2295  1037  3442               	retlw	66	;'B'
  2296  1038  3447               	retlw	71	;'G'
  2297  1039  3400               	retlw	0
  2298                           
  2299                           	psect	stringtext11
  2300  103A                     __pstringtext11:	
  2301  103A                     STR_6:	
  2302  103A  3446               	retlw	70	;'F'
  2303  103B  3456               	retlw	86	;'V'
  2304  103C  3452               	retlw	82	;'R'
  2305  103D  3400               	retlw	0
  2306                           
  2307                           	psect	stringtext12
  2308  103E                     __pstringtext12:	
  2309  103E                     STR_1:	
  2310  103E  342F               	retlw	47	;'/'
  2311  103F  3400               	retlw	0
  2312                           
  2313                           	psect	stringtext13
  2314  0000                     __pstringtext13:	
  2315  103E                     
  2316                           ; #config settings
  2317  0000                     
  2318                           	psect	cinit
  2319  0011                     start_initialization:	
  2320  0011                     __initialization:	
  2321                           
  2322                           ; Clear objects allocated to BANK0
  2323  0011  3059               	movlw	low __pbssBANK0
  2324  0012  0084               	movwf	4
  2325  0013  3000               	movlw	high __pbssBANK0
  2326  0014  0085               	movwf	5
  2327  0015  3016               	movlw	22
  2328  0016  318E  26B6  3180   	fcall	clear_ram0
  2329                           
  2330                           ; Clear objects allocated to BANK1
  2331  0019  0021               	movlb	1	; select bank1
  2332  001A  01E3               	clrf	__pbssBANK1& (0+127)
  2333  001B  01E4               	clrf	(__pbssBANK1+1)& (0+127)
  2334  001C  01E5               	clrf	(__pbssBANK1+2)& (0+127)
  2335  001D  01E6               	clrf	(__pbssBANK1+3)& (0+127)
  2336                           
  2337                           ; Clear objects allocated to BANK2
  2338  001E  3020               	movlw	low __pbssBANK2
  2339  001F  0084               	movwf	4
  2340  0020  3001               	movlw	high __pbssBANK2
  2341  0021  0085               	movwf	5
  2342  0022  3041               	movlw	65
  2343  0023  318E  26B6         	fcall	clear_ram0
  2344  0025                     end_of_initialization:	
  2345                           ;End of C runtime variable initialization code
  2346                           
  2347  0025                     __end_of__initialization:	
  2348  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2349  0026  0020               	movlb	0
  2350  0027  3182  2A72         	ljmp	_main	;jump to C main() function
  2351                           
  2352                           	psect	bssBANK0
  2353  0059                     __pbssBANK0:	
  2354  0059                     _TXPacket:	
  2355  0059                     	ds	1
  2356  005A                     _sleepLoop:	
  2357  005A                     	ds	1
  2358  005B                     _nrf24l01:	
  2359  005B                     	ds	1
  2360  005C                     _romData:	
  2361  005C                     	ds	19
  2362                           
  2363                           	psect	bssBANK1
  2364  00E3                     __pbssBANK1:	
  2365  00E3                     _counter:	
  2366  00E3                     	ds	4
  2367                           
  2368                           	psect	bssBANK2
  2369  0120                     __pbssBANK2:	
  2370  0120                     _romHolder:	
  2371  0120                     	ds	32
  2372  0140                     _RXPacket:	
  2373  0140                     	ds	33
  2374                           
  2375                           	psect	clrtext
  2376  0EB6                     clear_ram0:	
  2377                           ;	Called with FSR0 containing the base address, and
  2378                           ;	WREG with the size to clear
  2379                           
  2380  0EB6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2381  0EB7                     clrloop0:	
  2382  0EB7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2383  0EB8  3101               	addfsr 0,1
  2384  0EB9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2385  0EBA  2EB7               	goto	clrloop0	;have we reached the end yet?
  2386  0EBB  3400               	retlw	0	;all done for this memory range, return
  2387                           
  2388                           	psect	cstackBANK1
  2389  00A0                     __pcstackBANK1:	
  2390  00A0                     loop@rfSetup:	
  2391                           
  2392                           ; 1 bytes @ 0x0
  2393  00A0                     	ds	1
  2394  00A1                     loop@packet:	
  2395                           
  2396                           ; 33 bytes @ 0x1
  2397  00A1                     	ds	33
  2398  00C2                     main@packet:	
  2399                           
  2400                           ; 33 bytes @ 0x22
  2401  00C2                     	ds	33
  2402                           
  2403                           	psect	cstackCOMMON
  2404  0070                     __pcstackCOMMON:	
  2405  0070                     ?_nrf24l01ISR:	
  2406  0070                     ?_nrf24l01SetRXMode:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_nrf24l01GetRXPacket:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_nrf24l01SendPacket:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_nrf24l01Init:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_flashRealod:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_flashUpdate:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_nrf24l01CELow:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ??_nrf24l01CELow:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ?_nrf24l01CEHigh:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ??_nrf24l01CEHigh:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?_nrf24l01CSLow:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ??_nrf24l01CSLow:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_nrf24l01CSHigh:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ??_nrf24l01CSHigh:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ?_nrf24l01InterfaceInit:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_nrf24l01SPISend:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ??_nrf24l01SPISend:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?_nrf24l01SPIStart:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ??_nrf24l01SPIStart:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ?_nrf24l01SPIEnd:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ??_nrf24l01SPIEnd:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ?_enableInterrupts:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ??_enableInterrupts:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_exception:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ?_ISR:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_sleep:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ?_checkTXPower:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ?_loop:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_main:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ?_nrf24l01CheckACK:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_nrf24l01ReceivePacket:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_nrf24l01InitRegisters:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?i1_flashWriteByte:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?i1_flashUpdate:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?i1_nrf24l01SetRXMode:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ?i1_memset:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_strcmp:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ?___wmul:	
  2518                           ; 2 bytes @ 0x0
  2519                           
  2520  0070                     nrf24l01SPISend@data:	
  2521                           ; 2 bytes @ 0x0
  2522                           
  2523  0070                     enableInterrupts@enable:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     nrf24l01InitRegisters@isReciever:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     strcmp@s2:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ___wmul@multiplier:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     i1flashWriteByte@offset:	
  2536                           ; 2 bytes @ 0x0
  2537                           
  2538  0070                     i1memset@p1:	
  2539                           ; 2 bytes @ 0x0
  2540                           
  2541                           
  2542                           ; 2 bytes @ 0x0
  2543  0070                     	ds	1
  2544  0071                     ?i1_nrf24l01Send:	
  2545  0071                     i1nrf24l01Send@data:	
  2546                           ; 1 bytes @ 0x1
  2547                           
  2548                           
  2549                           ; 1 bytes @ 0x1
  2550  0071                     	ds	1
  2551  0072                     ??_strcmp:	
  2552  0072                     ??i1_nrf24l01Send:	
  2553                           ; 1 bytes @ 0x2
  2554                           
  2555  0072                     ___wmul@multiplicand:	
  2556                           ; 1 bytes @ 0x2
  2557                           
  2558  0072                     i1flashWriteByte@data:	
  2559                           ; 2 bytes @ 0x2
  2560                           
  2561  0072                     i1memset@c:	
  2562                           ; 2 bytes @ 0x2
  2563                           
  2564                           
  2565                           ; 2 bytes @ 0x2
  2566  0072                     	ds	1
  2567  0073                     strcmp@r:	
  2568  0073                     i1nrf24l01Send@command:	
  2569                           ; 1 bytes @ 0x3
  2570                           
  2571                           
  2572                           ; 1 bytes @ 0x3
  2573  0073                     	ds	1
  2574  0074                     ??___wmul:	
  2575  0074                     ??i1_flashWriteByte:	
  2576                           ; 1 bytes @ 0x4
  2577                           
  2578  0074                     ??i1_nrf24l01SetRXMode:	
  2579                           ; 1 bytes @ 0x4
  2580                           
  2581  0074                     strcmp@s1:	
  2582                           ; 1 bytes @ 0x4
  2583                           
  2584  0074                     ___wmul@product:	
  2585                           ; 1 bytes @ 0x4
  2586                           
  2587  0074                     i1flashWriteByte@address:	
  2588                           ; 2 bytes @ 0x4
  2589                           
  2590  0074                     i1memset@n:	
  2591                           ; 2 bytes @ 0x4
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x4
  2595  0074                     	ds	1
  2596  0075                     i1nrf24l01SetRXMode@config:	
  2597                           
  2598                           ; 1 bytes @ 0x5
  2599  0075                     	ds	1
  2600  0076                     ??i1_flashUpdate:	
  2601  0076                     ??i1_memset:	
  2602                           ; 1 bytes @ 0x6
  2603                           
  2604  0076                     i1nrf24l01SetRXMode@rxMode:	
  2605                           ; 1 bytes @ 0x6
  2606                           
  2607  0076                     i1memset@p:	
  2608                           ; 1 bytes @ 0x6
  2609                           
  2610                           
  2611                           ; 2 bytes @ 0x6
  2612  0076                     	ds	1
  2613  0077                     ??_nrf24l01CheckACK:	
  2614                           
  2615                           ; 1 bytes @ 0x7
  2616  0077                     	ds	1
  2617  0078                     ??_nrf24l01ReceivePacket:	
  2618  0078                     i1flashUpdate@i:	
  2619                           ; 1 bytes @ 0x8
  2620                           
  2621                           
  2622                           ; 2 bytes @ 0x8
  2623  0078                     	ds	1
  2624  0079                     nrf24l01ReceivePacket@width:	
  2625                           
  2626                           ; 1 bytes @ 0x9
  2627  0079                     	ds	1
  2628  007A                     ??_exception:	
  2629  007A                     nrf24l01ReceivePacket@i:	
  2630                           ; 1 bytes @ 0xA
  2631                           
  2632                           
  2633                           ; 1 bytes @ 0xA
  2634  007A                     	ds	2
  2635  007C                     exception@exception:	
  2636                           
  2637                           ; 1 bytes @ 0xC
  2638  007C                     	ds	1
  2639  007D                     ??_nrf24l01ISR:	
  2640                           
  2641                           ; 1 bytes @ 0xD
  2642  007D                     	ds	1
  2643  007E                     ??_ISR:	
  2644                           
  2645                           	psect	cstackBANK0
  2646  0020                     __pcstackBANK0:	
  2647                           ; 1 bytes @ 0xE
  2648                           
  2649  0020                     nrf24l01ISR@status:	
  2650                           
  2651                           ; 1 bytes @ 0x0
  2652  0020                     	ds	1
  2653  0021                     ?_strcat:	
  2654  0021                     ??_nrf24l01GetRXPacket:	
  2655                           ; 1 bytes @ 0x1
  2656                           
  2657  0021                     ?_nrf24l01Send:	
  2658                           ; 1 bytes @ 0x1
  2659                           
  2660  0021                     ?_strcpy:	
  2661                           ; 1 bytes @ 0x1
  2662                           
  2663  0021                     ?_flashWriteByte:	
  2664                           ; 1 bytes @ 0x1
  2665                           
  2666  0021                     ??_nrf24l01InterfaceInit:	
  2667                           ; 1 bytes @ 0x1
  2668                           
  2669  0021                     ??_sleep:	
  2670                           ; 1 bytes @ 0x1
  2671                           
  2672  0021                     ?_memset:	
  2673                           ; 1 bytes @ 0x1
  2674                           
  2675  0021                     ?_strlen:	
  2676                           ; 2 bytes @ 0x1
  2677                           
  2678  0021                     ?_flashReadByte:	
  2679                           ; 2 bytes @ 0x1
  2680                           
  2681  0021                     ?___lmul:	
  2682                           ; 2 bytes @ 0x1
  2683                           
  2684  0021                     ?___lldiv:	
  2685                           ; 4 bytes @ 0x1
  2686                           
  2687  0021                     ?___llmod:	
  2688                           ; 4 bytes @ 0x1
  2689                           
  2690  0021                     nrf24l01Send@data:	
  2691                           ; 4 bytes @ 0x1
  2692                           
  2693  0021                     flashWriteByte@offset:	
  2694                           ; 1 bytes @ 0x1
  2695                           
  2696  0021                     flashReadByte@offset:	
  2697                           ; 2 bytes @ 0x1
  2698                           
  2699  0021                     memset@p1:	
  2700                           ; 2 bytes @ 0x1
  2701                           
  2702  0021                     strcat@from:	
  2703                           ; 2 bytes @ 0x1
  2704                           
  2705  0021                     strcpy@from:	
  2706                           ; 2 bytes @ 0x1
  2707                           
  2708  0021                     ___lmul@multiplier:	
  2709                           ; 2 bytes @ 0x1
  2710                           
  2711  0021                     ___lldiv@divisor:	
  2712                           ; 4 bytes @ 0x1
  2713                           
  2714  0021                     ___llmod@divisor:	
  2715                           ; 4 bytes @ 0x1
  2716                           
  2717                           
  2718                           ; 4 bytes @ 0x1
  2719  0021                     	ds	1
  2720  0022                     ??_nrf24l01Send:	
  2721                           
  2722                           ; 1 bytes @ 0x2
  2723  0022                     	ds	1
  2724  0023                     ??_strcat:	
  2725  0023                     ??_strcpy:	
  2726                           ; 1 bytes @ 0x3
  2727                           
  2728  0023                     ??_strlen:	
  2729                           ; 1 bytes @ 0x3
  2730                           
  2731  0023                     ??_flashReadByte:	
  2732                           ; 1 bytes @ 0x3
  2733                           
  2734  0023                     nrf24l01Send@command:	
  2735                           ; 1 bytes @ 0x3
  2736                           
  2737  0023                     flashWriteByte@data:	
  2738                           ; 1 bytes @ 0x3
  2739                           
  2740  0023                     memset@c:	
  2741                           ; 2 bytes @ 0x3
  2742                           
  2743                           
  2744                           ; 2 bytes @ 0x3
  2745  0023                     	ds	1
  2746  0024                     ??_nrf24l01SetRXMode:	
  2747  0024                     ?_nrf24l01ChangeTXPower:	
  2748                           ; 1 bytes @ 0x4
  2749                           
  2750  0024                     ??_nrf24l01InitRegisters:	
  2751                           ; 1 bytes @ 0x4
  2752                           
  2753  0024                     strcat@cp:	
  2754                           ; 1 bytes @ 0x4
  2755                           
  2756  0024                     strcpy@to:	
  2757                           ; 1 bytes @ 0x4
  2758                           
  2759  0024                     nrf24l01ChangeTXPower@addPower:	
  2760                           ; 1 bytes @ 0x4
  2761                           
  2762                           
  2763                           ; 2 bytes @ 0x4
  2764  0024                     	ds	1
  2765  0025                     ??_flashWriteByte:	
  2766  0025                     nrf24l01SetRXMode@config:	
  2767                           ; 1 bytes @ 0x5
  2768                           
  2769  0025                     nrf24l01InitRegisters@channel:	
  2770                           ; 1 bytes @ 0x5
  2771                           
  2772  0025                     strcat@to:	
  2773                           ; 1 bytes @ 0x5
  2774                           
  2775  0025                     strcpy@cp:	
  2776                           ; 1 bytes @ 0x5
  2777                           
  2778  0025                     flashWriteByte@address:	
  2779                           ; 1 bytes @ 0x5
  2780                           
  2781  0025                     memset@n:	
  2782                           ; 2 bytes @ 0x5
  2783                           
  2784  0025                     ___lmul@multiplicand:	
  2785                           ; 2 bytes @ 0x5
  2786                           
  2787  0025                     ___lldiv@dividend:	
  2788                           ; 4 bytes @ 0x5
  2789                           
  2790  0025                     ___llmod@dividend:	
  2791                           ; 4 bytes @ 0x5
  2792                           
  2793                           
  2794                           ; 4 bytes @ 0x5
  2795  0025                     	ds	1
  2796  0026                     ??_nrf24l01ChangeTXPower:	
  2797  0026                     nrf24l01SetRXMode@rxMode:	
  2798                           ; 1 bytes @ 0x6
  2799                           
  2800  0026                     nrf24l01InitRegisters@setupAW:	
  2801                           ; 1 bytes @ 0x6
  2802                           
  2803  0026                     flashReadByte@result:	
  2804                           ; 1 bytes @ 0x6
  2805                           
  2806                           
  2807                           ; 2 bytes @ 0x6
  2808  0026                     	ds	1
  2809  0027                     ??_memset:	
  2810  0027                     ??_flashUpdate:	
  2811                           ; 1 bytes @ 0x7
  2812                           
  2813  0027                     nrf24l01ChangeTXPower@rfSetup:	
  2814                           ; 1 bytes @ 0x7
  2815                           
  2816  0027                     nrf24l01InitRegisters@feature:	
  2817                           ; 1 bytes @ 0x7
  2818                           
  2819  0027                     strlen@s:	
  2820                           ; 1 bytes @ 0x7
  2821                           
  2822  0027                     memset@p:	
  2823                           ; 1 bytes @ 0x7
  2824                           
  2825                           
  2826                           ; 2 bytes @ 0x7
  2827  0027                     	ds	1
  2828  0028                     ??_checkTXPower:	
  2829  0028                     nrf24l01InitRegisters@rfSetup:	
  2830                           ; 1 bytes @ 0x8
  2831                           
  2832  0028                     strlen@cp:	
  2833                           ; 1 bytes @ 0x8
  2834                           
  2835  0028                     flashReadByte@address:	
  2836                           ; 1 bytes @ 0x8
  2837                           
  2838                           
  2839                           ; 2 bytes @ 0x8
  2840  0028                     	ds	1
  2841  0029                     ??_nrf24l01SendPacket:	
  2842  0029                     ??___lmul:	
  2843                           ; 1 bytes @ 0x9
  2844                           
  2845  0029                     ??___lldiv:	
  2846                           ; 1 bytes @ 0x9
  2847                           
  2848  0029                     ??___llmod:	
  2849                           ; 1 bytes @ 0x9
  2850                           
  2851  0029                     checkTXPower@rxPacket:	
  2852                           ; 1 bytes @ 0x9
  2853                           
  2854  0029                     nrf24l01InitRegisters@status:	
  2855                           ; 1 bytes @ 0x9
  2856                           
  2857  0029                     flashUpdate@i:	
  2858                           ; 1 bytes @ 0x9
  2859                           
  2860  0029                     ___lmul@product:	
  2861                           ; 2 bytes @ 0x9
  2862                           
  2863                           
  2864                           ; 4 bytes @ 0x9
  2865  0029                     	ds	1
  2866  002A                     ??_flashRealod:	
  2867  002A                     nrf24l01InitRegisters@enRXAddr:	
  2868                           ; 1 bytes @ 0xA
  2869                           
  2870  002A                     ___llmod@counter:	
  2871                           ; 1 bytes @ 0xA
  2872                           
  2873  002A                     ___lldiv@quotient:	
  2874                           ; 1 bytes @ 0xA
  2875                           
  2876                           
  2877                           ; 4 bytes @ 0xA
  2878  002A                     	ds	1
  2879  002B                     nrf24l01SendPacket@Packet:	
  2880  002B                     nrf24l01InitRegisters@enAA:	
  2881                           ; 1 bytes @ 0xB
  2882                           
  2883  002B                     flashRealod@i:	
  2884                           ; 1 bytes @ 0xB
  2885                           
  2886                           
  2887                           ; 2 bytes @ 0xB
  2888  002B                     	ds	1
  2889  002C                     nrf24l01SendPacket@i:	
  2890  002C                     nrf24l01InitRegisters@DynPD:	
  2891                           ; 1 bytes @ 0xC
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0xC
  2895  002C                     	ds	1
  2896  002D                     nrf24l01InitRegisters@config:	
  2897                           
  2898                           ; 1 bytes @ 0xD
  2899  002D                     	ds	1
  2900  002E                     ??_nrf24l01Init:	
  2901  002E                     ___lldiv@counter:	
  2902                           ; 1 bytes @ 0xE
  2903                           
  2904                           
  2905                           ; 1 bytes @ 0xE
  2906  002E                     	ds	1
  2907  002F                     ?_ultoa:	
  2908  002F                     ?_getADCValue:	
  2909                           ; 1 bytes @ 0xF
  2910                           
  2911  002F                     getADCValue@divider:	
  2912                           ; 4 bytes @ 0xF
  2913                           
  2914  002F                     ultoa@val:	
  2915                           ; 4 bytes @ 0xF
  2916                           
  2917                           
  2918                           ; 4 bytes @ 0xF
  2919  002F                     	ds	1
  2920  0030                     nrf24l01Init@isReciever:	
  2921                           
  2922                           ; 1 bytes @ 0x10
  2923  0030                     	ds	3
  2924  0033                     ??_getADCValue:	
  2925  0033                     ultoa@base:	
  2926                           ; 1 bytes @ 0x13
  2927                           
  2928                           
  2929                           ; 2 bytes @ 0x13
  2930  0033                     	ds	2
  2931  0035                     ??_ultoa:	
  2932                           
  2933                           ; 1 bytes @ 0x15
  2934  0035                     	ds	1
  2935  0036                     ultoa@v:	
  2936                           
  2937                           ; 4 bytes @ 0x16
  2938  0036                     	ds	1
  2939  0037                     getADCValue@channel:	
  2940                           
  2941                           ; 1 bytes @ 0x17
  2942  0037                     	ds	1
  2943  0038                     getADCValue@adcLoop:	
  2944                           
  2945                           ; 1 bytes @ 0x18
  2946  0038                     	ds	1
  2947  0039                     getADCValue@adcSum:	
  2948                           
  2949                           ; 4 bytes @ 0x19
  2950  0039                     	ds	1
  2951  003A                     ultoa@c:	
  2952                           
  2953                           ; 1 bytes @ 0x1A
  2954  003A                     	ds	1
  2955  003B                     ultoa@buf:	
  2956                           
  2957                           ; 1 bytes @ 0x1B
  2958  003B                     	ds	2
  2959  003D                     ?_setMessage:	
  2960  003D                     setMessage@topic:	
  2961                           ; 1 bytes @ 0x1D
  2962                           
  2963                           
  2964                           ; 2 bytes @ 0x1D
  2965  003D                     	ds	2
  2966  003F                     setMessage@value:	
  2967                           
  2968                           ; 4 bytes @ 0x1F
  2969  003F                     	ds	4
  2970  0043                     ??_setMessage:	
  2971  0043                     setMessage@tempString:	
  2972                           ; 1 bytes @ 0x23
  2973                           
  2974                           
  2975                           ; 16 bytes @ 0x23
  2976  0043                     	ds	16
  2977  0053                     setMessage@packet:	
  2978                           
  2979                           ; 1 bytes @ 0x33
  2980  0053                     	ds	1
  2981  0054                     ??_loop:	
  2982                           
  2983                           ; 1 bytes @ 0x34
  2984  0054                     	ds	4
  2985  0058                     ??_main:	
  2986                           
  2987                           ; 1 bytes @ 0x38
  2988  0058                     	ds	1
  2989                           
  2990                           	psect	maintext
  2991  0272                     __pmaintext:	
  2992 ;;
  2993 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2994 ;;
  2995 ;; *************** function _main *****************
  2996 ;; Defined at:
  2997 ;;		line 156 in file "main.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  packet         33   34[BANK1 ] struct .
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : B1F/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Totals:         0       1      33       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;Total ram usage:       34 bytes
  3016 ;; Hardware stack levels required when called:   13
  3017 ;; This function calls:
  3018 ;;		_flashRealod
  3019 ;;		_flashUpdate
  3020 ;;		_loop
  3021 ;;		_nrf24l01Init
  3022 ;;		_nrf24l01SendPacket
  3023 ;;		_setMessage
  3024 ;;		_sleep
  3025 ;;		_strcpy
  3026 ;; This function is called by:
  3027 ;;		Startup code after reset
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _main
  3033  0272                     _main:	
  3034                           
  3035                           ;main.c: 159: ANSELA = 0x00;
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3039  0272  0023               	movlb	3	; select bank3
  3040  0273  018C               	clrf	12	;volatile
  3041                           
  3042                           ;main.c: 160: ANSELC = 0x00;
  3043  0274  018E               	clrf	14	;volatile
  3044                           
  3045                           ;main.c: 162: ODCONA = 0x00;
  3046  0275  0025               	movlb	5	; select bank5
  3047  0276  018C               	clrf	12	;volatile
  3048                           
  3049                           ;main.c: 163: ODCONC = 0x00;
  3050  0277  018E               	clrf	14	;volatile
  3051                           
  3052                           ;main.c: 168: INLVLA = 0x00;
  3053  0278  0027               	movlb	7	; select bank7
  3054  0279  018C               	clrf	12	;volatile
  3055                           
  3056                           ;main.c: 169: INLVLC = 0x00;
  3057  027A  018E               	clrf	14	;volatile
  3058                           
  3059                           ;main.c: 171: WPUA = 0x00;
  3060  027B  0024               	movlb	4	; select bank4
  3061  027C  018C               	clrf	12	;volatile
  3062                           
  3063                           ;main.c: 172: WPUC = 0x00;
  3064  027D  018E               	clrf	14	;volatile
  3065                           
  3066                           ;main.c: 174: TRISCbits.TRISC5 = 0;
  3067  027E  0021               	movlb	1	; select bank1
  3068  027F  128E               	bcf	14,5	;volatile
  3069                           
  3070                           ;main.c: 175: TRISCbits.TRISC4 = 0;
  3071  0280  120E               	bcf	14,4	;volatile
  3072                           
  3073                           ;main.c: 177: PORTCbits.RC4 = 0;
  3074  0281  0020               	movlb	0	; select bank0
  3075  0282  120E               	bcf	14,4	;volatile
  3076                           
  3077                           ;main.c: 184: INTCONbits.PEIE = 0;
  3078  0283  130B               	bcf	11,6	;volatile
  3079                           
  3080                           ;main.c: 185: INTCONbits.GIE = 0;
  3081  0284  138B               	bcf	11,7	;volatile
  3082                           
  3083                           ;main.c: 187: OSCCON1bits.NOSC = 0b000;
  3084  0285  308F               	movlw	-113
  3085  0286  0032               	movlb	18	; select bank18
  3086  0287  0599               	andwf	25,f	;volatile
  3087                           
  3088                           ;main.c: 188: OSCCON1bits.NDIV = 0b000;
  3089  0288  30F0               	movlw	-16
  3090  0289  0599               	andwf	25,f	;volatile
  3091                           
  3092                           ;main.c: 190: _delay((unsigned long)((10)*(16000000/4000.0)));
  3093  028A  3034               	movlw	52
  3094  028B  0020               	movlb	0	; select bank0
  3095  028C  00D8               	movwf	??_main
  3096  028D  30F1               	movlw	241
  3097  028E                     u1597:	
  3098  028E  0B89               	decfsz	9,f
  3099  028F  2A8E               	goto	u1597
  3100  0290  0BD8               	decfsz	??_main,f
  3101  0291  2A8E               	goto	u1597
  3102  0292  3200               	nop2
  3103                           
  3104                           ;main.c: 192: flashRealod();
  3105  0293  318F  27C0  3182   	fcall	_flashRealod
  3106                           
  3107                           ;main.c: 196: if (romData.check != 0x06){
  3108  0296  3006               	movlw	6
  3109  0297  0020               	movlb	0	; select bank0
  3110  0298  065C               	xorwf	_romData,w
  3111  0299  1903               	btfsc	3,2
  3112  029A  2AAD               	goto	l3003
  3113                           
  3114                           ;main.c: 197: romData.check = 0x06;
  3115  029B  3006               	movlw	6
  3116  029C  00D8               	movwf	??_main
  3117  029D  0858               	movf	??_main,w
  3118  029E  00DC               	movwf	_romData
  3119                           
  3120                           ;main.c: 198: strcpy(romData.name, "UH1");
  3121  029F  3032               	movlw	low (STR_9| (0+32768))
  3122  02A0  00A1               	movwf	strcpy@from
  3123  02A1  3090               	movlw	high (STR_9| (0+32768))
  3124  02A2  00A2               	movwf	strcpy@from+1
  3125  02A3  305D               	movlw	(low ((_romData| 0+1)))& (0+255)
  3126  02A4  318F  2785  3182   	fcall	_strcpy
  3127                           
  3128                           ;main.c: 199: romData.bootMode = 0x00;
  3129  02A7  0020               	movlb	0	; select bank0
  3130  02A8  01ED               	clrf	_romData+17
  3131  02A9  01EE               	clrf	_romData+18
  3132                           
  3133                           ;main.c: 200: flashUpdate();
  3134  02AA  3187  279F  3182   	fcall	_flashUpdate
  3135  02AD                     l3003:	
  3136                           
  3137                           ;main.c: 201: };main.c: 203: nrf24l01Init(0);
  3138  02AD  3000               	movlw	0
  3139  02AE  3187  2704  3182   	fcall	_nrf24l01Init
  3140                           
  3141                           ;main.c: 210: ADCON0bits.ADON = 0;
  3142  02B1  0021               	movlb	1	; select bank1
  3143  02B2  101D               	bcf	29,0	;volatile
  3144                           
  3145                           ;main.c: 213: ANSELAbits.ANSA4 = 1;
  3146  02B3  0023               	movlb	3	; select bank3
  3147  02B4  160C               	bsf	12,4	;volatile
  3148                           
  3149                           ;main.c: 214: TRISAbits.TRISA4 = 1;
  3150  02B5  0021               	movlb	1	; select bank1
  3151  02B6  160C               	bsf	12,4	;volatile
  3152                           
  3153                           ;main.c: 215: WPUAbits.WPUA4 = 0;
  3154  02B7  0024               	movlb	4	; select bank4
  3155  02B8  120C               	bcf	12,4	;volatile
  3156                           
  3157                           ;main.c: 218: ANSELCbits.ANSC3 = 1;
  3158  02B9  0023               	movlb	3	; select bank3
  3159  02BA  158E               	bsf	14,3	;volatile
  3160                           
  3161                           ;main.c: 219: TRISCbits.TRISC3 = 1;
  3162  02BB  0021               	movlb	1	; select bank1
  3163  02BC  158E               	bsf	14,3	;volatile
  3164                           
  3165                           ;main.c: 222: FVRCONbits.TSEN = 0;
  3166  02BD  0022               	movlb	2	; select bank2
  3167  02BE  1297               	bcf	23,5	;volatile
  3168                           
  3169                           ;main.c: 223: FVRCONbits.TSRNG = 0;
  3170  02BF  1217               	bcf	23,4	;volatile
  3171                           
  3172                           ;main.c: 224: FVRCONbits.TSEN = 1;
  3173  02C0  1697               	bsf	23,5	;volatile
  3174                           
  3175                           ;main.c: 227: FVRCONbits.FVREN = 0;
  3176  02C1  1397               	bcf	23,7	;volatile
  3177                           
  3178                           ;main.c: 228: FVRCONbits.ADFVR = 1;
  3179  02C2  0817               	movf	23,w	;volatile
  3180  02C3  39FC               	andlw	-4
  3181  02C4  3801               	iorlw	1
  3182  02C5  0097               	movwf	23	;volatile
  3183                           
  3184                           ;main.c: 229: FVRCONbits.FVREN = 1;
  3185  02C6  1797               	bsf	23,7	;volatile
  3186                           
  3187                           ;main.c: 231: ADCON1bits.ADCS = 0b111;
  3188  02C7  3070               	movlw	112
  3189  02C8  0021               	movlb	1	; select bank1
  3190  02C9  049E               	iorwf	30,f	;volatile
  3191                           
  3192                           ;main.c: 232: ADCON1bits.ADFM = 1;
  3193  02CA  179E               	bsf	30,7	;volatile
  3194                           
  3195                           ;main.c: 233: ADCON1bits.ADNREF = 0b0;
  3196  02CB  111E               	bcf	30,2	;volatile
  3197                           
  3198                           ;main.c: 234: ADCON1bits.ADPREF = 0b00;
  3199  02CC  30FC               	movlw	-4
  3200  02CD  059E               	andwf	30,f	;volatile
  3201                           
  3202                           ;main.c: 236: ADCON0bits.CHS = 3;
  3203  02CE  081D               	movf	29,w	;volatile
  3204  02CF  3903               	andlw	-253
  3205  02D0  380C               	iorlw	12
  3206  02D1  009D               	movwf	29	;volatile
  3207                           
  3208                           ;main.c: 237: ADCON0bits.ADON = 1;
  3209  02D2  141D               	bsf	29,0	;volatile
  3210                           
  3211                           ;main.c: 242: TRISAbits.TRISA2 = 1;
  3212  02D3  150C               	bsf	12,2	;volatile
  3213                           
  3214                           ;main.c: 243: PIE0bits.INTE = 1;
  3215  02D4  1410               	bsf	16,0	;volatile
  3216                           
  3217                           ;main.c: 244: INTCONbits.INTEDG = 0;
  3218  02D5  100B               	bcf	11,0	;volatile
  3219                           
  3220                           ;main.c: 248: WDTCONbits.WDTPS = 10;
  3221  02D6  0817               	movf	23,w	;volatile
  3222  02D7  39C1               	andlw	-63
  3223  02D8  3814               	iorlw	20
  3224  02D9  0097               	movwf	23	;volatile
  3225                           
  3226                           ;main.c: 251: TRISAbits.TRISA5 = 0;
  3227  02DA  128C               	bcf	12,5	;volatile
  3228                           
  3229                           ;main.c: 252: PORTAbits.RA5 = 0;
  3230  02DB  0020               	movlb	0	; select bank0
  3231  02DC  128C               	bcf	12,5	;volatile
  3232                           
  3233                           ;main.c: 255: INTCONbits.PEIE = 1;
  3234  02DD  170B               	bsf	11,6	;volatile
  3235                           
  3236                           ;main.c: 256: INTCONbits.GIE = 1;
  3237  02DE  178B               	bsf	11,7	;volatile
  3238                           
  3239                           ;main.c: 258: nrf24l01Packet_t packet;;main.c: 260: setMessage(&packet, "BOOT", romData.
      +                          bootMode);
  3240  02DF  302D               	movlw	low (STR_10| (0+32768))
  3241  02E0  00BD               	movwf	setMessage@topic
  3242  02E1  3090               	movlw	high (STR_10| (0+32768))
  3243  02E2  00BE               	movwf	setMessage@topic+1
  3244  02E3  086D               	movf	_romData+17,w
  3245  02E4  00BF               	movwf	setMessage@value
  3246  02E5  086E               	movf	_romData+18,w
  3247  02E6  00C0               	movwf	setMessage@value+1
  3248  02E7  01C1               	clrf	setMessage@value+2
  3249  02E8  01C2               	clrf	setMessage@value+3
  3250  02E9  30C2               	movlw	(low (main@packet| 0))& (0+255)
  3251  02EA  3184  2465  3182   	fcall	_setMessage
  3252                           
  3253                           ;main.c: 261: packet.packetData.byte = 0;
  3254  02ED  0021               	movlb	1	; select bank1
  3255  02EE  01C2               	clrf	main@packet^(0+128)
  3256                           
  3257                           ;main.c: 262: packet.packetData.ACKRequest = 0;
  3258  02EF  1142               	bcf	main@packet^(0+128),2
  3259                           
  3260                           ;main.c: 263: nrf24l01SendPacket(&packet);
  3261  02F0  30C2               	movlw	(low (main@packet| 0))& (0+255)
  3262  02F1  3181  21E7  3182   	fcall	_nrf24l01SendPacket
  3263                           
  3264                           ;main.c: 264: sleep();
  3265  02F4  318E  26E0  3182   	fcall	_sleep
  3266  02F7                     l3067:	
  3267                           ;main.c: 266: while(1){
  3268                           
  3269                           
  3270                           ;main.c: 267: loop();
  3271  02F7  3180  2029  3182   	fcall	_loop
  3272  02FA  2AF7               	goto	l3067
  3273  02FB                     __end_of_main:	
  3274                           ;main.c: 268: };main.c: 270: return;
  3275                           
  3276                           
  3277                           	psect	text1
  3278  0F85                     __ptext1:	
  3279 ;; *************** function _strcpy *****************
  3280 ;; Defined at:
  3281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcpy.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  to              1    wreg     PTR unsigned char 
  3284 ;;		 -> romData(19), 
  3285 ;;  from            2    1[BANK0 ] PTR const unsigned char 
  3286 ;;		 -> STR_9(4), 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  to              1    4[BANK0 ] PTR unsigned char 
  3289 ;;		 -> romData(19), 
  3290 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  3291 ;;		 -> romData(19), 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      PTR unsigned char 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;Total ram usage:        5 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    7
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _strcpy
  3317  0F85                     _strcpy:	
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  3321                           ;strcpy@to stored from wreg
  3322  0F85  0020               	movlb	0	; select bank0
  3323  0F86  00A4               	movwf	strcpy@to
  3324  0F87  0824               	movf	strcpy@to,w
  3325  0F88  00A3               	movwf	??_strcpy
  3326  0F89  0823               	movf	??_strcpy,w
  3327  0F8A  00A5               	movwf	strcpy@cp
  3328  0F8B                     l2683:	
  3329  0F8B  0825               	movf	strcpy@cp,w
  3330  0F8C  0086               	movwf	6
  3331  0F8D  0187               	clrf	7
  3332  0F8E  0821               	movf	strcpy@from,w
  3333  0F8F  0084               	movwf	4
  3334  0F90  0822               	movf	strcpy@from+1,w
  3335  0F91  0085               	movwf	5
  3336  0F92  0800               	movf	0,w	;code access
  3337  0F93  3FC0               	movwi [0]fsr1
  3338  0F94  0889               	movf	9,f
  3339  0F95  1903               	btfsc	3,2
  3340  0F96  0008               	return
  3341  0F97  3001               	movlw	1
  3342  0F98  00A3               	movwf	??_strcpy
  3343  0F99  0823               	movf	??_strcpy,w
  3344  0F9A  07A5               	addwf	strcpy@cp,f
  3345  0F9B  3001               	movlw	1
  3346  0F9C  07A1               	addwf	strcpy@from,f
  3347  0F9D  3000               	movlw	0
  3348  0F9E  3DA2               	addwfc	strcpy@from+1,f
  3349  0F9F  2F8B               	goto	l2683
  3350  0FA0                     __end_of_strcpy:	
  3351                           ;	Return value of _strcpy is never used
  3352                           
  3353                           
  3354                           	psect	text2
  3355  0704                     __ptext2:	
  3356 ;; *************** function _nrf24l01Init *****************
  3357 ;; Defined at:
  3358 ;;		line 387 in file "nrf24l01.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  isReciever      1    wreg     unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  isReciever      1   16[BANK0 ] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;Total ram usage:        3 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:   11
  3379 ;; This function calls:
  3380 ;;		_nrf24l01CEHigh
  3381 ;;		_nrf24l01CELow
  3382 ;;		_nrf24l01InitRegisters
  3383 ;;		_nrf24l01InterfaceInit
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _nrf24l01Init
  3391  0704                     _nrf24l01Init:	
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in _nrf24l01Init: [wreg+status,2+status,0+pclath+cstack]
  3395                           ;nrf24l01Init@isReciever stored from wreg
  3396  0704  0020               	movlb	0	; select bank0
  3397  0705  00B0               	movwf	nrf24l01Init@isReciever
  3398                           
  3399                           ;nrf24l01.c: 390: nrf24l01InterfaceInit();
  3400  0706  3187  27E3  3187   	fcall	_nrf24l01InterfaceInit
  3401                           
  3402                           ;nrf24l01.c: 395: nrf24l01CELow();
  3403  0709  318E  26AD  3187   	fcall	_nrf24l01CELow
  3404                           
  3405                           ;nrf24l01.c: 397: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3406  070C  3002               	movlw	2
  3407  070D  0020               	movlb	0	; select bank0
  3408  070E  00AF               	movwf	??_nrf24l01Init+1
  3409  070F  3004               	movlw	4
  3410  0710  00AE               	movwf	??_nrf24l01Init
  3411  0711  30BA               	movlw	186
  3412  0712                     u1607:	
  3413  0712  0B89               	decfsz	9,f
  3414  0713  2F12               	goto	u1607
  3415  0714  0BAE               	decfsz	??_nrf24l01Init,f
  3416  0715  2F12               	goto	u1607
  3417  0716  0BAF               	decfsz	??_nrf24l01Init+1,f
  3418  0717  2F12               	goto	u1607
  3419  0718  0000               	nop
  3420                           
  3421                           ;nrf24l01.c: 399: nrf24l01InitRegisters(isReciever);
  3422  0719  0020               	movlb	0	; select bank0
  3423  071A  0830               	movf	nrf24l01Init@isReciever,w
  3424  071B  3181  213D  3187   	fcall	_nrf24l01InitRegisters
  3425                           
  3426                           ;nrf24l01.c: 401: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  3427  071E  3002               	movlw	2
  3428  071F  0020               	movlb	0	; select bank0
  3429  0720  00AF               	movwf	??_nrf24l01Init+1
  3430  0721  3004               	movlw	4
  3431  0722  00AE               	movwf	??_nrf24l01Init
  3432  0723  30BA               	movlw	186
  3433  0724                     u1617:	
  3434  0724  0B89               	decfsz	9,f
  3435  0725  2F24               	goto	u1617
  3436  0726  0BAE               	decfsz	??_nrf24l01Init,f
  3437  0727  2F24               	goto	u1617
  3438  0728  0BAF               	decfsz	??_nrf24l01Init+1,f
  3439  0729  2F24               	goto	u1617
  3440  072A  0000               	nop
  3441                           
  3442                           ;nrf24l01.c: 403: nrf24l01CEHigh();
  3443  072B  318E  26AA         	fcall	_nrf24l01CEHigh
  3444  072D  0008               	return
  3445  072E                     __end_of_nrf24l01Init:	
  3446                           
  3447                           	psect	text3
  3448  07E3                     __ptext3:	
  3449 ;; *************** function _nrf24l01InterfaceInit *****************
  3450 ;; Defined at:
  3451 ;;		line 28 in file "interface.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    7
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_nrf24l01Init
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function _nrf24l01InterfaceInit
  3481  07E3                     _nrf24l01InterfaceInit:	
  3482                           
  3483                           ;interface.c: 30: TRISAbits.TRISA0 = 0;
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _nrf24l01InterfaceInit: [wreg+status,2+status,0]
  3487  07E3  0021               	movlb	1	; select bank1
  3488  07E4  100C               	bcf	12,0	;volatile
  3489                           
  3490                           ;interface.c: 31: TRISAbits.TRISA1 = 0;
  3491  07E5  108C               	bcf	12,1	;volatile
  3492                           
  3493                           ;interface.c: 33: TRISCbits.TRISC1 = 1;
  3494  07E6  148E               	bsf	14,1	;volatile
  3495                           
  3496                           ;interface.c: 34: TRISCbits.TRISC2 = 0;
  3497  07E7  110E               	bcf	14,2	;volatile
  3498                           
  3499                           ;interface.c: 35: TRISCbits.TRISC0 = 0;
  3500  07E8  100E               	bcf	14,0	;volatile
  3501                           
  3502                           ;interface.c: 37: SSP1CON1bits.SSPEN = 0;
  3503  07E9  0024               	movlb	4	; select bank4
  3504  07EA  1295               	bcf	21,5	;volatile
  3505                           
  3506                           ;interface.c: 39: RC1PPSbits.RC1PPS = 0b10001;
  3507  07EB  003D               	movlb	29	; select bank29
  3508  07EC  0821               	movf	33,w	;volatile
  3509  07ED  39E0               	andlw	-32
  3510  07EE  3811               	iorlw	17
  3511  07EF  00A1               	movwf	33	;volatile
  3512                           
  3513                           ;interface.c: 40: RC2PPSbits.RC2PPS = 0b11001;
  3514  07F0  0822               	movf	34,w	;volatile
  3515  07F1  39E0               	andlw	-32
  3516  07F2  3819               	iorlw	25
  3517  07F3  00A2               	movwf	34	;volatile
  3518                           
  3519                           ;interface.c: 41: RC0PPSbits.RC0PPS = 0b11000;
  3520  07F4  0820               	movf	32,w	;volatile
  3521  07F5  39E0               	andlw	-32
  3522  07F6  3818               	iorlw	24
  3523  07F7  00A0               	movwf	32	;volatile
  3524                           
  3525                           ;interface.c: 43: SSP1CON1bits.CKP = 0;
  3526  07F8  0024               	movlb	4	; select bank4
  3527  07F9  1215               	bcf	21,4	;volatile
  3528                           
  3529                           ;interface.c: 44: SSP1STATbits.CKE = 1;
  3530  07FA  1714               	bsf	20,6	;volatile
  3531                           
  3532                           ;interface.c: 45: SSP1CON1bits.SSPM = 0b0000;
  3533  07FB  30F0               	movlw	-16
  3534  07FC  0595               	andwf	21,f	;volatile
  3535                           
  3536                           ;interface.c: 47: SSP1CON1bits.SSPEN = 1;
  3537  07FD  1695               	bsf	21,5	;volatile
  3538  07FE  0008               	return
  3539  07FF                     __end_of_nrf24l01InterfaceInit:	
  3540                           
  3541                           	psect	text4
  3542  013D                     __ptext4:	
  3543 ;; *************** function _nrf24l01InitRegisters *****************
  3544 ;; Defined at:
  3545 ;;		line 302 in file "nrf24l01.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  isReciever      1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  isReciever      1    0[COMMON] unsigned char 
  3550 ;;  config          1   13[BANK0 ] struct .
  3551 ;;  DynPD           1   12[BANK0 ] struct .
  3552 ;;  enAA            1   11[BANK0 ] struct .
  3553 ;;  enRXAddr        1   10[BANK0 ] struct .
  3554 ;;  status          1    9[BANK0 ] struct .
  3555 ;;  rfSetup         1    8[BANK0 ] struct .
  3556 ;;  feature         1    7[BANK0 ] struct .
  3557 ;;  setupAW         1    6[BANK0 ] struct .
  3558 ;;  channel         1    5[BANK0 ] struct .
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;Total ram usage:       10 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:   10
  3575 ;; This function calls:
  3576 ;;		_nrf24l01Send
  3577 ;; This function is called by:
  3578 ;;		_nrf24l01Init
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _nrf24l01InitRegisters
  3584  013D                     _nrf24l01InitRegisters:	
  3585                           
  3586                           ;nrf24l01.c: 304: n_CONFIG_t config;;nrf24l01.c: 306: config.PWR_UP = 0;
  3587                           
  3588                           ;incstack = 0
  3589                           ; Regs used in _nrf24l01InitRegisters: [wreg+status,2+status,0+pclath+cstack]
  3590  013D  0020               	movlb	0	; select bank0
  3591  013E  10AD               	bcf	nrf24l01InitRegisters@config,1
  3592                           
  3593                           ;nrf24l01.c: 307: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3594  013F  082D               	movf	nrf24l01InitRegisters@config,w
  3595  0140  00A4               	movwf	??_nrf24l01InitRegisters
  3596  0141  0824               	movf	??_nrf24l01InitRegisters,w
  3597  0142  00A1               	movwf	nrf24l01Send@data
  3598  0143  3020               	movlw	32
  3599  0144  318F  27E0  3181   	fcall	_nrf24l01Send
  3600                           
  3601                           ;nrf24l01.c: 309: n_SETUP_AW_t setupAW;;nrf24l01.c: 310: setupAW.byte = 0x00;
  3602  0147  0020               	movlb	0	; select bank0
  3603  0148  01A6               	clrf	nrf24l01InitRegisters@setupAW
  3604                           
  3605                           ;nrf24l01.c: 311: setupAW.AW = 0b11;
  3606  0149  3003               	movlw	3
  3607  014A  04A6               	iorwf	nrf24l01InitRegisters@setupAW,f
  3608                           
  3609                           ;nrf24l01.c: 312: nrf24l01Send(0b00100000 | 0x02, setupAW.byte);
  3610  014B  0826               	movf	nrf24l01InitRegisters@setupAW,w
  3611  014C  00A4               	movwf	??_nrf24l01InitRegisters
  3612  014D  0824               	movf	??_nrf24l01InitRegisters,w
  3613  014E  00A1               	movwf	nrf24l01Send@data
  3614  014F  3022               	movlw	34
  3615  0150  318F  27E0  3181   	fcall	_nrf24l01Send
  3616                           
  3617                           ;nrf24l01.c: 315: n_RF_CH_t channel;;nrf24l01.c: 316: channel.RF_CH = 2;
  3618  0153  0020               	movlb	0	; select bank0
  3619  0154  0825               	movf	nrf24l01InitRegisters@channel,w
  3620  0155  3980               	andlw	-128
  3621  0156  3802               	iorlw	2
  3622  0157  00A5               	movwf	nrf24l01InitRegisters@channel
  3623                           
  3624                           ;nrf24l01.c: 317: nrf24l01Send(0b00100000 | 0x05, channel.byte);
  3625  0158  0825               	movf	nrf24l01InitRegisters@channel,w
  3626  0159  00A4               	movwf	??_nrf24l01InitRegisters
  3627  015A  0824               	movf	??_nrf24l01InitRegisters,w
  3628  015B  00A1               	movwf	nrf24l01Send@data
  3629  015C  3025               	movlw	37
  3630  015D  318F  27E0  3181   	fcall	_nrf24l01Send
  3631                           
  3632                           ;nrf24l01.c: 320: n_RF_SETUP_t rfSetup;;nrf24l01.c: 321: rfSetup.byte = 0x00;
  3633  0160  0020               	movlb	0	; select bank0
  3634  0161  01A8               	clrf	nrf24l01InitRegisters@rfSetup
  3635                           
  3636                           ;nrf24l01.c: 322: rfSetup.RF_DR_LOW = 0;
  3637  0162  12A8               	bcf	nrf24l01InitRegisters@rfSetup,5
  3638                           
  3639                           ;nrf24l01.c: 323: rfSetup.RF_DR_HIGH = 1;
  3640  0163  15A8               	bsf	nrf24l01InitRegisters@rfSetup,3
  3641                           
  3642                           ;nrf24l01.c: 324: rfSetup.RF_PWR = 3;
  3643  0164  3006               	movlw	6
  3644  0165  04A8               	iorwf	nrf24l01InitRegisters@rfSetup,f
  3645                           
  3646                           ;nrf24l01.c: 325: nrf24l01Send(0b00100000 | 0x06, rfSetup.byte);
  3647  0166  0828               	movf	nrf24l01InitRegisters@rfSetup,w
  3648  0167  00A4               	movwf	??_nrf24l01InitRegisters
  3649  0168  0824               	movf	??_nrf24l01InitRegisters,w
  3650  0169  00A1               	movwf	nrf24l01Send@data
  3651  016A  3026               	movlw	38
  3652  016B  318F  27E0  3181   	fcall	_nrf24l01Send
  3653                           
  3654                           ;nrf24l01.c: 328: n_EN_RXADDR_t enRXAddr;;nrf24l01.c: 329: enRXAddr.ERX_P0 = 1;
  3655  016E  0020               	movlb	0	; select bank0
  3656  016F  142A               	bsf	nrf24l01InitRegisters@enRXAddr,0
  3657                           
  3658                           ;nrf24l01.c: 330: enRXAddr.ERX_P1 = 1;
  3659  0170  14AA               	bsf	nrf24l01InitRegisters@enRXAddr,1
  3660                           
  3661                           ;nrf24l01.c: 331: enRXAddr.ERX_P2 = 1;
  3662  0171  152A               	bsf	nrf24l01InitRegisters@enRXAddr,2
  3663                           
  3664                           ;nrf24l01.c: 332: enRXAddr.ERX_P3 = 1;
  3665  0172  15AA               	bsf	nrf24l01InitRegisters@enRXAddr,3
  3666                           
  3667                           ;nrf24l01.c: 333: enRXAddr.ERX_P4 = 1;
  3668  0173  162A               	bsf	nrf24l01InitRegisters@enRXAddr,4
  3669                           
  3670                           ;nrf24l01.c: 334: enRXAddr.ERX_P5 = 1;
  3671  0174  16AA               	bsf	nrf24l01InitRegisters@enRXAddr,5
  3672                           
  3673                           ;nrf24l01.c: 335: nrf24l01Send(0b00100000 | 0x02, enRXAddr.byte);
  3674  0175  082A               	movf	nrf24l01InitRegisters@enRXAddr,w
  3675  0176  00A4               	movwf	??_nrf24l01InitRegisters
  3676  0177  0824               	movf	??_nrf24l01InitRegisters,w
  3677  0178  00A1               	movwf	nrf24l01Send@data
  3678  0179  3022               	movlw	34
  3679  017A  318F  27E0  3181   	fcall	_nrf24l01Send
  3680                           
  3681                           ;nrf24l01.c: 338: n_EN_AA_t enAA;;nrf24l01.c: 339: enAA.byte = nrf24l01Send(0b00000000 |
      +                           0x01, 0);
  3682  017D  0020               	movlb	0	; select bank0
  3683  017E  01A1               	clrf	nrf24l01Send@data
  3684  017F  3001               	movlw	1
  3685  0180  318F  27E0  3181   	fcall	_nrf24l01Send
  3686  0183  0020               	movlb	0	; select bank0
  3687  0184  00A4               	movwf	??_nrf24l01InitRegisters
  3688  0185  0824               	movf	??_nrf24l01InitRegisters,w
  3689  0186  00AB               	movwf	nrf24l01InitRegisters@enAA
  3690                           
  3691                           ;nrf24l01.c: 340: enAA.ENAA_P0 = 0;
  3692  0187  102B               	bcf	nrf24l01InitRegisters@enAA,0
  3693                           
  3694                           ;nrf24l01.c: 341: enAA.ENAA_P1 = 0;
  3695  0188  10AB               	bcf	nrf24l01InitRegisters@enAA,1
  3696                           
  3697                           ;nrf24l01.c: 342: enAA.ENAA_P2 = 0;
  3698  0189  112B               	bcf	nrf24l01InitRegisters@enAA,2
  3699                           
  3700                           ;nrf24l01.c: 343: enAA.ENAA_P3 = 0;
  3701  018A  11AB               	bcf	nrf24l01InitRegisters@enAA,3
  3702                           
  3703                           ;nrf24l01.c: 344: enAA.ENAA_P4 = 0;
  3704  018B  122B               	bcf	nrf24l01InitRegisters@enAA,4
  3705                           
  3706                           ;nrf24l01.c: 345: enAA.ENAA_P5 = 0;
  3707  018C  12AB               	bcf	nrf24l01InitRegisters@enAA,5
  3708                           
  3709                           ;nrf24l01.c: 346: nrf24l01Send(0b00100000 | 0x01, enAA.byte);
  3710  018D  082B               	movf	nrf24l01InitRegisters@enAA,w
  3711  018E  00A4               	movwf	??_nrf24l01InitRegisters
  3712  018F  0824               	movf	??_nrf24l01InitRegisters,w
  3713  0190  00A1               	movwf	nrf24l01Send@data
  3714  0191  3021               	movlw	33
  3715  0192  318F  27E0  3181   	fcall	_nrf24l01Send
  3716                           
  3717                           ;nrf24l01.c: 350: n_FEATURE_t feature;;nrf24l01.c: 351: feature.byte = nrf24l01Send(0b00
      +                          000000 | 0x1D, 0);
  3718  0195  0020               	movlb	0	; select bank0
  3719  0196  01A1               	clrf	nrf24l01Send@data
  3720  0197  301D               	movlw	29
  3721  0198  318F  27E0  3181   	fcall	_nrf24l01Send
  3722  019B  0020               	movlb	0	; select bank0
  3723  019C  00A4               	movwf	??_nrf24l01InitRegisters
  3724  019D  0824               	movf	??_nrf24l01InitRegisters,w
  3725  019E  00A7               	movwf	nrf24l01InitRegisters@feature
  3726                           
  3727                           ;nrf24l01.c: 352: feature.EN_DPL = 1;
  3728  019F  1527               	bsf	nrf24l01InitRegisters@feature,2
  3729                           
  3730                           ;nrf24l01.c: 353: feature.EN_DYN_ACK = 1;
  3731  01A0  1427               	bsf	nrf24l01InitRegisters@feature,0
  3732                           
  3733                           ;nrf24l01.c: 354: nrf24l01Send(0b00100000 | 0x1D, feature.byte);
  3734  01A1  0827               	movf	nrf24l01InitRegisters@feature,w
  3735  01A2  00A4               	movwf	??_nrf24l01InitRegisters
  3736  01A3  0824               	movf	??_nrf24l01InitRegisters,w
  3737  01A4  00A1               	movwf	nrf24l01Send@data
  3738  01A5  303D               	movlw	61
  3739  01A6  318F  27E0  3181   	fcall	_nrf24l01Send
  3740                           
  3741                           ;nrf24l01.c: 356: n_DYNPD_t DynPD;;nrf24l01.c: 357: DynPD.byte = nrf24l01Send(0b00000000
      +                           | 0x1C, 0);
  3742  01A9  0020               	movlb	0	; select bank0
  3743  01AA  01A1               	clrf	nrf24l01Send@data
  3744  01AB  301C               	movlw	28
  3745  01AC  318F  27E0  3181   	fcall	_nrf24l01Send
  3746  01AF  0020               	movlb	0	; select bank0
  3747  01B0  00A4               	movwf	??_nrf24l01InitRegisters
  3748  01B1  0824               	movf	??_nrf24l01InitRegisters,w
  3749  01B2  00AC               	movwf	nrf24l01InitRegisters@DynPD
  3750                           
  3751                           ;nrf24l01.c: 358: DynPD.DPL_P0 = 1;
  3752  01B3  142C               	bsf	nrf24l01InitRegisters@DynPD,0
  3753                           
  3754                           ;nrf24l01.c: 359: DynPD.DPL_P1 = 1;
  3755  01B4  14AC               	bsf	nrf24l01InitRegisters@DynPD,1
  3756                           
  3757                           ;nrf24l01.c: 360: DynPD.DPL_P2 = 1;
  3758  01B5  152C               	bsf	nrf24l01InitRegisters@DynPD,2
  3759                           
  3760                           ;nrf24l01.c: 361: DynPD.DPL_P3 = 1;
  3761  01B6  15AC               	bsf	nrf24l01InitRegisters@DynPD,3
  3762                           
  3763                           ;nrf24l01.c: 362: DynPD.DPL_P4 = 1;
  3764  01B7  162C               	bsf	nrf24l01InitRegisters@DynPD,4
  3765                           
  3766                           ;nrf24l01.c: 363: DynPD.DPL_P5 = 1;
  3767  01B8  16AC               	bsf	nrf24l01InitRegisters@DynPD,5
  3768                           
  3769                           ;nrf24l01.c: 364: nrf24l01Send(0b00100000 | 0x1C, DynPD.byte);
  3770  01B9  082C               	movf	nrf24l01InitRegisters@DynPD,w
  3771  01BA  00A4               	movwf	??_nrf24l01InitRegisters
  3772  01BB  0824               	movf	??_nrf24l01InitRegisters,w
  3773  01BC  00A1               	movwf	nrf24l01Send@data
  3774  01BD  303C               	movlw	60
  3775  01BE  318F  27E0  3181   	fcall	_nrf24l01Send
  3776                           
  3777                           ;nrf24l01.c: 367: n_STATUS_t status;;nrf24l01.c: 368: status.byte = 0x00;
  3778  01C1  0020               	movlb	0	; select bank0
  3779  01C2  01A9               	clrf	nrf24l01InitRegisters@status
  3780                           
  3781                           ;nrf24l01.c: 369: status.RX_DR = 1;
  3782  01C3  1729               	bsf	nrf24l01InitRegisters@status,6
  3783                           
  3784                           ;nrf24l01.c: 370: status.TX_DS = 1;
  3785  01C4  16A9               	bsf	nrf24l01InitRegisters@status,5
  3786                           
  3787                           ;nrf24l01.c: 371: status.MAX_RT = 1;
  3788  01C5  1629               	bsf	nrf24l01InitRegisters@status,4
  3789                           
  3790                           ;nrf24l01.c: 372: nrf24l01Send(0b00100000 | 0x07, status.byte);
  3791  01C6  0829               	movf	nrf24l01InitRegisters@status,w
  3792  01C7  00A4               	movwf	??_nrf24l01InitRegisters
  3793  01C8  0824               	movf	??_nrf24l01InitRegisters,w
  3794  01C9  00A1               	movwf	nrf24l01Send@data
  3795  01CA  3027               	movlw	39
  3796  01CB  318F  27E0  3181   	fcall	_nrf24l01Send
  3797                           
  3798                           ;nrf24l01.c: 375: nrf24l01Send(0b11100001, 0);
  3799  01CE  0020               	movlb	0	; select bank0
  3800  01CF  01A1               	clrf	nrf24l01Send@data
  3801  01D0  30E1               	movlw	225
  3802  01D1  318F  27E0  3181   	fcall	_nrf24l01Send
  3803                           
  3804                           ;nrf24l01.c: 376: nrf24l01Send(0b11100010, 0);
  3805  01D4  0020               	movlb	0	; select bank0
  3806  01D5  01A1               	clrf	nrf24l01Send@data
  3807  01D6  30E2               	movlw	226
  3808  01D7  318F  27E0  3181   	fcall	_nrf24l01Send
  3809                           
  3810                           ;nrf24l01.c: 379: config.PRIM_RX = 1;
  3811  01DA  0020               	movlb	0	; select bank0
  3812  01DB  142D               	bsf	nrf24l01InitRegisters@config,0
  3813                           
  3814                           ;nrf24l01.c: 380: config.EN_CRC = 1;
  3815  01DC  15AD               	bsf	nrf24l01InitRegisters@config,3
  3816                           
  3817                           ;nrf24l01.c: 381: config.CRCO = 1;
  3818  01DD  152D               	bsf	nrf24l01InitRegisters@config,2
  3819                           
  3820                           ;nrf24l01.c: 382: config.PWR_UP = 1;
  3821  01DE  14AD               	bsf	nrf24l01InitRegisters@config,1
  3822                           
  3823                           ;nrf24l01.c: 383: nrf24l01Send(0b00100000 | 0x00, config.byte);
  3824  01DF  082D               	movf	nrf24l01InitRegisters@config,w
  3825  01E0  00A4               	movwf	??_nrf24l01InitRegisters
  3826  01E1  0824               	movf	??_nrf24l01InitRegisters,w
  3827  01E2  00A1               	movwf	nrf24l01Send@data
  3828  01E3  3020               	movlw	32
  3829  01E4  318F  27E0         	fcall	_nrf24l01Send
  3830  01E6  0008               	return
  3831  01E7                     __end_of_nrf24l01InitRegisters:	
  3832                           
  3833                           	psect	text5
  3834  0029                     __ptext5:	
  3835 ;; *************** function _loop *****************
  3836 ;; Defined at:
  3837 ;;		line 99 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  packet         33    1[BANK1 ] struct .
  3842 ;;  rfSetup         1    0[BANK1 ] struct .
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Totals:         0       4      34       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;Total ram usage:       38 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:   12
  3859 ;; This function calls:
  3860 ;;		_checkTXPower
  3861 ;;		_getADCValue
  3862 ;;		_nrf24l01Send
  3863 ;;		_nrf24l01SendPacket
  3864 ;;		_setMessage
  3865 ;;		_sleep
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _loop
  3873  0029                     _loop:	
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3877  0029  0064               	clrwdt	;# 
  3878                           
  3879                           ;main.c: 104: nrf24l01Packet_t packet;;main.c: 106: setMessage(&packet, "DBG", counter);
  3880  002A  3036               	movlw	low (STR_3| (0+32768))
  3881  002B  0020               	movlb	0	; select bank0
  3882  002C  00BD               	movwf	setMessage@topic
  3883  002D  3090               	movlw	high (STR_3| (0+32768))
  3884  002E  00BE               	movwf	setMessage@topic+1
  3885  002F  0021               	movlb	1	; select bank1
  3886  0030  0866               	movf	(_counter+3)^(0+128),w
  3887  0031  0020               	movlb	0	; select bank0
  3888  0032  00C2               	movwf	setMessage@value+3
  3889  0033  0021               	movlb	1	; select bank1
  3890  0034  0865               	movf	(_counter+2)^(0+128),w
  3891  0035  0020               	movlb	0	; select bank0
  3892  0036  00C1               	movwf	setMessage@value+2
  3893  0037  0021               	movlb	1	; select bank1
  3894  0038  0864               	movf	(_counter+1)^(0+128),w
  3895  0039  0020               	movlb	0	; select bank0
  3896  003A  00C0               	movwf	setMessage@value+1
  3897  003B  0021               	movlb	1	; select bank1
  3898  003C  0863               	movf	_counter^(0+128),w
  3899  003D  0020               	movlb	0	; select bank0
  3900  003E  00BF               	movwf	setMessage@value
  3901  003F  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  3902  0040  3184  2465  3180   	fcall	_setMessage
  3903                           
  3904                           ;main.c: 107: packet.packetData.byte = 0;
  3905  0043  0021               	movlb	1	; select bank1
  3906  0044  01A1               	clrf	loop@packet^(0+128)
  3907                           
  3908                           ;main.c: 108: packet.packetData.ACKRequest = 0;
  3909  0045  1121               	bcf	loop@packet^(0+128),2
  3910                           
  3911                           ;main.c: 109: nrf24l01SendPacket(&packet);
  3912  0046  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  3913  0047  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  3914                           
  3915                           ;main.c: 110: checkTXPower();
  3916  004A  318E  26F2  3180   	fcall	_checkTXPower
  3917                           
  3918                           ;main.c: 111: sleep();
  3919  004D  318E  26E0  3180   	fcall	_sleep
  3920                           
  3921                           ;main.c: 113: setMessage(&packet, "VBAT", getADCValue(0b000100, 2526));
  3922  0050  3028               	movlw	low (STR_4| (0+32768))
  3923  0051  0020               	movlb	0	; select bank0
  3924  0052  00BD               	movwf	setMessage@topic
  3925  0053  3090               	movlw	high (STR_4| (0+32768))
  3926  0054  00BE               	movwf	setMessage@topic+1
  3927  0055  3000               	movlw	0
  3928  0056  00B2               	movwf	getADCValue@divider+3
  3929  0057  3000               	movlw	0
  3930  0058  00B1               	movwf	getADCValue@divider+2
  3931  0059  3009               	movlw	9
  3932  005A  00B0               	movwf	getADCValue@divider+1
  3933  005B  30DE               	movlw	222
  3934  005C  00AF               	movwf	getADCValue@divider
  3935  005D  3004               	movlw	4
  3936  005E  3183  2384  3180   	fcall	_getADCValue
  3937  0061  0020               	movlb	0	; select bank0
  3938  0062  0832               	movf	?_getADCValue+3,w
  3939  0063  00C2               	movwf	setMessage@value+3
  3940  0064  0831               	movf	?_getADCValue+2,w
  3941  0065  00C1               	movwf	setMessage@value+2
  3942  0066  0830               	movf	?_getADCValue+1,w
  3943  0067  00C0               	movwf	setMessage@value+1
  3944  0068  082F               	movf	?_getADCValue,w
  3945  0069  00BF               	movwf	setMessage@value
  3946  006A  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  3947  006B  3184  2465  3180   	fcall	_setMessage
  3948                           
  3949                           ;main.c: 114: packet.packetData.byte = 0;
  3950  006E  0021               	movlb	1	; select bank1
  3951  006F  01A1               	clrf	loop@packet^(0+128)
  3952                           
  3953                           ;main.c: 115: packet.packetData.ACKRequest = 1;
  3954  0070  1521               	bsf	loop@packet^(0+128),2
  3955                           
  3956                           ;main.c: 116: nrf24l01SendPacket(&packet);
  3957  0071  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  3958  0072  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  3959                           
  3960                           ;main.c: 117: checkTXPower();
  3961  0075  318E  26F2  3180   	fcall	_checkTXPower
  3962                           
  3963                           ;main.c: 118: sleep();
  3964  0078  318E  26E0  3180   	fcall	_sleep
  3965                           
  3966                           ;main.c: 121: setMessage(&packet, "ANC3", getADCValue(0b010011, 2500));
  3967  007B  301E               	movlw	low (STR_5| (0+32768))
  3968  007C  0020               	movlb	0	; select bank0
  3969  007D  00BD               	movwf	setMessage@topic
  3970  007E  3090               	movlw	high (STR_5| (0+32768))
  3971  007F  00BE               	movwf	setMessage@topic+1
  3972  0080  3000               	movlw	0
  3973  0081  00B2               	movwf	getADCValue@divider+3
  3974  0082  3000               	movlw	0
  3975  0083  00B1               	movwf	getADCValue@divider+2
  3976  0084  3009               	movlw	9
  3977  0085  00B0               	movwf	getADCValue@divider+1
  3978  0086  30C4               	movlw	196
  3979  0087  00AF               	movwf	getADCValue@divider
  3980  0088  3013               	movlw	19
  3981  0089  3183  2384  3180   	fcall	_getADCValue
  3982  008C  0020               	movlb	0	; select bank0
  3983  008D  0832               	movf	?_getADCValue+3,w
  3984  008E  00C2               	movwf	setMessage@value+3
  3985  008F  0831               	movf	?_getADCValue+2,w
  3986  0090  00C1               	movwf	setMessage@value+2
  3987  0091  0830               	movf	?_getADCValue+1,w
  3988  0092  00C0               	movwf	setMessage@value+1
  3989  0093  082F               	movf	?_getADCValue,w
  3990  0094  00BF               	movwf	setMessage@value
  3991  0095  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  3992  0096  3184  2465  3180   	fcall	_setMessage
  3993                           
  3994                           ;main.c: 122: packet.packetData.byte = 0;
  3995  0099  0021               	movlb	1	; select bank1
  3996  009A  01A1               	clrf	loop@packet^(0+128)
  3997                           
  3998                           ;main.c: 123: packet.packetData.ACKRequest = 1;
  3999  009B  1521               	bsf	loop@packet^(0+128),2
  4000                           
  4001                           ;main.c: 124: nrf24l01SendPacket(&packet);
  4002  009C  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4003  009D  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  4004                           
  4005                           ;main.c: 125: checkTXPower();
  4006  00A0  318E  26F2  3180   	fcall	_checkTXPower
  4007                           
  4008                           ;main.c: 126: sleep();
  4009  00A3  318E  26E0  3180   	fcall	_sleep
  4010                           
  4011                           ;main.c: 128: setMessage(&packet, "FVR", getADCValue(0b111111, 2500));
  4012  00A6  303A               	movlw	low (STR_6| (0+32768))
  4013  00A7  0020               	movlb	0	; select bank0
  4014  00A8  00BD               	movwf	setMessage@topic
  4015  00A9  3090               	movlw	high (STR_6| (0+32768))
  4016  00AA  00BE               	movwf	setMessage@topic+1
  4017  00AB  3000               	movlw	0
  4018  00AC  00B2               	movwf	getADCValue@divider+3
  4019  00AD  3000               	movlw	0
  4020  00AE  00B1               	movwf	getADCValue@divider+2
  4021  00AF  3009               	movlw	9
  4022  00B0  00B0               	movwf	getADCValue@divider+1
  4023  00B1  30C4               	movlw	196
  4024  00B2  00AF               	movwf	getADCValue@divider
  4025  00B3  303F               	movlw	63
  4026  00B4  3183  2384  3180   	fcall	_getADCValue
  4027  00B7  0020               	movlb	0	; select bank0
  4028  00B8  0832               	movf	?_getADCValue+3,w
  4029  00B9  00C2               	movwf	setMessage@value+3
  4030  00BA  0831               	movf	?_getADCValue+2,w
  4031  00BB  00C1               	movwf	setMessage@value+2
  4032  00BC  0830               	movf	?_getADCValue+1,w
  4033  00BD  00C0               	movwf	setMessage@value+1
  4034  00BE  082F               	movf	?_getADCValue,w
  4035  00BF  00BF               	movwf	setMessage@value
  4036  00C0  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4037  00C1  3184  2465  3180   	fcall	_setMessage
  4038                           
  4039                           ;main.c: 129: packet.packetData.byte = 0;
  4040  00C4  0021               	movlb	1	; select bank1
  4041  00C5  01A1               	clrf	loop@packet^(0+128)
  4042                           
  4043                           ;main.c: 130: packet.packetData.ACKRequest = 1;
  4044  00C6  1521               	bsf	loop@packet^(0+128),2
  4045                           
  4046                           ;main.c: 131: nrf24l01SendPacket(&packet);
  4047  00C7  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4048  00C8  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  4049                           
  4050                           ;main.c: 132: checkTXPower();
  4051  00CB  318E  26F2  3180   	fcall	_checkTXPower
  4052                           
  4053                           ;main.c: 133: sleep();
  4054  00CE  318E  26E0  3180   	fcall	_sleep
  4055                           
  4056                           ;main.c: 135: setMessage(&packet, "TEMP", getADCValue(0b111101, 162) - 40000);
  4057  00D1  3023               	movlw	low (STR_7| (0+32768))
  4058  00D2  0020               	movlb	0	; select bank0
  4059  00D3  00BD               	movwf	setMessage@topic
  4060  00D4  3090               	movlw	high (STR_7| (0+32768))
  4061  00D5  00BE               	movwf	setMessage@topic+1
  4062  00D6  30C0               	movlw	192
  4063  00D7  00D4               	movwf	??_loop
  4064  00D8  3063               	movlw	99
  4065  00D9  00D5               	movwf	??_loop+1
  4066  00DA  30FF               	movlw	255
  4067  00DB  00D6               	movwf	??_loop+2
  4068  00DC  30FF               	movlw	255
  4069  00DD  00D7               	movwf	??_loop+3
  4070  00DE  3000               	movlw	0
  4071  00DF  00B2               	movwf	getADCValue@divider+3
  4072  00E0  3000               	movlw	0
  4073  00E1  00B1               	movwf	getADCValue@divider+2
  4074  00E2  3000               	movlw	0
  4075  00E3  00B0               	movwf	getADCValue@divider+1
  4076  00E4  30A2               	movlw	162
  4077  00E5  00AF               	movwf	getADCValue@divider
  4078  00E6  303D               	movlw	61
  4079  00E7  3183  2384  3180   	fcall	_getADCValue
  4080  00EA  0020               	movlb	0	; select bank0
  4081  00EB  082F               	movf	?_getADCValue,w
  4082  00EC  07D4               	addwf	??_loop,f
  4083  00ED  0830               	movf	?_getADCValue+1,w
  4084  00EE  3DD5               	addwfc	??_loop+1,f
  4085  00EF  0831               	movf	?_getADCValue+2,w
  4086  00F0  3DD6               	addwfc	??_loop+2,f
  4087  00F1  0832               	movf	?_getADCValue+3,w
  4088  00F2  3DD7               	addwfc	??_loop+3,f
  4089  00F3  0857               	movf	??_loop+3,w
  4090  00F4  00C2               	movwf	setMessage@value+3
  4091  00F5  0856               	movf	??_loop+2,w
  4092  00F6  00C1               	movwf	setMessage@value+2
  4093  00F7  0855               	movf	??_loop+1,w
  4094  00F8  00C0               	movwf	setMessage@value+1
  4095  00F9  0854               	movf	??_loop,w
  4096  00FA  00BF               	movwf	setMessage@value
  4097  00FB  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4098  00FC  3184  2465  3180   	fcall	_setMessage
  4099                           
  4100                           ;main.c: 136: packet.packetData.byte = 0;
  4101  00FF  0021               	movlb	1	; select bank1
  4102  0100  01A1               	clrf	loop@packet^(0+128)
  4103                           
  4104                           ;main.c: 137: packet.packetData.ACKRequest = 1;
  4105  0101  1521               	bsf	loop@packet^(0+128),2
  4106                           
  4107                           ;main.c: 138: nrf24l01SendPacket(&packet);
  4108  0102  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4109  0103  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  4110                           
  4111                           ;main.c: 139: checkTXPower();
  4112  0106  318E  26F2  3180   	fcall	_checkTXPower
  4113                           
  4114                           ;main.c: 140: sleep();
  4115  0109  318E  26E0  3180   	fcall	_sleep
  4116                           
  4117                           ;main.c: 142: n_RF_SETUP_t rfSetup;;main.c: 143: rfSetup.byte = nrf24l01Send(0b00000000 
      +                          | 0x06, 0);
  4118  010C  0020               	movlb	0	; select bank0
  4119  010D  01A1               	clrf	nrf24l01Send@data
  4120  010E  3006               	movlw	6
  4121  010F  318F  27E0  3180   	fcall	_nrf24l01Send
  4122  0112  0020               	movlb	0	; select bank0
  4123  0113  00D4               	movwf	??_loop
  4124  0114  0854               	movf	??_loop,w
  4125  0115  0021               	movlb	1	; select bank1
  4126  0116  00A0               	movwf	loop@rfSetup^(0+128)
  4127                           
  4128                           ;main.c: 145: setMessage(&packet, "RFPWR", rfSetup.RF_PWR);
  4129  0117  3013               	movlw	low (STR_8| (0+32768))
  4130  0118  0020               	movlb	0	; select bank0
  4131  0119  00BD               	movwf	setMessage@topic
  4132  011A  3090               	movlw	high (STR_8| (0+32768))
  4133  011B  00BE               	movwf	setMessage@topic+1
  4134  011C  0021               	movlb	1	; select bank1
  4135  011D  0C20               	rrf	loop@rfSetup^(0+128),w
  4136  011E  3903               	andlw	3
  4137  011F  0020               	movlb	0	; select bank0
  4138  0120  00D4               	movwf	??_loop
  4139  0121  01D5               	clrf	??_loop+1
  4140  0122  01D6               	clrf	??_loop+2
  4141  0123  01D7               	clrf	??_loop+3
  4142  0124  0857               	movf	??_loop+3,w
  4143  0125  00C2               	movwf	setMessage@value+3
  4144  0126  0856               	movf	??_loop+2,w
  4145  0127  00C1               	movwf	setMessage@value+2
  4146  0128  0855               	movf	??_loop+1,w
  4147  0129  00C0               	movwf	setMessage@value+1
  4148  012A  0854               	movf	??_loop,w
  4149  012B  00BF               	movwf	setMessage@value
  4150  012C  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4151  012D  3184  2465  3180   	fcall	_setMessage
  4152                           
  4153                           ;main.c: 146: packet.packetData.byte = 0;
  4154  0130  0021               	movlb	1	; select bank1
  4155  0131  01A1               	clrf	loop@packet^(0+128)
  4156                           
  4157                           ;main.c: 147: packet.packetData.ACKRequest = 1;
  4158  0132  1521               	bsf	loop@packet^(0+128),2
  4159                           
  4160                           ;main.c: 148: nrf24l01SendPacket(&packet);
  4161  0133  30A1               	movlw	(low (loop@packet| 0))& (0+255)
  4162  0134  3181  21E7  3180   	fcall	_nrf24l01SendPacket
  4163                           
  4164                           ;main.c: 149: checkTXPower();
  4165  0137  318E  26F2  3180   	fcall	_checkTXPower
  4166                           
  4167                           ;main.c: 150: sleep();
  4168  013A  318E  26E0         	fcall	_sleep
  4169  013C  0008               	return
  4170  013D                     __end_of_loop:	
  4171                           
  4172                           	psect	text6
  4173  0EE0                     __ptext6:	
  4174 ;; *************** function _sleep *****************
  4175 ;; Defined at:
  4176 ;;		line 48 in file "main.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    7
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_loop
  4201 ;;		_main
  4202 ;;		_checkRxData
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _sleep
  4208  0EE0                     _sleep:	
  4209  0EE0                     l221:	
  4210                           ;incstack = 0
  4211                           ; Regs used in _sleep: [wreg]
  4212                           ;main.c: 49: while (1){
  4213                           
  4214                           
  4215                           ;main.c: 51: counter++;
  4216  0EE0  3001               	movlw	1
  4217  0EE1  0021               	movlb	1	; select bank1
  4218  0EE2  07E3               	addwf	_counter^(0+128),f
  4219  0EE3  3000               	movlw	0
  4220  0EE4  3DE4               	addwfc	(_counter+1)^(0+128),f
  4221  0EE5  3000               	movlw	0
  4222  0EE6  3DE5               	addwfc	(_counter+2)^(0+128),f
  4223  0EE7  3000               	movlw	0
  4224  0EE8  3DE6               	addwfc	(_counter+3)^(0+128),f
  4225  0EE9  0063               	sleep	;# 
  4226                           
  4227                           ;main.c: 54: __nop();
  4228  0EEA  0000               	nop
  4229                           
  4230                           ;main.c: 55: __nop();
  4231  0EEB  0000               	nop
  4232                           
  4233                           ;main.c: 57: if (!STATUSbits.nTO && !STATUSbits.nPD) {
  4234  0EEC  0020               	movlb	0	; select bank0
  4235  0EED  1A03               	btfsc	3,4	;volatile
  4236  0EEE  2EE0               	goto	l221
  4237  0EEF  1D83               	btfss	3,3	;volatile
  4238  0EF0  0008               	return
  4239  0EF1  2EE0               	goto	l221
  4240  0EF2                     __end_of_sleep:	
  4241                           ;main.c: 58: return;
  4242                           
  4243                           
  4244                           	psect	text7
  4245  0465                     __ptext7:	
  4246 ;; *************** function _setMessage *****************
  4247 ;; Defined at:
  4248 ;;		line 75 in file "main.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  packet          1    wreg     PTR struct .
  4251 ;;		 -> main@packet(33), loop@packet(33), 
  4252 ;;  topic           2   29[BANK0 ] PTR const unsigned char 
  4253 ;;		 -> STR_10(5), STR_8(6), STR_7(5), STR_6(4), 
  4254 ;;		 -> STR_5(5), STR_4(5), STR_3(4), 
  4255 ;;  value           4   31[BANK0 ] unsigned long 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  packet          1   51[BANK0 ] PTR struct .
  4258 ;;		 -> main@packet(33), loop@packet(33), 
  4259 ;;  tempString     16   35[BANK0 ] unsigned char [16]
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;Total ram usage:       23 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    9
  4276 ;; This function calls:
  4277 ;;		_memset
  4278 ;;		_strcat
  4279 ;;		_ultoa
  4280 ;; This function is called by:
  4281 ;;		_loop
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _setMessage
  4288  0465                     _setMessage:	
  4289                           
  4290                           ;incstack = 0
  4291                           ; Regs used in _setMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4292                           ;setMessage@packet stored from wreg
  4293  0465  0020               	movlb	0	; select bank0
  4294  0466  00D3               	movwf	setMessage@packet
  4295                           
  4296                           ;main.c: 76: memset(packet->Message, 0, sizeof(packet->Message));
  4297  0467  0853               	movf	setMessage@packet,w
  4298  0468  3E01               	addlw	1
  4299  0469  00A1               	movwf	memset@p1
  4300  046A  3000               	movlw	0
  4301  046B  00A2               	movwf	memset@p1+1
  4302  046C  3000               	movlw	0
  4303  046D  00A3               	movwf	memset@c
  4304  046E  00A4               	movwf	memset@c+1
  4305  046F  3020               	movlw	32
  4306  0470  00A5               	movwf	memset@n
  4307  0471  3000               	movlw	0
  4308  0472  00A6               	movwf	memset@n+1
  4309  0473  318F  2736  3184   	fcall	_memset
  4310                           
  4311                           ;main.c: 78: strcat(packet->Message, romData.name);
  4312  0476  305D               	movlw	low (_romData+1)
  4313  0477  0020               	movlb	0	; select bank0
  4314  0478  00A1               	movwf	strcat@from
  4315  0479  3000               	movlw	high (_romData+1)
  4316  047A  00A2               	movwf	strcat@from+1
  4317  047B  0853               	movf	setMessage@packet,w
  4318  047C  3E01               	addlw	1
  4319  047D  3187  272E  3184   	fcall	_strcat
  4320                           
  4321                           ;main.c: 80: strcat(packet->Message, "/");
  4322  0480  303E               	movlw	low (STR_1| (0+32768))
  4323  0481  0020               	movlb	0	; select bank0
  4324  0482  00A1               	movwf	strcat@from
  4325  0483  3090               	movlw	high (STR_1| (0+32768))
  4326  0484  00A2               	movwf	strcat@from+1
  4327  0485  0853               	movf	setMessage@packet,w
  4328  0486  3E01               	addlw	1
  4329  0487  3187  272E  3184   	fcall	_strcat
  4330                           
  4331                           ;main.c: 81: strcat(packet->Message, topic);
  4332  048A  0020               	movlb	0	; select bank0
  4333  048B  083E               	movf	setMessage@topic+1,w
  4334  048C  00A2               	movwf	strcat@from+1
  4335  048D  083D               	movf	setMessage@topic,w
  4336  048E  00A1               	movwf	strcat@from
  4337  048F  0853               	movf	setMessage@packet,w
  4338  0490  3E01               	addlw	1
  4339  0491  3187  272E  3184   	fcall	_strcat
  4340                           
  4341                           ;main.c: 83: char tempString[16];;main.c: 85: ultoa(tempString, value, 10);
  4342  0494  0020               	movlb	0	; select bank0
  4343  0495  0842               	movf	setMessage@value+3,w
  4344  0496  00B2               	movwf	ultoa@val+3
  4345  0497  0841               	movf	setMessage@value+2,w
  4346  0498  00B1               	movwf	ultoa@val+2
  4347  0499  0840               	movf	setMessage@value+1,w
  4348  049A  00B0               	movwf	ultoa@val+1
  4349  049B  083F               	movf	setMessage@value,w
  4350  049C  00AF               	movwf	ultoa@val
  4351  049D  300A               	movlw	10
  4352  049E  00B3               	movwf	ultoa@base
  4353  049F  3000               	movlw	0
  4354  04A0  00B4               	movwf	ultoa@base+1
  4355  04A1  3043               	movlw	(low (setMessage@tempString| 0))& (0+255)
  4356  04A2  3182  22FB  3184   	fcall	_ultoa
  4357                           
  4358                           ;main.c: 87: strcat(packet->Message, "/");
  4359  04A5  303E               	movlw	low (STR_1| (0+32768))
  4360  04A6  0020               	movlb	0	; select bank0
  4361  04A7  00A1               	movwf	strcat@from
  4362  04A8  3090               	movlw	high (STR_1| (0+32768))
  4363  04A9  00A2               	movwf	strcat@from+1
  4364  04AA  0853               	movf	setMessage@packet,w
  4365  04AB  3E01               	addlw	1
  4366  04AC  3187  272E  3184   	fcall	_strcat
  4367                           
  4368                           ;main.c: 88: strcat(packet->Message, tempString);
  4369  04AF  3043               	movlw	low setMessage@tempString
  4370  04B0  0020               	movlb	0	; select bank0
  4371  04B1  00A1               	movwf	strcat@from
  4372  04B2  3000               	movlw	high setMessage@tempString
  4373  04B3  00A2               	movwf	strcat@from+1
  4374  04B4  0853               	movf	setMessage@packet,w
  4375  04B5  3E01               	addlw	1
  4376  04B6  3187  272E         	fcall	_strcat
  4377  04B8  0008               	return
  4378  04B9                     __end_of_setMessage:	
  4379                           
  4380                           	psect	text8
  4381  02FB                     __ptext8:	
  4382 ;; *************** function _ultoa *****************
  4383 ;; Defined at:
  4384 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  buf             1    wreg     PTR unsigned char 
  4387 ;;		 -> setMessage@tempString(16), 
  4388 ;;  val             4   15[BANK0 ] unsigned long 
  4389 ;;  base            2   19[BANK0 ] int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  4392 ;;		 -> setMessage@tempString(16), 
  4393 ;;  v               4   22[BANK0 ] unsigned long 
  4394 ;;  c               1   26[BANK0 ] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      PTR unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4404 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;Total ram usage:       13 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    8
  4411 ;; This function calls:
  4412 ;;		___lldiv
  4413 ;;		___llmod
  4414 ;; This function is called by:
  4415 ;;		_setMessage
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _ultoa
  4421  02FB                     _ultoa:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _ultoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4425                           ;ultoa@buf stored from wreg
  4426  02FB  0020               	movlb	0	; select bank0
  4427  02FC  00BB               	movwf	ultoa@buf
  4428  02FD  0832               	movf	ultoa@val+3,w
  4429  02FE  00B9               	movwf	ultoa@v+3
  4430  02FF  0831               	movf	ultoa@val+2,w
  4431  0300  00B8               	movwf	ultoa@v+2
  4432  0301  0830               	movf	ultoa@val+1,w
  4433  0302  00B7               	movwf	ultoa@v+1
  4434  0303  082F               	movf	ultoa@val,w
  4435  0304  00B6               	movwf	ultoa@v
  4436  0305                     l2069:	
  4437  0305  0833               	movf	ultoa@base,w
  4438  0306  00A1               	movwf	___lldiv@divisor
  4439  0307  0834               	movf	ultoa@base+1,w
  4440  0308  00A2               	movwf	___lldiv@divisor+1
  4441  0309  0D89               	rlf	9,f
  4442  030A  3B89               	subwfb	9,f
  4443  030B  0989               	comf	9,f
  4444  030C  00A3               	movwf	___lldiv@divisor+2
  4445  030D  00A4               	movwf	___lldiv@divisor+3
  4446  030E  0839               	movf	ultoa@v+3,w
  4447  030F  00A8               	movwf	___lldiv@dividend+3
  4448  0310  0838               	movf	ultoa@v+2,w
  4449  0311  00A7               	movwf	___lldiv@dividend+2
  4450  0312  0837               	movf	ultoa@v+1,w
  4451  0313  00A6               	movwf	___lldiv@dividend+1
  4452  0314  0836               	movf	ultoa@v,w
  4453  0315  00A5               	movwf	___lldiv@dividend
  4454  0316  3184  24B9  3182   	fcall	___lldiv
  4455  0319  0020               	movlb	0	; select bank0
  4456  031A  0824               	movf	?___lldiv+3,w
  4457  031B  00B9               	movwf	ultoa@v+3
  4458  031C  0823               	movf	?___lldiv+2,w
  4459  031D  00B8               	movwf	ultoa@v+2
  4460  031E  0822               	movf	?___lldiv+1,w
  4461  031F  00B7               	movwf	ultoa@v+1
  4462  0320  0821               	movf	?___lldiv,w
  4463  0321  00B6               	movwf	ultoa@v
  4464  0322  3001               	movlw	1
  4465  0323  00B5               	movwf	??_ultoa
  4466  0324  0835               	movf	??_ultoa,w
  4467  0325  07BB               	addwf	ultoa@buf,f
  4468  0326  0839               	movf	ultoa@v+3,w
  4469  0327  0438               	iorwf	ultoa@v+2,w
  4470  0328  0437               	iorwf	ultoa@v+1,w
  4471  0329  0436               	iorwf	ultoa@v,w
  4472  032A  1D03               	skipz
  4473  032B  2B05               	goto	l2069
  4474  032C  083B               	movf	ultoa@buf,w
  4475  032D  0086               	movwf	6
  4476  032E  0187               	clrf	7
  4477  032F  0181               	clrf	1
  4478  0330  3001               	movlw	1
  4479  0331  02BB               	subwf	ultoa@buf,f
  4480  0332                     l2079:	
  4481  0332  0833               	movf	ultoa@base,w
  4482  0333  00A1               	movwf	___llmod@divisor
  4483  0334  0834               	movf	ultoa@base+1,w
  4484  0335  00A2               	movwf	___llmod@divisor+1
  4485  0336  0D89               	rlf	9,f
  4486  0337  3B89               	subwfb	9,f
  4487  0338  0989               	comf	9,f
  4488  0339  00A3               	movwf	___llmod@divisor+2
  4489  033A  00A4               	movwf	___llmod@divisor+3
  4490  033B  0832               	movf	ultoa@val+3,w
  4491  033C  00A8               	movwf	___llmod@dividend+3
  4492  033D  0831               	movf	ultoa@val+2,w
  4493  033E  00A7               	movwf	___llmod@dividend+2
  4494  033F  0830               	movf	ultoa@val+1,w
  4495  0340  00A6               	movwf	___llmod@dividend+1
  4496  0341  082F               	movf	ultoa@val,w
  4497  0342  00A5               	movwf	___llmod@dividend
  4498  0343  3185  250C  3182   	fcall	___llmod
  4499  0346  0020               	movlb	0	; select bank0
  4500  0347  0821               	movf	?___llmod,w
  4501  0348  00B5               	movwf	??_ultoa
  4502  0349  0835               	movf	??_ultoa,w
  4503  034A  00BA               	movwf	ultoa@c
  4504  034B  0833               	movf	ultoa@base,w
  4505  034C  00A1               	movwf	___lldiv@divisor
  4506  034D  0834               	movf	ultoa@base+1,w
  4507  034E  00A2               	movwf	___lldiv@divisor+1
  4508  034F  0D89               	rlf	9,f
  4509  0350  3B89               	subwfb	9,f
  4510  0351  0989               	comf	9,f
  4511  0352  00A3               	movwf	___lldiv@divisor+2
  4512  0353  00A4               	movwf	___lldiv@divisor+3
  4513  0354  0832               	movf	ultoa@val+3,w
  4514  0355  00A8               	movwf	___lldiv@dividend+3
  4515  0356  0831               	movf	ultoa@val+2,w
  4516  0357  00A7               	movwf	___lldiv@dividend+2
  4517  0358  0830               	movf	ultoa@val+1,w
  4518  0359  00A6               	movwf	___lldiv@dividend+1
  4519  035A  082F               	movf	ultoa@val,w
  4520  035B  00A5               	movwf	___lldiv@dividend
  4521  035C  3184  24B9  3182   	fcall	___lldiv
  4522  035F  0020               	movlb	0	; select bank0
  4523  0360  0824               	movf	?___lldiv+3,w
  4524  0361  00B2               	movwf	ultoa@val+3
  4525  0362  0823               	movf	?___lldiv+2,w
  4526  0363  00B1               	movwf	ultoa@val+2
  4527  0364  0822               	movf	?___lldiv+1,w
  4528  0365  00B0               	movwf	ultoa@val+1
  4529  0366  0821               	movf	?___lldiv,w
  4530  0367  00AF               	movwf	ultoa@val
  4531  0368  300A               	movlw	10
  4532  0369  023A               	subwf	ultoa@c,w
  4533  036A  1C03               	skipc
  4534  036B  2B70               	goto	l866
  4535  036C  3007               	movlw	7
  4536  036D  00B5               	movwf	??_ultoa
  4537  036E  0835               	movf	??_ultoa,w
  4538  036F  07BA               	addwf	ultoa@c,f
  4539  0370                     l866:	
  4540  0370  3030               	movlw	48
  4541  0371  00B5               	movwf	??_ultoa
  4542  0372  0835               	movf	??_ultoa,w
  4543  0373  07BA               	addwf	ultoa@c,f
  4544  0374  083A               	movf	ultoa@c,w
  4545  0375  00B5               	movwf	??_ultoa
  4546  0376  083B               	movf	ultoa@buf,w
  4547  0377  0086               	movwf	6
  4548  0378  0187               	clrf	7
  4549  0379  0835               	movf	??_ultoa,w
  4550  037A  0081               	movwf	1
  4551  037B  3001               	movlw	1
  4552  037C  02BB               	subwf	ultoa@buf,f
  4553  037D  0832               	movf	ultoa@val+3,w
  4554  037E  0431               	iorwf	ultoa@val+2,w
  4555  037F  0430               	iorwf	ultoa@val+1,w
  4556  0380  042F               	iorwf	ultoa@val,w
  4557  0381  1903               	btfsc	3,2
  4558  0382  0008               	return
  4559  0383  2B32               	goto	l2079
  4560  0384                     __end_of_ultoa:	
  4561                           ;	Return value of _ultoa is never used
  4562                           
  4563                           
  4564                           	psect	text9
  4565  050C                     __ptext9:	
  4566 ;; *************** function ___llmod *****************
  4567 ;; Defined at:
  4568 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  divisor         4    1[BANK0 ] unsigned long 
  4571 ;;  dividend        4    5[BANK0 ] unsigned long 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  counter         1   10[BANK0 ] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  4    1[BANK0 ] unsigned long 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4583 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;Total ram usage:       10 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    7
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_ultoa
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function ___llmod
  4599  050C                     ___llmod:	
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4603  050C  0020               	movlb	0	; select bank0
  4604  050D  0824               	movf	___llmod@divisor+3,w
  4605  050E  0423               	iorwf	___llmod@divisor+2,w
  4606  050F  0422               	iorwf	___llmod@divisor+1,w
  4607  0510  0421               	iorwf	___llmod@divisor,w
  4608  0511  1903               	skipnz
  4609  0512  2D46               	goto	l1951
  4610  0513  01AA               	clrf	___llmod@counter
  4611  0514  0AAA               	incf	___llmod@counter,f
  4612  0515                     l1941:	
  4613  0515  1BA4               	btfsc	___llmod@divisor+3,7
  4614  0516  2D23               	goto	l1943
  4615  0517  3001               	movlw	1
  4616  0518                     u835:	
  4617  0518  35A1               	lslf	___llmod@divisor,f
  4618  0519  0DA2               	rlf	___llmod@divisor+1,f
  4619  051A  0DA3               	rlf	___llmod@divisor+2,f
  4620  051B  0DA4               	rlf	___llmod@divisor+3,f
  4621  051C  0B89               	decfsz	9,f
  4622  051D  2D18               	goto	u835
  4623  051E  3001               	movlw	1
  4624  051F  00A9               	movwf	??___llmod
  4625  0520  0829               	movf	??___llmod,w
  4626  0521  07AA               	addwf	___llmod@counter,f
  4627  0522  2D15               	goto	l1941
  4628  0523                     l1943:	
  4629  0523  0824               	movf	___llmod@divisor+3,w
  4630  0524  0228               	subwf	___llmod@dividend+3,w
  4631  0525  1D03               	skipz
  4632  0526  2D31               	goto	u855
  4633  0527  0823               	movf	___llmod@divisor+2,w
  4634  0528  0227               	subwf	___llmod@dividend+2,w
  4635  0529  1D03               	skipz
  4636  052A  2D31               	goto	u855
  4637  052B  0822               	movf	___llmod@divisor+1,w
  4638  052C  0226               	subwf	___llmod@dividend+1,w
  4639  052D  1D03               	skipz
  4640  052E  2D31               	goto	u855
  4641  052F  0821               	movf	___llmod@divisor,w
  4642  0530  0225               	subwf	___llmod@dividend,w
  4643  0531                     u855:	
  4644  0531  1C03               	skipc
  4645  0532  2D3B               	goto	l1947
  4646  0533  0821               	movf	___llmod@divisor,w
  4647  0534  02A5               	subwf	___llmod@dividend,f
  4648  0535  0822               	movf	___llmod@divisor+1,w
  4649  0536  3BA6               	subwfb	___llmod@dividend+1,f
  4650  0537  0823               	movf	___llmod@divisor+2,w
  4651  0538  3BA7               	subwfb	___llmod@dividend+2,f
  4652  0539  0824               	movf	___llmod@divisor+3,w
  4653  053A  3BA8               	subwfb	___llmod@dividend+3,f
  4654  053B                     l1947:	
  4655  053B  3001               	movlw	1
  4656  053C                     u865:	
  4657  053C  36A4               	lsrf	___llmod@divisor+3,f
  4658  053D  0CA3               	rrf	___llmod@divisor+2,f
  4659  053E  0CA2               	rrf	___llmod@divisor+1,f
  4660  053F  0CA1               	rrf	___llmod@divisor,f
  4661  0540  0B89               	decfsz	9,f
  4662  0541  2D3C               	goto	u865
  4663  0542  3001               	movlw	1
  4664  0543  02AA               	subwf	___llmod@counter,f
  4665  0544  1D03               	btfss	3,2
  4666  0545  2D23               	goto	l1943
  4667  0546                     l1951:	
  4668  0546  0828               	movf	___llmod@dividend+3,w
  4669  0547  00A4               	movwf	?___llmod+3
  4670  0548  0827               	movf	___llmod@dividend+2,w
  4671  0549  00A3               	movwf	?___llmod+2
  4672  054A  0826               	movf	___llmod@dividend+1,w
  4673  054B  00A2               	movwf	?___llmod+1
  4674  054C  0825               	movf	___llmod@dividend,w
  4675  054D  00A1               	movwf	?___llmod
  4676  054E  0008               	return
  4677  054F                     __end_of___llmod:	
  4678                           
  4679                           	psect	text10
  4680  072E                     __ptext10:	
  4681 ;; *************** function _strcat *****************
  4682 ;; Defined at:
  4683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcat.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  to              1    wreg     PTR unsigned char 
  4686 ;;		 -> main@packet(33), loop@packet(33), 
  4687 ;;  from            2    1[BANK0 ] PTR const unsigned char 
  4688 ;;		 -> STR_10(5), STR_8(6), STR_7(5), STR_6(4), 
  4689 ;;		 -> STR_5(5), STR_4(5), STR_3(4), STR_2(2), 
  4690 ;;		 -> setMessage@tempString(16), STR_1(2), romData.name(16), romData(19), 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  to              1    5[BANK0 ] PTR unsigned char 
  4693 ;;		 -> main@packet(33), loop@packet(33), 
  4694 ;;  cp              1    4[BANK0 ] PTR unsigned char 
  4695 ;;		 -> main@packet(33), loop@packet(33), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      PTR unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        5 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    7
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_setMessage
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _strcat
  4721  072E                     _strcat:	
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  4725                           ;strcat@to stored from wreg
  4726  072E  0020               	movlb	0	; select bank0
  4727  072F  00A5               	movwf	strcat@to
  4728  0730  0825               	movf	strcat@to,w
  4729  0731  00A3               	movwf	??_strcat
  4730  0732  0823               	movf	??_strcat,w
  4731  0733  00A4               	movwf	strcat@cp
  4732  0734                     l2059:	
  4733  0734  0824               	movf	strcat@cp,w
  4734  0735  0086               	movwf	6
  4735  0736  0187               	clrf	7
  4736  0737  0801               	movf	1,w
  4737  0738  1903               	btfsc	3,2
  4738  0739  2F47               	goto	l2065
  4739  073A  3001               	movlw	1
  4740  073B  00A3               	movwf	??_strcat
  4741  073C  0823               	movf	??_strcat,w
  4742  073D  07A4               	addwf	strcat@cp,f
  4743  073E  2F34               	goto	l2059
  4744  073F                     l2061:	
  4745  073F  3001               	movlw	1
  4746  0740  00A3               	movwf	??_strcat
  4747  0741  0823               	movf	??_strcat,w
  4748  0742  07A4               	addwf	strcat@cp,f
  4749  0743  3001               	movlw	1
  4750  0744  07A1               	addwf	strcat@from,f
  4751  0745  3000               	movlw	0
  4752  0746  3DA2               	addwfc	strcat@from+1,f
  4753  0747                     l2065:	
  4754  0747  0824               	movf	strcat@cp,w
  4755  0748  0086               	movwf	6
  4756  0749  0187               	clrf	7
  4757  074A  0821               	movf	strcat@from,w
  4758  074B  0084               	movwf	4
  4759  074C  0822               	movf	strcat@from+1,w
  4760  074D  0085               	movwf	5
  4761  074E  0800               	movf	0,w	;code access
  4762  074F  3FC0               	movwi [0]fsr1
  4763  0750  0889               	movf	9,f
  4764  0751  1903               	btfsc	3,2
  4765  0752  0008               	return
  4766  0753  2F3F               	goto	l2061
  4767  0754                     __end_of_strcat:	
  4768                           ;	Return value of _strcat is never used
  4769                           
  4770                           
  4771                           	psect	text11
  4772  0F36                     __ptext11:	
  4773 ;; *************** function _memset *****************
  4774 ;; Defined at:
  4775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  p1              2    1[BANK0 ] PTR void 
  4778 ;;		 -> RXPacket(33), main@packet(33), loop@packet(33), 
  4779 ;;  c               2    3[BANK0 ] int 
  4780 ;;  n               2    5[BANK0 ] unsigned int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  p               2    7[BANK0 ] PTR unsigned char 
  4783 ;;		 -> RXPacket(33), main@packet(33), loop@packet(33), 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2    1[BANK0 ] PTR void 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        8 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    7
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_setMessage
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _memset
  4809  0F36                     _memset:	
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4813  0F36  0020               	movlb	0	; select bank0
  4814  0F37  0822               	movf	memset@p1+1,w
  4815  0F38  00A8               	movwf	memset@p+1
  4816  0F39  0821               	movf	memset@p1,w
  4817  0F3A  00A7               	movwf	memset@p
  4818  0F3B                     l2815:	
  4819  0F3B  3001               	movlw	1
  4820  0F3C  02A5               	subwf	memset@n,f
  4821  0F3D  3000               	movlw	0
  4822  0F3E  3BA6               	subwfb	memset@n+1,f
  4823  0F3F  0A25               	incf	memset@n,w
  4824  0F40  1903               	btfsc	3,2
  4825  0F41  0A26               	incf	memset@n+1,w
  4826  0F42  1903               	btfsc	3,2
  4827  0F43  0008               	return
  4828  0F44  0827               	movf	memset@p,w
  4829  0F45  0086               	movwf	6
  4830  0F46  0828               	movf	memset@p+1,w
  4831  0F47  0087               	movwf	7
  4832  0F48  0823               	movf	memset@c,w
  4833  0F49  0081               	movwf	1
  4834  0F4A  3001               	movlw	1
  4835  0F4B  07A7               	addwf	memset@p,f
  4836  0F4C  3000               	movlw	0
  4837  0F4D  3DA8               	addwfc	memset@p+1,f
  4838  0F4E  2F3B               	goto	l2815
  4839  0F4F                     __end_of_memset:	
  4840                           ;	Return value of _memset is never used
  4841                           
  4842                           
  4843                           	psect	text12
  4844  01E7                     __ptext12:	
  4845 ;; *************** function _nrf24l01SendPacket *****************
  4846 ;; Defined at:
  4847 ;;		line 170 in file "nrf24l01.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  Packet          1    wreg     PTR struct .
  4850 ;;		 -> main@packet(33), loop@packet(33), 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  Packet          1   11[BANK0 ] PTR struct .
  4853 ;;		 -> main@packet(33), loop@packet(33), 
  4854 ;;  i               1   12[BANK0 ] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;Total ram usage:        4 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:   11
  4871 ;; This function calls:
  4872 ;;		_enableInterrupts
  4873 ;;		_nrf24l01CEHigh
  4874 ;;		_nrf24l01CELow
  4875 ;;		_nrf24l01SPIEnd
  4876 ;;		_nrf24l01SPISend
  4877 ;;		_nrf24l01SPIStart
  4878 ;;		_nrf24l01SetRXMode
  4879 ;;		_strlen
  4880 ;; This function is called by:
  4881 ;;		_loop
  4882 ;;		_main
  4883 ;;		_nrf24l01SendACK
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function _nrf24l01SendPacket
  4889  01E7                     _nrf24l01SendPacket:	
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in _nrf24l01SendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4893                           ;nrf24l01SendPacket@Packet stored from wreg
  4894  01E7  0020               	movlb	0	; select bank0
  4895  01E8  00AB               	movwf	nrf24l01SendPacket@Packet
  4896                           
  4897                           ;nrf24l01.c: 172: TXPacket = Packet;
  4898  01E9  082B               	movf	nrf24l01SendPacket@Packet,w
  4899  01EA  00A9               	movwf	??_nrf24l01SendPacket
  4900  01EB  0829               	movf	??_nrf24l01SendPacket,w
  4901  01EC  00D9               	movwf	_TXPacket
  4902  01ED                     l324:	
  4903                           ;nrf24l01.c: 175: unsigned char i;;nrf24l01.c: 179: RESEND:
  4904                           
  4905                           
  4906                           ;nrf24l01.c: 182: i = 0xFF;
  4907  01ED  30FF               	movlw	255
  4908  01EE  00A9               	movwf	??_nrf24l01SendPacket
  4909  01EF  0829               	movf	??_nrf24l01SendPacket,w
  4910  01F0  00AC               	movwf	nrf24l01SendPacket@i
  4911  01F1                     l2359:	
  4912                           ;nrf24l01.c: 183: while (nrf24l01.TXBusy){
  4913                           
  4914  01F1  0020               	movlb	0	; select bank0
  4915  01F2  1C5B               	btfss	_nrf24l01,0	;volatile
  4916  01F3  29FD               	goto	l328
  4917                           
  4918                           ;nrf24l01.c: 184: if (!--i) {
  4919  01F4  3001               	movlw	1
  4920  01F5  02AC               	subwf	nrf24l01SendPacket@i,f
  4921  01F6  1903               	btfsc	3,2
  4922  01F7  29ED               	goto	l324
  4923                           
  4924                           ;nrf24l01.c: 186: };nrf24l01.c: 187: _delay((unsigned long)((100)*(16000000/4000000.0)))
      +                          ;
  4925                           
  4926                           ;nrf24l01.c: 185: goto RESEND;
  4927  01F8  3085               	movlw	133
  4928  01F9                     u1627:	
  4929  01F9  0B89               	decfsz	9,f
  4930  01FA  29F9               	goto	u1627
  4931  01FB  0000               	nop
  4932  01FC  29F1               	goto	l2359
  4933  01FD                     l328:	
  4934                           
  4935                           ;nrf24l01.c: 188: };nrf24l01.c: 191: nrf24l01.TXBusy = 1;
  4936  01FD  145B               	bsf	_nrf24l01,0	;volatile
  4937                           
  4938                           ;nrf24l01.c: 194: enableInterrupts(0);
  4939  01FE  3000               	movlw	0
  4940  01FF  318E  26C3  3181   	fcall	_enableInterrupts
  4941                           
  4942                           ;nrf24l01.c: 197: nrf24l01SetRXMode(0);
  4943  0202  3000               	movlw	0
  4944  0203  3185  25CA  3181   	fcall	_nrf24l01SetRXMode
  4945                           
  4946                           ;nrf24l01.c: 200: nrf24l01SPIStart();
  4947  0206  318E  26CB  3181   	fcall	_nrf24l01SPIStart
  4948                           
  4949                           ;nrf24l01.c: 203: nrf24l01SPISend(0b10110000);
  4950  0209  30B0               	movlw	176
  4951  020A  318E  26D3  3181   	fcall	_nrf24l01SPISend
  4952                           
  4953                           ;nrf24l01.c: 205: nrf24l01SPISend(TXPacket->packetData.byte);
  4954  020D  0020               	movlb	0	; select bank0
  4955  020E  0859               	movf	_TXPacket,w
  4956  020F  0086               	movwf	6
  4957  0210  0187               	clrf	7
  4958  0211  0801               	movf	1,w
  4959  0212  318E  26D3  3181   	fcall	_nrf24l01SPISend
  4960                           
  4961                           ;nrf24l01.c: 208: for (i = 0; (i < strlen(TXPacket->Message)) && (i < sizeof(TXPacket->M
      +                          essage)); i++){
  4962  0215  0020               	movlb	0	; select bank0
  4963  0216  01AC               	clrf	nrf24l01SendPacket@i
  4964  0217  2A28               	goto	l2371
  4965  0218                     l2367:	
  4966                           
  4967                           ;nrf24l01.c: 209: nrf24l01SPISend(TXPacket->Message[i]);
  4968  0218  082C               	movf	nrf24l01SendPacket@i,w
  4969  0219  3E01               	addlw	1
  4970  021A  0759               	addwf	_TXPacket,w
  4971  021B  00A9               	movwf	??_nrf24l01SendPacket
  4972  021C  0829               	movf	??_nrf24l01SendPacket,w
  4973  021D  0086               	movwf	6
  4974  021E  0187               	clrf	7
  4975  021F  0801               	movf	1,w
  4976  0220  318E  26D3  3181   	fcall	_nrf24l01SPISend
  4977  0223  3001               	movlw	1
  4978  0224  0020               	movlb	0	; select bank0
  4979  0225  00A9               	movwf	??_nrf24l01SendPacket
  4980  0226  0829               	movf	??_nrf24l01SendPacket,w
  4981  0227  07AC               	addwf	nrf24l01SendPacket@i,f
  4982  0228                     l2371:	
  4983  0228  0859               	movf	_TXPacket,w
  4984  0229  3E01               	addlw	1
  4985  022A  3187  277A  3181   	fcall	_strlen
  4986  022D  0020               	movlb	0	; select bank0
  4987  022E  082C               	movf	nrf24l01SendPacket@i,w
  4988  022F  00A9               	movwf	??_nrf24l01SendPacket
  4989  0230  01AA               	clrf	??_nrf24l01SendPacket+1
  4990  0231  0822               	movf	?_strlen+1,w
  4991  0232  022A               	subwf	??_nrf24l01SendPacket+1,w
  4992  0233  1D03               	skipz
  4993  0234  2A37               	goto	u1235
  4994  0235  0821               	movf	?_strlen,w
  4995  0236  0229               	subwf	??_nrf24l01SendPacket,w
  4996  0237                     u1235:	
  4997  0237  1803               	skipnc
  4998  0238  2A3D               	goto	l2375
  4999  0239  3020               	movlw	32
  5000  023A  022C               	subwf	nrf24l01SendPacket@i,w
  5001  023B  1C03               	skipc
  5002  023C  2A18               	goto	l2367
  5003  023D                     l2375:	
  5004                           
  5005                           ;nrf24l01.c: 210: };nrf24l01.c: 213: nrf24l01SPIEnd();
  5006  023D  318E  26BC  3181   	fcall	_nrf24l01SPIEnd
  5007                           
  5008                           ;nrf24l01.c: 216: nrf24l01CEHigh();
  5009  0240  318E  26AA  3181   	fcall	_nrf24l01CEHigh
  5010                           
  5011                           ;nrf24l01.c: 217: _delay((unsigned long)((20)*(16000000/4000000.0)));
  5012  0243  301A               	movlw	26
  5013  0244                     u1637:	
  5014  0244  0B89               	decfsz	9,f
  5015  0245  2A44               	goto	u1637
  5016  0246  3200               	nop2
  5017                           
  5018                           ;nrf24l01.c: 218: nrf24l01CELow();
  5019  0247  318E  26AD  3181   	fcall	_nrf24l01CELow
  5020                           
  5021                           ;nrf24l01.c: 221: enableInterrupts(1);
  5022  024A  3001               	movlw	1
  5023  024B  318E  26C3  3181   	fcall	_enableInterrupts
  5024                           
  5025                           ;nrf24l01.c: 224: i = 0xFF;
  5026  024E  30FF               	movlw	255
  5027  024F  0020               	movlb	0	; select bank0
  5028  0250  00A9               	movwf	??_nrf24l01SendPacket
  5029  0251  0829               	movf	??_nrf24l01SendPacket,w
  5030  0252  00AC               	movwf	nrf24l01SendPacket@i
  5031  0253                     l2391:	
  5032                           ;nrf24l01.c: 225: while (nrf24l01.TXBusy){
  5033                           
  5034  0253  0020               	movlb	0	; select bank0
  5035  0254  1C5B               	btfss	_nrf24l01,0	;volatile
  5036  0255  2A5F               	goto	l2393
  5037                           
  5038                           ;nrf24l01.c: 226: if (!--i) {
  5039  0256  3001               	movlw	1
  5040  0257  02AC               	subwf	nrf24l01SendPacket@i,f
  5041  0258  1903               	btfsc	3,2
  5042  0259  29ED               	goto	l324
  5043                           
  5044                           ;nrf24l01.c: 231: };nrf24l01.c: 232: _delay((unsigned long)((100)*(16000000/4000000.0)))
      +                          ;
  5045                           
  5046                           ;nrf24l01.c: 227: goto RESEND;
  5047  025A  3085               	movlw	133
  5048  025B                     u1647:	
  5049  025B  0B89               	decfsz	9,f
  5050  025C  2A5B               	goto	u1647
  5051  025D  0000               	nop
  5052  025E  2A53               	goto	l2391
  5053  025F                     l2393:	
  5054                           
  5055                           ;nrf24l01.c: 233: };nrf24l01.c: 237: i = 0xFF;
  5056  025F  30FF               	movlw	255
  5057  0260  00A9               	movwf	??_nrf24l01SendPacket
  5058  0261  0829               	movf	??_nrf24l01SendPacket,w
  5059  0262  00AC               	movwf	nrf24l01SendPacket@i
  5060  0263                     l2401:	
  5061                           ;nrf24l01.c: 238: while (TXPacket->packetData.ACKRequest){
  5062                           
  5063  0263  0020               	movlb	0	; select bank0
  5064  0264  0859               	movf	_TXPacket,w
  5065  0265  0086               	movwf	6
  5066  0266  0187               	clrf	7
  5067  0267  1D01               	btfss	1,2
  5068  0268  0008               	return
  5069                           
  5070                           ;nrf24l01.c: 239: if (!--i) {
  5071  0269  3001               	movlw	1
  5072  026A  02AC               	subwf	nrf24l01SendPacket@i,f
  5073  026B  1903               	btfsc	3,2
  5074  026C  29ED               	goto	l324
  5075                           
  5076                           ;nrf24l01.c: 241: };nrf24l01.c: 242: _delay((unsigned long)((40)*(16000000/4000000.0)));
  5077                           
  5078                           ;nrf24l01.c: 240: goto RESEND;
  5079  026D  3035               	movlw	53
  5080  026E                     u1657:	
  5081  026E  0B89               	decfsz	9,f
  5082  026F  2A6E               	goto	u1657
  5083  0270  0000               	nop
  5084  0271  2A63               	goto	l2401
  5085  0272                     __end_of_nrf24l01SendPacket:	
  5086                           
  5087                           	psect	text13
  5088  077A                     __ptext13:	
  5089 ;; *************** function _strlen *****************
  5090 ;; Defined at:
  5091 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  s               1    wreg     PTR const unsigned char 
  5094 ;;		 -> packet.Message(32), packet.Message(32), NULL(0), main@packet(33), 
  5095 ;;		 -> loop@packet(33), 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  5098 ;;		 -> packet.Message(32), packet.Message(32), NULL(0), main@packet(33), 
  5099 ;;		 -> loop@packet(33), 
  5100 ;;  cp              1    8[BANK0 ] PTR const unsigned char 
  5101 ;;		 -> packet.Message(32), packet.Message(32), NULL(0), main@packet(33), 
  5102 ;;		 -> loop@packet(33), 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    1[BANK0 ] unsigned int 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;Total ram usage:        8 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    7
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_nrf24l01SendPacket
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _strlen
  5128  077A                     _strlen:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5132                           ;strlen@s stored from wreg
  5133  077A  0020               	movlb	0	; select bank0
  5134  077B  00A7               	movwf	strlen@s
  5135  077C  0827               	movf	strlen@s,w
  5136  077D  00A3               	movwf	??_strlen
  5137  077E  0823               	movf	??_strlen,w
  5138  077F  00A8               	movwf	strlen@cp
  5139  0780                     l2131:	
  5140  0780  0828               	movf	strlen@cp,w
  5141  0781  0086               	movwf	6
  5142  0782  0187               	clrf	7
  5143  0783  0801               	movf	1,w
  5144  0784  1903               	btfsc	3,2
  5145  0785  2F8B               	goto	l2133
  5146  0786  3001               	movlw	1
  5147  0787  00A3               	movwf	??_strlen
  5148  0788  0823               	movf	??_strlen,w
  5149  0789  07A8               	addwf	strlen@cp,f
  5150  078A  2F80               	goto	l2131
  5151  078B                     l2133:	
  5152  078B  0827               	movf	strlen@s,w
  5153  078C  00A3               	movwf	??_strlen
  5154  078D  3000               	movlw	0
  5155  078E  00A4               	movwf	??_strlen+1
  5156  078F  09A3               	comf	??_strlen,f
  5157  0790  09A4               	comf	??_strlen+1,f
  5158  0791  0AA3               	incf	??_strlen,f
  5159  0792  1903               	skipnz
  5160  0793  0AA4               	incf	??_strlen+1,f
  5161  0794  0828               	movf	strlen@cp,w
  5162  0795  00A5               	movwf	??_strlen+2
  5163  0796  3000               	movlw	0
  5164  0797  00A6               	movwf	??_strlen+3
  5165  0798  0823               	movf	??_strlen,w
  5166  0799  0725               	addwf	??_strlen+2,w
  5167  079A  00A1               	movwf	?_strlen
  5168  079B  0824               	movf	??_strlen+1,w
  5169  079C  3D26               	addwfc	??_strlen+3,w
  5170  079D  00A2               	movwf	?_strlen+1
  5171  079E  0008               	return
  5172  079F                     __end_of_strlen:	
  5173                           
  5174                           	psect	text14
  5175  05CA                     __ptext14:	
  5176 ;; *************** function _nrf24l01SetRXMode *****************
  5177 ;; Defined at:
  5178 ;;		line 54 in file "nrf24l01.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  rxMode          1    wreg     unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  rxMode          1    6[BANK0 ] unsigned char 
  5183 ;;  config          1    5[BANK0 ] struct .
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;Total ram usage:        3 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:   10
  5200 ;; This function calls:
  5201 ;;		_nrf24l01CEHigh
  5202 ;;		_nrf24l01CELow
  5203 ;;		_nrf24l01Send
  5204 ;; This function is called by:
  5205 ;;		_nrf24l01SendPacket
  5206 ;;		_checkRxData
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _nrf24l01SetRXMode
  5212  05CA                     _nrf24l01SetRXMode:	
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  5216                           ;nrf24l01SetRXMode@rxMode stored from wreg
  5217  05CA  0020               	movlb	0	; select bank0
  5218  05CB  00A6               	movwf	nrf24l01SetRXMode@rxMode
  5219                           
  5220                           ;nrf24l01.c: 56: n_CONFIG_t config;;nrf24l01.c: 59: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  5221  05CC  01A1               	clrf	nrf24l01Send@data
  5222  05CD  3000               	movlw	0
  5223  05CE  318F  27E0  3185   	fcall	_nrf24l01Send
  5224  05D1  0020               	movlb	0	; select bank0
  5225  05D2  00A4               	movwf	??_nrf24l01SetRXMode
  5226  05D3  0824               	movf	??_nrf24l01SetRXMode,w
  5227  05D4  00A5               	movwf	nrf24l01SetRXMode@config
  5228                           
  5229                           ;nrf24l01.c: 62: if (config.PRIM_RX != rxMode){
  5230  05D5  0825               	movf	nrf24l01SetRXMode@config,w
  5231  05D6  3901               	andlw	1
  5232  05D7  0626               	xorwf	nrf24l01SetRXMode@rxMode,w
  5233  05D8  1903               	skipnz
  5234  05D9  2DFE               	goto	l2045
  5235                           
  5236                           ;nrf24l01.c: 65: nrf24l01CELow();
  5237  05DA  318E  26AD  3185   	fcall	_nrf24l01CELow
  5238                           
  5239                           ;nrf24l01.c: 66: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5240  05DD  30A0               	movlw	160
  5241  05DE                     u1667:	
  5242  05DE  3200               	nop2
  5243  05DF  0B89               	decfsz	9,f
  5244  05E0  2DDE               	goto	u1667
  5245                           
  5246                           ;nrf24l01.c: 69: config.PRIM_RX = rxMode;
  5247  05E1  0020               	movlb	0	; select bank0
  5248  05E2  0826               	movf	nrf24l01SetRXMode@rxMode,w
  5249  05E3  3901               	andlw	1
  5250  05E4  1025               	bcf	nrf24l01SetRXMode@config,0
  5251  05E5  1D03               	skipz
  5252  05E6  1425               	bsf	nrf24l01SetRXMode@config,0
  5253                           
  5254                           ;nrf24l01.c: 70: nrf24l01Send(0b00100000 | 0x00, config.byte);
  5255  05E7  0825               	movf	nrf24l01SetRXMode@config,w
  5256  05E8  00A4               	movwf	??_nrf24l01SetRXMode
  5257  05E9  0824               	movf	??_nrf24l01SetRXMode,w
  5258  05EA  00A1               	movwf	nrf24l01Send@data
  5259  05EB  3020               	movlw	32
  5260  05EC  318F  27E0  3185   	fcall	_nrf24l01Send
  5261                           
  5262                           ;nrf24l01.c: 73: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5263  05EF  30A0               	movlw	160
  5264  05F0                     u1677:	
  5265  05F0  3200               	nop2
  5266  05F1  0B89               	decfsz	9,f
  5267  05F2  2DF0               	goto	u1677
  5268                           
  5269                           ;nrf24l01.c: 76: if (rxMode){
  5270  05F3  0020               	movlb	0	; select bank0
  5271  05F4  0826               	movf	nrf24l01SetRXMode@rxMode,w
  5272  05F5  1903               	btfsc	3,2
  5273  05F6  2DFE               	goto	l2045
  5274                           
  5275                           ;nrf24l01.c: 77: nrf24l01CEHigh();
  5276  05F7  318E  26AA  3185   	fcall	_nrf24l01CEHigh
  5277                           
  5278                           ;nrf24l01.c: 78: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5279  05FA  30A0               	movlw	160
  5280  05FB                     u1687:	
  5281  05FB  3200               	nop2
  5282  05FC  0B89               	decfsz	9,f
  5283  05FD  2DFB               	goto	u1687
  5284  05FE                     l2045:	
  5285                           
  5286                           ;nrf24l01.c: 79: };nrf24l01.c: 80: };nrf24l01.c: 83: nrf24l01.RXMode = rxMode;
  5287  05FE  0020               	movlb	0	; select bank0
  5288  05FF  0826               	movf	nrf24l01SetRXMode@rxMode,w
  5289  0600  3901               	andlw	1
  5290  0601  115B               	bcf	_nrf24l01,2	;volatile
  5291  0602  1D03               	skipz
  5292  0603  155B               	bsf	_nrf24l01,2	;volatile
  5293  0604  0008               	return
  5294  0605                     __end_of_nrf24l01SetRXMode:	
  5295                           
  5296                           	psect	text15
  5297  0384                     __ptext15:	
  5298 ;; *************** function _getADCValue *****************
  5299 ;; Defined at:
  5300 ;;		line 22 in file "main.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  channel         1    wreg     unsigned char 
  5303 ;;  divider         4   15[BANK0 ] unsigned long 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  channel         1   23[BANK0 ] unsigned char 
  5306 ;;  adcSum          4   25[BANK0 ] unsigned long 
  5307 ;;  adcLoop         1   24[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  4   15[BANK0 ] unsigned long 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;Total ram usage:       14 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    8
  5324 ;; This function calls:
  5325 ;;		___lldiv
  5326 ;;		___lmul
  5327 ;; This function is called by:
  5328 ;;		_loop
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _getADCValue
  5334  0384                     _getADCValue:	
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _getADCValue: [wreg+status,2+status,0+pclath+cstack]
  5338                           ;getADCValue@channel stored from wreg
  5339  0384  0020               	movlb	0	; select bank0
  5340  0385  00B7               	movwf	getADCValue@channel
  5341                           
  5342                           ;main.c: 24: unsigned long adcSum = 0;
  5343  0386  3000               	movlw	0
  5344  0387  00BC               	movwf	getADCValue@adcSum+3
  5345  0388  3000               	movlw	0
  5346  0389  00BB               	movwf	getADCValue@adcSum+2
  5347  038A  3000               	movlw	0
  5348  038B  00BA               	movwf	getADCValue@adcSum+1
  5349  038C  3000               	movlw	0
  5350  038D  00B9               	movwf	getADCValue@adcSum
  5351                           
  5352                           ;main.c: 25: unsigned char adcLoop = 255;
  5353  038E  30FF               	movlw	255
  5354  038F  00B3               	movwf	??_getADCValue
  5355  0390  0833               	movf	??_getADCValue,w
  5356  0391  00B8               	movwf	getADCValue@adcLoop
  5357                           
  5358                           ;main.c: 27: ADCON0bits.CHS = channel;
  5359  0392  0837               	movf	getADCValue@channel,w
  5360  0393  00B3               	movwf	??_getADCValue
  5361  0394  0DB3               	rlf	??_getADCValue,f
  5362  0395  0DB3               	rlf	??_getADCValue,f
  5363  0396  0021               	movlb	1	; select bank1
  5364  0397  081D               	movf	29,w	;volatile
  5365  0398  0020               	movlb	0	; select bank0
  5366  0399  0633               	xorwf	??_getADCValue,w
  5367  039A  3903               	andlw	-253
  5368  039B  0633               	xorwf	??_getADCValue,w
  5369  039C  0021               	movlb	1	; select bank1
  5370  039D  009D               	movwf	29	;volatile
  5371                           
  5372                           ;main.c: 28: _delay((unsigned long)((200)*(16000000/4000000.0)));
  5373  039E  30A0               	movlw	160
  5374  039F                     u1697:	
  5375  039F  3200               	nop2
  5376  03A0  0B89               	decfsz	9,f
  5377  03A1  2B9F               	goto	u1697
  5378  03A2                     l2315:	
  5379                           ;main.c: 30: while (--adcLoop){
  5380                           
  5381  03A2  3001               	movlw	1
  5382  03A3  0020               	movlb	0	; select bank0
  5383  03A4  02B8               	subwf	getADCValue@adcLoop,f
  5384  03A5  1903               	btfsc	3,2
  5385  03A6  2BCC               	goto	l2317
  5386                           
  5387                           ;main.c: 32: ADCON0bits.ADGO = 1;
  5388  03A7  0021               	movlb	1	; select bank1
  5389  03A8  149D               	bsf	29,1	;volatile
  5390  03A9                     l214:	
  5391                           ;main.c: 34: while (ADCON0bits.ADGO){
  5392                           
  5393  03A9  0021               	movlb	1	; select bank1
  5394  03AA  1C9D               	btfss	29,1	;volatile
  5395  03AB  2BAE               	goto	l2313
  5396                           
  5397                           ;main.c: 35: __nop();
  5398  03AC  0000               	nop
  5399  03AD  2BA9               	goto	l214
  5400  03AE                     l2313:	
  5401                           
  5402                           ;main.c: 36: };main.c: 38: adcSum+= ADRESL;
  5403  03AE  081B               	movf	27,w	;volatile
  5404  03AF  0020               	movlb	0	; select bank0
  5405  03B0  00B3               	movwf	??_getADCValue
  5406  03B1  01B4               	clrf	??_getADCValue+1
  5407  03B2  01B5               	clrf	??_getADCValue+2
  5408  03B3  01B6               	clrf	??_getADCValue+3
  5409  03B4  0833               	movf	??_getADCValue,w
  5410  03B5  07B9               	addwf	getADCValue@adcSum,f
  5411  03B6  0834               	movf	??_getADCValue+1,w
  5412  03B7  3DBA               	addwfc	getADCValue@adcSum+1,f
  5413  03B8  0835               	movf	??_getADCValue+2,w
  5414  03B9  3DBB               	addwfc	getADCValue@adcSum+2,f
  5415  03BA  0836               	movf	??_getADCValue+3,w
  5416  03BB  3DBC               	addwfc	getADCValue@adcSum+3,f
  5417                           
  5418                           ;main.c: 39: adcSum+= (unsigned) (ADRESH << 8);
  5419  03BC  0021               	movlb	1	; select bank1
  5420  03BD  081C               	movf	28,w	;volatile
  5421  03BE  0020               	movlb	0	; select bank0
  5422  03BF  00B3               	movwf	??_getADCValue
  5423  03C0  01B4               	clrf	??_getADCValue+1
  5424  03C1  0833               	movf	??_getADCValue,w
  5425  03C2  00B4               	movwf	??_getADCValue+1
  5426  03C3  01B3               	clrf	??_getADCValue
  5427  03C4  0833               	movf	??_getADCValue,w
  5428  03C5  07B9               	addwf	getADCValue@adcSum,f
  5429  03C6  0834               	movf	??_getADCValue+1,w
  5430  03C7  3DBA               	addwfc	getADCValue@adcSum+1,f
  5431  03C8  3000               	movlw	0
  5432  03C9  3DBB               	addwfc	getADCValue@adcSum+2,f
  5433  03CA  3DBC               	addwfc	getADCValue@adcSum+3,f
  5434  03CB  2BA2               	goto	l2315
  5435  03CC                     l2317:	
  5436                           
  5437                           ;main.c: 40: };main.c: 42: adcSum*= 100;
  5438  03CC  3000               	movlw	0
  5439  03CD  00A4               	movwf	___lmul@multiplier+3
  5440  03CE  3000               	movlw	0
  5441  03CF  00A3               	movwf	___lmul@multiplier+2
  5442  03D0  3000               	movlw	0
  5443  03D1  00A2               	movwf	___lmul@multiplier+1
  5444  03D2  3064               	movlw	100
  5445  03D3  00A1               	movwf	___lmul@multiplier
  5446  03D4  083C               	movf	getADCValue@adcSum+3,w
  5447  03D5  00A8               	movwf	___lmul@multiplicand+3
  5448  03D6  083B               	movf	getADCValue@adcSum+2,w
  5449  03D7  00A7               	movwf	___lmul@multiplicand+2
  5450  03D8  083A               	movf	getADCValue@adcSum+1,w
  5451  03D9  00A6               	movwf	___lmul@multiplicand+1
  5452  03DA  0839               	movf	getADCValue@adcSum,w
  5453  03DB  00A5               	movwf	___lmul@multiplicand
  5454  03DC  3186  26A4  3183   	fcall	___lmul
  5455  03DF  0020               	movlb	0	; select bank0
  5456  03E0  0824               	movf	?___lmul+3,w
  5457  03E1  00BC               	movwf	getADCValue@adcSum+3
  5458  03E2  0823               	movf	?___lmul+2,w
  5459  03E3  00BB               	movwf	getADCValue@adcSum+2
  5460  03E4  0822               	movf	?___lmul+1,w
  5461  03E5  00BA               	movwf	getADCValue@adcSum+1
  5462  03E6  0821               	movf	?___lmul,w
  5463  03E7  00B9               	movwf	getADCValue@adcSum
  5464                           
  5465                           ;main.c: 43: adcSum/= divider;
  5466  03E8  0832               	movf	getADCValue@divider+3,w
  5467  03E9  00A4               	movwf	___lldiv@divisor+3
  5468  03EA  0831               	movf	getADCValue@divider+2,w
  5469  03EB  00A3               	movwf	___lldiv@divisor+2
  5470  03EC  0830               	movf	getADCValue@divider+1,w
  5471  03ED  00A2               	movwf	___lldiv@divisor+1
  5472  03EE  082F               	movf	getADCValue@divider,w
  5473  03EF  00A1               	movwf	___lldiv@divisor
  5474  03F0  083C               	movf	getADCValue@adcSum+3,w
  5475  03F1  00A8               	movwf	___lldiv@dividend+3
  5476  03F2  083B               	movf	getADCValue@adcSum+2,w
  5477  03F3  00A7               	movwf	___lldiv@dividend+2
  5478  03F4  083A               	movf	getADCValue@adcSum+1,w
  5479  03F5  00A6               	movwf	___lldiv@dividend+1
  5480  03F6  0839               	movf	getADCValue@adcSum,w
  5481  03F7  00A5               	movwf	___lldiv@dividend
  5482  03F8  3184  24B9         	fcall	___lldiv
  5483  03FA  0020               	movlb	0	; select bank0
  5484  03FB  0824               	movf	?___lldiv+3,w
  5485  03FC  00BC               	movwf	getADCValue@adcSum+3
  5486  03FD  0823               	movf	?___lldiv+2,w
  5487  03FE  00BB               	movwf	getADCValue@adcSum+2
  5488  03FF  0822               	movf	?___lldiv+1,w
  5489  0400  00BA               	movwf	getADCValue@adcSum+1
  5490  0401  0821               	movf	?___lldiv,w
  5491  0402  00B9               	movwf	getADCValue@adcSum
  5492                           
  5493                           ;main.c: 45: return adcSum;
  5494  0403  083C               	movf	getADCValue@adcSum+3,w
  5495  0404  00B2               	movwf	?_getADCValue+3
  5496  0405  083B               	movf	getADCValue@adcSum+2,w
  5497  0406  00B1               	movwf	?_getADCValue+2
  5498  0407  083A               	movf	getADCValue@adcSum+1,w
  5499  0408  00B0               	movwf	?_getADCValue+1
  5500  0409  0839               	movf	getADCValue@adcSum,w
  5501  040A  00AF               	movwf	?_getADCValue
  5502  040B  0008               	return
  5503  040C                     __end_of_getADCValue:	
  5504                           
  5505                           	psect	text16
  5506  06A4                     __ptext16:	
  5507 ;; *************** function ___lmul *****************
  5508 ;; Defined at:
  5509 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  multiplier      4    1[BANK0 ] unsigned long 
  5512 ;;  multiplicand    4    5[BANK0 ] unsigned long 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  product         4    9[BANK0 ] unsigned long 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  4    1[BANK0 ] unsigned long 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5524 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;Total ram usage:       12 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    7
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_getADCValue
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function ___lmul
  5540  06A4                     ___lmul:	
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5544  06A4  3000               	movlw	0
  5545  06A5  0020               	movlb	0	; select bank0
  5546  06A6  00AC               	movwf	___lmul@product+3
  5547  06A7  3000               	movlw	0
  5548  06A8  00AB               	movwf	___lmul@product+2
  5549  06A9  3000               	movlw	0
  5550  06AA  00AA               	movwf	___lmul@product+1
  5551  06AB  3000               	movlw	0
  5552  06AC  00A9               	movwf	___lmul@product
  5553  06AD                     l2153:	
  5554  06AD  1C21               	btfss	___lmul@multiplier,0
  5555  06AE  2EB7               	goto	l2157
  5556  06AF  0825               	movf	___lmul@multiplicand,w
  5557  06B0  07A9               	addwf	___lmul@product,f
  5558  06B1  0826               	movf	___lmul@multiplicand+1,w
  5559  06B2  3DAA               	addwfc	___lmul@product+1,f
  5560  06B3  0827               	movf	___lmul@multiplicand+2,w
  5561  06B4  3DAB               	addwfc	___lmul@product+2,f
  5562  06B5  0828               	movf	___lmul@multiplicand+3,w
  5563  06B6  3DAC               	addwfc	___lmul@product+3,f
  5564  06B7                     l2157:	
  5565  06B7  3001               	movlw	1
  5566  06B8                     u1085:	
  5567  06B8  35A5               	lslf	___lmul@multiplicand,f
  5568  06B9  0DA6               	rlf	___lmul@multiplicand+1,f
  5569  06BA  0DA7               	rlf	___lmul@multiplicand+2,f
  5570  06BB  0DA8               	rlf	___lmul@multiplicand+3,f
  5571  06BC  0B89               	decfsz	9,f
  5572  06BD  2EB8               	goto	u1085
  5573  06BE  3001               	movlw	1
  5574  06BF                     u1095:	
  5575  06BF  36A4               	lsrf	___lmul@multiplier+3,f
  5576  06C0  0CA3               	rrf	___lmul@multiplier+2,f
  5577  06C1  0CA2               	rrf	___lmul@multiplier+1,f
  5578  06C2  0CA1               	rrf	___lmul@multiplier,f
  5579  06C3  0B89               	decfsz	9,f
  5580  06C4  2EBF               	goto	u1095
  5581  06C5  0824               	movf	___lmul@multiplier+3,w
  5582  06C6  0423               	iorwf	___lmul@multiplier+2,w
  5583  06C7  0422               	iorwf	___lmul@multiplier+1,w
  5584  06C8  0421               	iorwf	___lmul@multiplier,w
  5585  06C9  1D03               	skipz
  5586  06CA  2EAD               	goto	l2153
  5587  06CB  082C               	movf	___lmul@product+3,w
  5588  06CC  00A4               	movwf	?___lmul+3
  5589  06CD  082B               	movf	___lmul@product+2,w
  5590  06CE  00A3               	movwf	?___lmul+2
  5591  06CF  082A               	movf	___lmul@product+1,w
  5592  06D0  00A2               	movwf	?___lmul+1
  5593  06D1  0829               	movf	___lmul@product,w
  5594  06D2  00A1               	movwf	?___lmul
  5595  06D3  0008               	return
  5596  06D4                     __end_of___lmul:	
  5597                           
  5598                           	psect	text17
  5599  04B9                     __ptext17:	
  5600 ;; *************** function ___lldiv *****************
  5601 ;; Defined at:
  5602 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  divisor         4    1[BANK0 ] unsigned long 
  5605 ;;  dividend        4    5[BANK0 ] unsigned long 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  quotient        4   10[BANK0 ] unsigned long 
  5608 ;;  counter         1   14[BANK0 ] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  4    1[BANK0 ] unsigned long 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5618 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;Total ram usage:       14 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    7
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_getADCValue
  5629 ;;		_ultoa
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function ___lldiv
  5635  04B9                     ___lldiv:	
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5639  04B9  3000               	movlw	0
  5640  04BA  0020               	movlb	0	; select bank0
  5641  04BB  00AD               	movwf	___lldiv@quotient+3
  5642  04BC  3000               	movlw	0
  5643  04BD  00AC               	movwf	___lldiv@quotient+2
  5644  04BE  3000               	movlw	0
  5645  04BF  00AB               	movwf	___lldiv@quotient+1
  5646  04C0  3000               	movlw	0
  5647  04C1  00AA               	movwf	___lldiv@quotient
  5648  04C2  0824               	movf	___lldiv@divisor+3,w
  5649  04C3  0423               	iorwf	___lldiv@divisor+2,w
  5650  04C4  0422               	iorwf	___lldiv@divisor+1,w
  5651  04C5  0421               	iorwf	___lldiv@divisor,w
  5652  04C6  1903               	skipnz
  5653  04C7  2D03               	goto	l1931
  5654  04C8  01AE               	clrf	___lldiv@counter
  5655  04C9  0AAE               	incf	___lldiv@counter,f
  5656  04CA                     l1917:	
  5657  04CA  1BA4               	btfsc	___lldiv@divisor+3,7
  5658  04CB  2CD8               	goto	l1919
  5659  04CC  3001               	movlw	1
  5660  04CD                     u765:	
  5661  04CD  35A1               	lslf	___lldiv@divisor,f
  5662  04CE  0DA2               	rlf	___lldiv@divisor+1,f
  5663  04CF  0DA3               	rlf	___lldiv@divisor+2,f
  5664  04D0  0DA4               	rlf	___lldiv@divisor+3,f
  5665  04D1  0B89               	decfsz	9,f
  5666  04D2  2CCD               	goto	u765
  5667  04D3  3001               	movlw	1
  5668  04D4  00A9               	movwf	??___lldiv
  5669  04D5  0829               	movf	??___lldiv,w
  5670  04D6  07AE               	addwf	___lldiv@counter,f
  5671  04D7  2CCA               	goto	l1917
  5672  04D8                     l1919:	
  5673  04D8  3001               	movlw	1
  5674  04D9                     u785:	
  5675  04D9  35AA               	lslf	___lldiv@quotient,f
  5676  04DA  0DAB               	rlf	___lldiv@quotient+1,f
  5677  04DB  0DAC               	rlf	___lldiv@quotient+2,f
  5678  04DC  0DAD               	rlf	___lldiv@quotient+3,f
  5679  04DD  0B89               	decfsz	9,f
  5680  04DE  2CD9               	goto	u785
  5681  04DF  0824               	movf	___lldiv@divisor+3,w
  5682  04E0  0228               	subwf	___lldiv@dividend+3,w
  5683  04E1  1D03               	skipz
  5684  04E2  2CED               	goto	u795
  5685  04E3  0823               	movf	___lldiv@divisor+2,w
  5686  04E4  0227               	subwf	___lldiv@dividend+2,w
  5687  04E5  1D03               	skipz
  5688  04E6  2CED               	goto	u795
  5689  04E7  0822               	movf	___lldiv@divisor+1,w
  5690  04E8  0226               	subwf	___lldiv@dividend+1,w
  5691  04E9  1D03               	skipz
  5692  04EA  2CED               	goto	u795
  5693  04EB  0821               	movf	___lldiv@divisor,w
  5694  04EC  0225               	subwf	___lldiv@dividend,w
  5695  04ED                     u795:	
  5696  04ED  1C03               	skipc
  5697  04EE  2CF8               	goto	l1927
  5698  04EF  0821               	movf	___lldiv@divisor,w
  5699  04F0  02A5               	subwf	___lldiv@dividend,f
  5700  04F1  0822               	movf	___lldiv@divisor+1,w
  5701  04F2  3BA6               	subwfb	___lldiv@dividend+1,f
  5702  04F3  0823               	movf	___lldiv@divisor+2,w
  5703  04F4  3BA7               	subwfb	___lldiv@dividend+2,f
  5704  04F5  0824               	movf	___lldiv@divisor+3,w
  5705  04F6  3BA8               	subwfb	___lldiv@dividend+3,f
  5706  04F7  142A               	bsf	___lldiv@quotient,0
  5707  04F8                     l1927:	
  5708  04F8  3001               	movlw	1
  5709  04F9                     u805:	
  5710  04F9  36A4               	lsrf	___lldiv@divisor+3,f
  5711  04FA  0CA3               	rrf	___lldiv@divisor+2,f
  5712  04FB  0CA2               	rrf	___lldiv@divisor+1,f
  5713  04FC  0CA1               	rrf	___lldiv@divisor,f
  5714  04FD  0B89               	decfsz	9,f
  5715  04FE  2CF9               	goto	u805
  5716  04FF  3001               	movlw	1
  5717  0500  02AE               	subwf	___lldiv@counter,f
  5718  0501  1D03               	btfss	3,2
  5719  0502  2CD8               	goto	l1919
  5720  0503                     l1931:	
  5721  0503  082D               	movf	___lldiv@quotient+3,w
  5722  0504  00A4               	movwf	?___lldiv+3
  5723  0505  082C               	movf	___lldiv@quotient+2,w
  5724  0506  00A3               	movwf	?___lldiv+2
  5725  0507  082B               	movf	___lldiv@quotient+1,w
  5726  0508  00A2               	movwf	?___lldiv+1
  5727  0509  082A               	movf	___lldiv@quotient,w
  5728  050A  00A1               	movwf	?___lldiv
  5729  050B  0008               	return
  5730  050C                     __end_of___lldiv:	
  5731                           
  5732                           	psect	text18
  5733  0EF2                     __ptext18:	
  5734 ;; *************** function _checkTXPower *****************
  5735 ;; Defined at:
  5736 ;;		line 91 in file "main.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  rxPacket        1    9[BANK0 ] PTR struct .
  5741 ;;		 -> RXPacket(33), 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;Total ram usage:        2 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:   11
  5758 ;; This function calls:
  5759 ;;		_nrf24l01ChangeTXPower
  5760 ;;		_nrf24l01GetRXPacket
  5761 ;; This function is called by:
  5762 ;;		_loop
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _checkTXPower
  5768  0EF2                     _checkTXPower:	
  5769                           
  5770                           ;main.c: 92: nrf24l01Packet_t * rxPacket = nrf24l01GetRXPacket();
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _checkTXPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5774  0EF2  3180  2002  318E   	fcall	_nrf24l01GetRXPacket
  5775  0EF5  0020               	movlb	0	; select bank0
  5776  0EF6  00A8               	movwf	??_checkTXPower
  5777  0EF7  0828               	movf	??_checkTXPower,w
  5778  0EF8  00A9               	movwf	checkTXPower@rxPacket
  5779                           
  5780                           ;main.c: 94: if (rxPacket->packetData.ACKRPD){
  5781  0EF9  0829               	movf	checkTXPower@rxPacket,w
  5782  0EFA  0086               	movwf	6
  5783  0EFB  3001               	movlw	1	; select bank2/3
  5784  0EFC  0087               	movwf	7
  5785  0EFD  1C81               	btfss	1,1
  5786  0EFE  0008               	return
  5787                           
  5788                           ;main.c: 95: nrf24l01ChangeTXPower(-1);
  5789  0EFF  30FF               	movlw	255
  5790  0F00  00A4               	movwf	nrf24l01ChangeTXPower@addPower
  5791  0F01  30FF               	movlw	255
  5792  0F02  00A5               	movwf	nrf24l01ChangeTXPower@addPower+1
  5793  0F03  3185  254F         	fcall	_nrf24l01ChangeTXPower
  5794  0F05  0008               	return
  5795  0F06                     __end_of_checkTXPower:	
  5796                           
  5797                           	psect	text19
  5798  0002                     __ptext19:	
  5799 ;; *************** function _nrf24l01GetRXPacket *****************
  5800 ;; Defined at:
  5801 ;;		line 129 in file "nrf24l01.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      PTR struct .
  5808 ;; Registers used:
  5809 ;;		wreg
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    7
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_checkTXPower
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           
  5830                           ;psect for function _nrf24l01GetRXPacket
  5831  0002                     _nrf24l01GetRXPacket:	
  5832                           
  5833                           ;nrf24l01.c: 130: return &RXPacket;
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in _nrf24l01GetRXPacket: [wreg]
  5837  0002  3040               	movlw	(low (_RXPacket| (0+256)))& (0+255)
  5838  0003  0008               	return
  5839  0004                     __end_of_nrf24l01GetRXPacket:	
  5840                           
  5841                           	psect	text20
  5842  054F                     __ptext20:	
  5843 ;; *************** function _nrf24l01ChangeTXPower *****************
  5844 ;; Defined at:
  5845 ;;		line 33 in file "nrf24l01.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  addPower        2    4[BANK0 ] int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  rfSetup         1    7[BANK0 ] struct .
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;Total ram usage:        4 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:   10
  5866 ;; This function calls:
  5867 ;;		_nrf24l01Send
  5868 ;; This function is called by:
  5869 ;;		_checkTXPower
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _nrf24l01ChangeTXPower
  5875  054F                     _nrf24l01ChangeTXPower:	
  5876                           
  5877                           ;nrf24l01.c: 35: n_RF_SETUP_t rfSetup;;nrf24l01.c: 36: rfSetup.byte = nrf24l01Send(0b000
      +                          00000 | 0x06, 0);
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _nrf24l01ChangeTXPower: [wreg+status,2+status,0+pclath+cstack]
  5881  054F  0020               	movlb	0	; select bank0
  5882  0550  01A1               	clrf	nrf24l01Send@data
  5883  0551  3006               	movlw	6
  5884  0552  318F  27E0  3185   	fcall	_nrf24l01Send
  5885  0555  0020               	movlb	0	; select bank0
  5886  0556  00A6               	movwf	??_nrf24l01ChangeTXPower
  5887  0557  0826               	movf	??_nrf24l01ChangeTXPower,w
  5888  0558  00A7               	movwf	nrf24l01ChangeTXPower@rfSetup
  5889                           
  5890                           ;nrf24l01.c: 38: if (addPower > 0){
  5891  0559  0825               	movf	nrf24l01ChangeTXPower@addPower+1,w
  5892  055A  3A80               	xorlw	128
  5893  055B  00A6               	movwf	??_nrf24l01ChangeTXPower
  5894  055C  3080               	movlw	128
  5895  055D  0226               	subwf	??_nrf24l01ChangeTXPower,w
  5896  055E  1D03               	skipz
  5897  055F  2D62               	goto	u965
  5898  0560  3001               	movlw	1
  5899  0561  0224               	subwf	nrf24l01ChangeTXPower@addPower,w
  5900  0562                     u965:	
  5901  0562  1C03               	skipc
  5902  0563  2D74               	goto	l2105
  5903                           
  5904                           ;nrf24l01.c: 39: if (rfSetup.RF_PWR < 3){
  5905  0564  0020               	movlb	0	; select bank0
  5906  0565  0C27               	rrf	nrf24l01ChangeTXPower@rfSetup,w
  5907  0566  3903               	andlw	3
  5908  0567  3A03               	xorlw	3
  5909  0568  1903               	skipnz
  5910  0569  2D74               	goto	l2105
  5911                           
  5912                           ;nrf24l01.c: 40: rfSetup.RF_PWR++;
  5913  056A  0C27               	rrf	nrf24l01ChangeTXPower@rfSetup,w
  5914  056B  3903               	andlw	3
  5915  056C  00A6               	movwf	??_nrf24l01ChangeTXPower
  5916  056D  0AA6               	incf	??_nrf24l01ChangeTXPower,f
  5917  056E  0DA6               	rlf	??_nrf24l01ChangeTXPower,f
  5918  056F  0827               	movf	nrf24l01ChangeTXPower@rfSetup,w
  5919  0570  0626               	xorwf	??_nrf24l01ChangeTXPower,w
  5920  0571  39F9               	andlw	-7
  5921  0572  0626               	xorwf	??_nrf24l01ChangeTXPower,w
  5922  0573  00A7               	movwf	nrf24l01ChangeTXPower@rfSetup
  5923  0574                     l2105:	
  5924                           
  5925                           ;nrf24l01.c: 41: };nrf24l01.c: 42: };nrf24l01.c: 44: if (addPower < 0){
  5926  0574  0020               	movlb	0	; select bank0
  5927  0575  1FA5               	btfss	nrf24l01ChangeTXPower@addPower+1,7
  5928  0576  2D86               	goto	l2111
  5929                           
  5930                           ;nrf24l01.c: 45: if (rfSetup.RF_PWR > 0){
  5931  0577  0C27               	rrf	nrf24l01ChangeTXPower@rfSetup,w
  5932  0578  3903               	andlw	3
  5933  0579  3A00               	xorlw	0
  5934  057A  1903               	skipnz
  5935  057B  2D86               	goto	l2111
  5936                           
  5937                           ;nrf24l01.c: 46: rfSetup.RF_PWR--;
  5938  057C  0C27               	rrf	nrf24l01ChangeTXPower@rfSetup,w
  5939  057D  3903               	andlw	3
  5940  057E  00A6               	movwf	??_nrf24l01ChangeTXPower
  5941  057F  03A6               	decf	??_nrf24l01ChangeTXPower,f
  5942  0580  0DA6               	rlf	??_nrf24l01ChangeTXPower,f
  5943  0581  0827               	movf	nrf24l01ChangeTXPower@rfSetup,w
  5944  0582  0626               	xorwf	??_nrf24l01ChangeTXPower,w
  5945  0583  39F9               	andlw	-7
  5946  0584  0626               	xorwf	??_nrf24l01ChangeTXPower,w
  5947  0585  00A7               	movwf	nrf24l01ChangeTXPower@rfSetup
  5948  0586                     l2111:	
  5949                           
  5950                           ;nrf24l01.c: 47: };nrf24l01.c: 48: };nrf24l01.c: 50: nrf24l01Send(0b00100000 | 0x06, rfS
      +                          etup.byte);
  5951  0586  0827               	movf	nrf24l01ChangeTXPower@rfSetup,w
  5952  0587  00A6               	movwf	??_nrf24l01ChangeTXPower
  5953  0588  0826               	movf	??_nrf24l01ChangeTXPower,w
  5954  0589  00A1               	movwf	nrf24l01Send@data
  5955  058A  3026               	movlw	38
  5956  058B  318F  27E0         	fcall	_nrf24l01Send
  5957  058D  0008               	return
  5958  058E                     __end_of_nrf24l01ChangeTXPower:	
  5959                           
  5960                           	psect	text21
  5961  0FE0                     __ptext21:	
  5962 ;; *************** function _nrf24l01Send *****************
  5963 ;; Defined at:
  5964 ;;		line 9 in file "nrf24l01.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  command         1    wreg     unsigned char 
  5967 ;;  data            1    1[BANK0 ] unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  command         1    3[BANK0 ] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      unsigned char 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;Total ram usage:        3 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    9
  5986 ;; This function calls:
  5987 ;;		_enableInterrupts
  5988 ;;		_nrf24l01SPIEnd
  5989 ;;		_nrf24l01SPISend
  5990 ;;		_nrf24l01SPIStart
  5991 ;; This function is called by:
  5992 ;;		_loop
  5993 ;;		_nrf24l01ChangeTXPower
  5994 ;;		_nrf24l01SetRXMode
  5995 ;;		_nrf24l01InitRegisters
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _nrf24l01Send
  6001  0FE0                     _nrf24l01Send:	
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  6005                           ;nrf24l01Send@command stored from wreg
  6006  0FE0  0020               	movlb	0	; select bank0
  6007  0FE1  00A3               	movwf	nrf24l01Send@command
  6008                           
  6009                           ;nrf24l01.c: 12: enableInterrupts(0);
  6010  0FE2  3000               	movlw	0
  6011  0FE3  318E  26C3  318F   	fcall	_enableInterrupts
  6012                           
  6013                           ;nrf24l01.c: 15: nrf24l01SPIStart();
  6014  0FE6  318E  26CB  318F   	fcall	_nrf24l01SPIStart
  6015                           
  6016                           ;nrf24l01.c: 18: nrf24l01SPISend(command);
  6017  0FE9  0020               	movlb	0	; select bank0
  6018  0FEA  0823               	movf	nrf24l01Send@command,w
  6019  0FEB  318E  26D3  318F   	fcall	_nrf24l01SPISend
  6020                           
  6021                           ;nrf24l01.c: 21: data = nrf24l01SPISend(data);
  6022  0FEE  0020               	movlb	0	; select bank0
  6023  0FEF  0821               	movf	nrf24l01Send@data,w
  6024  0FF0  318E  26D3  318F   	fcall	_nrf24l01SPISend
  6025  0FF3  0020               	movlb	0	; select bank0
  6026  0FF4  00A2               	movwf	??_nrf24l01Send
  6027  0FF5  0822               	movf	??_nrf24l01Send,w
  6028  0FF6  00A1               	movwf	nrf24l01Send@data
  6029                           
  6030                           ;nrf24l01.c: 24: nrf24l01SPIEnd();
  6031  0FF7  318E  26BC  318F   	fcall	_nrf24l01SPIEnd
  6032                           
  6033                           ;nrf24l01.c: 27: enableInterrupts(1);
  6034  0FFA  3001               	movlw	1
  6035  0FFB  318E  26C3         	fcall	_enableInterrupts
  6036                           
  6037                           ;nrf24l01.c: 29: return data;
  6038  0FFD  0020               	movlb	0	; select bank0
  6039  0FFE  0821               	movf	nrf24l01Send@data,w
  6040  0FFF  0008               	return
  6041  1000                     __end_of_nrf24l01Send:	
  6042                           
  6043                           	psect	text22
  6044  079F                     __ptext22:	
  6045 ;; *************** function _flashUpdate *****************
  6046 ;; Defined at:
  6047 ;;		line 97 in file "flash.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  i               2    9[BANK0 ] unsigned int 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;Total ram usage:        4 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    8
  6068 ;; This function calls:
  6069 ;;		_flashWriteByte
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _flashUpdate
  6077  079F                     _flashUpdate:	
  6078                           
  6079                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in _flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6083  079F  0020               	movlb	0	; select bank0
  6084  07A0  01A9               	clrf	flashUpdate@i
  6085  07A1  01AA               	clrf	flashUpdate@i+1
  6086  07A2                     L1:	
  6087  07A2  3000               	movlw	0
  6088  07A3  022A               	subwf	flashUpdate@i+1,w
  6089  07A4  3020               	movlw	32
  6090  07A5  1903               	skipnz
  6091  07A6  0229               	subwf	flashUpdate@i,w
  6092  07A7  1803               	btfsc	3,0
  6093  07A8  0008               	return
  6094                           
  6095                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  6096  07A9  082A               	movf	flashUpdate@i+1,w
  6097  07AA  00A2               	movwf	flashWriteByte@offset+1
  6098  07AB  0829               	movf	flashUpdate@i,w
  6099  07AC  00A1               	movwf	flashWriteByte@offset
  6100  07AD  0829               	movf	flashUpdate@i,w
  6101  07AE  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6102  07AF  0086               	movwf	6
  6103  07B0  3001               	movlw	1	; select bank2/3
  6104  07B1  0087               	movwf	7
  6105  07B2  0801               	movf	1,w
  6106  07B3  00A7               	movwf	??_flashUpdate
  6107  07B4  01A8               	clrf	??_flashUpdate+1
  6108  07B5  0827               	movf	??_flashUpdate,w
  6109  07B6  00A3               	movwf	flashWriteByte@data
  6110  07B7  0828               	movf	??_flashUpdate+1,w
  6111  07B8  00A4               	movwf	flashWriteByte@data+1
  6112  07B9  3185  258E  3187   	fcall	_flashWriteByte
  6113  07BC  3001               	movlw	1
  6114  07BD  0020               	movlb	0	; select bank0
  6115  07BE  07A9               	addwf	flashUpdate@i,f
  6116  07BF  3000               	movlw	0
  6117  07C0  3DAA               	addwfc	flashUpdate@i+1,f
  6118  07C1  2FA2               	goto	L1
  6119  07C2                     __end_of_flashUpdate:	
  6120                           
  6121                           	psect	text23
  6122  058E                     __ptext23:	
  6123 ;; *************** function _flashWriteByte *****************
  6124 ;; Defined at:
  6125 ;;		line 8 in file "flash.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  offset          2    1[BANK0 ] unsigned int 
  6128 ;;  data            2    3[BANK0 ] unsigned int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  address         2    5[BANK0 ] unsigned int 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;Total ram usage:        6 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    7
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_flashUpdate
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           
  6155                           ;psect for function _flashWriteByte
  6156  058E                     _flashWriteByte:	
  6157                           
  6158                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _flashWriteByte: [wreg+status,2+status,0]
  6162  058E  138B               	bcf	11,7	;volatile
  6163                           
  6164                           ;flash.c: 15: PMCON1 = 0x00;
  6165  058F  0031               	movlb	17	; select bank17
  6166  0590  0195               	clrf	21	;volsfr
  6167                           
  6168                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  6169  0591  0020               	movlb	0	; select bank0
  6170  0592  0821               	movf	flashWriteByte@offset,w
  6171  0593  3EE0               	addlw	224
  6172  0594  00A5               	movwf	flashWriteByte@address
  6173  0595  301F               	movlw	31
  6174  0596  3D22               	addwfc	flashWriteByte@offset+1,w
  6175  0597  00A6               	movwf	flashWriteByte@address+1
  6176                           
  6177                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  6178  0598  0825               	movf	flashWriteByte@address,w
  6179  0599  0031               	movlb	17	; select bank17
  6180  059A  0091               	movwf	17	;volatile
  6181                           
  6182                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  6183  059B  0020               	movlb	0	; select bank0
  6184  059C  0826               	movf	flashWriteByte@address+1,w
  6185  059D  0031               	movlb	17	; select bank17
  6186  059E  0092               	movwf	18	;volatile
  6187                           
  6188                           ;flash.c: 21: PMCON1bits.FREE = 1;
  6189  059F  1615               	bsf	21,4	;volsfr
  6190                           
  6191                           ;flash.c: 22: PMCON1bits.WREN = 1;
  6192  05A0  1515               	bsf	21,2	;volsfr
  6193                           
  6194                           ;flash.c: 24: PMCON2 = 0x55;
  6195  05A1  3055               	movlw	85
  6196  05A2  0096               	movwf	22	;volsfr
  6197                           
  6198                           ;flash.c: 25: PMCON2 = 0xAA;
  6199  05A3  30AA               	movlw	170
  6200  05A4  0096               	movwf	22	;volsfr
  6201                           
  6202                           ;flash.c: 27: PMCON1bits.WR = 1;
  6203  05A5  1495               	bsf	21,1	;volsfr
  6204                           
  6205                           ;flash.c: 29: __nop();
  6206  05A6  0000               	nop
  6207                           
  6208                           ;flash.c: 30: __nop();
  6209  05A7  0000               	nop
  6210                           
  6211                           ;flash.c: 32: PMCON1bits.WREN = 0;
  6212  05A8  0031               	movlb	17	; select bank17
  6213  05A9  1115               	bcf	21,2	;volsfr
  6214                           
  6215                           ;flash.c: 36: PMCON1 = 0x00;
  6216  05AA  0195               	clrf	21	;volsfr
  6217                           
  6218                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  6219  05AB  0020               	movlb	0	; select bank0
  6220  05AC  0825               	movf	flashWriteByte@address,w
  6221  05AD  0031               	movlb	17	; select bank17
  6222  05AE  0091               	movwf	17	;volatile
  6223                           
  6224                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  6225  05AF  0020               	movlb	0	; select bank0
  6226  05B0  0826               	movf	flashWriteByte@address+1,w
  6227  05B1  0031               	movlb	17	; select bank17
  6228  05B2  0092               	movwf	18	;volatile
  6229                           
  6230                           ;flash.c: 41: PMCON1bits.FREE = 0;
  6231  05B3  1215               	bcf	21,4	;volsfr
  6232                           
  6233                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  6234  05B4  1695               	bsf	21,5	;volsfr
  6235                           
  6236                           ;flash.c: 43: PMCON1bits.WREN = 1;
  6237  05B5  1515               	bsf	21,2	;volsfr
  6238                           
  6239                           ;flash.c: 45: PMDATL = (data >> 0);
  6240  05B6  0020               	movlb	0	; select bank0
  6241  05B7  0823               	movf	flashWriteByte@data,w
  6242  05B8  0031               	movlb	17	; select bank17
  6243  05B9  0093               	movwf	19	;volatile
  6244                           
  6245                           ;flash.c: 46: PMDATH = (data >> 8);
  6246  05BA  0020               	movlb	0	; select bank0
  6247  05BB  0824               	movf	flashWriteByte@data+1,w
  6248  05BC  0031               	movlb	17	; select bank17
  6249  05BD  0094               	movwf	20	;volatile
  6250                           
  6251                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  6252  05BE  1295               	bcf	21,5	;volsfr
  6253                           
  6254                           ;flash.c: 50: PMCON2 = 0x55;
  6255  05BF  3055               	movlw	85
  6256  05C0  0096               	movwf	22	;volsfr
  6257                           
  6258                           ;flash.c: 51: PMCON2 = 0xAA;
  6259  05C1  30AA               	movlw	170
  6260  05C2  0096               	movwf	22	;volsfr
  6261                           
  6262                           ;flash.c: 53: PMCON1bits.WR = 1;
  6263  05C3  1495               	bsf	21,1	;volsfr
  6264                           
  6265                           ;flash.c: 55: __nop();
  6266  05C4  0000               	nop
  6267                           
  6268                           ;flash.c: 56: __nop();
  6269  05C5  0000               	nop
  6270                           
  6271                           ;flash.c: 58: PMCON1bits.WREN = 0;
  6272  05C6  0031               	movlb	17	; select bank17
  6273  05C7  1115               	bcf	21,2	;volsfr
  6274                           
  6275                           ;flash.c: 61: INTCONbits.GIE = 1;
  6276  05C8  178B               	bsf	11,7	;volatile
  6277  05C9  0008               	return
  6278  05CA                     __end_of_flashWriteByte:	
  6279                           
  6280                           	psect	text24
  6281  0FC0                     __ptext24:	
  6282 ;; *************** function _flashRealod *****************
  6283 ;; Defined at:
  6284 ;;		line 90 in file "flash.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  i               2   11[BANK0 ] unsigned int 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;Total ram usage:        3 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    8
  6305 ;; This function calls:
  6306 ;;		_flashReadByte
  6307 ;; This function is called by:
  6308 ;;		_main
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           
  6313                           ;psect for function _flashRealod
  6314  0FC0                     _flashRealod:	
  6315                           
  6316                           ;flash.c: 92: for (unsigned int i = 0; i < 32; i++){
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _flashRealod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6320  0FC0  0020               	movlb	0	; select bank0
  6321  0FC1  01AB               	clrf	flashRealod@i
  6322  0FC2  01AC               	clrf	flashRealod@i+1
  6323  0FC3                     L2:	
  6324  0FC3  3000               	movlw	0
  6325  0FC4  022C               	subwf	flashRealod@i+1,w
  6326  0FC5  3020               	movlw	32
  6327  0FC6  1903               	skipnz
  6328  0FC7  022B               	subwf	flashRealod@i,w
  6329  0FC8  1803               	btfsc	3,0
  6330  0FC9  0008               	return
  6331                           
  6332                           ;flash.c: 93: romHolder.array[i] = flashReadByte(i);
  6333  0FCA  082C               	movf	flashRealod@i+1,w
  6334  0FCB  00A2               	movwf	flashReadByte@offset+1
  6335  0FCC  082B               	movf	flashRealod@i,w
  6336  0FCD  00A1               	movwf	flashReadByte@offset
  6337  0FCE  3186  2672  318F   	fcall	_flashReadByte
  6338  0FD1  0020               	movlb	0	; select bank0
  6339  0FD2  0821               	movf	?_flashReadByte,w
  6340  0FD3  00AA               	movwf	??_flashRealod
  6341  0FD4  082B               	movf	flashRealod@i,w
  6342  0FD5  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  6343  0FD6  0086               	movwf	6
  6344  0FD7  3001               	movlw	1	; select bank2/3
  6345  0FD8  0087               	movwf	7
  6346  0FD9  082A               	movf	??_flashRealod,w
  6347  0FDA  0081               	movwf	1
  6348  0FDB  3001               	movlw	1
  6349  0FDC  07AB               	addwf	flashRealod@i,f
  6350  0FDD  3000               	movlw	0
  6351  0FDE  3DAC               	addwfc	flashRealod@i+1,f
  6352  0FDF  2FC3               	goto	L2
  6353  0FE0                     __end_of_flashRealod:	
  6354                           
  6355                           	psect	text25
  6356  0672                     __ptext25:	
  6357 ;; *************** function _flashReadByte *****************
  6358 ;; Defined at:
  6359 ;;		line 64 in file "flash.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  offset          2    1[BANK0 ] unsigned int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  address         2    8[BANK0 ] unsigned int 
  6364 ;;  result          2    6[BANK0 ] unsigned int 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  2    1[BANK0 ] unsigned int 
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;Total ram usage:        9 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    7
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_flashRealod
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _flashReadByte
  6390  0672                     _flashReadByte:	
  6391                           
  6392                           ;flash.c: 66: unsigned int address;;flash.c: 68: INTCONbits.GIE = 0;
  6393                           
  6394                           ;incstack = 0
  6395                           ; Regs used in _flashReadByte: [wreg+status,2+status,0]
  6396  0672  138B               	bcf	11,7	;volatile
  6397                           
  6398                           ;flash.c: 70: PMCON1 = 0x00;
  6399  0673  0031               	movlb	17	; select bank17
  6400  0674  0195               	clrf	21	;volsfr
  6401                           
  6402                           ;flash.c: 72: address = (0x2000U - 32) + offset;
  6403  0675  0020               	movlb	0	; select bank0
  6404  0676  0821               	movf	flashReadByte@offset,w
  6405  0677  3EE0               	addlw	224
  6406  0678  00A8               	movwf	flashReadByte@address
  6407  0679  301F               	movlw	31
  6408  067A  3D22               	addwfc	flashReadByte@offset+1,w
  6409  067B  00A9               	movwf	flashReadByte@address+1
  6410                           
  6411                           ;flash.c: 73: PMADRL = (char) (address >> 0);
  6412  067C  0828               	movf	flashReadByte@address,w
  6413  067D  0031               	movlb	17	; select bank17
  6414  067E  0091               	movwf	17	;volatile
  6415                           
  6416                           ;flash.c: 74: PMADRH = (char) (address >> 8);
  6417  067F  0020               	movlb	0	; select bank0
  6418  0680  0829               	movf	flashReadByte@address+1,w
  6419  0681  0031               	movlb	17	; select bank17
  6420  0682  0092               	movwf	18	;volatile
  6421                           
  6422                           ;flash.c: 76: PMCON1bits.RD = 1;
  6423  0683  1415               	bsf	21,0	;volsfr
  6424                           
  6425                           ;flash.c: 78: __nop();
  6426  0684  0000               	nop
  6427                           
  6428                           ;flash.c: 79: __nop();
  6429  0685  0000               	nop
  6430                           
  6431                           ;flash.c: 81: unsigned int result = 0;
  6432  0686  0020               	movlb	0	; select bank0
  6433  0687  01A6               	clrf	flashReadByte@result
  6434  0688  01A7               	clrf	flashReadByte@result+1
  6435                           
  6436                           ;flash.c: 82: result = PMDATL;
  6437  0689  0031               	movlb	17	; select bank17
  6438  068A  0813               	movf	19,w	;volatile
  6439  068B  0020               	movlb	0	; select bank0
  6440  068C  00A3               	movwf	??_flashReadByte
  6441  068D  01A4               	clrf	??_flashReadByte+1
  6442  068E  0823               	movf	??_flashReadByte,w
  6443  068F  00A6               	movwf	flashReadByte@result
  6444  0690  0824               	movf	??_flashReadByte+1,w
  6445  0691  00A7               	movwf	flashReadByte@result+1
  6446                           
  6447                           ;flash.c: 83: result|= ( (unsigned) (PMDATH) << 8);
  6448  0692  0031               	movlb	17	; select bank17
  6449  0693  0814               	movf	20,w	;volatile
  6450  0694  0020               	movlb	0	; select bank0
  6451  0695  00A3               	movwf	??_flashReadByte
  6452  0696  01A4               	clrf	??_flashReadByte+1
  6453  0697  0823               	movf	??_flashReadByte,w
  6454  0698  00A4               	movwf	??_flashReadByte+1
  6455  0699  01A3               	clrf	??_flashReadByte
  6456  069A  0823               	movf	??_flashReadByte,w
  6457  069B  04A6               	iorwf	flashReadByte@result,f
  6458  069C  0824               	movf	??_flashReadByte+1,w
  6459  069D  04A7               	iorwf	flashReadByte@result+1,f
  6460                           
  6461                           ;flash.c: 85: INTCONbits.GIE = 1;
  6462  069E  178B               	bsf	11,7	;volatile
  6463                           
  6464                           ;flash.c: 87: return result;
  6465  069F  0827               	movf	flashReadByte@result+1,w
  6466  06A0  00A2               	movwf	?_flashReadByte+1
  6467  06A1  0826               	movf	flashReadByte@result,w
  6468  06A2  00A1               	movwf	?_flashReadByte
  6469  06A3  0008               	return
  6470  06A4                     __end_of_flashReadByte:	
  6471                           
  6472                           	psect	intentry
  6473  0004                     __pintentry:	
  6474 ;; *************** function _ISR *****************
  6475 ;; Defined at:
  6476 ;;		line 14 in file "main.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    6
  6497 ;; This function calls:
  6498 ;;		_nrf24l01ISR
  6499 ;; This function is called by:
  6500 ;;		Interrupt level 1
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504  0004                     _ISR:	
  6505                           
  6506                           ;incstack = 0
  6507  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6508                           
  6509                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6510  0005  3180               	pagesel	$
  6511                           
  6512                           ;main.c: 16: if (PIR0bits.INTF){
  6513  0006  0020               	movlb	0	; select bank0
  6514  0007  1C10               	btfss	16,0	;volatile
  6515  0008  280D               	goto	i1l209
  6516                           
  6517                           ;main.c: 17: nrf24l01ISR();
  6518  0009  3186  263C         	fcall	_nrf24l01ISR
  6519                           
  6520                           ;main.c: 18: PIR0bits.INTF = 0;
  6521  000B  0020               	movlb	0	; select bank0
  6522  000C  1010               	bcf	16,0	;volatile
  6523  000D                     i1l209:	
  6524  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6525  000E  0009               	retfie
  6526  000F                     __end_of_ISR:	
  6527                           
  6528                           	psect	text27
  6529  063C                     __ptext27:	
  6530 ;; *************** function _nrf24l01ISR *****************
  6531 ;; Defined at:
  6532 ;;		line 246 in file "nrf24l01.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  status          1    0[BANK0 ] struct .
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;Total ram usage:        2 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    5
  6553 ;; This function calls:
  6554 ;;		_exception
  6555 ;;		_nrf24l01CheckACK
  6556 ;;		_nrf24l01ReceivePacket
  6557 ;;		i1_nrf24l01Send
  6558 ;;		i1_nrf24l01SetRXMode
  6559 ;; This function is called by:
  6560 ;;		_ISR
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           
  6565                           ;psect for function _nrf24l01ISR
  6566  063C                     _nrf24l01ISR:	
  6567                           
  6568                           ;nrf24l01.c: 248: n_STATUS_t status;;nrf24l01.c: 249: status.byte = nrf24l01Send(0b00000
      +                          000 | 0x07, 0);
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _nrf24l01ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6572  063C  01F1               	clrf	i1nrf24l01Send@data
  6573  063D  3007               	movlw	7
  6574  063E  318F  276A  3186   	fcall	i1_nrf24l01Send
  6575  0641  00FD               	movwf	??_nrf24l01ISR
  6576  0642  087D               	movf	??_nrf24l01ISR,w
  6577  0643  0020               	movlb	0	; select bank0
  6578  0644  00A0               	movwf	nrf24l01ISR@status
  6579                           
  6580                           ;nrf24l01.c: 254: };nrf24l01.c: 257: if (status.byte == 0xFF){
  6581  0645  0A20               	incf	nrf24l01ISR@status,w
  6582  0646  1D03               	btfss	3,2
  6583  0647  2E4C               	goto	i1l2875
  6584                           
  6585                           ;nrf24l01.c: 258: exception(2);
  6586  0648  3002               	movlw	2
  6587  0649  318F  2706  3186   	fcall	_exception
  6588  064C                     i1l2875:	
  6589                           
  6590                           ;nrf24l01.c: 259: };nrf24l01.c: 261: if (status.TX_DS){
  6591  064C  0020               	movlb	0	; select bank0
  6592  064D  1EA0               	btfss	nrf24l01ISR@status,5
  6593  064E  2E5B               	goto	i1l2883
  6594                           
  6595                           ;nrf24l01.c: 264: nrf24l01.TXBusy = 0;
  6596  064F  105B               	bcf	_nrf24l01,0	;volatile
  6597                           
  6598                           ;nrf24l01.c: 267: if (!nrf24l01.RXMode){
  6599  0650  195B               	btfsc	_nrf24l01,2	;volatile
  6600  0651  2E5B               	goto	i1l2883
  6601                           
  6602                           ;nrf24l01.c: 268: if (TXPacket->packetData.ACKRequest){
  6603  0652  0859               	movf	_TXPacket,w
  6604  0653  0086               	movwf	6
  6605  0654  0187               	clrf	7
  6606  0655  1D01               	btfss	1,2
  6607  0656  2E5B               	goto	i1l2883
  6608                           
  6609                           ;nrf24l01.c: 271: nrf24l01SetRXMode(1);
  6610  0657  3001               	movlw	1
  6611  0658  3186  2605  3186   	fcall	i1_nrf24l01SetRXMode
  6612  065B                     i1l2883:	
  6613                           
  6614                           ;nrf24l01.c: 272: };nrf24l01.c: 273: };nrf24l01.c: 274: };nrf24l01.c: 277: if (status.RX
      +                          _DR){
  6615  065B  0020               	movlb	0	; select bank0
  6616  065C  1F20               	btfss	nrf24l01ISR@status,6
  6617  065D  2E69               	goto	i1l2893
  6618                           
  6619                           ;nrf24l01.c: 280: if (!nrf24l01.RXPending){
  6620  065E  18DB               	btfsc	_nrf24l01,1	;volatile
  6621  065F  2E68               	goto	i1l352
  6622                           
  6623                           ;nrf24l01.c: 283: nrf24l01.RXPending = 1;
  6624  0660  14DB               	bsf	_nrf24l01,1	;volatile
  6625                           
  6626                           ;nrf24l01.c: 284: nrf24l01ReceivePacket();
  6627  0661  3184  240C  3186   	fcall	_nrf24l01ReceivePacket
  6628                           
  6629                           ;nrf24l01.c: 285: nrf24l01CheckACK();
  6630  0664  318F  27A0  3186   	fcall	_nrf24l01CheckACK
  6631                           
  6632                           ;nrf24l01.c: 286: }
  6633  0667  2E69               	goto	i1l2893
  6634  0668                     i1l352:	
  6635                           
  6636                           ;nrf24l01.c: 289: else{;nrf24l01.c: 292: status.RX_DR = 0;
  6637  0668  1320               	bcf	nrf24l01ISR@status,6
  6638  0669                     i1l2893:	
  6639                           
  6640                           ;nrf24l01.c: 293: };nrf24l01.c: 295: };nrf24l01.c: 298: nrf24l01Send(0b00100000 | 0x07, 
      +                          status.byte);
  6641  0669  0020               	movlb	0	; select bank0
  6642  066A  0820               	movf	nrf24l01ISR@status,w
  6643  066B  00FD               	movwf	??_nrf24l01ISR
  6644  066C  087D               	movf	??_nrf24l01ISR,w
  6645  066D  00F1               	movwf	i1nrf24l01Send@data
  6646  066E  3027               	movlw	39
  6647  066F  318F  276A         	fcall	i1_nrf24l01Send
  6648  0671  0008               	return
  6649  0672                     __end_of_nrf24l01ISR:	
  6650                           
  6651                           	psect	text28
  6652  040C                     __ptext28:	
  6653 ;; *************** function _nrf24l01ReceivePacket *****************
  6654 ;; Defined at:
  6655 ;;		line 133 in file "nrf24l01.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;		None
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  i               1   10[COMMON] unsigned char 
  6660 ;;  width           1    9[COMMON] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;Total ram usage:        3 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    3
  6677 ;; This function calls:
  6678 ;;		_nrf24l01CEHigh
  6679 ;;		_nrf24l01CELow
  6680 ;;		_nrf24l01SPIEnd
  6681 ;;		_nrf24l01SPISend
  6682 ;;		_nrf24l01SPIStart
  6683 ;;		i1_memset
  6684 ;;		i1_nrf24l01Send
  6685 ;; This function is called by:
  6686 ;;		_nrf24l01ISR
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           
  6691                           ;psect for function _nrf24l01ReceivePacket
  6692  040C                     _nrf24l01ReceivePacket:	
  6693                           
  6694                           ;nrf24l01.c: 136: memset(RXPacket.Message, 0 ,sizeof(RXPacket.Message));
  6695                           
  6696                           ;incstack = 0
  6697                           ; Regs used in _nrf24l01ReceivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6698  040C  3041               	movlw	low (_RXPacket+1)
  6699  040D  00F0               	movwf	i1memset@p1
  6700  040E  3001               	movlw	high (_RXPacket+1)
  6701  040F  00F1               	movwf	i1memset@p1+1
  6702  0410  3000               	movlw	0
  6703  0411  00F2               	movwf	i1memset@c
  6704  0412  00F3               	movwf	i1memset@c+1
  6705  0413  3020               	movlw	32
  6706  0414  00F4               	movwf	i1memset@n
  6707  0415  3000               	movlw	0
  6708  0416  00F5               	movwf	i1memset@n+1
  6709  0417  318F  271E  3184   	fcall	i1_memset
  6710                           
  6711                           ;nrf24l01.c: 137: RXPacket.packetData.byte = 0x00;
  6712  041A  0022               	movlb	2	; select bank2
  6713  041B  01C0               	clrf	_RXPacket^(0+256)
  6714                           
  6715                           ;nrf24l01.c: 140: unsigned char width = nrf24l01Send(0b01100000, 0);
  6716  041C  01F1               	clrf	i1nrf24l01Send@data
  6717  041D  3060               	movlw	96
  6718  041E  318F  276A  3184   	fcall	i1_nrf24l01Send
  6719  0421  00F8               	movwf	??_nrf24l01ReceivePacket
  6720  0422  0878               	movf	??_nrf24l01ReceivePacket,w
  6721  0423  00F9               	movwf	nrf24l01ReceivePacket@width
  6722                           
  6723                           ;nrf24l01.c: 141: unsigned char i = 0;
  6724  0424  01FA               	clrf	nrf24l01ReceivePacket@i
  6725                           
  6726                           ;nrf24l01.c: 144: nrf24l01CELow();
  6727  0425  318E  26AD  3184   	fcall	_nrf24l01CELow
  6728                           
  6729                           ;nrf24l01.c: 147: nrf24l01SPIStart();
  6730  0428  318E  26CB  3184   	fcall	_nrf24l01SPIStart
  6731                           
  6732                           ;nrf24l01.c: 150: nrf24l01SPISend(0b01100001);
  6733  042B  3061               	movlw	97
  6734  042C  318E  26D3  3184   	fcall	_nrf24l01SPISend
  6735                           
  6736                           ;nrf24l01.c: 153: RXPacket.packetData.byte = nrf24l01SPISend(0);
  6737  042F  3000               	movlw	0
  6738  0430  318E  26D3  3184   	fcall	_nrf24l01SPISend
  6739  0433  00F8               	movwf	??_nrf24l01ReceivePacket
  6740  0434  0878               	movf	??_nrf24l01ReceivePacket,w
  6741  0435  0022               	movlb	2	; select bank2
  6742  0436  00C0               	movwf	_RXPacket^(0+256)
  6743                           
  6744                           ;nrf24l01.c: 154: width--;
  6745  0437  3001               	movlw	1
  6746  0438  02F9               	subwf	nrf24l01ReceivePacket@width,f
  6747                           
  6748                           ;nrf24l01.c: 156: for (i = 0; (i < width) && (i < sizeof(RXPacket.Message)); i++){
  6749  0439  01FA               	clrf	nrf24l01ReceivePacket@i
  6750  043A  2C4B               	goto	i1l2859
  6751  043B                     i1l2855:	
  6752                           
  6753                           ;nrf24l01.c: 158: RXPacket.Message[i] = nrf24l01SPISend(0);
  6754  043B  3000               	movlw	0
  6755  043C  318E  26D3  3184   	fcall	_nrf24l01SPISend
  6756  043F  00F8               	movwf	??_nrf24l01ReceivePacket
  6757  0440  087A               	movf	nrf24l01ReceivePacket@i,w
  6758  0441  3E41               	addlw	(low ((_RXPacket| (0+256)+1)))& (0+255)
  6759  0442  0086               	movwf	6
  6760  0443  3001               	movlw	1	; select bank2/3
  6761  0444  0087               	movwf	7
  6762  0445  0878               	movf	??_nrf24l01ReceivePacket,w
  6763  0446  0081               	movwf	1
  6764  0447  3001               	movlw	1
  6765  0448  00F8               	movwf	??_nrf24l01ReceivePacket
  6766  0449  0878               	movf	??_nrf24l01ReceivePacket,w
  6767  044A  07FA               	addwf	nrf24l01ReceivePacket@i,f
  6768  044B                     i1l2859:	
  6769  044B  0879               	movf	nrf24l01ReceivePacket@width,w
  6770  044C  027A               	subwf	nrf24l01ReceivePacket@i,w
  6771  044D  1803               	skipnc
  6772  044E  2C53               	goto	i1l2863
  6773  044F  3020               	movlw	32
  6774  0450  027A               	subwf	nrf24l01ReceivePacket@i,w
  6775  0451  1C03               	skipc
  6776  0452  2C3B               	goto	i1l2855
  6777  0453                     i1l2863:	
  6778                           
  6779                           ;nrf24l01.c: 159: };nrf24l01.c: 162: nrf24l01SPIEnd();
  6780  0453  318E  26BC  3184   	fcall	_nrf24l01SPIEnd
  6781                           
  6782                           ;nrf24l01.c: 164: RXPacket.packetData.RPD = nrf24l01Send(0b00000000 | 0x09, 0);
  6783  0456  01F1               	clrf	i1nrf24l01Send@data
  6784  0457  3009               	movlw	9
  6785  0458  318F  276A  3184   	fcall	i1_nrf24l01Send
  6786  045B  00F8               	movwf	??_nrf24l01ReceivePacket
  6787  045C  0022               	movlb	2	; select bank2
  6788  045D  0840               	movf	_RXPacket^(0+256),w
  6789  045E  0678               	xorwf	??_nrf24l01ReceivePacket,w
  6790  045F  39FE               	andlw	-2
  6791  0460  0678               	xorwf	??_nrf24l01ReceivePacket,w
  6792  0461  00C0               	movwf	_RXPacket^(0+256)
  6793                           
  6794                           ;nrf24l01.c: 167: nrf24l01CEHigh();
  6795  0462  318E  26AA         	fcall	_nrf24l01CEHigh
  6796  0464  0008               	return
  6797  0465                     __end_of_nrf24l01ReceivePacket:	
  6798                           
  6799                           	psect	text29
  6800  0F1E                     __ptext29:	
  6801 ;; *************** function i1_memset *****************
  6802 ;; Defined at:
  6803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  p1              2    0[COMMON] PTR void 
  6806 ;;		 -> RXPacket(33), main@packet(33), loop@packet(33), 
  6807 ;;  c               2    2[COMMON] int 
  6808 ;;  n               2    4[COMMON] unsigned int 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  memset          2    6[COMMON] PTR unsigned char 
  6811 ;;		 -> RXPacket(33), main@packet(33), loop@packet(33), 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      PTR void 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6821 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;Total ram usage:        8 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_nrf24l01ReceivePacket
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           
  6835                           ;psect for function i1_memset
  6836  0F1E                     i1_memset:	
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6840  0F1E  0871               	movf	i1memset@p1+1,w
  6841  0F1F  00F7               	movwf	i1memset@p+1
  6842  0F20  0870               	movf	i1memset@p1,w
  6843  0F21  00F6               	movwf	i1memset@p
  6844  0F22                     i1l2823:	
  6845  0F22  3001               	movlw	1
  6846  0F23  02F4               	subwf	i1memset@n,f
  6847  0F24  3000               	movlw	0
  6848  0F25  3BF5               	subwfb	i1memset@n+1,f
  6849  0F26  0A74               	incf	i1memset@n,w
  6850  0F27  1903               	btfsc	3,2
  6851  0F28  0A75               	incf	i1memset@n+1,w
  6852  0F29  1903               	btfsc	3,2
  6853  0F2A  0008               	return
  6854  0F2B  0876               	movf	i1memset@p,w
  6855  0F2C  0086               	movwf	6
  6856  0F2D  0877               	movf	i1memset@p+1,w
  6857  0F2E  0087               	movwf	7
  6858  0F2F  0872               	movf	i1memset@c,w
  6859  0F30  0081               	movwf	1
  6860  0F31  3001               	movlw	1
  6861  0F32  07F6               	addwf	i1memset@p,f
  6862  0F33  3000               	movlw	0
  6863  0F34  3DF7               	addwfc	i1memset@p+1,f
  6864  0F35  2F22               	goto	i1l2823
  6865  0F36                     __end_ofi1_memset:	
  6866                           ;	Return value of i1_memset is never used
  6867                           
  6868                           
  6869                           	psect	text30
  6870  0FA0                     __ptext30:	
  6871 ;; *************** function _nrf24l01CheckACK *****************
  6872 ;; Defined at:
  6873 ;;		line 96 in file "nrf24l01.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;Total ram usage:        1 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    4
  6894 ;; This function calls:
  6895 ;;		_strcmp
  6896 ;;		i1_nrf24l01SetRXMode
  6897 ;; This function is called by:
  6898 ;;		_nrf24l01ISR
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           
  6903                           ;psect for function _nrf24l01CheckACK
  6904  0FA0                     _nrf24l01CheckACK:	
  6905                           
  6906                           ;nrf24l01.c: 100: if (!RXPacket.packetData.IsACK){
  6907                           
  6908                           ;incstack = 0
  6909                           ; Regs used in _nrf24l01CheckACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6910  0FA0  0022               	movlb	2	; select bank2
  6911  0FA1  1DC0               	btfss	_RXPacket^(0+256),3
  6912  0FA2  0008               	return
  6913                           
  6914                           ;nrf24l01.c: 102: };nrf24l01.c: 105: nrf24l01.RXPending = 0;
  6915                           
  6916                           ;nrf24l01.c: 101: return;
  6917  0FA3  0020               	movlb	0	; select bank0
  6918  0FA4  10DB               	bcf	_nrf24l01,1	;volatile
  6919                           
  6920                           ;nrf24l01.c: 108: if (!TXPacket->packetData.ACKRequest){
  6921  0FA5  0859               	movf	_TXPacket,w
  6922  0FA6  0086               	movwf	6
  6923  0FA7  0187               	clrf	7
  6924  0FA8  1D01               	btfss	1,2
  6925  0FA9  0008               	return
  6926                           
  6927                           ;nrf24l01.c: 110: };nrf24l01.c: 113: if (strcmp(TXPacket->Message, RXPacket.Message) != 
      +                          0){
  6928                           
  6929                           ;nrf24l01.c: 109: return;
  6930  0FAA  3041               	movlw	(low ((_RXPacket| (0+256)+1)))& (0+255)
  6931  0FAB  00F7               	movwf	??_nrf24l01CheckACK
  6932  0FAC  0877               	movf	??_nrf24l01CheckACK,w
  6933  0FAD  00F0               	movwf	strcmp@s2
  6934  0FAE  0859               	movf	_TXPacket,w
  6935  0FAF  3E01               	addlw	1
  6936  0FB0  3187  2754  318F   	fcall	_strcmp
  6937  0FB3  0870               	movf	?_strcmp,w
  6938  0FB4  0471               	iorwf	?_strcmp+1,w
  6939  0FB5  1D03               	btfss	3,2
  6940  0FB6  0008               	return
  6941                           
  6942                           ;nrf24l01.c: 115: };nrf24l01.c: 122: TXPacket->packetData.ACKRequest = 0;
  6943                           
  6944                           ;nrf24l01.c: 114: return;
  6945  0FB7  0020               	movlb	0	; select bank0
  6946  0FB8  0859               	movf	_TXPacket,w
  6947  0FB9  0086               	movwf	6
  6948  0FBA  0187               	clrf	7
  6949  0FBB  1101               	bcf	1,2
  6950                           
  6951                           ;nrf24l01.c: 125: nrf24l01SetRXMode(0);
  6952  0FBC  3000               	movlw	0
  6953  0FBD  3186  2605         	fcall	i1_nrf24l01SetRXMode
  6954  0FBF  0008               	return
  6955  0FC0                     __end_of_nrf24l01CheckACK:	
  6956                           
  6957                           	psect	text31
  6958  0605                     __ptext31:	
  6959 ;; *************** function i1_nrf24l01SetRXMode *****************
  6960 ;; Defined at:
  6961 ;;		line 54 in file "nrf24l01.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  rxMode          1    wreg     unsigned char 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  rxMode          1    6[COMMON] unsigned char 
  6966 ;;  nrf24l01SetR    1    5[COMMON] struct .
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0, pclath, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;Total ram usage:        3 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    3
  6983 ;; This function calls:
  6984 ;;		_nrf24l01CEHigh
  6985 ;;		_nrf24l01CELow
  6986 ;;		i1_nrf24l01Send
  6987 ;; This function is called by:
  6988 ;;		_nrf24l01CheckACK
  6989 ;;		_nrf24l01ISR
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function i1_nrf24l01SetRXMode
  6995  0605                     i1_nrf24l01SetRXMode:	
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in i1_nrf24l01SetRXMode: [wreg+status,2+status,0+pclath+cstack]
  6999                           ;i1nrf24l01SetRXMode@rxMode stored from wreg
  7000  0605  00F6               	movwf	i1nrf24l01SetRXMode@rxMode
  7001                           
  7002                           ;nrf24l01.c: 56: n_CONFIG_t config;;nrf24l01.c: 59: config.byte = nrf24l01Send(0b0000000
      +                          0 | 0x00, 0);
  7003  0606  01F1               	clrf	i1nrf24l01Send@data
  7004  0607  3000               	movlw	0
  7005  0608  318F  276A  3186   	fcall	i1_nrf24l01Send
  7006  060B  00F4               	movwf	??i1_nrf24l01SetRXMode
  7007  060C  0874               	movf	??i1_nrf24l01SetRXMode,w
  7008  060D  00F5               	movwf	i1nrf24l01SetRXMode@config
  7009                           
  7010                           ;nrf24l01.c: 62: if (config.PRIM_RX != rxMode){
  7011  060E  0875               	movf	i1nrf24l01SetRXMode@config,w
  7012  060F  3901               	andlw	1
  7013  0610  0676               	xorwf	i1nrf24l01SetRXMode@rxMode,w
  7014  0611  1903               	skipnz
  7015  0612  2E35               	goto	i1l2197
  7016                           
  7017                           ;nrf24l01.c: 65: nrf24l01CELow();
  7018  0613  318E  26AD  3186   	fcall	_nrf24l01CELow
  7019                           
  7020                           ;nrf24l01.c: 66: _delay((unsigned long)((200)*(16000000/4000000.0)));
  7021  0616  30A0               	movlw	160
  7022  0617                     u170_27:	
  7023  0617  3200               	nop2
  7024  0618  0B89               	decfsz	9,f
  7025  0619  2E17               	goto	u170_27
  7026                           
  7027                           ;nrf24l01.c: 69: config.PRIM_RX = rxMode;
  7028  061A  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  7029  061B  3901               	andlw	1
  7030  061C  1075               	bcf	i1nrf24l01SetRXMode@config,0
  7031  061D  1D03               	skipz
  7032  061E  1475               	bsf	i1nrf24l01SetRXMode@config,0
  7033                           
  7034                           ;nrf24l01.c: 70: nrf24l01Send(0b00100000 | 0x00, config.byte);
  7035  061F  0875               	movf	i1nrf24l01SetRXMode@config,w
  7036  0620  00F4               	movwf	??i1_nrf24l01SetRXMode
  7037  0621  0874               	movf	??i1_nrf24l01SetRXMode,w
  7038  0622  00F1               	movwf	i1nrf24l01Send@data
  7039  0623  3020               	movlw	32
  7040  0624  318F  276A  3186   	fcall	i1_nrf24l01Send
  7041                           
  7042                           ;nrf24l01.c: 73: _delay((unsigned long)((200)*(16000000/4000000.0)));
  7043  0627  30A0               	movlw	160
  7044  0628                     u171_27:	
  7045  0628  3200               	nop2
  7046  0629  0B89               	decfsz	9,f
  7047  062A  2E28               	goto	u171_27
  7048                           
  7049                           ;nrf24l01.c: 76: if (rxMode){
  7050  062B  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  7051  062C  1903               	btfsc	3,2
  7052  062D  2E35               	goto	i1l2197
  7053                           
  7054                           ;nrf24l01.c: 77: nrf24l01CEHigh();
  7055  062E  318E  26AA  3186   	fcall	_nrf24l01CEHigh
  7056                           
  7057                           ;nrf24l01.c: 78: _delay((unsigned long)((200)*(16000000/4000000.0)));
  7058  0631  30A0               	movlw	160
  7059  0632                     u172_27:	
  7060  0632  3200               	nop2
  7061  0633  0B89               	decfsz	9,f
  7062  0634  2E32               	goto	u172_27
  7063  0635                     i1l2197:	
  7064                           
  7065                           ;nrf24l01.c: 79: };nrf24l01.c: 80: };nrf24l01.c: 83: nrf24l01.RXMode = rxMode;
  7066  0635  0876               	movf	i1nrf24l01SetRXMode@rxMode,w
  7067  0636  3901               	andlw	1
  7068  0637  0020               	movlb	0	; select bank0
  7069  0638  115B               	bcf	_nrf24l01,2	;volatile
  7070  0639  1D03               	skipz
  7071  063A  155B               	bsf	_nrf24l01,2	;volatile
  7072  063B  0008               	return
  7073  063C                     __end_ofi1_nrf24l01SetRXMode:	
  7074                           
  7075                           	psect	text32
  7076  0F6A                     __ptext32:	
  7077 ;; *************** function i1_nrf24l01Send *****************
  7078 ;; Defined at:
  7079 ;;		line 9 in file "nrf24l01.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  command         1    wreg     unsigned char 
  7082 ;;  data            1    1[COMMON] unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  command         1    3[COMMON] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      unsigned char 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;Total ram usage:        3 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    2
  7101 ;; This function calls:
  7102 ;;		_enableInterrupts
  7103 ;;		_nrf24l01SPIEnd
  7104 ;;		_nrf24l01SPISend
  7105 ;;		_nrf24l01SPIStart
  7106 ;; This function is called by:
  7107 ;;		_nrf24l01ReceivePacket
  7108 ;;		_nrf24l01ISR
  7109 ;;		i1_nrf24l01SetRXMode
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function i1_nrf24l01Send
  7115  0F6A                     i1_nrf24l01Send:	
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in i1_nrf24l01Send: [wreg+status,2+status,0+pclath+cstack]
  7119                           ;i1nrf24l01Send@command stored from wreg
  7120  0F6A  00F3               	movwf	i1nrf24l01Send@command
  7121                           
  7122                           ;nrf24l01.c: 12: enableInterrupts(0);
  7123  0F6B  3000               	movlw	0
  7124  0F6C  318E  26C3  318F   	fcall	_enableInterrupts
  7125                           
  7126                           ;nrf24l01.c: 15: nrf24l01SPIStart();
  7127  0F6F  318E  26CB  318F   	fcall	_nrf24l01SPIStart
  7128                           
  7129                           ;nrf24l01.c: 18: nrf24l01SPISend(command);
  7130  0F72  0873               	movf	i1nrf24l01Send@command,w
  7131  0F73  318E  26D3  318F   	fcall	_nrf24l01SPISend
  7132                           
  7133                           ;nrf24l01.c: 21: data = nrf24l01SPISend(data);
  7134  0F76  0871               	movf	i1nrf24l01Send@data,w
  7135  0F77  318E  26D3  318F   	fcall	_nrf24l01SPISend
  7136  0F7A  00F2               	movwf	??i1_nrf24l01Send
  7137  0F7B  0872               	movf	??i1_nrf24l01Send,w
  7138  0F7C  00F1               	movwf	i1nrf24l01Send@data
  7139                           
  7140                           ;nrf24l01.c: 24: nrf24l01SPIEnd();
  7141  0F7D  318E  26BC  318F   	fcall	_nrf24l01SPIEnd
  7142                           
  7143                           ;nrf24l01.c: 27: enableInterrupts(1);
  7144  0F80  3001               	movlw	1
  7145  0F81  318E  26C3         	fcall	_enableInterrupts
  7146                           
  7147                           ;nrf24l01.c: 29: return data;
  7148  0F83  0871               	movf	i1nrf24l01Send@data,w
  7149  0F84  0008               	return
  7150  0F85                     __end_ofi1_nrf24l01Send:	
  7151                           
  7152                           	psect	text33
  7153  0ECB                     __ptext33:	
  7154 ;; *************** function _nrf24l01SPIStart *****************
  7155 ;; Defined at:
  7156 ;;		line 65 in file "interface.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;		None
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0, pclath, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;Total ram usage:        0 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    8
  7177 ;; This function calls:
  7178 ;;		_nrf24l01CSLow
  7179 ;; This function is called by:
  7180 ;;		_nrf24l01Send
  7181 ;;		_nrf24l01ReceivePacket
  7182 ;;		_nrf24l01SendPacket
  7183 ;;		i1_nrf24l01Send
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _nrf24l01SPIStart
  7189  0ECB                     _nrf24l01SPIStart:	
  7190                           
  7191                           ;interface.c: 66: nrf24l01CSLow();
  7192                           
  7193                           ;incstack = 0
  7194 ;; hardware stack exceeded
  7195                           ; Regs used in _nrf24l01SPIStart: [wreg+status,2+status,0+pclath+cstack]
  7196  0ECB  318E  26B3  318E   	fcall	_nrf24l01CSLow
  7197                           
  7198                           ;interface.c: 67: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7199  0ECE  300D               	movlw	13
  7200  0ECF                     u173_27:	
  7201  0ECF  0B89               	decfsz	9,f
  7202  0ED0  2ECF               	goto	u173_27
  7203  0ED1  0000               	nop
  7204  0ED2  0008               	return
  7205  0ED3                     __end_of_nrf24l01SPIStart:	
  7206                           
  7207                           	psect	text34
  7208  0EB3                     __ptext34:	
  7209 ;; *************** function _nrf24l01CSLow *****************
  7210 ;; Defined at:
  7211 ;;		line 18 in file "interface.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;		None
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		None
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;Total ram usage:        0 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    7
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_nrf24l01SPIStart
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _nrf24l01CSLow
  7241  0EB3                     _nrf24l01CSLow:	
  7242                           
  7243                           ;interface.c: 19: PORTAbits.RA1 = 0;
  7244                           
  7245                           ;incstack = 0
  7246 ;; hardware stack exceeded
  7247                           ; Regs used in _nrf24l01CSLow: []
  7248  0EB3  0020               	movlb	0	; select bank0
  7249  0EB4  108C               	bcf	12,1	;volatile
  7250  0EB5  0008               	return
  7251  0EB6                     __end_of_nrf24l01CSLow:	
  7252                           
  7253                           	psect	text35
  7254  0ED3                     __ptext35:	
  7255 ;; *************** function _nrf24l01SPISend *****************
  7256 ;; Defined at:
  7257 ;;		line 52 in file "interface.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  data            1    wreg     unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  data            1    0[COMMON] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      unsigned char 
  7264 ;; Registers used:
  7265 ;;		wreg
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    7
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_nrf24l01Send
  7282 ;;		_nrf24l01ReceivePacket
  7283 ;;		_nrf24l01SendPacket
  7284 ;;		i1_nrf24l01Send
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           
  7289                           ;psect for function _nrf24l01SPISend
  7290  0ED3                     _nrf24l01SPISend:	
  7291                           
  7292                           ;incstack = 0
  7293 ;; hardware stack exceeded
  7294                           ; Regs used in _nrf24l01SPISend: [wreg]
  7295                           ;nrf24l01SPISend@data stored from wreg
  7296  0ED3  00F0               	movwf	nrf24l01SPISend@data
  7297                           
  7298                           ;interface.c: 53: SSP1BUF = data;
  7299  0ED4  0870               	movf	nrf24l01SPISend@data,w
  7300  0ED5  0024               	movlb	4	; select bank4
  7301  0ED6  0091               	movwf	17	;volatile
  7302                           
  7303                           ;interface.c: 55: PORTCbits.RC4 = 1;
  7304  0ED7  0020               	movlb	0	; select bank0
  7305  0ED8  160E               	bsf	14,4	;volatile
  7306  0ED9                     i1l94:	
  7307                           ;interface.c: 57: while (!SSP1STATbits.BF){
  7308                           
  7309  0ED9  0024               	movlb	4	; select bank4
  7310  0EDA  1814               	btfsc	20,0	;volatile
  7311  0EDB  2EDE               	goto	i1l1881
  7312                           
  7313                           ;interface.c: 58: __nop();
  7314  0EDC  0000               	nop
  7315  0EDD  2ED9               	goto	i1l94
  7316  0EDE                     i1l1881:	
  7317                           
  7318                           ;interface.c: 59: };interface.c: 61: return SSP1BUF;
  7319  0EDE  0811               	movf	17,w	;volatile
  7320  0EDF  0008               	return
  7321  0EE0                     __end_of_nrf24l01SPISend:	
  7322                           
  7323                           	psect	text36
  7324  0EBC                     __ptext36:	
  7325 ;; *************** function _nrf24l01SPIEnd *****************
  7326 ;; Defined at:
  7327 ;;		line 71 in file "interface.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;		None
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, pclath, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;Total ram usage:        0 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    8
  7348 ;; This function calls:
  7349 ;;		_nrf24l01CSHigh
  7350 ;; This function is called by:
  7351 ;;		_nrf24l01Send
  7352 ;;		_nrf24l01ReceivePacket
  7353 ;;		_nrf24l01SendPacket
  7354 ;;		i1_nrf24l01Send
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _nrf24l01SPIEnd
  7360  0EBC                     _nrf24l01SPIEnd:	
  7361                           
  7362                           ;interface.c: 72: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7363                           
  7364                           ;incstack = 0
  7365 ;; hardware stack exceeded
  7366                           ; Regs used in _nrf24l01SPIEnd: [wreg+status,2+status,0+pclath+cstack]
  7367  0EBC  300D               	movlw	13
  7368  0EBD                     u174_27:	
  7369  0EBD  0B89               	decfsz	9,f
  7370  0EBE  2EBD               	goto	u174_27
  7371  0EBF  0000               	nop
  7372                           
  7373                           ;interface.c: 73: nrf24l01CSHigh();
  7374  0EC0  318E  26B0         	fcall	_nrf24l01CSHigh
  7375  0EC2  0008               	return
  7376  0EC3                     __end_of_nrf24l01SPIEnd:	
  7377                           
  7378                           	psect	text37
  7379  0EB0                     __ptext37:	
  7380 ;; *************** function _nrf24l01CSHigh *****************
  7381 ;; Defined at:
  7382 ;;		line 23 in file "interface.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;		None
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;		None
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		None
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;Total ram usage:        0 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    7
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_nrf24l01SPIEnd
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _nrf24l01CSHigh
  7412  0EB0                     _nrf24l01CSHigh:	
  7413                           
  7414                           ;interface.c: 24: PORTAbits.RA1 = 1;
  7415                           
  7416                           ;incstack = 0
  7417 ;; hardware stack exceeded
  7418                           ; Regs used in _nrf24l01CSHigh: []
  7419  0EB0  0020               	movlb	0	; select bank0
  7420  0EB1  148C               	bsf	12,1	;volatile
  7421  0EB2  0008               	return
  7422  0EB3                     __end_of_nrf24l01CSHigh:	
  7423                           
  7424                           	psect	text38
  7425  0EC3                     __ptext38:	
  7426 ;; *************** function _enableInterrupts *****************
  7427 ;; Defined at:
  7428 ;;		line 77 in file "interface.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  enable          1    wreg     unsigned char 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  enable          1    0[COMMON] unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;Total ram usage:        0 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    7
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_nrf24l01Send
  7453 ;;		_nrf24l01SendPacket
  7454 ;;		i1_nrf24l01Send
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _enableInterrupts
  7460  0EC3                     _enableInterrupts:	
  7461                           
  7462                           ;incstack = 0
  7463 ;; hardware stack exceeded
  7464                           ; Regs used in _enableInterrupts: [wreg+status,0]
  7465                           ;enableInterrupts@enable stored from wreg
  7466  0EC3  00F0               	movwf	enableInterrupts@enable
  7467                           
  7468                           ;interface.c: 78: PIE0bits.INTE = enable;
  7469  0EC4  0C70               	rrf	enableInterrupts@enable,w
  7470  0EC5  0021               	movlb	1	; select bank1
  7471  0EC6  1C03               	skipc
  7472  0EC7  1010               	bcf	16,0	;volatile
  7473  0EC8  1803               	skipnc
  7474  0EC9  1410               	bsf	16,0	;volatile
  7475  0ECA  0008               	return
  7476  0ECB                     __end_of_enableInterrupts:	
  7477                           
  7478                           	psect	text39
  7479  0EAD                     __ptext39:	
  7480 ;; *************** function _nrf24l01CELow *****************
  7481 ;; Defined at:
  7482 ;;		line 8 in file "interface.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		None
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;Total ram usage:        0 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:    7
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_nrf24l01SetRXMode
  7507 ;;		_nrf24l01ReceivePacket
  7508 ;;		_nrf24l01SendPacket
  7509 ;;		_nrf24l01Init
  7510 ;;		i1_nrf24l01SetRXMode
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _nrf24l01CELow
  7516  0EAD                     _nrf24l01CELow:	
  7517                           
  7518                           ;interface.c: 9: PORTAbits.RA0 = 0;
  7519                           
  7520                           ;incstack = 0
  7521 ;; hardware stack exceeded
  7522                           ; Regs used in _nrf24l01CELow: []
  7523  0EAD  0020               	movlb	0	; select bank0
  7524  0EAE  100C               	bcf	12,0	;volatile
  7525  0EAF  0008               	return
  7526  0EB0                     __end_of_nrf24l01CELow:	
  7527                           
  7528                           	psect	text40
  7529  0EAA                     __ptext40:	
  7530 ;; *************** function _nrf24l01CEHigh *****************
  7531 ;; Defined at:
  7532 ;;		line 13 in file "interface.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		None
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; Hardware stack levels required when called:    7
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		_nrf24l01SetRXMode
  7557 ;;		_nrf24l01ReceivePacket
  7558 ;;		_nrf24l01SendPacket
  7559 ;;		_nrf24l01Init
  7560 ;;		i1_nrf24l01SetRXMode
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           
  7565                           ;psect for function _nrf24l01CEHigh
  7566  0EAA                     _nrf24l01CEHigh:	
  7567                           
  7568                           ;interface.c: 14: PORTAbits.RA0 = 1;
  7569                           
  7570                           ;incstack = 0
  7571 ;; hardware stack exceeded
  7572                           ; Regs used in _nrf24l01CEHigh: []
  7573  0EAA  0020               	movlb	0	; select bank0
  7574  0EAB  140C               	bsf	12,0	;volatile
  7575  0EAC  0008               	return
  7576  0EAD                     __end_of_nrf24l01CEHigh:	
  7577                           
  7578                           	psect	text41
  7579  0754                     __ptext41:	
  7580 ;; *************** function _strcmp *****************
  7581 ;; Defined at:
  7582 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strcmp.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  s1              1    wreg     PTR const unsigned char 
  7585 ;;		 -> packet.Message(32), packet.Message(32), NULL(0), main@packet(33), 
  7586 ;;		 -> loop@packet(33), 
  7587 ;;  s2              1    0[COMMON] PTR const unsigned char 
  7588 ;;		 -> RXPacket.Message(32), RXPacket(33), 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  s1              1    4[COMMON] PTR const unsigned char 
  7591 ;;		 -> packet.Message(32), packet.Message(32), NULL(0), main@packet(33), 
  7592 ;;		 -> loop@packet(33), 
  7593 ;;  r               1    3[COMMON] char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  2    0[COMMON] int 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        5 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_nrf24l01CheckACK
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function _strcmp
  7618  0754                     _strcmp:	
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0]
  7622                           ;strcmp@s1 stored from wreg
  7623  0754  00F4               	movwf	strcmp@s1
  7624  0755  2F5E               	goto	i1l2119
  7625  0756                     i1l2115:	
  7626  0756  3001               	movlw	1
  7627  0757  00F2               	movwf	??_strcmp
  7628  0758  0872               	movf	??_strcmp,w
  7629  0759  07F4               	addwf	strcmp@s1,f
  7630  075A  3001               	movlw	1
  7631  075B  00F2               	movwf	??_strcmp
  7632  075C  0872               	movf	??_strcmp,w
  7633  075D  07F0               	addwf	strcmp@s2,f
  7634  075E                     i1l2119:	
  7635  075E  0874               	movf	strcmp@s1,w
  7636  075F  0086               	movwf	6
  7637  0760  0187               	clrf	7
  7638  0761  0870               	movf	strcmp@s2,w
  7639  0762  0084               	movwf	4
  7640  0763  3001               	movlw	1	; select bank2/3
  7641  0764  0085               	movwf	5
  7642  0765  0300               	decf	0,w
  7643  0766  3AFF               	xorlw	255
  7644  0767  0701               	addwf	1,w
  7645  0768  00F2               	movwf	??_strcmp
  7646  0769  0872               	movf	??_strcmp,w
  7647  076A  00F3               	movwf	strcmp@r
  7648  076B  0873               	movf	strcmp@r,w
  7649  076C  1D03               	btfss	3,2
  7650  076D  2F74               	goto	i1l2123
  7651  076E  0874               	movf	strcmp@s1,w
  7652  076F  0086               	movwf	6
  7653  0770  0187               	clrf	7
  7654  0771  0801               	movf	1,w
  7655  0772  1D03               	btfss	3,2
  7656  0773  2F56               	goto	i1l2115
  7657  0774                     i1l2123:	
  7658  0774  0873               	movf	strcmp@r,w
  7659  0775  00F0               	movwf	?_strcmp
  7660  0776  01F1               	clrf	?_strcmp+1
  7661  0777  1BF0               	btfsc	?_strcmp,7
  7662  0778  03F1               	decf	?_strcmp+1,f
  7663  0779  0008               	return
  7664  077A                     __end_of_strcmp:	
  7665                           
  7666                           	psect	text42
  7667  0F06                     __ptext42:	
  7668 ;; *************** function _exception *****************
  7669 ;; Defined at:
  7670 ;;		line 81 in file "interface.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  exception       1    wreg     unsigned char 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  exception       1   12[COMMON] unsigned char 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;Total ram usage:        3 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    2
  7691 ;; This function calls:
  7692 ;;		___wmul
  7693 ;;		i1_flashUpdate
  7694 ;; This function is called by:
  7695 ;;		_nrf24l01ISR
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _exception
  7701  0F06                     _exception:	
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in _exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7705                           ;exception@exception stored from wreg
  7706  0F06  00FC               	movwf	exception@exception
  7707                           
  7708                           ;interface.c: 82: romData.bootMode = (unsigned) (exception * 10);
  7709  0F07  087C               	movf	exception@exception,w
  7710  0F08  00FA               	movwf	??_exception
  7711  0F09  01FB               	clrf	??_exception+1
  7712  0F0A  087A               	movf	??_exception,w
  7713  0F0B  00F0               	movwf	___wmul@multiplier
  7714  0F0C  087B               	movf	??_exception+1,w
  7715  0F0D  00F1               	movwf	___wmul@multiplier+1
  7716  0F0E  300A               	movlw	10
  7717  0F0F  00F2               	movwf	___wmul@multiplicand
  7718  0F10  3000               	movlw	0
  7719  0F11  00F3               	movwf	___wmul@multiplicand+1
  7720  0F12  318F  274F  318F   	fcall	___wmul
  7721  0F15  0871               	movf	?___wmul+1,w
  7722  0F16  0020               	movlb	0	; select bank0
  7723  0F17  00EE               	movwf	_romData+18
  7724  0F18  0870               	movf	?___wmul,w
  7725  0F19  00ED               	movwf	_romData+17
  7726                           
  7727                           ;interface.c: 83: flashUpdate();
  7728  0F1A  3187  27C2         	fcall	i1_flashUpdate
  7729  0F1C  0001               	reset	;# 
  7730  0F1D  0008               	return
  7731  0F1E                     __end_of_exception:	
  7732                           
  7733                           	psect	text43
  7734  07C2                     __ptext43:	
  7735 ;; *************** function i1_flashUpdate *****************
  7736 ;; Defined at:
  7737 ;;		line 97 in file "flash.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  flashUpdate     2    8[COMMON] unsigned int 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7755 ;;Total ram usage:        4 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    1
  7758 ;; This function calls:
  7759 ;;		i1_flashWriteByte
  7760 ;; This function is called by:
  7761 ;;		_exception
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function i1_flashUpdate
  7767  07C2                     i1_flashUpdate:	
  7768                           
  7769                           ;flash.c: 98: for (unsigned int i = 0; i < 32; i++){
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in i1_flashUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7773  07C2  01F8               	clrf	i1flashUpdate@i
  7774  07C3  01F9               	clrf	i1flashUpdate@i+1
  7775  07C4                     L3:	
  7776  07C4  3000               	movlw	0
  7777  07C5  0279               	subwf	i1flashUpdate@i+1,w
  7778  07C6  3020               	movlw	32
  7779  07C7  1903               	skipnz
  7780  07C8  0278               	subwf	i1flashUpdate@i,w
  7781  07C9  1803               	btfsc	3,0
  7782  07CA  0008               	return
  7783                           
  7784                           ;flash.c: 99: flashWriteByte(i, romHolder.array[i]);
  7785  07CB  0879               	movf	i1flashUpdate@i+1,w
  7786  07CC  00F1               	movwf	i1flashWriteByte@offset+1
  7787  07CD  0878               	movf	i1flashUpdate@i,w
  7788  07CE  00F0               	movwf	i1flashWriteByte@offset
  7789  07CF  0878               	movf	i1flashUpdate@i,w
  7790  07D0  3E20               	addlw	(low (_romHolder| (0+256)))& (0+255)
  7791  07D1  0086               	movwf	6
  7792  07D2  3001               	movlw	1	; select bank2/3
  7793  07D3  0087               	movwf	7
  7794  07D4  0801               	movf	1,w
  7795  07D5  00F6               	movwf	??i1_flashUpdate
  7796  07D6  01F7               	clrf	??i1_flashUpdate+1
  7797  07D7  0876               	movf	??i1_flashUpdate,w
  7798  07D8  00F2               	movwf	i1flashWriteByte@data
  7799  07D9  0877               	movf	??i1_flashUpdate+1,w
  7800  07DA  00F3               	movwf	i1flashWriteByte@data+1
  7801  07DB  3186  26D4  3187   	fcall	i1_flashWriteByte
  7802  07DE  3001               	movlw	1
  7803  07DF  07F8               	addwf	i1flashUpdate@i,f
  7804  07E0  3000               	movlw	0
  7805  07E1  3DF9               	addwfc	i1flashUpdate@i+1,f
  7806  07E2  2FC4               	goto	L3
  7807  07E3                     __end_ofi1_flashUpdate:	
  7808                           
  7809                           	psect	text44
  7810  06D4                     __ptext44:	
  7811 ;; *************** function i1_flashWriteByte *****************
  7812 ;; Defined at:
  7813 ;;		line 8 in file "flash.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  offset          2    0[COMMON] unsigned int 
  7816 ;;  data            2    2[COMMON] unsigned int 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  flashWriteBy    2    4[COMMON] unsigned int 
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;Total ram usage:        6 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		i1_flashUpdate
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           
  7842                           ;psect for function i1_flashWriteByte
  7843  06D4                     i1_flashWriteByte:	
  7844                           
  7845                           ;flash.c: 10: unsigned int address;;flash.c: 12: INTCONbits.GIE = 0;
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in i1_flashWriteByte: [wreg+status,2+status,0]
  7849  06D4  138B               	bcf	11,7	;volatile
  7850                           
  7851                           ;flash.c: 15: PMCON1 = 0x00;
  7852  06D5  0031               	movlb	17	; select bank17
  7853  06D6  0195               	clrf	21	;volsfr
  7854                           
  7855                           ;flash.c: 17: address = (0x2000U - 32) + offset;
  7856  06D7  0870               	movf	i1flashWriteByte@offset,w
  7857  06D8  3EE0               	addlw	224
  7858  06D9  00F4               	movwf	i1flashWriteByte@address
  7859  06DA  301F               	movlw	31
  7860  06DB  3D71               	addwfc	i1flashWriteByte@offset+1,w
  7861  06DC  00F5               	movwf	i1flashWriteByte@address+1
  7862                           
  7863                           ;flash.c: 18: PMADRL = (char) (address >> 0);
  7864  06DD  0874               	movf	i1flashWriteByte@address,w
  7865  06DE  0091               	movwf	17	;volatile
  7866                           
  7867                           ;flash.c: 19: PMADRH = (char) (address >> 8);
  7868  06DF  0875               	movf	i1flashWriteByte@address+1,w
  7869  06E0  0092               	movwf	18	;volatile
  7870                           
  7871                           ;flash.c: 21: PMCON1bits.FREE = 1;
  7872  06E1  1615               	bsf	21,4	;volsfr
  7873                           
  7874                           ;flash.c: 22: PMCON1bits.WREN = 1;
  7875  06E2  1515               	bsf	21,2	;volsfr
  7876                           
  7877                           ;flash.c: 24: PMCON2 = 0x55;
  7878  06E3  3055               	movlw	85
  7879  06E4  0096               	movwf	22	;volsfr
  7880                           
  7881                           ;flash.c: 25: PMCON2 = 0xAA;
  7882  06E5  30AA               	movlw	170
  7883  06E6  0096               	movwf	22	;volsfr
  7884                           
  7885                           ;flash.c: 27: PMCON1bits.WR = 1;
  7886  06E7  1495               	bsf	21,1	;volsfr
  7887                           
  7888                           ;flash.c: 29: __nop();
  7889  06E8  0000               	nop
  7890                           
  7891                           ;flash.c: 30: __nop();
  7892  06E9  0000               	nop
  7893                           
  7894                           ;flash.c: 32: PMCON1bits.WREN = 0;
  7895  06EA  0031               	movlb	17	; select bank17
  7896  06EB  1115               	bcf	21,2	;volsfr
  7897                           
  7898                           ;flash.c: 36: PMCON1 = 0x00;
  7899  06EC  0195               	clrf	21	;volsfr
  7900                           
  7901                           ;flash.c: 38: PMADRL = (char) (address >> 0);
  7902  06ED  0874               	movf	i1flashWriteByte@address,w
  7903  06EE  0091               	movwf	17	;volatile
  7904                           
  7905                           ;flash.c: 39: PMADRH = (char) (address >> 8);
  7906  06EF  0875               	movf	i1flashWriteByte@address+1,w
  7907  06F0  0092               	movwf	18	;volatile
  7908                           
  7909                           ;flash.c: 41: PMCON1bits.FREE = 0;
  7910  06F1  1215               	bcf	21,4	;volsfr
  7911                           
  7912                           ;flash.c: 42: PMCON1bits.LWLO = 1;
  7913  06F2  1695               	bsf	21,5	;volsfr
  7914                           
  7915                           ;flash.c: 43: PMCON1bits.WREN = 1;
  7916  06F3  1515               	bsf	21,2	;volsfr
  7917                           
  7918                           ;flash.c: 45: PMDATL = (data >> 0);
  7919  06F4  0872               	movf	i1flashWriteByte@data,w
  7920  06F5  0093               	movwf	19	;volatile
  7921                           
  7922                           ;flash.c: 46: PMDATH = (data >> 8);
  7923  06F6  0873               	movf	i1flashWriteByte@data+1,w
  7924  06F7  0094               	movwf	20	;volatile
  7925                           
  7926                           ;flash.c: 48: PMCON1bits.LWLO = 0;
  7927  06F8  1295               	bcf	21,5	;volsfr
  7928                           
  7929                           ;flash.c: 50: PMCON2 = 0x55;
  7930  06F9  3055               	movlw	85
  7931  06FA  0096               	movwf	22	;volsfr
  7932                           
  7933                           ;flash.c: 51: PMCON2 = 0xAA;
  7934  06FB  30AA               	movlw	170
  7935  06FC  0096               	movwf	22	;volsfr
  7936                           
  7937                           ;flash.c: 53: PMCON1bits.WR = 1;
  7938  06FD  1495               	bsf	21,1	;volsfr
  7939                           
  7940                           ;flash.c: 55: __nop();
  7941  06FE  0000               	nop
  7942                           
  7943                           ;flash.c: 56: __nop();
  7944  06FF  0000               	nop
  7945                           
  7946                           ;flash.c: 58: PMCON1bits.WREN = 0;
  7947  0700  0031               	movlb	17	; select bank17
  7948  0701  1115               	bcf	21,2	;volsfr
  7949                           
  7950                           ;flash.c: 61: INTCONbits.GIE = 1;
  7951  0702  178B               	bsf	11,7	;volatile
  7952  0703  0008               	return
  7953  0704                     __end_ofi1_flashWriteByte:	
  7954                           
  7955                           	psect	text45
  7956  0F4F                     __ptext45:	
  7957 ;; *************** function ___wmul *****************
  7958 ;; Defined at:
  7959 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  multiplier      2    0[COMMON] unsigned int 
  7962 ;;  multiplicand    2    2[COMMON] unsigned int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  product         2    4[COMMON] unsigned int 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  2    0[COMMON] unsigned int 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;Total ram usage:        6 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_exception
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           
  7988                           ;psect for function ___wmul
  7989  0F4F                     ___wmul:	
  7990                           
  7991                           ;incstack = 0
  7992                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7993  0F4F  01F4               	clrf	___wmul@product
  7994  0F50  01F5               	clrf	___wmul@product+1
  7995  0F51                     i1l2139:	
  7996  0F51  1C70               	btfss	___wmul@multiplier,0
  7997  0F52  2F57               	goto	i1l448
  7998  0F53  0872               	movf	___wmul@multiplicand,w
  7999  0F54  07F4               	addwf	___wmul@product,f
  8000  0F55  0873               	movf	___wmul@multiplicand+1,w
  8001  0F56  3DF5               	addwfc	___wmul@product+1,f
  8002  0F57                     i1l448:	
  8003  0F57  3001               	movlw	1
  8004  0F58                     u104_25:	
  8005  0F58  35F2               	lslf	___wmul@multiplicand,f
  8006  0F59  0DF3               	rlf	___wmul@multiplicand+1,f
  8007  0F5A  0B89               	decfsz	9,f
  8008  0F5B  2F58               	goto	u104_25
  8009  0F5C  3001               	movlw	1
  8010  0F5D                     u105_25:	
  8011  0F5D  36F1               	lsrf	___wmul@multiplier+1,f
  8012  0F5E  0CF0               	rrf	___wmul@multiplier,f
  8013  0F5F  0B89               	decfsz	9,f
  8014  0F60  2F5D               	goto	u105_25
  8015  0F61  0870               	movf	___wmul@multiplier,w
  8016  0F62  0471               	iorwf	___wmul@multiplier+1,w
  8017  0F63  1D03               	btfss	3,2
  8018  0F64  2F51               	goto	i1l2139
  8019  0F65  0875               	movf	___wmul@product+1,w
  8020  0F66  00F1               	movwf	?___wmul+1
  8021  0F67  0874               	movf	___wmul@product,w
  8022  0F68  00F0               	movwf	?___wmul
  8023  0F69  0008               	return
  8024  0F6A                     __end_of___wmul:	
  8025  007E                     btemp	set	126	;btemp
  8026  007E                     int$flags	set	126
  8027  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    25
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      79
    BANK1            80     67      71
    BANK2            80      0      65
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 33
		 -> packet.Message(BANK0[32]), packet.Message(BANK0[32]), NULL(NULL[0]), main@packet(BANK1[33]), 
		 -> loop@packet(BANK1[33]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 33
		 -> packet.Message(BANK0[32]), packet.Message(BANK0[32]), NULL(NULL[0]), main@packet(BANK1[33]), 
		 -> loop@packet(BANK1[33]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK0[19]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK0[19]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 33
		 -> RXPacket.Message(BANK2[32]), RXPacket(BANK2[33]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 33
		 -> packet.Message(BANK0[32]), packet.Message(BANK0[32]), NULL(NULL[0]), main@packet(BANK1[33]), 
		 -> loop@packet(BANK1[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[4]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[2]), 
		 -> setMessage@tempString(BANK0[16]), STR_1(CODE[2]), romData.name(BANK0[16]), romData(BANK0[19]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 33
		 -> main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 33
		 -> main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    memset@p1	PTR void  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> setMessage@tempString(BANK0[16]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 0

    nrf24l01SendPacket@Packet	PTR struct . size(1) Largest target is 33
		 -> main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    TXPacket	PTR struct . size(1) Largest target is 33
		 -> NULL(NULL[0]), main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 19
		 -> romData(BANK0[19]), 

    sp__nrf24l01GetRXPacket	PTR struct . size(1) Largest target is 33
		 -> RXPacket(BANK2[33]), 

    checkTXPower@rxPacket	PTR struct . size(1) Largest target is 33
		 -> RXPacket(BANK2[33]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 16
		 -> setMessage@tempString(BANK0[16]), 

    setMessage@topic	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_10(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[4]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 33
		 -> main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> RXPacket(BANK2[33]), main@packet(BANK1[33]), loop@packet(BANK1[33]), 

    setMessage@packet	PTR struct . size(1) Largest target is 33
		 -> main@packet(BANK1[33]), loop@packet(BANK1[33]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_nrf24l01ISR
    _nrf24l01ISR->_exception
    _nrf24l01ReceivePacket->i1_memset
    _nrf24l01CheckACK->i1_nrf24l01SetRXMode
    i1_nrf24l01SetRXMode->i1_nrf24l01Send
    _exception->i1_flashUpdate
    i1_flashUpdate->i1_flashWriteByte

Critical Paths under _main in BANK0

    _main->_loop
    _nrf24l01Init->_nrf24l01InitRegisters
    _nrf24l01InitRegisters->_nrf24l01Send
    _loop->_setMessage
    _setMessage->_getADCValue
    _ultoa->___lldiv
    _nrf24l01SendPacket->_strlen
    _nrf24l01SetRXMode->_nrf24l01Send
    _getADCValue->___lldiv
    _checkTXPower->_nrf24l01ChangeTXPower
    _nrf24l01ChangeTXPower->_nrf24l01Send
    _flashUpdate->_flashWriteByte
    _flashRealod->_flashReadByte

Critical Paths under _ISR in BANK0

    _ISR->_nrf24l01ISR

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   25883
                                             56 BANK0      1     1      0
                                             34 BANK1     33    33      0
                        _flashRealod
                        _flashUpdate
                               _loop
                       _nrf24l01Init
                 _nrf24l01SendPacket
                         _setMessage
                              _sleep
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               5     3      2     200
                                              1 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _nrf24l01Init                                         3     3      0    2424
                                             14 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
              _nrf24l01InitRegisters
              _nrf24l01InterfaceInit
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InterfaceInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _nrf24l01InitRegisters                               11    11      0    2402
                                              4 BANK0     10    10      0
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (1) _loop                                                38    38      0   14455
                                             52 BANK0      4     4      0
                                              0 BANK1     34    34      0
                       _checkTXPower
                        _getADCValue
                       _nrf24l01Send
                 _nrf24l01SendPacket
                         _setMessage
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _sleep                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setMessage                                          23    17      6    5078
                                             29 BANK0     23    17      6
                        _getADCValue (ARG)
                             _memset
                             _strcat
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _ultoa                                               13     7      6    1736
                                             15 BANK0     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     337
                                              1 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     723
                                              1 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     565
                                              1 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _nrf24l01SendPacket                                   4     4      0    2916
                                              9 BANK0      4     4      0
                   _enableInterrupts
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                  _nrf24l01SetRXMode
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               8     6      2     126
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _nrf24l01SetRXMode                                    3     3      0    2277
                                              4 BANK0      3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         14    10      4    1460
                                             15 BANK0     14    10      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     270
                                              1 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     696
                                              1 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _checkTXPower                                         2     2      0    2368
                                              8 BANK0      2     2      0
              _nrf24l01ChangeTXPower
                _nrf24l01GetRXPacket
 ---------------------------------------------------------------------------------
 (3) _nrf24l01GetRXPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nrf24l01ChangeTXPower                                4     2      2    2345
                                              4 BANK0      4     2      2
                       _nrf24l01Send
 ---------------------------------------------------------------------------------
 (3) _nrf24l01Send                                         3     2      1    2143
                                              1 BANK0      3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (1) _flashUpdate                                          4     4      0     423
                                              7 BANK0      4     4      0
                     _flashWriteByte
 ---------------------------------------------------------------------------------
 (2) _flashWriteByte                                       6     2      4     333
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _flashRealod                                          3     3      0     271
                                             10 BANK0      3     3      0
                      _flashReadByte
 ---------------------------------------------------------------------------------
 (2) _flashReadByte                                        9     7      2     181
                                              1 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    2674
                        _nrf24l01ISR
 ---------------------------------------------------------------------------------
 (8) _nrf24l01ISR                                          2     2      0    2674
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _exception
                   _nrf24l01CheckACK
              _nrf24l01ReceivePacket
                     i1_nrf24l01Send
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) _nrf24l01ReceivePacket                                3     3      0     639
                                              8 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
                           i1_memset
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_memset                                            8     2      6     211
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _nrf24l01CheckACK                                     1     1      0     617
                                              7 COMMON     1     1      0
                             _strcmp
                i1_nrf24l01SetRXMode
 ---------------------------------------------------------------------------------
 (9) i1_nrf24l01SetRXMode                                  3     3      0     401
                                              4 COMMON     3     3      0
                     _nrf24l01CEHigh
                      _nrf24l01CELow
                     i1_nrf24l01Send
 ---------------------------------------------------------------------------------
 (10) i1_nrf24l01Send                                      3     2      1     267
                                              1 COMMON     3     2      1
                   _enableInterrupts
                     _nrf24l01SPIEnd
                    _nrf24l01SPISend
                   _nrf24l01SPIStart
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIStart                                    0     0      0       0
                      _nrf24l01CSLow
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSLow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPISend                                     1     1      0      22
 ---------------------------------------------------------------------------------
 (11) _nrf24l01SPIEnd                                      0     0      0       0
                     _nrf24l01CSHigh
 ---------------------------------------------------------------------------------
 (12) _nrf24l01CSHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableInterrupts                                    1     1      0      22
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CELow                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _nrf24l01CEHigh                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _strcmp                                              5     3      2     216
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _exception                                            3     3      0     589
                                             10 COMMON     3     3      0
                             ___wmul
                      i1_flashUpdate
 ---------------------------------------------------------------------------------
 (10) i1_flashUpdate                                       4     4      0     297
                                              6 COMMON     4     4      0
                   i1_flashWriteByte
 ---------------------------------------------------------------------------------
 (11) i1_flashWriteByte                                    6     2      4     207
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     270
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flashRealod
     _flashReadByte
   _flashUpdate
     _flashWriteByte
   _loop
     _checkTXPower
       _nrf24l01ChangeTXPower
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
       _nrf24l01GetRXPacket
     _getADCValue
       ___lldiv
       ___lmul
     _nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     _nrf24l01SendPacket
       _enableInterrupts
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       _nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         _nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
       _strlen
     _setMessage
       _getADCValue (ARG)
         ___lldiv
         ___lmul
       _memset (ARG)
       _strcat (ARG)
       _ultoa (ARG)
         ___lldiv
         ___llmod
     _sleep
   _nrf24l01Init
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01InitRegisters
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _nrf24l01InterfaceInit
   _nrf24l01SendPacket
     _enableInterrupts
     _nrf24l01CEHigh
     _nrf24l01CELow
     _nrf24l01SPIEnd
       _nrf24l01CSHigh
     _nrf24l01SPISend
     _nrf24l01SPIStart
       _nrf24l01CSLow
     _nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     _strlen
   _setMessage
     _getADCValue (ARG)
       ___lldiv
       ___lmul
     _memset (ARG)
     _strcat (ARG)
     _ultoa (ARG)
       ___lldiv
       ___llmod
   _sleep
   _strcpy

 _ISR (ROOT)
   _nrf24l01ISR
     _exception
       ___wmul
       i1_flashUpdate
         i1_flashWriteByte
     _nrf24l01CheckACK
       _strcmp
       i1_nrf24l01SetRXMode
         _nrf24l01CEHigh
         _nrf24l01CELow
         i1_nrf24l01Send
           _enableInterrupts
           _nrf24l01SPIEnd
             _nrf24l01CSHigh
           _nrf24l01SPISend
           _nrf24l01SPIStart
             _nrf24l01CSLow
     _nrf24l01ReceivePacket
       _nrf24l01CEHigh
       _nrf24l01CELow
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
       i1_memset
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow
     i1_nrf24l01Send
       _enableInterrupts
       _nrf24l01SPIEnd
         _nrf24l01CSHigh
       _nrf24l01SPISend
       _nrf24l01SPIStart
         _nrf24l01CSLow
     i1_nrf24l01SetRXMode
       _nrf24l01CEHigh
       _nrf24l01CELow
       i1_nrf24l01Send
         _enableInterrupts
         _nrf24l01SPIEnd
           _nrf24l01CSHigh
         _nrf24l01SPISend
         _nrf24l01SPIStart
           _nrf24l01CSLow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     43      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      41       9       81.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jul 16 15:31:56 2018

            flashReadByte@result 0026                     flashRealod@i 002B                      __CFG_CP$OFF 0000  
            ___wmul@multiplicand 0072              nrf24l01Send@command 0023  nrf24l01InitRegisters@isReciever 0070  
                    __CFG_LVP$ON 0000                              l221 0EE0                              l214 03A9  
                            l324 01ED                              l328 01FD                              l866 0370  
                   flashUpdate@i 0029                     __CFG_CPD$OFF 0000                              _ISR 0004  
                            u805 04F9                              u835 0518                              u765 04CD  
                            u855 0531                              u785 04D9                              u865 053C  
                            u795 04ED                              u965 0562                              wreg 0009  
            nrf24l01SendPacket@i 002C                             ?_ISR 0070                   ??_nrf24l01Init 002E  
                           l2111 0586                             l2105 0574                             l2131 0780  
                           l3003 02AD                             l2045 05FE                             l2133 078B  
                           l2061 073F                             l2153 06AD                             l2313 03AE  
                           l2401 0263                             l2065 0747                             l2315 03A2  
                           l2059 0734                             l2157 06B7                             l2317 03CC  
                           l2069 0305                             l2079 0332                             l2371 0228  
                           l3067 02F7                             l2391 0253                             l2375 023D  
                           l2367 0218                             l2359 01F1                             l2393 025F  
                 ??_nrf24l01Send 0022                             l1931 0503                             l1917 04CA  
                           l1941 0515                             l1927 04F8                             l1919 04D8  
                           l2815 0F3B                             l1943 0523                             l1951 0546  
                           l1947 053B                             l2683 0F8B                             STR_1 103E  
                   __CFG_WDTE$ON 0000                             STR_2 103E                             STR_3 1036  
                           STR_4 1028                             STR_5 101E                             STR_6 103A  
                           STR_7 1023                             STR_8 1013                             STR_9 1032  
                           u1235 0237                             u1085 06B8                             u1095 06BF  
                           u1607 0712                             u1617 0724                             u1627 01F9  
                           u1637 0244                             u1647 025B                             u1657 026E  
                           u1667 05DE                             u1677 05F0                             u1597 028E  
                           u1687 05FB                             u1697 039F                             i1l94 0ED9  
                           _WPUA 020C                             _WPUC 020E   __size_of_nrf24l01InterfaceInit 001C  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000    __end_of_nrf24l01InterfaceInit 07FF  
                           _main 0272                             _loop 0029                  ??_flashReadByte 0023  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E   __size_of_nrf24l01ReceivePacket 0059                    __CFG_BORV$LOW 0000  
  __end_of_nrf24l01ReceivePacket 0465                             start 000F                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000      __size_of_nrf24l01SendPacket 008B                            ??_ISR 007E  
           __size_of_getADCValue 0088                  ??_nrf24l01CELow 0070                  ??_nrf24l01CSLow 0070  
                          ?_main 0070                            ?_loop 0070                            STR_10 102D  
                __end_of___lldiv 050C                  __end_of___llmod 054F                   __CFG_DEBUG$OFF 0000  
                          i1l209 000D                            i1l352 0668                            i1l448 0F57  
         enableInterrupts@enable 0070                 i1_flashWriteByte 06D4                       i1memset@p1 0070  
                 i1flashUpdate@i 0078              ___lmul@multiplicand 0025                    __CFG_PWRTE$ON 0000  
                          _sleep 0EE0                            _ultoa 02FB                   __CFG_BOREN$OFF 0000  
               _enableInterrupts 0EC3                            status 0003                            wtemp0 007E  
    __end_ofi1_nrf24l01SetRXMode 063C                 __end_ofi1_memset 0F36   __size_of_nrf24l01ChangeTXPower 003F  
              getADCValue@adcSum 0039    __end_of_nrf24l01ChangeTXPower 058E                 _nrf24l01SPIStart 0ECB  
                __initialization 0011                 _nrf24l01CheckACK 0FA0                     __end_of_main 02FB  
                   __end_of_loop 013D     nrf24l01ChangeTXPower@rfSetup 0027                 ??_nrf24l01CEHigh 0070  
                         ??_main 0058                           ??_loop 0054                 ??_nrf24l01CSHigh 0070  
               ??_nrf24l01SPIEnd 0070              _nrf24l01GetRXPacket 0002           __size_ofi1_flashUpdate 0021  
       __size_of_nrf24l01SPISend 000D                 ___llmod@dividend 0025                           _ADRESH 009C  
                         _ADRESL 009B                           ?_sleep 0070                           _ANSELA 018C  
                         _ANSELC 018E                           ?_ultoa 002F                 ??_flashWriteByte 0025  
                         i1l2123 0774                           i1l2115 0756                           i1l2119 075E  
                         _ODCONA 028C                           i1l2139 0F51                           _ODCONC 028E  
                         u104_25 0F58                           u105_25 0F5D                           i1l2197 0635  
                         i1l2823 0F22                           i1l1881 0EDE                           i1l2863 0453  
                         i1l2855 043B                           i1l2859 044B                           i1l2883 065B  
                         i1l2875 064C                           i1l2893 0669                           _INLVLA 038C  
                         _INLVLC 038E                           u170_27 0617                           u171_27 0628  
                         u172_27 0632            __size_of_checkTXPower 0014                           u173_27 0ECF  
                         u174_27 0EBD                           _PMADRH 0892                           _PMADRL 0891  
                         _PMDATH 0894                           _PMDATL 0893                           _PMCON1 0895  
                         _PMCON2 0896             ?_nrf24l01GetRXPacket 0070             __size_of_flashRealod 0020  
             flashWriteByte@data 0023             __size_of_flashUpdate 0023             __size_of_nrf24l01ISR 0036  
        nrf24l01SetRXMode@config 0025                           ___lmul 06A4          nrf24l01SetRXMode@rxMode 0026  
                         ___wmul 0F4F                   __CFG_STVREN$ON 0000                        ??___lldiv 0029  
                      ??___llmod 0029             __end_of_nrf24l01Init 072E             __end_of_nrf24l01Send 1000  
                         _memset 0F36            _nrf24l01InitRegisters 013D                           _strcat 072E  
                         _strcmp 0754                           _strcpy 0F85                           _strlen 077A  
      i1nrf24l01SetRXMode@config 0075                 __end_of_romArray 2000        i1nrf24l01SetRXMode@rxMode 0076  
                   _checkTXPower 0EF2                           ultoa@c 003A                           ultoa@v 0036  
             getADCValue@adcLoop 0038          __end_of__initialization 0025            ??_nrf24l01GetRXPacket 0021  
       nrf24l01SendPacket@Packet 002B               getADCValue@channel 0037                    i1_flashUpdate 07C2  
             getADCValue@divider 002F                   __pcstackCOMMON 0070                    __end_of_sleep 0EF2  
                  __end_of_ultoa 0384    nrf24l01InitRegisters@enRXAddr 002A                        ?i1_memset 0070  
                        ??_sleep 0021                      loop@rfSetup 00A0                          ??_ultoa 0035  
                     __pbssBANK0 0059                       __pbssBANK1 00E3                       __pbssBANK2 0120  
              ??_nrf24l01SPISend 0070               __size_of_exception 0018                   ?i1_flashUpdate 0070  
        __size_ofi1_nrf24l01Send 001B         __end_ofi1_flashWriteByte 0704                       __pmaintext 0272  
                        ?___lmul 0021                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
              _nrf24l01SetRXMode 05CA           ?_nrf24l01InitRegisters 0070                       __pintentry 0004  
            nrf24l01SPISend@data 0070                          ?_memset 0021                   ___lmul@product 0029  
             ?_nrf24l01SetRXMode 0070         __end_of_enableInterrupts 0ECB              __CFG_RSTOSC$HFINT32 0000  
                        ?_strcat 0021                          ?_strcmp 0070                          ?_strcpy 0021  
                        ?_strlen 0021            __end_of_n_ADDRESS_MUL 1041                       ??i1_memset 0076  
            ??_nrf24l01SetRXMode 0024         __end_of_nrf24l01SPIStart 0ED3                          _SSP1BUF 0211  
       __end_of_nrf24l01CheckACK 0FC0            _nrf24l01InterfaceInit 07E3            __end_of_flashReadByte 06A4  
               __p_romArray_text 1FE0       __end_of_nrf24l01SendPacket 0272                    ??_getADCValue 0033  
          __size_of_nrf24l01Init 002A            __size_of_nrf24l01Send 0020        __end_of_nrf24l01SetRXMode 0605  
          _nrf24l01ReceivePacket 040C                  __size_of___lmul 0030                          ___lldiv 04B9  
                __size_of___wmul 001B                          ___llmod 050C            __end_of_nrf24l01CELow 0EB0  
                __size_of_memset 0019            __end_of_nrf24l01CSLow 0EB6                          __ptext1 0F85  
                        __ptext2 0704                          __ptext3 07E3                          __ptext4 013D  
                        __ptext5 0029                          __ptext6 0EE0                          __ptext7 0465  
                        __ptext8 02FB                          __ptext9 050C                  __size_of_strcat 0026  
                __size_of_strcmp 0026                __end_of_exception 0F1E                  __size_of_strcpy 001B  
                __size_of_strlen 0025                     __size_of_ISR 000B                          _counter 00E3  
        i1flashWriteByte@address 0074                 _romArray_absaddr 1FE0                          _romData 005C  
                        clrloop0 0EB7             end_of_initialization 0025                     _nrf24l01Init 0704  
                     _setMessage 0465                  ??i1_flashUpdate 0076                     _nrf24l01Send 0FE0  
                        memset@c 0023                          memset@n 0025                          memset@p 0027  
                ___lldiv@divisor 0021                  ___lldiv@counter 002E            _nrf24l01ChangeTXPower 054F  
               setMessage@packet 0053     __size_ofi1_nrf24l01SetRXMode 0037                          strcmp@r 0073  
          i1nrf24l01Send@command 0073                          strlen@s 0027              __end_of_getADCValue 040C  
                      _PORTAbits 000C                        _PORTCbits 000E                        _TRISAbits 008C  
                      _TRISCbits 008E                 nrf24l01Send@data 0021                 __CFG_FEXTOSC$OFF 0000  
                  ??_flashRealod 002A                    ??_flashUpdate 0027                    ??_nrf24l01ISR 007D  
         ?_nrf24l01InterfaceInit 0070                   i1_nrf24l01Send 0F6A                       main@packet 00C2  
         ?_nrf24l01ReceivePacket 0070       __size_of_nrf24l01SetRXMode 003B                   __end_of___lmul 06D4  
                 __end_of___wmul 0F6A                        i1memset@c 0072                        i1memset@n 0074  
                      i1memset@p 0076                   __end_of_memset 0F4F                   __end_of_strcat 0754  
                 __end_of_strcmp 077A                   __end_of_strcpy 0FA0                   __end_of_strlen 079F  
            start_initialization 0011                  _nrf24l01SPISend 0ED3                      __end_of_ISR 000F  
          flashWriteByte@address 0025                __size_ofi1_memset 0018      __end_of_nrf24l01GetRXPacket 0004  
        __size_of_nrf24l01CEHigh 0003          __size_of_nrf24l01CSHigh 0003                      ?_setMessage 003D  
         __end_ofi1_nrf24l01Send 0F85          __size_of_nrf24l01SPIEnd 0007                  ___llmod@divisor 0021  
                ___llmod@counter 002A           ?_nrf24l01ChangeTXPower 0024          ??_nrf24l01InitRegisters 0024  
               __CFG_LPBOREN$OFF 0000                ?i1_flashWriteByte 0070              __end_of_flashRealod 0FE0  
                    _getADCValue 0384          __size_of_flashWriteByte 003C              __end_of_flashUpdate 07C2  
                       ??___lmul 0029              __end_of_nrf24l01ISR 0672             setMessage@tempString 0043  
                       ??___wmul 0074               ??i1_flashWriteByte 0074             __end_of_resetRomData 1013  
                       ??_memset 0027                ?_enableInterrupts 0070                         ??_strcat 0023  
                       ??_strcmp 0072                         ??_strcpy 0023                         ??_strlen 0023  
             ??_enableInterrupts 0070                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                ?_nrf24l01SPIStart 0070             checkTXPower@rxPacket 0029  
              ?_nrf24l01CheckACK 0070               ??_nrf24l01SPIStart 0070               ??_nrf24l01CheckACK 0077  
                ?i1_nrf24l01Send 0071                       loop@packet 00A1                         ?___lldiv 0021  
                       ?___llmod 0021             __end_of_n_ADDRESS_P0 101E          __end_of_nrf24l01SPISend 0EE0  
             i1nrf24l01Send@data 0071        nrf24l01InitRegisters@enAA 002B              __size_of_setMessage 0054  
             _nrf24l01SendPacket 01E7                        _exception 0F06              ?_nrf24l01SendPacket 0070  
            i1_nrf24l01SetRXMode 0605                   __size_of_sleep 0012                   __size_of_ultoa 0089  
                    _flashRealod 0FC0                   ___wmul@product 0074           i1flashWriteByte@offset 0070  
                    _flashUpdate 079F                      _nrf24l01ISR 063C                        clear_ram0 0EB6  
                       _PIE0bits 0090                         _PIR0bits 0010                        _romHolder 0120  
                      _sleepLoop 005A             ??_nrf24l01SendPacket 0029                  setMessage@value 003F  
                setMessage@topic 003D             ?i1_nrf24l01SetRXMode 0070                       _ADCON0bits 009D  
                     _ADCON1bits 009E                ___wmul@multiplier 0070                         _WPUAbits 020C  
                       i1_memset 0F1E                    ?_checkTXPower 0070                         _RXPacket 0140  
         __size_of_flashReadByte 0032                         _TXPacket 0059                       ?_exception 0070  
                 _nrf24l01CEHigh 0EAA                ___lmul@multiplier 0021          ??_nrf24l01InterfaceInit 0021  
                 _nrf24l01CSHigh 0EB0                nrf24l01ISR@status 0020                   _nrf24l01SPIEnd 0EBC  
        ??_nrf24l01ReceivePacket 0078           __size_of_nrf24l01CELow 0003            __end_ofi1_flashUpdate 07E3  
         __size_of_nrf24l01CSLow 0003             flashWriteByte@offset 0021                   _flashWriteByte 058E  
          ??i1_nrf24l01SetRXMode 0074                 __size_of___lldiv 0053                 __size_of___llmod 0043  
               ?_nrf24l01SPISend 0070                       _ANSELAbits 018C                       _ANSELCbits 018E  
                 ??_checkTXPower 0028                    _n_ADDRESS_MUL 1040                       strcat@from 0021  
         __end_of_nrf24l01CEHigh 0EAD           __end_of_nrf24l01CSHigh 0EB3                         __ptext10 072E  
                       __ptext11 0F36                         __ptext20 054F                         __ptext12 01E7  
                       __ptext21 0FE0                         __ptext13 077A                         __ptext30 0FA0  
                       __ptext22 079F                         __ptext14 05CA                         __ptext31 0605  
                       __ptext23 058E                         __ptext15 0384                         __ptext40 0EAA  
                       __ptext32 0F6A                         __ptext24 0FC0                         __ptext16 06A4  
                       __ptext41 0754                         __ptext33 0ECB                         __ptext25 0672  
                       __ptext17 04B9                         __ptext42 0F06                         __ptext34 0EB3  
                       __ptext18 0EF2                         __ptext43 07C2                         __ptext35 0ED3  
                       __ptext27 063C                         __ptext19 0002                         __ptext44 06D4  
                       __ptext36 0EBC                         __ptext28 040C                         __ptext45 0F4F  
                       __ptext37 0EB0                         __ptext29 0F1E                         __ptext38 0EC3  
                       __ptext39 0EAD                     _SSP1CON1bits 0215           __end_of_nrf24l01SPIEnd 0EC3  
                       _nrf24l01 005B                     _resetRomData 1000           nrf24l01Init@isReciever 0030  
                    _OSCCON1bits 0919                     ??_setMessage 0043                       strcpy@from 0021  
  nrf24l01ChangeTXPower@addPower 0024          ??_nrf24l01ChangeTXPower 0026                    __size_of_main 0089  
                  __size_of_loop 0114     nrf24l01InitRegisters@channel 0025           __end_of_flashWriteByte 05CA  
   nrf24l01InitRegisters@feature 0027               exception@exception 007C                       _RC0PPSbits 0EA0  
                       _romArray 1FE0                    _flashReadByte 0672     nrf24l01InitRegisters@rfSetup 0028  
                     _RC1PPSbits 0EA1                     ?_getADCValue 002F                       _RC2PPSbits 0EA2  
 __size_of_nrf24l01InitRegisters 00AA    __end_of_nrf24l01InitRegisters 01E7                         int$flags 007E  
   nrf24l01InitRegisters@setupAW 0026                     _SSP1STATbits 0214           nrf24l01ReceivePacket@i 007A  
                  _nrf24l01CELow 0EAD                    _nrf24l01CSLow 0EB3               __end_of_setMessage 04B9  
                     _INTCONbits 000B        __size_ofi1_flashWriteByte 0030                  ?_nrf24l01CEHigh 0070  
                     _FVRCONbits 0117                 ??i1_nrf24l01Send 0072                      ??_exception 007A  
                ?_nrf24l01CSHigh 0070                   __pstringtext10 1036                   __pstringtext11 103A  
                 __pstringtext12 103E                   __pstringtext13 0000                         memset@p1 0021  
                      ultoa@base 0033                  ?_nrf24l01SPIEnd 0070                         intlevel1 0000  
                   _n_ADDRESS_P0 1019        __size_of_enableInterrupts 0008                       _PMCON1bits 0895  
               ___lldiv@dividend 0025                __CFG_CLKOUTEN$OFF 0000                  ?_flashWriteByte 0021  
   __size_of_nrf24l01GetRXPacket 0002                   ?_flashReadByte 0021             i1flashWriteByte@data 0072  
    nrf24l01InitRegisters@config 002D        __size_of_nrf24l01SPIStart 0008        __size_of_nrf24l01CheckACK 0020  
    nrf24l01InitRegisters@status 0029       nrf24l01ReceivePacket@width 0079                   ?_nrf24l01CELow 0070  
                  __pstringtext1 1000                    __pstringtext2 1019                    __pstringtext3 1040  
                  __pstringtext4 1013                    __pstringtext5 101E                    __pstringtext6 1023  
                  __pstringtext7 1028                    __pstringtext8 102D                    __pstringtext9 1032  
                 ?_nrf24l01CSLow 0070                         ultoa@buf 003B                         ultoa@val 002F  
     nrf24l01InitRegisters@DynPD 002C                         strcat@cp 0024                         strcat@to 0025  
                       strcmp@s1 0074                         strcmp@s2 0070                 ___lldiv@quotient 002A  
                       strcpy@cp 0025                         strlen@cp 0028                         strcpy@to 0024  
                     _WDTCONbits 0097                    ?_nrf24l01Init 0070                    ?_nrf24l01Send 0021  
                   ?_flashRealod 0070                       _STATUSbits 0003             flashReadByte@address 0028  
                   ?_flashUpdate 0070                     ?_nrf24l01ISR 0070             __end_of_checkTXPower 0F06  
            flashReadByte@offset 0021  
