Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\nRF24L01__PIC16LF1503.X.X.production.sym \
  --cmf=dist/default/production\nRF24L01__PIC16LF1503.X.X.production.cmf -z \
  -Q16LF1503 -oC:\Users\Leon\AppData\Local\Temp\s524.2 \
  -Mdist/default/production/nRF24L01__PIC16LF1503.X.X.production.map -E1 \
  -ver=XC8 -ASTACK=02063h-0206fh -pstack=STACK -p_NVMEM_text=7E0h \
  -ACODE=00h-07FFh -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 \
  -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh -ABIGRAM=02000h-0206Fh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Leon\AppData\Local\Temp\s524.obj \
  dist/default/production\nRF24L01__PIC16LF1503.X.X.production.obj 

Object code version is 3.11

Machine type is 16LF1503



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Leon\AppData\Local\Temp\s524.obj
                end_init                             12       12        1        8       0
                reset_vec                             0        0        1        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\nRF24L01__PIC16LF1503.X.X.production.obj
                cinit                                13       13        F        8       0
                intentry                              4        4        E        8       0
                text25                              635      635        7        8       0
                text24                              62E      62E        7        8       0
                text23                              613      613        B        8       0
                text22                              627      627        7        8       0
                text21                              5F2      5F2       13        8       0
                text20                              474      474       39        8       0
                text19                              571      571       27        8       0
                text18                               22       22       DE        8       0
                text17                              598      598       24        8       0
                text15                              61E      61E        9        8       0
                text14                              66A      66A        4      CD4       0
                text13                              421      421       53        8       0
                text12                              514      514       30        8       0
                text11                              340      340       85        8       0
                text10                              199      199       96        8       0
                text9                               5D7      5D7       1B        8       0
                text8                               4AD      4AD       35        8       0
                text7                               544      544       2D        8       0
                text6                               3C5      3C5       5C        8       0
                text5                               100      100       99        8       0
                text4                               22F      22F       8A        8       0
                text3                               605      605        E        8       0
                text2                               5BC      5BC       1B        8       0
                text1                               4E2      4E2       32        8       0
                maintext                            2B9      2B9       87        8       0
                cstackBANK0                          20       20       29       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          B0       B0        3       A0       1
                clrtext                             648      648        6      C90       0
                bssBANK1                             A0       A0       10       A0       1
                bssBANK0                             49       49       24       20       1
                stringtext9                         666      666        4      C9C       0
                stringtext8                         662      662        4      C9C       0
                stringtext7                         65D      65D        5      C9C       0
                stringtext6                         658      658        5      C9C       0
                stringtext5                         653      653        5      C9C       0
                stringtext4                         642      642        6      C78       0
                stringtext3                         63C      63C        6      C78       0
                _NVMEM_text                         7E0      7E0       20      FC0       0
                stringtext2                         66E      66E        1      CDC       0
                stringtext1                         64E      64E        5      C9C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        1         0
                cinit                                13       13        F         0
                intentry                              4        4        E         0
                reset_vec                             0        0        1         0
                text25                              635      635        7         0
                text24                              62E      62E        7         0
                text23                              613      613        B         0
                text22                              627      627        7         0
                text21                              5F2      5F2       13         0
                text20                              474      474       39         0
                text19                              571      571       27         0
                text18                               22       22       DE         0
                text17                              598      598       24         0
                text15                              61E      61E        9         0
                text14                              66A      66A        4         0
                text13                              421      421       53         0
                text12                              514      514       30         0
                text11                              340      340       85         0
                text10                              199      199       96         0
                text9                               5D7      5D7       1B         0
                text8                               4AD      4AD       35         0
                text7                               544      544       2D         0
                text6                               3C5      3C5       5C         0
                text5                               100      100       99         0
                text4                               22F      22F       8A         0
                text3                               605      605        E         0
                text2                               5BC      5BC       1B         0
                text1                               4E2      4E2       32         0
                maintext                            2B9      2B9       87         0
                clrtext                             648      648        6         0
                _NVMEM_text                         7E0      7E0       20         0

        CLASS   STRCODE        
                stringtext9                         666      666        4         0
                stringtext8                         662      662        4         0
                stringtext7                         65D      65D        5         0
                stringtext6                         658      658        5         0
                stringtext5                         653      653        5         0
                stringtext4                         642      642        6         0
                stringtext3                         63C      63C        6         0
                stringtext2                         66E      66E        1         0
                stringtext1                         64E      64E        5         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       29         1
                bssBANK0                             49       49       24         1

        CLASS   BANK1          
                cstackBANK1                          B0       B0        3         1
                bssBANK1                             A0       A0       10         1

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   BANK2          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000638  00063C         8       0  CODE        2
                cstackBANK0                    000020  00004D  00006D        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000013  0000B3        A0       1  BANK1       1
                stringtext3                    00063C  00000C  000648       C78       0  STRCODE     2
                clrtext                        000648  000006  00064E       C90       0  CODE        2
                stringtext1                    00064E  00001C  00066A       C9C       0  STRCODE     2
                text14                         00066A  000004  00066E       CD4       0  CODE        2
                stringtext2                    00066E  000001  00066F       CDC       0  STRCODE     2
                _NVMEM_text                    0007E0  000020  000800       FC0       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0006D-0006F               3           1
        BANK1            000B3-000BF               D           1
        BIGRAM           02000-0206F              70           1
        CODE             00001-00003               3           2
                         0066F-007DF             171
        CONST            00001-00003               3           2
                         0066F-007DF              91
        ENTRY            00001-00003               3           2
                         0066F-007DF              91
        IDLOC            08000-08003               4           2
        RAM              0006D-0006F               3           1
                         000B3-000BF               D
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0016F              70           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02063-0206F               D           1
        STRCODE          00001-00003               3           2
                         0066F-007DF             171
        STRING           00001-00003               3           2
                         0066F-007DF              91

                                  Symbol Table

?___lldiv                       cstackBANK0  00023
?___lmul                        cstackBANK0  00023
?___lwdiv                       cstackBANK0  00023
?___lwmod                       cstackBANK0  00023
?_getADCValue                   cstackBANK0  00031
?_read_flashmem                 cstackBANK0  00023
?_strcmp                        cstackCOMMON 00070
_ADCON0bits                     (abs)        0009D
_ADCON1bits                     (abs)        0009E
_ADRESH                         (abs)        0009C
_ADRESL                         (abs)        0009B
_ANSELA                         (abs)        0018C
_ANSELAbits                     (abs)        0018C
_ANSELC                         (abs)        0018E
_ANSELCbits                     (abs)        0018E
_FVRCONbits                     (abs)        00117
_INTCONbits                     (abs)        0000B
_ISR                            intentry     00004
_NVMEM                          _NVMEM_text  007E0
_NVMEM_absaddr                  (abs)        007E0
_OPTION_REGbits                 (abs)        00095
_OSCCONbits                     (abs)        00099
_PMADRH                         (abs)        00192
_PMADRL                         (abs)        00191
_PMCON1                         (abs)        00195
_PMCON1bits                     (abs)        00195
_PMCON2                         (abs)        00196
_PMDATH                         (abs)        00194
_PMDATL                         (abs)        00193
_PORTAbits                      (abs)        0000C
_SSP1BUF                        (abs)        00211
_SSP1STATbits                   (abs)        00214
_SSPCON1bits                    (abs)        00215
_STATUSbits                     (abs)        00003
_TRISAbits                      (abs)        0008C
_TRISCbits                      (abs)        0008E
_WDTCONbits                     (abs)        00097
_WPUAbits                       (abs)        0020C
__CFG_BOREN$OFF                 (abs)        00000
__CFG_BORV$LO                   (abs)        00000
__CFG_CLKOUTEN$OFF              (abs)        00000
__CFG_CP$OFF                    (abs)        00000
__CFG_FOSC$INTOSC               (abs)        00000
__CFG_LPBOR$OFF                 (abs)        00000
__CFG_LVP$ON                    (abs)        00000
__CFG_MCLRE$ON                  (abs)        00000
__CFG_PWRTE$ON                  (abs)        00000
__CFG_STVREN$ON                 (abs)        00000
__CFG_WDTE$ON                   (abs)        00000
__CFG_WRT$OFF                   (abs)        00000
__H_NVMEM_text                  _NVMEM_text  00800
__Habs1                         abs1         00000
__Hbank0                        bank0        00000
__Hbank1                        bank1        00000
__Hbank10                       bank10       00000
__Hbank11                       bank11       00000
__Hbank12                       bank12       00000
__Hbank13                       bank13       00000
__Hbank14                       bank14       00000
__Hbank15                       bank15       00000
__Hbank16                       bank16       00000
__Hbank17                       bank17       00000
__Hbank18                       bank18       00000
__Hbank19                       bank19       00000
__Hbank2                        bank2        00000
__Hbank20                       bank20       00000
__Hbank21                       bank21       00000
__Hbank22                       bank22       00000
__Hbank23                       bank23       00000
__Hbank24                       bank24       00000
__Hbank25                       bank25       00000
__Hbank26                       bank26       00000
__Hbank27                       bank27       00000
__Hbank28                       bank28       00000
__Hbank29                       bank29       00000
__Hbank3                        bank3        00000
__Hbank30                       bank30       00000
__Hbank31                       bank31       00000
__Hbank4                        bank4        00000
__Hbank5                        bank5        00000
__Hbank6                        bank6        00000
__Hbank7                        bank7        00000
__Hbank8                        bank8        00000
__Hbank9                        bank9        00000
__Hbigram                       bigram       00000
__HbssBANK0                     bssBANK0     00000
__HbssBANK1                     bssBANK1     00000
__Hcinit                        cinit        00022
__Hclrtext                      clrtext      00000
__Hcode                         code         00000
__Hcommon                       common       00000
__Hconfig                       config       08009
__HcstackBANK0                  cstackBANK0  00000
__HcstackBANK1                  cstackBANK1  00000
__HcstackCOMMON                 cstackCOMMON 00000
__Heeprom_data                  eeprom_data  00000
__Hend_init                     end_init     00013
__Hfunctab                      functab      00000
__Hidloc                        idloc        00000
__Hinit                         init         00012
__Hintentry                     intentry     00012
__Hmaintext                     maintext     00000
__Hpowerup                      powerup      00000
__Hram                          ram          00000
__Hreset_vec                    reset_vec    00001
__Hsfr0                         sfr0         00000
__Hsfr1                         sfr1         00000
__Hsfr10                        sfr10        00000
__Hsfr11                        sfr11        00000
__Hsfr12                        sfr12        00000
__Hsfr13                        sfr13        00000
__Hsfr14                        sfr14        00000
__Hsfr15                        sfr15        00000
__Hsfr16                        sfr16        00000
__Hsfr17                        sfr17        00000
__Hsfr18                        sfr18        00000
__Hsfr19                        sfr19        00000
__Hsfr2                         sfr2         00000
__Hsfr20                        sfr20        00000
__Hsfr21                        sfr21        00000
__Hsfr22                        sfr22        00000
__Hsfr23                        sfr23        00000
__Hsfr24                        sfr24        00000
__Hsfr25                        sfr25        00000
__Hsfr26                        sfr26        00000
__Hsfr27                        sfr27        00000
__Hsfr28                        sfr28        00000
__Hsfr29                        sfr29        00000
__Hsfr3                         sfr3         00000
__Hsfr30                        sfr30        00000
__Hsfr31                        sfr31        00000
__Hsfr4                         sfr4         00000
__Hsfr5                         sfr5         00000
__Hsfr6                         sfr6         00000
__Hsfr7                         sfr7         00000
__Hsfr8                         sfr8         00000
__Hsfr9                         sfr9         00000
__Hspace_0                      (abs)        08009
__Hspace_1                      (abs)        000B3
__Hspace_2                      (abs)        00000
__Hspace_3                      (abs)        00000
__Hstack                        stack        00000
__Hstrings                      strings      00000
__Hstringtext1                  stringtext1  00000
__Hstringtext10                 stringtext10 00000
__Hstringtext2                  stringtext2  00000
__Hstringtext3                  stringtext3  00000
__Hstringtext4                  stringtext4  00000
__Hstringtext5                  stringtext5  00000
__Hstringtext6                  stringtext6  00000
__Hstringtext7                  stringtext7  00000
__Hstringtext8                  stringtext8  00000
__Hstringtext9                  stringtext9  00000
__Htext                         text         00000
__L_NVMEM_text                  _NVMEM_text  007E0
__Labs1                         abs1         00000
__Lbank0                        bank0        00000
__Lbank1                        bank1        00000
__Lbank10                       bank10       00000
__Lbank11                       bank11       00000
__Lbank12                       bank12       00000
__Lbank13                       bank13       00000
__Lbank14                       bank14       00000
__Lbank15                       bank15       00000
__Lbank16                       bank16       00000
__Lbank17                       bank17       00000
__Lbank18                       bank18       00000
__Lbank19                       bank19       00000
__Lbank2                        bank2        00000
__Lbank20                       bank20       00000
__Lbank21                       bank21       00000
__Lbank22                       bank22       00000
__Lbank23                       bank23       00000
__Lbank24                       bank24       00000
__Lbank25                       bank25       00000
__Lbank26                       bank26       00000
__Lbank27                       bank27       00000
__Lbank28                       bank28       00000
__Lbank29                       bank29       00000
__Lbank3                        bank3        00000
__Lbank30                       bank30       00000
__Lbank31                       bank31       00000
__Lbank4                        bank4        00000
__Lbank5                        bank5        00000
__Lbank6                        bank6        00000
__Lbank7                        bank7        00000
__Lbank8                        bank8        00000
__Lbank9                        bank9        00000
__Lbigram                       bigram       00000
__LbssBANK0                     bssBANK0     00000
__LbssBANK1                     bssBANK1     00000
__Lcinit                        cinit        00013
__Lclrtext                      clrtext      00000
__Lcode                         code         00000
__Lcommon                       common       00000
__Lconfig                       config       08007
__LcstackBANK0                  cstackBANK0  00000
__LcstackBANK1                  cstackBANK1  00000
__LcstackCOMMON                 cstackCOMMON 00000
__Leeprom_data                  eeprom_data  00000
__Lend_init                     end_init     00012
__Lfunctab                      functab      00000
__Lidloc                        idloc        00000
__Linit                         init         00012
__Lintentry                     intentry     00004
__Lmaintext                     maintext     00000
__Lpowerup                      powerup      00000
__Lram                          ram          00000
__Lreset_vec                    reset_vec    00000
__Lsfr0                         sfr0         00000
__Lsfr1                         sfr1         00000
__Lsfr10                        sfr10        00000
__Lsfr11                        sfr11        00000
__Lsfr12                        sfr12        00000
__Lsfr13                        sfr13        00000
__Lsfr14                        sfr14        00000
__Lsfr15                        sfr15        00000
__Lsfr16                        sfr16        00000
__Lsfr17                        sfr17        00000
__Lsfr18                        sfr18        00000
__Lsfr19                        sfr19        00000
__Lsfr2                         sfr2         00000
__Lsfr20                        sfr20        00000
__Lsfr21                        sfr21        00000
__Lsfr22                        sfr22        00000
__Lsfr23                        sfr23        00000
__Lsfr24                        sfr24        00000
__Lsfr25                        sfr25        00000
__Lsfr26                        sfr26        00000
__Lsfr27                        sfr27        00000
__Lsfr28                        sfr28        00000
__Lsfr29                        sfr29        00000
__Lsfr3                         sfr3         00000
__Lsfr30                        sfr30        00000
__Lsfr31                        sfr31        00000
__Lsfr4                         sfr4         00000
__Lsfr5                         sfr5         00000
__Lsfr6                         sfr6         00000
__Lsfr7                         sfr7         00000
__Lsfr8                         sfr8         00000
__Lsfr9                         sfr9         00000
__Lspace_0                      (abs)        00000
__Lspace_1                      (abs)        00000
__Lspace_2                      (abs)        00000
__Lspace_3                      (abs)        00000
__Lstack                        stack        00000
__Lstrings                      strings      00000
__Lstringtext1                  stringtext1  00000
__Lstringtext10                 stringtext10 00000
__Lstringtext2                  stringtext2  00000
__Lstringtext3                  stringtext3  00000
__Lstringtext4                  stringtext4  00000
__Lstringtext5                  stringtext5  00000
__Lstringtext6                  stringtext6  00000
__Lstringtext7                  stringtext7  00000
__Lstringtext8                  stringtext8  00000
__Lstringtext9                  stringtext9  00000
__Ltext                         text         00000
__S0                            (abs)        08009
__S1                            (abs)        000B3
__S2                            (abs)        00000
___int_sp                       stack        00000
___latbits                      (abs)        00000
___lldiv                        text13       00421
___lldiv@counter                cstackBANK0  00030
___lldiv@dividend               cstackBANK0  00027
___lldiv@divisor                cstackBANK0  00023
___lldiv@quotient               cstackBANK0  0002C
___lmul                         text12       00514
___lmul@multiplicand            cstackBANK0  00027
___lmul@multiplier              cstackBANK0  00023
___lmul@product                 cstackBANK0  0002B
___lwdiv                        text8        004AD
___lwdiv@counter                cstackBANK0  0002A
___lwdiv@dividend               cstackBANK0  00025
___lwdiv@divisor                cstackBANK0  00023
___lwdiv@quotient               cstackBANK0  00028
___lwmod                        text7        00544
___lwmod@counter                cstackBANK0  00028
___lwmod@dividend               cstackBANK0  00025
___lwmod@divisor                cstackBANK0  00023
___sp                           stack        00000
__end_of_ISR                    intentry     00012
__end_of_NVMEM                  _NVMEM_text  00800
__end_of___lldiv                text13       00474
__end_of___lmul                 text12       00544
__end_of___lwdiv                text8        004E2
__end_of___lwmod                text7        00571
__end_of__initialization        cinit        0001F
__end_of_checkRxData            text14       0066E
__end_of_enableInterrupts       text25       0063C
__end_of_getADCValue            text11       003C5
__end_of_loop                   text5        00199
__end_of_main                   maintext     00340
__end_of_n_ADDRESS_MUL          stringtext2  0066F
__end_of_n_ADDRESS_P0           stringtext1  00653
__end_of_nrf24l01HandleRX       text18       00100
__end_of_nrf24l01ISR            text17       005BC
__end_of_nrf24l01Init           text2        005D7
__end_of_nrf24l01InitRegisters  text4        002B9
__end_of_nrf24l01InterfaceInit  text3        00613
__end_of_nrf24l01SPIEnd         text24       00635
__end_of_nrf24l01SPISend        text23       0061E
__end_of_nrf24l01SPIStart       text22       0062E
__end_of_nrf24l01Send           text21       00605
__end_of_nrf24l01SendString     text10       0022F
__end_of_nrf24l01SetRXMode      text20       004AD
__end_of_read_flashmem          text1        00514
__end_of_sleep                  text15       00627
__end_of_strcmp                 text19       00598
__end_of_strcpy                 text9        005F2
__end_of_utoa                   text6        00421
__initialization                cinit        00013
__p_NVMEM_text                  _NVMEM_text  007E0
__pbssBANK0                     bssBANK0     00049
__pbssBANK1                     bssBANK1     000A0
__pcstackBANK0                  cstackBANK0  00020
__pcstackBANK1                  cstackBANK1  000B0
__pcstackCOMMON                 cstackCOMMON 00070
__pintentry                     intentry     00004
__pmaintext                     maintext     002B9
__pstringtext1                  stringtext1  0064E
__pstringtext10                 stringtext10 00000
__pstringtext2                  stringtext2  0066E
__pstringtext3                  stringtext3  0063C
__pstringtext4                  stringtext4  00642
__pstringtext5                  stringtext5  00653
__pstringtext6                  stringtext6  00658
__pstringtext7                  stringtext7  0065D
__pstringtext8                  stringtext8  00662
__pstringtext9                  stringtext9  00666
__ptext1                        text1        004E2
__ptext10                       text10       00199
__ptext11                       text11       00340
__ptext12                       text12       00514
__ptext13                       text13       00421
__ptext14                       text14       0066A
__ptext15                       text15       0061E
__ptext17                       text17       00598
__ptext18                       text18       00022
__ptext19                       text19       00571
__ptext2                        text2        005BC
__ptext20                       text20       00474
__ptext21                       text21       005F2
__ptext22                       text22       00627
__ptext23                       text23       00613
__ptext24                       text24       0062E
__ptext25                       text25       00635
__ptext3                        text3        00605
__ptext4                        text4        0022F
__ptext5                        text5        00100
__ptext6                        text6        003C5
__ptext7                        text7        00544
__ptext8                        text8        004AD
__ptext9                        text9        005D7
__size_of_ISR                   (abs)        00000
__size_of___lldiv               (abs)        00000
__size_of___lmul                (abs)        00000
__size_of___lwdiv               (abs)        00000
__size_of___lwmod               (abs)        00000
__size_of_checkRxData           (abs)        00000
__size_of_enableInterrupts      (abs)        00000
__size_of_getADCValue           (abs)        00000
__size_of_loop                  (abs)        00000
__size_of_main                  (abs)        00000
__size_of_nrf24l01HandleRX      (abs)        00000
__size_of_nrf24l01ISR           (abs)        00000
__size_of_nrf24l01Init          (abs)        00000
__size_of_nrf24l01InitRegisters (abs)        00000
__size_of_nrf24l01InterfaceInit (abs)        00000
__size_of_nrf24l01SPIEnd        (abs)        00000
__size_of_nrf24l01SPISend       (abs)        00000
__size_of_nrf24l01SPIStart      (abs)        00000
__size_of_nrf24l01Send          (abs)        00000
__size_of_nrf24l01SendString    (abs)        00000
__size_of_nrf24l01SetRXMode     (abs)        00000
__size_of_read_flashmem         (abs)        00000
__size_of_sleep                 (abs)        00000
__size_of_strcmp                (abs)        00000
__size_of_strcpy                (abs)        00000
__size_of_utoa                  (abs)        00000
_checkRxData                    text14       0066A
_counter                        bssBANK0     00049
_enableInterrupts               text25       00635
_getADCValue                    text11       00340
_loop                           text5        00100
_main                           maintext     002B9
_nrf24l01                       bssBANK0     0004C
_nrf24l01HandleRX               text18       00022
_nrf24l01ISR                    text17       00598
_nrf24l01Init                   text2        005BC
_nrf24l01InitRegisters          text4        0022F
_nrf24l01InterfaceInit          text3        00605
_nrf24l01Name                   bssBANK1     000A0
_nrf24l01RXTopic                bssBANK0     00055
_nrf24l01RXValue                bssBANK0     0004D
_nrf24l01SPIEnd                 text24       0062E
_nrf24l01SPISend                text23       00613
_nrf24l01SPIStart               text22       00627
_nrf24l01Send                   text21       005F2
_nrf24l01SendString             text10       00199
_nrf24l01SetRXMode              text20       00474
_nrf24l01TXTopic                bssBANK0     00065
_nrf24l01TXValue                bssBANK0     0005D
_read_flashmem                  text1        004E2
_sleep                          text15       0061E
_strcmp                         text19       00571
_strcpy                         text9        005D7
_utoa                           text6        003C5
btemp                           (abs)        0007E
clear_ram0                      clrtext      00648
enableInterrupts@enable         cstackCOMMON 00070
end_of_initialization           cinit        0001F
getADCValue@adcLoop             cstackBANK0  0003A
getADCValue@adcSum              cstackBANK0  0003B
getADCValue@channel             cstackBANK0  00039
getADCValue@divider             cstackBANK0  00031
int$flags                       (abs)        0007E
intlevel0                       functab      00000
intlevel1                       functab      00000
intlevel2                       functab      00000
intlevel3                       functab      00000
intlevel4                       functab      00000
intlevel5                       functab      00000
main@i                          cstackBANK0  00048
nrf24l01HandleRX@byte           cstackCOMMON 0007B
nrf24l01HandleRX@i              cstackCOMMON 0007C
nrf24l01HandleRX@offset         cstackCOMMON 0007A
nrf24l01HandleRX@width          cstackCOMMON 00079
nrf24l01ISR@status              cstackBANK0  00021
nrf24l01InitRegisters@DynPD     cstackBANK0  0002A
nrf24l01InitRegisters@config    cstackBANK0  0002B
nrf24l01InitRegisters@enAA      cstackBANK0  00029
nrf24l01InitRegisters@enRXAddr  cstackBANK0  00028
nrf24l01InitRegisters@feature   cstackBANK0  00026
nrf24l01InitRegisters@rfSetup   cstackBANK0  00025
nrf24l01InitRegisters@setupAW   cstackBANK0  00024
nrf24l01InitRegisters@status    cstackBANK0  00027
nrf24l01SPISend@data            cstackCOMMON 00070
nrf24l01Send@command            cstackCOMMON 00072
nrf24l01Send@data               cstackBANK0  00020
nrf24l01SendString@i            cstackBANK0  00025
nrf24l01SendString@waitForAck   cstackBANK0  00024
nrf24l01SetRXMode@config        cstackCOMMON 00075
nrf24l01SetRXMode@rxMode        cstackCOMMON 00074
read_flashmem@address           cstackBANK0  0002A
read_flashmem@offset            cstackBANK0  00023
read_flashmem@result            cstackBANK0  00028
reset_vec                       reset_vec    00000
stackhi                         (abs)        0206F
stacklo                         (abs)        02063
start                           init         00012
start_initialization            cinit        00013
strcmp@r                        cstackCOMMON 00073
strcmp@s1                       cstackCOMMON 00074
strcmp@s2                       cstackCOMMON 00070
strcpy@cp                       cstackBANK0  00026
strcpy@from                     cstackBANK0  00023
strcpy@to                       cstackBANK0  00027
utoa@base                       cstackBANK0  00041
utoa@buf                        cstackBANK0  00047
utoa@c                          cstackBANK0  00046
utoa@v                          cstackBANK0  00044
utoa@val                        cstackBANK0  0003F
wtemp0                          (abs)        0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 106 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   40[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       0       3
      Totals:         0       1       3
Total ram usage:        4 bytes
 Hardware stack levels required when called:   11
 This function calls:
		_loop
		_nrf24l01Init
		_nrf24l01SendString
		_read_flashmem
		_sleep
		_strcpy
		_utoa
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _read_flashmem *****************
 Defined at:
		line 59 in file "flash.c"
 Parameters:    Size  Location     Type
  offset          2    3[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  address         2   10[BANK0 ] unsigned int 
  result          2    8[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       4       0
      Temps:          0       3       0
      Totals:         0       9       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _nrf24l01Init *****************
 Defined at:
		line 332 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       2       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_nrf24l01InitRegisters
		_nrf24l01InterfaceInit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _nrf24l01InterfaceInit *****************
 Defined at:
		line 7 in file "interface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01Init
 This function uses a non-reentrant model


 *************** function _nrf24l01InitRegisters *****************
 Defined at:
		line 248 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  config          1   11[BANK0 ] struct .
  DynPD           1   10[BANK0 ] struct .
  enAA            1    9[BANK0 ] struct .
  enRXAddr        1    8[BANK0 ] struct .
  status          1    7[BANK0 ] struct .
  feature         1    6[BANK0 ] struct .
  rfSetup         1    5[BANK0 ] struct .
  setupAW         1    4[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       8       0
      Temps:          0       1       0
      Totals:         0       9       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_nrf24l01Send
 This function is called by:
		_nrf24l01Init
 This function uses a non-reentrant model


 *************** function _loop *****************
 Defined at:
		line 74 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_checkRxData
		_getADCValue
		_nrf24l01SendString
		_sleep
		_strcpy
		_utoa
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _utoa *****************
 Defined at:
		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 Parameters:    Size  Location     Type
  buf             1    wreg     PTR unsigned char 
		 -> nrf24l01TXValue(8), 
  val             2   31[BANK0 ] unsigned int 
  base            2   33[BANK0 ] int 
 Auto vars:     Size  Location     Type
  buf             1   39[BANK0 ] PTR unsigned char 
		 -> nrf24l01TXValue(8), 
  v               2   36[BANK0 ] unsigned int 
  c               1   38[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       4       0
      Temps:          0       1       0
      Totals:         0       9       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_loop
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       1       0
      Temps:          0       1       0
      Totals:         0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_utoa
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    8[BANK0 ] unsigned int 
  counter         1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       3       0
      Temps:          0       1       0
      Totals:         0       8       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_utoa
 This function uses a non-reentrant model


 *************** function _strcpy *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 Parameters:    Size  Location     Type
  to              1    wreg     PTR unsigned char 
		 -> nrf24l01TXTopic(8), 
  from            2    3[BANK0 ] PTR const unsigned char 
		 -> STR_6(5), STR_5(6), STR_4(6), STR_3(5), 
		 -> STR_2(5), STR_1(4), 
 Auto vars:     Size  Location     Type
  to              1    7[BANK0 ] PTR unsigned char 
		 -> nrf24l01TXTopic(8), 
  cp              1    6[BANK0 ] PTR unsigned char 
		 -> nrf24l01TXTopic(8), 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       2       0
      Temps:          0       1       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_loop
		_main
 This function uses a non-reentrant model


 *************** function _nrf24l01SendString *****************
 Defined at:
		line 162 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
  waitForAck      1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  waitForAck      1    4[BANK0 ] unsigned char 
  i               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          0       1       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_enableInterrupts
		_nrf24l01SPIEnd
		_nrf24l01SPISend
		_nrf24l01SPIStart
		_nrf24l01SetRXMode
 This function is called by:
		_loop
		_main
 This function uses a non-reentrant model


 *************** function _getADCValue *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
  divider         4   17[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  channel         1   25[BANK0 ] unsigned char 
  adcSum          4   27[BANK0 ] unsigned long 
  adcLoop         1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   17[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       4       0
      Locals:         0       6       0
      Temps:          0       4       0
      Totals:         0      14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lldiv
		___lmul
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    3[BANK0 ] unsigned long 
  multiplicand    4    7[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   11[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4    3[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       8       0
      Locals:         0       4       0
      Temps:          0       0       0
      Totals:         0      12       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_getADCValue
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    3[BANK0 ] unsigned long 
  dividend        4    7[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4   12[BANK0 ] unsigned long 
  counter         1   16[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    3[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       8       0
      Locals:         0       5       0
      Temps:          0       1       0
      Totals:         0      14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_getADCValue
 This function uses a non-reentrant model


 *************** function _checkRxData *****************
 Defined at:
		line 62 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_nrf24l01SetRXMode
		_sleep
 This function is called by:
		_loop
 This function uses a non-reentrant model


 *************** function _sleep *****************
 Defined at:
		line 49 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_checkRxData
		_loop
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 17 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       1       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_nrf24l01ISR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _nrf24l01ISR *****************
 Defined at:
		line 119 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    1[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          1       0       0
      Totals:         1       1       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_nrf24l01HandleRX
		_nrf24l01Send
		_nrf24l01SetRXMode
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _nrf24l01HandleRX *****************
 Defined at:
		line 50 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   12[COMMON] unsigned char 
  byte            1   11[COMMON] unsigned char 
  offset          1   10[COMMON] unsigned char 
  width           1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         4       0       0
      Temps:          3       0       0
      Totals:         7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_nrf24l01SPIEnd
		_nrf24l01SPISend
		_nrf24l01SPIStart
		_nrf24l01Send
		_nrf24l01SetRXMode
		_strcmp
 This function is called by:
		_nrf24l01ISR
 This function uses a non-reentrant model


 *************** function _strcmp *****************
 Defined at:
		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 Parameters:    Size  Location     Type
  s1              1    wreg     PTR const unsigned char 
		 -> nrf24l01RXValue(8), nrf24l01RXTopic(8), 
  s2              2    0[COMMON] PTR const unsigned char 
		 -> STR_7(4), nrf24l01TXTopic(8), 
 Auto vars:     Size  Location     Type
  s1              1    4[COMMON] PTR const unsigned char 
		 -> nrf24l01RXValue(8), nrf24l01RXTopic(8), 
  r               1    3[COMMON] char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         2       0       0
      Locals:         2       0       0
      Temps:          1       0       0
      Totals:         5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01HandleRX
 This function uses a non-reentrant model


 *************** function _nrf24l01SetRXMode *****************
 Defined at:
		line 27 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
  rxMode          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  rxMode          1    4[COMMON] unsigned char 
  config          1    5[COMMON] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_nrf24l01Send
 This function is called by:
		_checkRxData
		_nrf24l01HandleRX
		_nrf24l01ISR
		_nrf24l01SendString
 This function uses a non-reentrant model


 *************** function _nrf24l01Send *****************
 Defined at:
		line 10 in file "nrf24l01.c"
 Parameters:    Size  Location     Type
  command         1    wreg     unsigned char 
  data            1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  command         1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_enableInterrupts
		_nrf24l01SPIEnd
		_nrf24l01SPISend
		_nrf24l01SPIStart
 This function is called by:
		_nrf24l01SetRXMode
		_nrf24l01HandleRX
		_nrf24l01ISR
		_nrf24l01InitRegisters
 This function uses a non-reentrant model


 *************** function _nrf24l01SPIStart *****************
 Defined at:
		line 37 in file "interface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01Send
		_nrf24l01HandleRX
		_nrf24l01SendString
 This function uses a non-reentrant model


 *************** function _nrf24l01SPISend *****************
 Defined at:
		line 26 in file "interface.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01Send
		_nrf24l01HandleRX
		_nrf24l01SendString
 This function uses a non-reentrant model


 *************** function _nrf24l01SPIEnd *****************
 Defined at:
		line 43 in file "interface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01Send
		_nrf24l01HandleRX
		_nrf24l01SendString
 This function uses a non-reentrant model


 *************** function _enableInterrupts *****************
 Defined at:
		line 49 in file "interface.c"
 Parameters:    Size  Location     Type
  enable          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  enable          1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_nrf24l01Send
		_nrf24l01SendString
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
		___lwmod       		CODE           	0544	0000	46

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c estimated size: 46

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c
		___lmul        		CODE           	0514	0000	49

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c estimated size: 49

shared
		_NVMEM         		CODE           	07E0	0000	33
		_n_ADDRESS_P0  		STRCODE        	0000	0000	0
		_n_ADDRESS_MUL 		STRCODE        	0000	0000	0
		__initialization		CODE           	0013	0000	13

shared estimated size: 46

flash.c
		_read_flashmem 		CODE           	04E2	0000	51

flash.c estimated size: 51

interface.c
		_nrf24l01SPISend		CODE           	0613	0000	12
		_nrf24l01SPIStart		CODE           	0627	0000	8
		_nrf24l01SPIEnd		CODE           	062E	0000	8
		_enableInterrupts		CODE           	0635	0000	8
		_nrf24l01InterfaceInit		CODE           	0605	0000	15

interface.c estimated size: 51

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
		___lwdiv       		CODE           	04AD	0000	54

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c estimated size: 54

nrf24l01.c
		_nrf24l01SendString		CODE           	0199	0000	151
		_nrf24l01InitRegisters		CODE           	022F	0000	139
		_nrf24l01HandleRX		CODE           	0022	0000	223
		_nrf24l01ISR   		CODE           	0598	0000	37
		_nrf24l01Send  		CODE           	05F2	0000	20
		_nrf24l01Init  		CODE           	05BC	0000	28
		_nrf24l01SetRXMode		CODE           	0474	0000	58

nrf24l01.c estimated size: 656

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c
		___lldiv       		CODE           	0421	0000	84

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c estimated size: 84

main.c
		_loop          		CODE           	0100	0000	154
		_ISR           		CODE           	0004	0000	15
		_main          		CODE           	02B9	0000	136
		_checkRxData   		CODE           	066A	0000	5
		_getADCValue   		CODE           	0340	0000	134
		_sleep         		CODE           	061E	0000	10

main.c estimated size: 454

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c
		_utoa          		CODE           	03C5	0000	93

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c
		_strcmp        		CODE           	0571	0000	40

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c estimated size: 40

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c
		_strcpy        		CODE           	05D7	0000	28

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c estimated size: 28

